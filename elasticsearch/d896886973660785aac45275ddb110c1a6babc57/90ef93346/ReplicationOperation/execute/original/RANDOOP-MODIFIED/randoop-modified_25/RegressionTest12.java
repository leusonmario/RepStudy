import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest12 {

    public static boolean debug = false;

    @Test
    public void test6001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6001");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        retryOnPrimaryException2.setShard(shardId3);
        org.elasticsearch.index.Index index5 = retryOnPrimaryException2.getIndex();
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNull(index5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test6002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6002");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.String str26 = retryOnPrimaryException3.toString();
        java.lang.Throwable throwable27 = retryOnPrimaryException3.getRootCause();
        retryOnPrimaryException3.setShard("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (int) ' ');
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder31 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params32 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder33 = retryOnPrimaryException3.toXContent(xContentBuilder31, params32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][32]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "RetryOnPrimaryException[]" + "'", str26, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "");
        org.junit.Assert.assertEquals(throwable27.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][32]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(params32);
    }

    @Test
    public void test6003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6003");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException16.status();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        retryOnPrimaryException16.setShard(shardId18);
        java.lang.Throwable[] throwableArray20 = retryOnPrimaryException16.getSuppressed();
        retryOnPrimaryException16.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (byte) 1);
        retryOnPrimaryException16.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = retryOnPrimaryException16.guessRootCauses();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
    }

    @Test
    public void test6004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6004");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str10 = retryOnPrimaryException8.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", throwable17);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", (java.lang.Throwable) retryOnPrimaryException18);
        java.lang.String[] strArray24 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException19.setResources("retry_on_primary_exception", strArray24);
        retryOnPrimaryException8.addHeader("", strArray24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId28 = retryOnPrimaryException8.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable30 = retryOnPrimaryException29.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus31 = retryOnPrimaryException29.status();
        org.elasticsearch.rest.RestStatus restStatus32 = retryOnPrimaryException29.status();
        java.lang.Throwable throwable33 = retryOnPrimaryException29.unwrapCause();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable30.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertTrue("'" + restStatus31 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus31.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus32 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus32.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable33.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
    }

    @Test
    public void test6005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6005");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strList4);
    }

    @Test
    public void test6006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6006");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException8.getResourceId();
        java.lang.String str16 = retryOnPrimaryException8.getResourceType();
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException8.getHeader("hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        retryOnPrimaryException8.setShard(shardId19);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        java.util.List<java.lang.String> strList27 = null;
        retryOnPrimaryException25.addHeader("retry_on_primary_exception", strList27);
        java.lang.Throwable throwable29 = retryOnPrimaryException25.unwrapCause();
        org.elasticsearch.index.Index index30 = null;
        retryOnPrimaryException25.setIndex(index30);
        java.lang.Throwable throwable32 = retryOnPrimaryException25.unwrapCause();
        java.lang.Throwable[] throwableArray33 = retryOnPrimaryException25.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "", throwable37);
        java.util.List<java.lang.String> strList40 = null;
        retryOnPrimaryException38.addHeader("retry_on_primary_exception", strList40);
        java.lang.Throwable throwable42 = retryOnPrimaryException38.unwrapCause();
        org.elasticsearch.index.Index index43 = null;
        retryOnPrimaryException38.setIndex(index43);
        java.lang.String str45 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        java.lang.Throwable throwable49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", throwable49);
        java.util.List<java.lang.String> strList52 = null;
        retryOnPrimaryException50.addHeader("retry_on_primary_exception", strList52);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        retryOnPrimaryException50.setShard(shardId54);
        org.elasticsearch.index.shard.ShardId shardId56 = retryOnPrimaryException50.getShardId();
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        java.lang.Throwable throwable62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "", throwable62);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "", (java.lang.Throwable) retryOnPrimaryException63);
        java.lang.String[] strArray69 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException64.setResources("retry_on_primary_exception", strArray69);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray71 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException64);
        java.lang.String[] strArray78 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException64.setResources("", strArray78);
        retryOnPrimaryException50.addHeader("", strArray78);
        retryOnPrimaryException38.addHeader("", strArray78);
        retryOnPrimaryException25.addHeader("[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray78);
        retryOnPrimaryException8.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];", strArray78);
        java.lang.String str84 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.util.List<java.lang.String> strList85 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus86 = retryOnPrimaryException8.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray87 = retryOnPrimaryException8.guessRootCauses();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "");
        org.junit.Assert.assertEquals(throwable29.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "retry_on_primary_exception" + "'", str45, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId56);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray71);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "retry_on_primary_exception" + "'", str84, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertTrue("'" + restStatus86 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus86.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray87);
    }

    @Test
    public void test6007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6007");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", (java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String[] strArray27 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException22.setResources("retry_on_primary_exception", strArray27);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray29 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray36 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException22.setResources("", strArray36);
        java.lang.Throwable[] throwableArray38 = retryOnPrimaryException22.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus39 = retryOnPrimaryException22.status();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException22);
        retryOnPrimaryException22.setIndex("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.String str45 = retryOnPrimaryException22.getDetailedMessage();
        org.elasticsearch.rest.RestStatus restStatus46 = retryOnPrimaryException22.status();
        org.elasticsearch.index.shard.ShardId shardId47 = retryOnPrimaryException22.getShardId();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray29);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertTrue("'" + restStatus39 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus39.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str45, "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + restStatus46 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus46.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId47);
    }

    @Test
    public void test6008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6008");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable18 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException25.setResources("retry_on_primary_exception", strArray30);
        throwable18.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId35 = retryOnPrimaryException33.getShardId();
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException33);
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException33.getResourceId();
        java.lang.String str39 = retryOnPrimaryException33.toString();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str39, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6009");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("hi!");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str18 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = retryOnPrimaryException6.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException21 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException6, streamOutput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str18, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
    }

    @Test
    public void test6010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6010");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        java.lang.Throwable throwable9 = retryOnPrimaryException5.unwrapCause();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException5.getHeader("hi!");
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException5.getHeader("");
        retryOnPrimaryException5.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException19.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 1);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", throwable26);
        java.util.List<java.lang.String> strList29 = null;
        retryOnPrimaryException27.addHeader("retry_on_primary_exception", strList29);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        retryOnPrimaryException27.setShard(shardId31);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "", throwable38);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", (java.lang.Throwable) retryOnPrimaryException39);
        java.lang.String[] strArray45 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException40.setResources("retry_on_primary_exception", strArray45);
        java.lang.String str47 = retryOnPrimaryException40.toString();
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException40);
        java.lang.Throwable[] throwableArray49 = retryOnPrimaryException40.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        java.lang.Throwable throwable55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "", throwable55);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "", (java.lang.Throwable) retryOnPrimaryException56);
        java.lang.String[] strArray62 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException57.setResources("retry_on_primary_exception", strArray62);
        java.util.List<java.lang.String> strList64 = retryOnPrimaryException57.getResourceId();
        retryOnPrimaryException40.addHeader("retry_on_primary_exception", strList64);
        retryOnPrimaryException27.addHeader("retry_on_primary_exception", strList64);
        retryOnPrimaryException19.addHeader("", strList64);
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList64);
        java.util.List<java.lang.String> strList69 = retryOnPrimaryException5.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus70 = retryOnPrimaryException5.status();
        java.lang.Throwable throwable71 = retryOnPrimaryException5.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip] RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable71);
        org.elasticsearch.index.Index index73 = retryOnPrimaryException72.getIndex();
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str47, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertTrue("'" + restStatus70 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus70.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable71);
        org.junit.Assert.assertEquals(throwable71.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable71.getMessage(), "");
        org.junit.Assert.assertEquals(throwable71.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(index73);
    }

    @Test
    public void test6011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6011");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        boolean boolean4 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str5 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray13 = new java.lang.String[] {};
        retryOnPrimaryException10.setResources("", strArray13);
        org.elasticsearch.index.Index index15 = retryOnPrimaryException10.getIndex();
        org.elasticsearch.index.Index index16 = retryOnPrimaryException10.getIndex();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        retryOnPrimaryException10.setShard(shardId19);
        java.lang.Throwable throwable21 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        java.util.List<java.lang.String> strList28 = null;
        retryOnPrimaryException26.addHeader("retry_on_primary_exception", strList28);
        java.lang.Throwable throwable30 = retryOnPrimaryException26.unwrapCause();
        org.elasticsearch.index.Index index31 = null;
        retryOnPrimaryException26.setIndex(index31);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "", throwable37);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", (java.lang.Throwable) retryOnPrimaryException38);
        java.lang.String[] strArray44 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException39.setResources("retry_on_primary_exception", strArray44);
        java.lang.String str46 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException39);
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        java.lang.Throwable throwable53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "", throwable53);
        java.util.List<java.lang.String> strList56 = null;
        retryOnPrimaryException54.addHeader("retry_on_primary_exception", strList56);
        java.lang.Throwable throwable58 = retryOnPrimaryException54.unwrapCause();
        org.elasticsearch.index.Index index59 = null;
        retryOnPrimaryException54.setIndex(index59);
        retryOnPrimaryException54.setShard("hi!", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray68 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException67);
        java.lang.String[] strArray70 = new java.lang.String[] {};
        retryOnPrimaryException67.setResources("", strArray70);
        retryOnPrimaryException54.addHeader("", strArray70);
        retryOnPrimaryException26.addHeader("", strArray70);
        retryOnPrimaryException10.addHeader("[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray70);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray76 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNull(index15);
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "");
        org.junit.Assert.assertEquals(throwable30.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "retry_on_primary_exception" + "'", str46, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(throwable58);
        org.junit.Assert.assertEquals(throwable58.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable58.getMessage(), "");
        org.junit.Assert.assertEquals(throwable58.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray76);
    }

    @Test
    public void test6012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6012");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        org.elasticsearch.index.shard.ShardId shardId3 = retryOnPrimaryException2.getShardId();
        java.lang.String str4 = retryOnPrimaryException2.getResourceType();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray6 = retryOnPrimaryException2.getSuppressed();
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(throwableArray6);
    }

    @Test
    public void test6013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6013");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray4 = retryOnPrimaryException3.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId5 = retryOnPrimaryException3.getShardId();
        java.util.Set<java.lang.String> strSet6 = retryOnPrimaryException3.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String[] strArray18 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException13.setResources("retry_on_primary_exception", strArray18);
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException13.getResourceId();
        retryOnPrimaryException13.setIndex("rest.exception.cause.skip");
        java.lang.String str23 = retryOnPrimaryException13.toString();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", throwable28);
        java.util.List<java.lang.String> strList31 = null;
        retryOnPrimaryException29.addHeader("retry_on_primary_exception", strList31);
        java.lang.Throwable throwable33 = retryOnPrimaryException29.unwrapCause();
        org.elasticsearch.index.Index index34 = null;
        retryOnPrimaryException29.setIndex(index34);
        retryOnPrimaryException29.setShard("hi!", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException42);
        java.lang.String[] strArray45 = new java.lang.String[] {};
        retryOnPrimaryException42.setResources("", strArray45);
        retryOnPrimaryException29.addHeader("", strArray45);
        retryOnPrimaryException3.setResources("RetryOnPrimaryException[rest.exception.cause.skip]", strArray45);
        java.lang.Throwable[] throwableArray49 = retryOnPrimaryException3.getSuppressed();
        java.lang.String str50 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder51 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params52 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder53 = retryOnPrimaryException3.toXContent(xContentBuilder51, params52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray4);
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str23, "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "");
        org.junit.Assert.assertEquals(throwable33.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "retry_on_primary_exception" + "'", str50, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(params52);
    }

    @Test
    public void test6014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6014");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray4 = retryOnPrimaryException3.guessRootCauses();
        java.lang.String str5 = retryOnPrimaryException3.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", throwable10);
        java.util.List<java.lang.String> strList13 = null;
        retryOnPrimaryException11.addHeader("retry_on_primary_exception", strList13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String str16 = retryOnPrimaryException11.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", (java.lang.Throwable) retryOnPrimaryException11);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.rest.RestStatus restStatus19 = retryOnPrimaryException11.status();
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException11.getHeader("");
        java.lang.String str22 = retryOnPrimaryException11.toString();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "RetryOnPrimaryException[]" + "'", str16, "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + restStatus19 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus19.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "RetryOnPrimaryException[]" + "'", str22, "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test6015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6015");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("hi!", (int) '4');
        java.lang.Throwable throwable18 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "[hi!][[hi!][52]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
    }

    @Test
    public void test6016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6016");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable16 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        throwable16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = retryOnPrimaryException31.guessRootCauses();
        retryOnPrimaryException31.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", 100);
        java.util.List<java.lang.String> strList37 = retryOnPrimaryException31.getHeader("RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertNull(strList37);
    }

    @Test
    public void test6017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6017");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", (int) (short) 1);
        java.lang.Throwable throwable10 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder11 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params12 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder13 = retryOnPrimaryException6.toXContent(xContentBuilder11, params12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(params12);
    }

    @Test
    public void test6018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6018");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String[] strArray9 = new java.lang.String[] {};
        retryOnPrimaryException6.setResources("", strArray9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException6.getIndex();
        org.elasticsearch.index.Index index12 = retryOnPrimaryException6.getIndex();
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException6.setShard(shardId15);
        java.lang.Throwable throwable17 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        java.util.List<java.lang.String> strList24 = null;
        retryOnPrimaryException22.addHeader("retry_on_primary_exception", strList24);
        java.lang.Throwable throwable26 = retryOnPrimaryException22.unwrapCause();
        org.elasticsearch.index.Index index27 = null;
        retryOnPrimaryException22.setIndex(index27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", throwable33);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", (java.lang.Throwable) retryOnPrimaryException34);
        java.lang.String[] strArray40 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException35.setResources("retry_on_primary_exception", strArray40);
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException35);
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        boolean boolean45 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        java.lang.Throwable throwable49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", throwable49);
        java.util.List<java.lang.String> strList52 = null;
        retryOnPrimaryException50.addHeader("retry_on_primary_exception", strList52);
        java.lang.Throwable throwable54 = retryOnPrimaryException50.unwrapCause();
        org.elasticsearch.index.Index index55 = null;
        retryOnPrimaryException50.setIndex(index55);
        retryOnPrimaryException50.setShard("hi!", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray64 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException63);
        java.lang.String[] strArray66 = new java.lang.String[] {};
        retryOnPrimaryException63.setResources("", strArray66);
        retryOnPrimaryException50.addHeader("", strArray66);
        retryOnPrimaryException22.addHeader("", strArray66);
        retryOnPrimaryException6.addHeader("[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray66);
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "rest.exception.stacktrace.skip");
        boolean boolean74 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException73);
        java.lang.String str75 = retryOnPrimaryException73.getDetailedMessage();
        java.lang.String str76 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException73);
        java.lang.Throwable throwable77 = retryOnPrimaryException73.unwrapCause();
        java.lang.Throwable throwable78 = retryOnPrimaryException73.unwrapCause();
        retryOnPrimaryException6.addSuppressed(throwable78);
        org.elasticsearch.rest.RestStatus restStatus80 = retryOnPrimaryException6.status();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertNull(index12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "");
        org.junit.Assert.assertEquals(throwable26.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(throwable54);
        org.junit.Assert.assertEquals(throwable54.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable54.getMessage(), "");
        org.junit.Assert.assertEquals(throwable54.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str75, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "retry_on_primary_exception" + "'", str76, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable77);
        org.junit.Assert.assertEquals(throwable77.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable77.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable77.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(throwable78);
        org.junit.Assert.assertEquals(throwable78.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable78.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable78.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertTrue("'" + restStatus80 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus80.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6019");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("hi!", (int) (short) 10);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException6.guessRootCauses();
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException6.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(strList21);
    }

    @Test
    public void test6020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6020");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException16.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.index.shard.ShardId shardId31 = retryOnPrimaryException29.getShardId();
        org.elasticsearch.index.Index index32 = retryOnPrimaryException29.getIndex();
        java.lang.Throwable throwable33 = retryOnPrimaryException29.getRootCause();
        org.elasticsearch.index.Index index34 = retryOnPrimaryException29.getIndex();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = retryOnPrimaryException29.guessRootCauses();
        java.lang.Class<?> wildcardClass36 = retryOnPrimaryException29.getClass();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNull(index32);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable33.toString(), "RetryOnPrimaryException[[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        org.junit.Assert.assertNull(index34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test6021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6021");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", throwable10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray17 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException12.setResources("retry_on_primary_exception", strArray17);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable throwable20 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException27.setResources("retry_on_primary_exception", strArray32);
        throwable20.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable20);
        java.lang.String str36 = retryOnPrimaryException35.getResourceType();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.Index index38 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.index.Index index39 = retryOnPrimaryException2.getIndex();
        java.util.Set<java.lang.String> strSet40 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.Index index41 = retryOnPrimaryException2.getIndex();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(index38);
        org.junit.Assert.assertNull(index39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNull(index41);
    }

    @Test
    public void test6022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6022");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException6.status();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6023");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException6.guessRootCauses();
        retryOnPrimaryException6.setShard("hi!", (int) (byte) -1);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException6.getHeaderKeys();
        retryOnPrimaryException6.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str15 = retryOnPrimaryException6.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6024");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.String str8 = retryOnPrimaryException3.toString();
        java.lang.String str9 = retryOnPrimaryException3.getDetailedMessage();
        org.elasticsearch.index.Index index10 = retryOnPrimaryException3.getIndex();
        java.lang.String str11 = retryOnPrimaryException3.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "RetryOnPrimaryException[]" + "'", str8, "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(index10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
    }

    @Test
    public void test6025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6025");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable16 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        throwable16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable16);
        java.lang.String str32 = retryOnPrimaryException31.getResourceType();
        org.elasticsearch.index.Index index33 = null;
        retryOnPrimaryException31.setIndex(index33);
        java.lang.Throwable throwable35 = retryOnPrimaryException31.unwrapCause();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable35.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6026");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str6 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException7.getResourceId();
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException7.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip]", (int) (byte) 0);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
    }

    @Test
    public void test6027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6027");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String[] strArray20 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException6.setResources("", strArray20);
        retryOnPrimaryException6.setShard("rest.exception.cause.skip", (int) '#');
        retryOnPrimaryException6.setIndex("rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet27 = retryOnPrimaryException6.getHeaderKeys();
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException6.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(strSet28);
    }

    @Test
    public void test6028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6028");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.Index index6 = null;
        retryOnPrimaryException2.setIndex(index6);
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test6029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6029");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str6 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", throwable13);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", (java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String[] strArray20 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException15.setResources("retry_on_primary_exception", strArray20);
        retryOnPrimaryException4.addHeader("", strArray20);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException4.writeTo(streamOutput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNull(strList23);
    }

    @Test
    public void test6030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6030");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable14 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", throwable19);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException21.setResources("retry_on_primary_exception", strArray26);
        throwable14.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException21.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        retryOnPrimaryException21.setShard(shardId30);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "RetryOnPrimaryException[]", throwable34);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "", throwable41);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "", (java.lang.Throwable) retryOnPrimaryException42);
        java.lang.String[] strArray48 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException43.setResources("retry_on_primary_exception", strArray48);
        java.lang.String str50 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "", throwable54);
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        java.lang.Throwable throwable61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "", throwable61);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "", (java.lang.Throwable) retryOnPrimaryException62);
        java.lang.String[] strArray68 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException63.setResources("retry_on_primary_exception", strArray68);
        java.util.List<java.lang.String> strList70 = retryOnPrimaryException63.getResourceId();
        retryOnPrimaryException55.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList70);
        retryOnPrimaryException43.addHeader("rest.exception.stacktrace.skip", strList70);
        retryOnPrimaryException35.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strList70);
        java.util.List<java.lang.String> strList75 = retryOnPrimaryException35.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str76 = retryOnPrimaryException35.getDetailedMessage();
        retryOnPrimaryException35.setIndex("[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String str80 = retryOnPrimaryException21.toString();
        java.lang.Throwable throwable81 = retryOnPrimaryException21.unwrapCause();
        retryOnPrimaryException21.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]", (int) '4');
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "retry_on_primary_exception" + "'", str50, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]" + "'", str76, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str80, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable81);
        org.junit.Assert.assertEquals(throwable81.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable81.getMessage(), "");
        org.junit.Assert.assertEquals(throwable81.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]][52]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6031");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable18 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException25.setResources("retry_on_primary_exception", strArray30);
        throwable18.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId35 = retryOnPrimaryException33.getShardId();
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException33);
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException33.getResourceId();
        retryOnPrimaryException33.setShard("[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]][[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", 10);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable45);
        java.util.List<java.lang.String> strList48 = null;
        retryOnPrimaryException46.addHeader("retry_on_primary_exception", strList48);
        java.lang.Throwable throwable50 = retryOnPrimaryException46.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        java.lang.Throwable throwable56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "", throwable56);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "", (java.lang.Throwable) retryOnPrimaryException57);
        java.lang.String[] strArray63 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException58.setResources("retry_on_primary_exception", strArray63);
        java.util.List<java.lang.String> strList65 = retryOnPrimaryException58.getResourceId();
        boolean boolean66 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException58);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray67 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException58);
        java.util.Set<java.lang.String> strSet68 = retryOnPrimaryException58.getHeaderKeys();
        java.util.Set<java.lang.String> strSet69 = retryOnPrimaryException58.getHeaderKeys();
        java.util.List<java.lang.String> strList70 = retryOnPrimaryException58.getResourceId();
        retryOnPrimaryException46.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList70);
        retryOnPrimaryException33.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][-1]] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList70);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(throwable50);
        org.junit.Assert.assertEquals(throwable50.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable50.getMessage(), "");
        org.junit.Assert.assertEquals(throwable50.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray67);
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertNotNull(strList70);
    }

    @Test
    public void test6032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6032");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String[] strArray20 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException6.setResources("", strArray20);
        java.lang.String str22 = retryOnPrimaryException6.getResourceType();
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.util.Set<java.lang.String> strSet24 = retryOnPrimaryException6.getHeaderKeys();
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str26 = retryOnPrimaryException6.toString();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str26, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6033");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        retryOnPrimaryException4.setShard(shardId5);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setIndex("[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str10 = retryOnPrimaryException4.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[rest.exception.stacktrace.skip]" + "'", str10, "[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
    }

    @Test
    public void test6034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6034");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        retryOnPrimaryException6.setResources("rest.exception.cause.skip", strArray25);
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException6.status();
        retryOnPrimaryException6.setIndex("[hi!][[hi!][10]] RetryOnPrimaryException[]");
        java.lang.String str31 = retryOnPrimaryException6.toString();
        java.lang.Throwable throwable32 = retryOnPrimaryException6.getRootCause();
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable32);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str31, "[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test6035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6035");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable16 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        throwable16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException23);
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.rest.RestStatus restStatus33 = retryOnPrimaryException31.status();
        java.lang.String str34 = retryOnPrimaryException31.getDetailedMessage();
        retryOnPrimaryException31.setShard("RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 10);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder38 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params39 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder40 = retryOnPrimaryException31.toXContent(xContentBuilder38, params39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + restStatus33 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus33.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str34, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(params39);
    }

    @Test
    public void test6036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6036");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.Throwable throwable5 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String[] strArray18 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException13.setResources("retry_on_primary_exception", strArray18);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", throwable26);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", (java.lang.Throwable) retryOnPrimaryException27);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException28.setResources("retry_on_primary_exception", strArray33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray42 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException28.setResources("", strArray42);
        retryOnPrimaryException13.addHeader("", strArray42);
        retryOnPrimaryException4.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray42);
        java.lang.String str46 = retryOnPrimaryException4.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str48 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "", throwable54);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", (java.lang.Throwable) retryOnPrimaryException55);
        java.lang.String[] strArray61 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException56.setResources("retry_on_primary_exception", strArray61);
        java.lang.String str63 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        java.lang.Throwable throwable67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "", throwable67);
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        java.lang.Throwable throwable74 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "", throwable74);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "", (java.lang.Throwable) retryOnPrimaryException75);
        java.lang.String[] strArray81 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException76.setResources("retry_on_primary_exception", strArray81);
        java.util.List<java.lang.String> strList83 = retryOnPrimaryException76.getResourceId();
        retryOnPrimaryException68.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList83);
        retryOnPrimaryException56.addHeader("rest.exception.stacktrace.skip", strList83);
        retryOnPrimaryException4.addHeader("rest.exception.stacktrace.skip", strList83);
        java.lang.String str87 = retryOnPrimaryException4.toString();
        java.util.List<java.lang.String> strList89 = retryOnPrimaryException4.getHeader("");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException90 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str91 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder92 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params93 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder94 = retryOnPrimaryException4.toXContent(xContentBuilder92, params93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str46, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str48, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "retry_on_primary_exception" + "'", str63, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str87, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str91, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(params93);
    }

    @Test
    public void test6037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6037");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String[] strArray20 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException6.setResources("", strArray20);
        retryOnPrimaryException6.setShard("", (int) (short) -1);
        java.lang.String str25 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str26 = retryOnPrimaryException6.getResourceType();
        retryOnPrimaryException6.setIndex("");
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException6.getSuppressed();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "retry_on_primary_exception" + "'", str25, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(throwableArray29);
    }

    @Test
    public void test6038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6038");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable45);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "", (java.lang.Throwable) retryOnPrimaryException46);
        java.lang.String[] strArray52 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException47.setResources("retry_on_primary_exception", strArray52);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String[] strArray61 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException47.setResources("", strArray61);
        retryOnPrimaryException33.setResources("rest.exception.cause.skip", strArray61);
        retryOnPrimaryException16.addHeader("rest.exception.cause.skip", strArray61);
        java.lang.Throwable throwable65 = retryOnPrimaryException16.getRootCause();
        java.util.List<java.lang.String> strList67 = retryOnPrimaryException16.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray68 = retryOnPrimaryException16.guessRootCauses();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(throwable65);
        org.junit.Assert.assertEquals(throwable65.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable65.getMessage(), "");
        org.junit.Assert.assertEquals(throwable65.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray68);
    }

    @Test
    public void test6039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6039");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("retry_on_primary_exception", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder9 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params10 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder11 = retryOnPrimaryException2.toXContent(xContentBuilder9, params10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(params10);
    }

    @Test
    public void test6040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6040");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable8 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
    }

    @Test
    public void test6041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6041");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException5);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException5.getHeaderKeys();
        java.lang.Throwable[] throwableArray9 = retryOnPrimaryException5.getSuppressed();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException5.getHeader("[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException5.setIndex("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test6042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6042");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", throwable10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray17 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException12.setResources("retry_on_primary_exception", strArray17);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable throwable20 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException27.setResources("retry_on_primary_exception", strArray32);
        throwable20.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable20);
        java.lang.Throwable throwable37 = retryOnPrimaryException36.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException36);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "");
        org.junit.Assert.assertEquals(throwable37.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6043");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = retryOnPrimaryException6.toString();
        java.util.Set<java.lang.String> strSet16 = retryOnPrimaryException6.getHeaderKeys();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException6.getResourceId();
        java.lang.String str18 = retryOnPrimaryException6.toString();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str18, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6044");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException17.status();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6045");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException3.getHeader("hi!");
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException3.getHeader("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.Index index13 = retryOnPrimaryException3.getIndex();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException3);
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException3.getHeader("[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test6046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6046");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str10 = retryOnPrimaryException5.toString();
        java.lang.String str11 = retryOnPrimaryException5.getDetailedMessage();
        retryOnPrimaryException5.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 0);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException5.setShard(shardId15);
        java.lang.String str17 = retryOnPrimaryException5.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str19 = retryOnPrimaryException18.toString();
        retryOnPrimaryException18.setIndex("[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.Throwable throwable22 = retryOnPrimaryException18.getRootCause();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException18);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[]" + "'", str10, "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str11, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];" + "'", str19, "RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "");
        org.junit.Assert.assertEquals(throwable22.toString(), "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][0]] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test6047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6047");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable16 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        throwable16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable16);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException31.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.Throwable throwable34 = retryOnPrimaryException31.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException31);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
    }

    @Test
    public void test6048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6048");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException3.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        retryOnPrimaryException3.setShard("RetryOnPrimaryException[[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]", (int) '#');
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder32 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params33 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder34 = retryOnPrimaryException3.toXContent(xContentBuilder32, params33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[RetryOnPrimaryException[[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]][[RetryOnPrimaryException[[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]][35]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(params33);
    }

    @Test
    public void test6049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6049");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable16 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        throwable16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException23);
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException31);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException31.getResourceId();
        org.elasticsearch.index.Index index34 = retryOnPrimaryException31.getIndex();
        org.elasticsearch.rest.RestStatus restStatus35 = retryOnPrimaryException31.status();
        java.lang.Throwable throwable36 = retryOnPrimaryException31.unwrapCause();
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException31.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(index34);
        org.junit.Assert.assertTrue("'" + restStatus35 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus35.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strSet37);
    }

    @Test
    public void test6050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6050");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException3.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", throwable32);
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.Index index36 = retryOnPrimaryException33.getIndex();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = retryOnPrimaryException3.guessRootCauses();
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException3);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(index36);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test6051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6051");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable16 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        throwable16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable16);
        java.lang.String str32 = retryOnPrimaryException31.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus33 = retryOnPrimaryException31.status();
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException31);
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException31.getResourceId();
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException31.getHeader("[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.common.io.stream.StreamInput streamInput39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException40 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException31, streamInput39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + restStatus33 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus33.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(strList38);
    }

    @Test
    public void test6052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6052");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable[] throwableArray10 = retryOnPrimaryException9.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray10);
    }

    @Test
    public void test6053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6053");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str11 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str14 = retryOnPrimaryException9.getDetailedMessage();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "retry_on_primary_exception" + "'", str11, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str14, "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6054");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        retryOnPrimaryException5.setShard(shardId9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray18 = new java.lang.String[] {};
        retryOnPrimaryException15.setResources("", strArray18);
        retryOnPrimaryException5.addHeader("[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray18);
        org.elasticsearch.index.Index index21 = retryOnPrimaryException5.getIndex();
        java.lang.String str22 = retryOnPrimaryException5.toString();
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException5.getResourceId();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNull(index21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "RetryOnPrimaryException[]" + "'", str22, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList23);
    }

    @Test
    public void test6055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6055");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]");
        retryOnPrimaryException2.setIndex("[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "retry_on_primary_exception");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", throwable29);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", (java.lang.Throwable) retryOnPrimaryException30);
        java.lang.String[] strArray36 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException31.setResources("retry_on_primary_exception", strArray36);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException31);
        java.lang.String[] strArray45 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException31.setResources("", strArray45);
        retryOnPrimaryException16.addHeader("", strArray45);
        retryOnPrimaryException7.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray45);
        java.lang.String str49 = retryOnPrimaryException7.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray50 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String str51 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable[] throwableArray52 = retryOnPrimaryException7.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable throwable54 = retryOnPrimaryException7.getRootCause();
        java.lang.Throwable throwable55 = retryOnPrimaryException7.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus56 = retryOnPrimaryException7.status();
        java.lang.Throwable throwable57 = retryOnPrimaryException7.unwrapCause();
        java.lang.Throwable[] throwableArray58 = retryOnPrimaryException7.getSuppressed();
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str49, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "retry_on_primary_exception" + "'", str51, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwable54);
        org.junit.Assert.assertEquals(throwable54.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable54.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable54.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable55);
        org.junit.Assert.assertEquals(throwable55.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable55.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable55.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + restStatus56 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus56.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable57);
        org.junit.Assert.assertEquals(throwable57.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable57.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable57.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwableArray58);
    }

    @Test
    public void test6056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6056");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        retryOnPrimaryException5.setShard(shardId9);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", throwable16);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", (java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String[] strArray23 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException18.setResources("retry_on_primary_exception", strArray23);
        retryOnPrimaryException5.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray23);
        org.elasticsearch.index.Index index26 = retryOnPrimaryException5.getIndex();
        boolean boolean27 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        retryOnPrimaryException5.setShard(shardId28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[retry_on_primary_exception]", (java.lang.Throwable) retryOnPrimaryException5);
        java.util.List<java.lang.String> strList32 = retryOnPrimaryException5.getHeader("rest.exception.stacktrace.skip");
        java.lang.String str33 = retryOnPrimaryException5.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", throwable36);
        java.util.List<java.lang.String> strList39 = null;
        retryOnPrimaryException37.addHeader("retry_on_primary_exception", strList39);
        java.lang.Throwable throwable41 = retryOnPrimaryException37.unwrapCause();
        org.elasticsearch.index.Index index42 = null;
        retryOnPrimaryException37.setIndex(index42);
        java.lang.Throwable throwable44 = retryOnPrimaryException37.unwrapCause();
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException37.getSuppressed();
        retryOnPrimaryException37.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) '4');
        java.lang.String[] strArray57 = new java.lang.String[] { "retry_on_primary_exception", "hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "", "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        retryOnPrimaryException37.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList58);
        java.util.Set<java.lang.String> strSet61 = retryOnPrimaryException37.getHeaderKeys();
        retryOnPrimaryException5.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        java.lang.Throwable throwable63 = retryOnPrimaryException37.unwrapCause();
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNull(index26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "");
        org.junit.Assert.assertEquals(throwable41.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "");
        org.junit.Assert.assertEquals(throwable44.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNotNull(throwable63);
        org.junit.Assert.assertEquals(throwable63.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable63.getMessage(), "");
        org.junit.Assert.assertEquals(throwable63.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
    }

    @Test
    public void test6057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6057");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException16.status();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException16.status();
        retryOnPrimaryException16.setIndex("[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]");
        org.elasticsearch.rest.RestStatus restStatus21 = retryOnPrimaryException16.status();
        java.lang.String str22 = retryOnPrimaryException16.getResourceType();
        java.lang.Throwable throwable23 = retryOnPrimaryException16.getRootCause();
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException16.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "retry_on_primary_exception");
        java.lang.Throwable throwable30 = retryOnPrimaryException29.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", throwable36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException38.setResources("retry_on_primary_exception", strArray43);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", throwable51);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", (java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String[] strArray58 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException53.setResources("retry_on_primary_exception", strArray58);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray60 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException53);
        java.lang.String[] strArray67 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException53.setResources("", strArray67);
        retryOnPrimaryException38.addHeader("", strArray67);
        retryOnPrimaryException29.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray67);
        retryOnPrimaryException16.setResources("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray67);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus21 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus21.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "");
        org.junit.Assert.assertEquals(throwable23.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable30.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray60);
        org.junit.Assert.assertNotNull(strArray67);
    }

    @Test
    public void test6058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6058");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable16 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        throwable16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable16);
        java.lang.String str32 = retryOnPrimaryException31.getResourceType();
        org.elasticsearch.index.Index index33 = null;
        retryOnPrimaryException31.setIndex(index33);
        java.lang.String[] strArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException31.setResources("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test6059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6059");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = retryOnPrimaryException6.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable19 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable21 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException6, streamOutput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6060");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable14 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", throwable19);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException21.setResources("retry_on_primary_exception", strArray26);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String[] strArray35 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException21.setResources("", strArray35);
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) '#');
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        retryOnPrimaryException21.setShard(shardId41);
        java.lang.String str43 = retryOnPrimaryException21.getResourceType();
        throwable14.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = retryOnPrimaryException21.guessRootCauses();
        retryOnPrimaryException21.setShard("RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];", (-1));
        org.elasticsearch.common.io.stream.StreamOutput streamOutput49 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException21, streamOutput49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
    }

    @Test
    public void test6061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6061");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", throwable22);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", (java.lang.Throwable) retryOnPrimaryException23);
        java.lang.String[] strArray29 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException24.setResources("retry_on_primary_exception", strArray29);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray31 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray38 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException24.setResources("", strArray38);
        retryOnPrimaryException6.addHeader("[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray38);
        java.lang.Class<?> wildcardClass41 = strArray38.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test6062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6062");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        java.lang.Throwable throwable10 = retryOnPrimaryException3.unwrapCause();
        java.lang.Throwable[] throwableArray11 = retryOnPrimaryException3.getSuppressed();
        retryOnPrimaryException3.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) '4');
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException3.setShard(shardId15);
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException3.getHeaderKeys();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.Throwable throwable19 = retryOnPrimaryException3.unwrapCause();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
    }

    @Test
    public void test6063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6063");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String str9 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException8.guessRootCauses();
        retryOnPrimaryException8.setIndex("");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable14 = retryOnPrimaryException8.getRootCause();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException8.guessRootCauses();
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException8.getHeaderKeys();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "retry_on_primary_exception" + "'", str9, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test6064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6064");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException16.status();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException16.status();
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException16);
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException16.getResourceId();
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException16.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][10]] RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException16.status();
        java.util.List<java.lang.String> strList26 = null;
        retryOnPrimaryException16.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][-1]] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList26);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6065");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("hi!", (int) (short) 10);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str18 = retryOnPrimaryException6.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("");
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException6.status();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str18, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6066");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        retryOnPrimaryException3.setShard(shardId7);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        retryOnPrimaryException3.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray21);
        org.elasticsearch.index.Index index24 = retryOnPrimaryException3.getIndex();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        retryOnPrimaryException3.setShard(shardId25);
        java.lang.Throwable throwable27 = retryOnPrimaryException3.getRootCause();
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException3.getHeaderKeys();
        java.lang.Throwable throwable29 = retryOnPrimaryException3.getRootCause();
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNull(index24);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "");
        org.junit.Assert.assertEquals(throwable27.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "");
        org.junit.Assert.assertEquals(throwable29.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6067");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException18);
        java.lang.String str20 = retryOnPrimaryException18.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", throwable27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException29.setResources("retry_on_primary_exception", strArray34);
        java.lang.String str36 = retryOnPrimaryException29.toString();
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.Throwable[] throwableArray38 = retryOnPrimaryException29.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        java.lang.Throwable throwable44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "", throwable44);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "", (java.lang.Throwable) retryOnPrimaryException45);
        java.lang.String[] strArray51 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException46.setResources("retry_on_primary_exception", strArray51);
        java.util.List<java.lang.String> strList53 = retryOnPrimaryException46.getResourceId();
        retryOnPrimaryException29.addHeader("retry_on_primary_exception", strList53);
        retryOnPrimaryException21.addHeader("", strList53);
        retryOnPrimaryException10.addHeader("[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList53);
        retryOnPrimaryException10.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][10]] RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", 100);
        java.lang.Throwable[] throwableArray60 = retryOnPrimaryException10.getSuppressed();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str20, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str36, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(throwableArray60);
    }

    @Test
    public void test6068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6068");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray4 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException2.status();
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", throwable13);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", (java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException19);
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", throwable28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", (java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String[] strArray35 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException30.setResources("retry_on_primary_exception", strArray35);
        java.lang.String str37 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        retryOnPrimaryException30.setShard(shardId41);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "hi!");
        retryOnPrimaryException46.setShard("retry_on_primary_exception", (int) (byte) 1);
        java.lang.String str50 = retryOnPrimaryException46.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "", throwable54);
        java.util.List<java.lang.String> strList57 = null;
        retryOnPrimaryException55.addHeader("retry_on_primary_exception", strList57);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        retryOnPrimaryException55.setShard(shardId59);
        org.elasticsearch.index.shard.ShardId shardId61 = retryOnPrimaryException55.getShardId();
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        java.lang.Throwable throwable67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "", throwable67);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "", (java.lang.Throwable) retryOnPrimaryException68);
        java.lang.String[] strArray74 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException69.setResources("retry_on_primary_exception", strArray74);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray76 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException69);
        java.lang.String[] strArray83 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException69.setResources("", strArray83);
        retryOnPrimaryException55.addHeader("", strArray83);
        retryOnPrimaryException46.setResources("hi!", strArray83);
        retryOnPrimaryException30.setResources("hi!", strArray83);
        retryOnPrimaryException19.addHeader("", strArray83);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray83);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray90 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray4);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "retry_on_primary_exception" + "'", str37, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str50, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray76);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray90);
    }

    @Test
    public void test6069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6069");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String[] strArray22 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException8.setResources("", strArray22);
        java.lang.Throwable[] throwableArray24 = retryOnPrimaryException8.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus25 = retryOnPrimaryException8.status();
        java.lang.String str26 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId27 = retryOnPrimaryException8.getShardId();
        retryOnPrimaryException8.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertTrue("'" + restStatus25 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus25.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "retry_on_primary_exception" + "'", str26, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId27);
    }

    @Test
    public void test6070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6070");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str19 = retryOnPrimaryException3.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException3.getHeaderKeys();
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException3.getSuppressed();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable25 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException3, streamOutput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test6071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6071");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException8.setShard("rest.exception.stacktrace.skip", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[retry_on_primary_exception]", (java.lang.Throwable) retryOnPrimaryException8);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException12.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId14 = retryOnPrimaryException12.getShardId();
        java.lang.String str15 = retryOnPrimaryException12.getDetailedMessage();
        retryOnPrimaryException12.setIndex("[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.String str18 = retryOnPrimaryException12.getResourceType();
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; [rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str15, "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; [rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test6072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6072");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable15 = retryOnPrimaryException6.getRootCause();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6073");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException23.getResourceId();
        retryOnPrimaryException6.addHeader("retry_on_primary_exception", strList30);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", throwable35);
        java.util.List<java.lang.String> strList38 = null;
        retryOnPrimaryException36.addHeader("retry_on_primary_exception", strList38);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        retryOnPrimaryException36.setShard(shardId40);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", throwable47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", (java.lang.Throwable) retryOnPrimaryException48);
        java.lang.String[] strArray54 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException49.setResources("retry_on_primary_exception", strArray54);
        java.lang.String str56 = retryOnPrimaryException49.toString();
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.Throwable[] throwableArray58 = retryOnPrimaryException49.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        java.lang.Throwable throwable64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "", throwable64);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "", (java.lang.Throwable) retryOnPrimaryException65);
        java.lang.String[] strArray71 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException66.setResources("retry_on_primary_exception", strArray71);
        java.util.List<java.lang.String> strList73 = retryOnPrimaryException66.getResourceId();
        retryOnPrimaryException49.addHeader("retry_on_primary_exception", strList73);
        retryOnPrimaryException36.addHeader("retry_on_primary_exception", strList73);
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList73);
        java.util.Set<java.lang.String> strSet77 = retryOnPrimaryException6.getHeaderKeys();
        java.lang.String str78 = retryOnPrimaryException6.getDetailedMessage();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str56, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str78, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6074");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable18 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException25.setResources("retry_on_primary_exception", strArray30);
        throwable18.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String str34 = retryOnPrimaryException25.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException38.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 1);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable45);
        java.util.List<java.lang.String> strList48 = null;
        retryOnPrimaryException46.addHeader("retry_on_primary_exception", strList48);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        retryOnPrimaryException46.setShard(shardId50);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "", throwable57);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "", (java.lang.Throwable) retryOnPrimaryException58);
        java.lang.String[] strArray64 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException59.setResources("retry_on_primary_exception", strArray64);
        java.lang.String str66 = retryOnPrimaryException59.toString();
        boolean boolean67 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException59);
        java.lang.Throwable[] throwableArray68 = retryOnPrimaryException59.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        java.lang.Throwable throwable74 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "", throwable74);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "", (java.lang.Throwable) retryOnPrimaryException75);
        java.lang.String[] strArray81 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException76.setResources("retry_on_primary_exception", strArray81);
        java.util.List<java.lang.String> strList83 = retryOnPrimaryException76.getResourceId();
        retryOnPrimaryException59.addHeader("retry_on_primary_exception", strList83);
        retryOnPrimaryException46.addHeader("retry_on_primary_exception", strList83);
        retryOnPrimaryException38.addHeader("", strList83);
        retryOnPrimaryException25.addHeader("hi!", strList83);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException88 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.Throwable throwable89 = retryOnPrimaryException25.unwrapCause();
        org.elasticsearch.index.Index index90 = retryOnPrimaryException25.getIndex();
        retryOnPrimaryException25.setIndex("RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str34, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str66, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(throwable89);
        org.junit.Assert.assertEquals(throwable89.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable89.getMessage(), "");
        org.junit.Assert.assertEquals(throwable89.toString(), "[RetryOnPrimaryException[rest.exception.stacktrace.skip]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(index90);
    }

    @Test
    public void test6075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6075");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "RetryOnPrimaryException[retry_on_primary_exception]");
        java.lang.Throwable throwable19 = retryOnPrimaryException18.getRootCause();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException6.getSuppressed();
        retryOnPrimaryException6.setShard("[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (short) 0);
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.rest.RestStatus restStatus26 = retryOnPrimaryException6.status();
        retryOnPrimaryException6.setShard("RetryOnPrimaryException[rest.exception.stacktrace.skip]", (int) (short) -1);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + restStatus26 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus26.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6076");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = retryOnPrimaryException6.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str17 = retryOnPrimaryException6.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException6.status();
        org.elasticsearch.rest.RestStatus restStatus19 = retryOnPrimaryException6.status();
        java.lang.Class<?> wildcardClass20 = retryOnPrimaryException6.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus19 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus19.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test6077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6077");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        retryOnPrimaryException3.setShard(shardId27);
        java.util.List<java.lang.String> strList30 = null;
        retryOnPrimaryException3.addHeader("[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList30);
        org.elasticsearch.index.Index index32 = retryOnPrimaryException3.getIndex();
        java.lang.Throwable throwable33 = retryOnPrimaryException3.getRootCause();
        java.lang.Throwable throwable34 = retryOnPrimaryException3.unwrapCause();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(index32);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "");
        org.junit.Assert.assertEquals(throwable33.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6078");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        retryOnPrimaryException5.setShard(shardId9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        retryOnPrimaryException11.setIndex("[hi!][[hi!][10]] RetryOnPrimaryException[]");
        java.lang.String str14 = retryOnPrimaryException11.getResourceType();
        java.lang.String str15 = retryOnPrimaryException11.getDetailedMessage();
        java.lang.String str16 = retryOnPrimaryException11.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException11.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException11.getShardId();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", throwable26);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", (java.lang.Throwable) retryOnPrimaryException27);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException28.setResources("retry_on_primary_exception", strArray33);
        java.lang.String str35 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.Throwable throwable36 = retryOnPrimaryException28.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "RetryOnPrimaryException[retry_on_primary_exception]", throwable36);
        org.elasticsearch.index.Index index38 = retryOnPrimaryException37.getIndex();
        retryOnPrimaryException37.setIndex("[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId41 = retryOnPrimaryException37.getShardId();
        java.lang.Throwable throwable42 = retryOnPrimaryException37.unwrapCause();
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str15, "[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "retry_on_primary_exception" + "'", str35, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(index38);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable42.toString(), "[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6079");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip");
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.Index index12 = retryOnPrimaryException10.getIndex();
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String str21 = retryOnPrimaryException19.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String str35 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.Index index36 = retryOnPrimaryException32.getIndex();
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        java.lang.Throwable throwable43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "", throwable43);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "", (java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "", throwable48);
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException49);
        retryOnPrimaryException45.addSuppressed((java.lang.Throwable) retryOnPrimaryException49);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "", throwable57);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "", (java.lang.Throwable) retryOnPrimaryException58);
        java.lang.String[] strArray64 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException59.setResources("retry_on_primary_exception", strArray64);
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        java.lang.Throwable throwable71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "", throwable71);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "", (java.lang.Throwable) retryOnPrimaryException72);
        java.lang.String[] strArray78 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException73.setResources("retry_on_primary_exception", strArray78);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray80 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException73);
        java.lang.String[] strArray87 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException73.setResources("", strArray87);
        retryOnPrimaryException59.setResources("rest.exception.cause.skip", strArray87);
        retryOnPrimaryException45.addHeader("hi!", strArray87);
        retryOnPrimaryException32.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray87);
        retryOnPrimaryException19.addHeader("[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]][[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray87);
        retryOnPrimaryException10.addHeader("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", strArray87);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(index12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "retry_on_primary_exception" + "'", str35, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray80);
        org.junit.Assert.assertNotNull(strArray87);
    }

    @Test
    public void test6080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6080");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable2);
        java.lang.Throwable throwable4 = retryOnPrimaryException3.getRootCause();
        java.lang.Throwable[] throwableArray5 = throwable4.getSuppressed();
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable4);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test6081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6081");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String[] strArray20 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException6.setResources("", strArray20);
        java.lang.String str22 = retryOnPrimaryException6.getResourceType();
        java.lang.Throwable throwable23 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", throwable28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", (java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String str31 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = retryOnPrimaryException30.guessRootCauses();
        retryOnPrimaryException30.setIndex("");
        org.elasticsearch.index.shard.ShardId shardId35 = retryOnPrimaryException30.getShardId();
        retryOnPrimaryException30.setIndex("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "", throwable40);
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        retryOnPrimaryException41.setIndex("");
        retryOnPrimaryException30.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "");
        org.junit.Assert.assertEquals(throwable23.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "retry_on_primary_exception" + "'", str31, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test6082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6082");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        java.lang.Throwable throwable9 = retryOnPrimaryException5.unwrapCause();
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException5.setIndex(index10);
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.Throwable throwable14 = retryOnPrimaryException5.getRootCause();
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException23.getResourceId();
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.String str32 = retryOnPrimaryException23.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException23);
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.String str35 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException23);
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException23.getResourceId();
        retryOnPrimaryException5.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList36);
        java.lang.String str38 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException5);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str32, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "retry_on_primary_exception" + "'", str35, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "retry_on_primary_exception" + "'", str38, "retry_on_primary_exception");
    }

    @Test
    public void test6083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6083");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String str9 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException8.guessRootCauses();
        retryOnPrimaryException8.setShard("hi!", (int) (byte) -1);
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        retryOnPrimaryException8.setIndex("");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        java.util.Set<java.lang.String> strSet18 = retryOnPrimaryException8.getHeaderKeys();
        java.lang.Throwable throwable19 = retryOnPrimaryException8.getRootCause();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable19);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "retry_on_primary_exception" + "'", str9, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test6084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6084");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException3.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException3.status();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException3.writeTo(streamOutput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6085");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getHeader("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", throwable15);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", (java.lang.Throwable) retryOnPrimaryException16);
        java.lang.String[] strArray22 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException17.setResources("retry_on_primary_exception", strArray22);
        java.lang.String str24 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.Throwable throwable25 = retryOnPrimaryException17.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        java.lang.Throwable throwable30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", throwable30);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", (java.lang.Throwable) retryOnPrimaryException31);
        java.lang.String[] strArray37 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException32.setResources("retry_on_primary_exception", strArray37);
        throwable25.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable25);
        java.lang.String str41 = retryOnPrimaryException40.getResourceType();
        retryOnPrimaryException7.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.index.Index index43 = retryOnPrimaryException7.getIndex();
        java.lang.Throwable throwable44 = retryOnPrimaryException7.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", throwable51);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", (java.lang.Throwable) retryOnPrimaryException52);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "RetryOnPrimaryException[retry_on_primary_exception]", (java.lang.Throwable) retryOnPrimaryException53);
        throwable44.addSuppressed((java.lang.Throwable) retryOnPrimaryException55);
        retryOnPrimaryException2.addSuppressed(throwable44);
        retryOnPrimaryException2.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.rest.RestStatus restStatus60 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "retry_on_primary_exception" + "'", str24, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "");
        org.junit.Assert.assertEquals(throwable25.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(index43);
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertTrue("'" + restStatus60 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus60.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6086");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        retryOnPrimaryException2.setShard(shardId3);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (int) '4');
        java.lang.String str9 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "retry_on_primary_exception" + "'", str9, "retry_on_primary_exception");
    }

    @Test
    public void test6087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6087");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException7.getIndex();
        java.lang.String str12 = retryOnPrimaryException7.getDetailedMessage();
        org.elasticsearch.index.Index index13 = retryOnPrimaryException7.getIndex();
        java.lang.Throwable throwable14 = retryOnPrimaryException7.getRootCause();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6088");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException8.getShardId();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        retryOnPrimaryException8.setShard(shardId10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable14 = retryOnPrimaryException8.getRootCause();
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6089");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", throwable10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray17 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException12.setResources("retry_on_primary_exception", strArray17);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable throwable20 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException27.setResources("retry_on_primary_exception", strArray32);
        throwable20.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable20);
        java.lang.String str36 = retryOnPrimaryException35.getResourceType();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        retryOnPrimaryException35.setShard("[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (short) 0);
        java.lang.Class<?> wildcardClass41 = retryOnPrimaryException35.getClass();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test6090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6090");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException8.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        retryOnPrimaryException16.setShard("[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (byte) -1);
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException16);
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test6091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6091");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException27.setResources("retry_on_primary_exception", strArray32);
        java.util.List<java.lang.String> strList34 = retryOnPrimaryException27.getResourceId();
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        retryOnPrimaryException40.setShard("retry_on_primary_exception", (int) (byte) 1);
        java.lang.String str44 = retryOnPrimaryException40.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "", throwable48);
        java.util.List<java.lang.String> strList51 = null;
        retryOnPrimaryException49.addHeader("retry_on_primary_exception", strList51);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        retryOnPrimaryException49.setShard(shardId53);
        org.elasticsearch.index.shard.ShardId shardId55 = retryOnPrimaryException49.getShardId();
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        java.lang.Throwable throwable61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "", throwable61);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "", (java.lang.Throwable) retryOnPrimaryException62);
        java.lang.String[] strArray68 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException63.setResources("retry_on_primary_exception", strArray68);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray70 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException63);
        java.lang.String[] strArray77 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException63.setResources("", strArray77);
        retryOnPrimaryException49.addHeader("", strArray77);
        retryOnPrimaryException40.setResources("hi!", strArray77);
        retryOnPrimaryException27.setResources("", strArray77);
        retryOnPrimaryException19.setResources("[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]", strArray77);
        java.lang.String str83 = retryOnPrimaryException19.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException84 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList86 = retryOnPrimaryException84.getHeader("RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray87 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException84);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput88 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException89 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException84, streamOutput88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str44, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(shardId55);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray70);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str83, "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray87);
    }

    @Test
    public void test6092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6092");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", throwable22);
        java.util.List<java.lang.String> strList25 = null;
        retryOnPrimaryException23.addHeader("retry_on_primary_exception", strList25);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        retryOnPrimaryException23.setShard(shardId27);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", throwable34);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", (java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String[] strArray41 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException36.setResources("retry_on_primary_exception", strArray41);
        java.lang.String str43 = retryOnPrimaryException36.toString();
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException36);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException36.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", throwable51);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", (java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String[] strArray58 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException53.setResources("retry_on_primary_exception", strArray58);
        java.util.List<java.lang.String> strList60 = retryOnPrimaryException53.getResourceId();
        retryOnPrimaryException36.addHeader("retry_on_primary_exception", strList60);
        retryOnPrimaryException23.addHeader("retry_on_primary_exception", strList60);
        retryOnPrimaryException10.addHeader("retry_on_primary_exception", strList60);
        java.lang.String str64 = retryOnPrimaryException10.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId65 = retryOnPrimaryException10.getShardId();
        java.util.Set<java.lang.String> strSet66 = retryOnPrimaryException10.getHeaderKeys();
        java.lang.Throwable throwable67 = retryOnPrimaryException10.unwrapCause();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str43, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str64, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(shardId65);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNotNull(throwable67);
        org.junit.Assert.assertEquals(throwable67.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable67.getMessage(), "");
        org.junit.Assert.assertEquals(throwable67.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6093");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str8 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", throwable15);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", (java.lang.Throwable) retryOnPrimaryException16);
        java.lang.String[] strArray22 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException17.setResources("retry_on_primary_exception", strArray22);
        retryOnPrimaryException6.addHeader("", strArray22);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException25.guessRootCauses();
        retryOnPrimaryException25.setShard("[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", 0);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", throwable36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException38.setResources("retry_on_primary_exception", strArray43);
        java.lang.String str45 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException38);
        java.lang.Throwable throwable46 = retryOnPrimaryException38.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", throwable51);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", (java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String[] strArray58 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException53.setResources("retry_on_primary_exception", strArray58);
        throwable46.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.shard.ShardId shardId62 = retryOnPrimaryException61.getShardId();
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        java.lang.Throwable throwable67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "", throwable67);
        java.util.List<java.lang.String> strList70 = null;
        retryOnPrimaryException68.addHeader("retry_on_primary_exception", strList70);
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        retryOnPrimaryException68.setShard(shardId72);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "", (java.lang.Throwable) retryOnPrimaryException68);
        org.elasticsearch.index.shard.ShardId shardId75 = null;
        java.lang.Throwable throwable77 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException78 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId75, "", throwable77);
        java.util.List<java.lang.String> strList80 = null;
        retryOnPrimaryException78.addHeader("retry_on_primary_exception", strList80);
        retryOnPrimaryException68.addSuppressed((java.lang.Throwable) retryOnPrimaryException78);
        java.lang.String str83 = retryOnPrimaryException68.toString();
        retryOnPrimaryException61.addSuppressed((java.lang.Throwable) retryOnPrimaryException68);
        java.lang.String str85 = retryOnPrimaryException61.getResourceType();
        retryOnPrimaryException61.setIndex("retry_on_primary_exception");
        boolean boolean88 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException61);
        retryOnPrimaryException25.addSuppressed((java.lang.Throwable) retryOnPrimaryException61);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray90 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException25);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "retry_on_primary_exception" + "'", str45, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNull(shardId62);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "RetryOnPrimaryException[]" + "'", str83, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray90);
    }

    @Test
    public void test6094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6094");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException8.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "RetryOnPrimaryException[]");
        retryOnPrimaryException20.setIndex("[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]");
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "retry_on_primary_exception");
        java.lang.Throwable throwable26 = retryOnPrimaryException25.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", throwable32);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", (java.lang.Throwable) retryOnPrimaryException33);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException34.setResources("retry_on_primary_exception", strArray39);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", throwable47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", (java.lang.Throwable) retryOnPrimaryException48);
        java.lang.String[] strArray54 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException49.setResources("retry_on_primary_exception", strArray54);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray56 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.String[] strArray63 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException49.setResources("", strArray63);
        retryOnPrimaryException34.addHeader("", strArray63);
        retryOnPrimaryException25.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray63);
        java.lang.String str67 = retryOnPrimaryException25.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray68 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String str69 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException25);
        java.lang.Throwable[] throwableArray70 = retryOnPrimaryException25.getSuppressed();
        retryOnPrimaryException20.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable throwable73 = retryOnPrimaryException8.getRootCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput74 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException8.writeTo(streamOutput74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable26.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray56);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str67, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "retry_on_primary_exception" + "'", str69, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwable73);
        org.junit.Assert.assertEquals(throwable73.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable73.getMessage(), "");
        org.junit.Assert.assertEquals(throwable73.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6095");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray3 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str5 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "retry_on_primary_exception" + "'", str5, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNull(shardId7);
    }

    @Test
    public void test6096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6096");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str7 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder8 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params9 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder10 = retryOnPrimaryException6.toXContent(xContentBuilder8, params9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str7, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(params9);
    }

    @Test
    public void test6097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6097");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable16 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        throwable16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException23);
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException31);
        java.lang.Throwable throwable33 = retryOnPrimaryException31.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray34 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable33);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable33.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray34);
    }

    @Test
    public void test6098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6098");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str10 = retryOnPrimaryException5.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.Throwable throwable12 = retryOnPrimaryException11.unwrapCause();
        java.lang.String str13 = retryOnPrimaryException11.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String str19 = retryOnPrimaryException17.getDetailedMessage();
        java.lang.String str20 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String str21 = retryOnPrimaryException17.toString();
        java.lang.String str22 = retryOnPrimaryException17.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("retry_on_primary_exception", (int) (byte) 1);
        java.lang.String str30 = retryOnPrimaryException26.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", throwable34);
        java.util.List<java.lang.String> strList37 = null;
        retryOnPrimaryException35.addHeader("retry_on_primary_exception", strList37);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        retryOnPrimaryException35.setShard(shardId39);
        org.elasticsearch.index.shard.ShardId shardId41 = retryOnPrimaryException35.getShardId();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", throwable47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", (java.lang.Throwable) retryOnPrimaryException48);
        java.lang.String[] strArray54 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException49.setResources("retry_on_primary_exception", strArray54);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray56 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.String[] strArray63 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException49.setResources("", strArray63);
        retryOnPrimaryException35.addHeader("", strArray63);
        retryOnPrimaryException26.setResources("hi!", strArray63);
        retryOnPrimaryException17.setResources("RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]]", strArray63);
        retryOnPrimaryException11.setResources("[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]][[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray63);
        java.util.List<java.lang.String> strList69 = retryOnPrimaryException11.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray70 = retryOnPrimaryException11.guessRootCauses();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[]" + "'", str10, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str19, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "retry_on_primary_exception" + "'", str20, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]" + "'", str21, "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str30, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray56);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray70);
    }

    @Test
    public void test6099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6099");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", throwable10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray17 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException12.setResources("retry_on_primary_exception", strArray17);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable throwable20 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException27.setResources("retry_on_primary_exception", strArray32);
        throwable20.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable20);
        java.lang.String str36 = retryOnPrimaryException35.getResourceType();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.Index index38 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable39 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "", throwable46);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "", (java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "RetryOnPrimaryException[retry_on_primary_exception]", (java.lang.Throwable) retryOnPrimaryException48);
        throwable39.addSuppressed((java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "hi!");
        retryOnPrimaryException54.setShard("retry_on_primary_exception", (int) (byte) 1);
        retryOnPrimaryException50.addSuppressed((java.lang.Throwable) retryOnPrimaryException54);
        java.lang.Throwable throwable59 = retryOnPrimaryException50.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray60 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException50);
        boolean boolean61 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray62 = retryOnPrimaryException50.guessRootCauses();
        retryOnPrimaryException50.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(index38);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertNotNull(throwable59);
        org.junit.Assert.assertEquals(throwable59.getLocalizedMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable59.getMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable59.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray62);
    }

    @Test
    public void test6100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6100");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("hi!");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str18 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.rest.RestStatus restStatus19 = retryOnPrimaryException6.status();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder20 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params21 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder22 = retryOnPrimaryException6.toXContent(xContentBuilder20, params21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str18, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + restStatus19 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus19.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(params21);
    }

    @Test
    public void test6101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6101");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException3.getHeader("hi!");
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException3.getHeader("");
        retryOnPrimaryException3.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException17.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 1);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        java.util.List<java.lang.String> strList27 = null;
        retryOnPrimaryException25.addHeader("retry_on_primary_exception", strList27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        retryOnPrimaryException25.setShard(shardId29);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", throwable36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException38.setResources("retry_on_primary_exception", strArray43);
        java.lang.String str45 = retryOnPrimaryException38.toString();
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException38);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException38.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        java.lang.Throwable throwable53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "", throwable53);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", (java.lang.Throwable) retryOnPrimaryException54);
        java.lang.String[] strArray60 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException55.setResources("retry_on_primary_exception", strArray60);
        java.util.List<java.lang.String> strList62 = retryOnPrimaryException55.getResourceId();
        retryOnPrimaryException38.addHeader("retry_on_primary_exception", strList62);
        retryOnPrimaryException25.addHeader("retry_on_primary_exception", strList62);
        retryOnPrimaryException17.addHeader("", strList62);
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList62);
        org.elasticsearch.index.shard.ShardId shardId67 = retryOnPrimaryException3.getShardId();
        java.util.Set<java.lang.String> strSet68 = retryOnPrimaryException3.getHeaderKeys();
        boolean boolean69 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str45, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(shardId67);
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test6102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6102");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = retryOnPrimaryException6.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception19 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException6, streamOutput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
    }

    @Test
    public void test6103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6103");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str20 = retryOnPrimaryException19.toString();
        retryOnPrimaryException19.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) (byte) 10);
        java.util.Set<java.lang.String> strSet24 = retryOnPrimaryException19.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamInput streamInput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception26 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException19, streamInput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str20, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strSet24);
    }

    @Test
    public void test6104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6104");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String[] strArray20 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException6.setResources("", strArray20);
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException6.getSuppressed();
        java.lang.Throwable throwable23 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId24 = retryOnPrimaryException6.getShardId();
        java.lang.Throwable[] throwableArray25 = retryOnPrimaryException6.getSuppressed();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "");
        org.junit.Assert.assertEquals(throwable23.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(throwableArray25);
    }

    @Test
    public void test6105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6105");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException6.getShardId();
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException6.status();
        java.lang.String str9 = retryOnPrimaryException6.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        retryOnPrimaryException6.setShard(shardId10);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", throwable17);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", (java.lang.Throwable) retryOnPrimaryException18);
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException18.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", throwable28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", (java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String[] strArray35 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException30.setResources("retry_on_primary_exception", strArray35);
        java.lang.String str37 = retryOnPrimaryException30.toString();
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable[] throwableArray39 = retryOnPrimaryException30.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable45);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "", (java.lang.Throwable) retryOnPrimaryException46);
        java.lang.String[] strArray52 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException47.setResources("retry_on_primary_exception", strArray52);
        java.util.List<java.lang.String> strList54 = retryOnPrimaryException47.getResourceId();
        retryOnPrimaryException30.addHeader("retry_on_primary_exception", strList54);
        retryOnPrimaryException18.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", strList54);
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList54);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        boolean boolean61 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException60);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException60);
        boolean boolean63 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str37, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test6106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6106");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException16.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String str31 = retryOnPrimaryException16.toString();
        java.lang.String str32 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.String str33 = retryOnPrimaryException16.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray34 = retryOnPrimaryException16.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.String str36 = retryOnPrimaryException16.getDetailedMessage();
        retryOnPrimaryException16.setShard("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]", (int) '4');
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str31, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "retry_on_primary_exception" + "'", str32, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str33, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str36, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6107");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable17 = retryOnPrimaryException8.getRootCause();
        retryOnPrimaryException8.setShard("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; [rest.exception.stacktrace.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) '4');
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6108");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable16 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        throwable16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.Index index32 = retryOnPrimaryException31.getIndex();
        java.lang.String str33 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException31);
        retryOnPrimaryException31.setShard("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (byte) 1);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException31);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(index32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "retry_on_primary_exception" + "'", str33, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
    }

    @Test
    public void test6109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6109");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray4 = retryOnPrimaryException3.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId5 = retryOnPrimaryException3.getShardId();
        java.util.Set<java.lang.String> strSet6 = retryOnPrimaryException3.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String[] strArray18 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException13.setResources("retry_on_primary_exception", strArray18);
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException13.getResourceId();
        retryOnPrimaryException13.setIndex("rest.exception.cause.skip");
        java.lang.String str23 = retryOnPrimaryException13.toString();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", throwable28);
        java.util.List<java.lang.String> strList31 = null;
        retryOnPrimaryException29.addHeader("retry_on_primary_exception", strList31);
        java.lang.Throwable throwable33 = retryOnPrimaryException29.unwrapCause();
        org.elasticsearch.index.Index index34 = null;
        retryOnPrimaryException29.setIndex(index34);
        retryOnPrimaryException29.setShard("hi!", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException42);
        java.lang.String[] strArray45 = new java.lang.String[] {};
        retryOnPrimaryException42.setResources("", strArray45);
        retryOnPrimaryException29.addHeader("", strArray45);
        retryOnPrimaryException3.setResources("RetryOnPrimaryException[rest.exception.cause.skip]", strArray45);
        java.lang.Throwable[] throwableArray49 = retryOnPrimaryException3.getSuppressed();
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.String str51 = retryOnPrimaryException3.getDetailedMessage();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray4);
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str23, "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "");
        org.junit.Assert.assertEquals(throwable33.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str51, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6110");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        retryOnPrimaryException6.setResources("rest.exception.cause.skip", strArray25);
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException6.status();
        retryOnPrimaryException6.setIndex("[hi!][[hi!][10]] RetryOnPrimaryException[]");
        java.lang.String str31 = retryOnPrimaryException6.toString();
        java.lang.Throwable[] throwableArray32 = retryOnPrimaryException6.getSuppressed();
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray34 = retryOnPrimaryException6.guessRootCauses();
        retryOnPrimaryException6.setShard("[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str31, "[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray34);
    }

    @Test
    public void test6111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6111");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.String str11 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.String str12 = retryOnPrimaryException3.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException3.guessRootCauses();
        java.lang.Throwable throwable14 = retryOnPrimaryException3.unwrapCause();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException3.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.Index index28 = retryOnPrimaryException24.getIndex();
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", throwable35);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", (java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "", throwable40);
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        retryOnPrimaryException37.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        java.lang.Throwable throwable49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", throwable49);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", (java.lang.Throwable) retryOnPrimaryException50);
        java.lang.String[] strArray56 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException51.setResources("retry_on_primary_exception", strArray56);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "", throwable63);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "", (java.lang.Throwable) retryOnPrimaryException64);
        java.lang.String[] strArray70 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException65.setResources("retry_on_primary_exception", strArray70);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray72 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException65);
        java.lang.String[] strArray79 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException65.setResources("", strArray79);
        retryOnPrimaryException51.setResources("rest.exception.cause.skip", strArray79);
        retryOnPrimaryException37.addHeader("hi!", strArray79);
        retryOnPrimaryException24.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray79);
        retryOnPrimaryException3.setResources("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray79);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "retry_on_primary_exception" + "'", str11, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "RetryOnPrimaryException[]" + "'", str12, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray72);
        org.junit.Assert.assertNotNull(strArray79);
    }

    @Test
    public void test6112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6112");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[retry_on_primary_exception]");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.getRootCause();
        java.lang.String str4 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable5 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String str17 = retryOnPrimaryException16.getDetailedMessage();
        retryOnPrimaryException16.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 1);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        throwable5.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException8.getHeaderKeys();
        java.lang.Throwable throwable24 = retryOnPrimaryException8.getRootCause();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "retry_on_primary_exception" + "'", str4, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str17, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];]");
    }

    @Test
    public void test6113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6113");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        retryOnPrimaryException2.setShard(shardId3);
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6114");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.String[] strArray37 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException23.setResources("", strArray37);
        retryOnPrimaryException8.addHeader("", strArray37);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException8);
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException8.getHeader("[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]][[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.String str43 = retryOnPrimaryException8.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "retry_on_primary_exception" + "'", str43, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
    }

    @Test
    public void test6115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6115");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str14 = retryOnPrimaryException6.getDetailedMessage();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str14, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6116");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        boolean boolean4 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException3.getHeaderKeys();
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException3.getHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException3.getHeader("[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test6117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6117");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException6.getShardId();
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException6.getShardId();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray10 = retryOnPrimaryException6.getSuppressed();
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable12 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException6.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException6.guessRootCauses();
        org.elasticsearch.index.Index index15 = retryOnPrimaryException6.getIndex();
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNull(index15);
    }

    @Test
    public void test6118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6118");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        java.lang.Throwable throwable7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", throwable7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String[] strArray14 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException9.setResources("retry_on_primary_exception", strArray14);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", throwable27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException29.setResources("retry_on_primary_exception", strArray34);
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException29.getResourceId();
        retryOnPrimaryException21.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList36);
        retryOnPrimaryException9.addHeader("rest.exception.stacktrace.skip", strList36);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException9.getResourceId();
        java.lang.String str41 = retryOnPrimaryException9.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray42 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        java.util.Set<java.lang.String> strSet43 = retryOnPrimaryException9.getHeaderKeys();
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.common.io.stream.StreamInput streamInput45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException46 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException9, streamInput45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "retry_on_primary_exception" + "'", str41, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test6119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6119");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
    }

    @Test
    public void test6120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6120");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str19 = retryOnPrimaryException3.getResourceType();
        java.lang.String str20 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.String str21 = retryOnPrimaryException3.getResourceType();
        retryOnPrimaryException3.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (short) 100);
        retryOnPrimaryException3.setIndex("[hi!][[hi!][52]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "retry_on_primary_exception" + "'", str20, "retry_on_primary_exception");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test6121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6121");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException3.getIndex();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        java.util.Set<java.lang.String> strSet16 = retryOnPrimaryException14.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", throwable26);
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException27);
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException23.getResourceId();
        java.lang.String str31 = retryOnPrimaryException23.getResourceType();
        retryOnPrimaryException23.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (-1));
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException38);
        java.lang.Throwable throwable40 = retryOnPrimaryException38.getRootCause();
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException38.getHeader("hi!");
        java.util.List<java.lang.String> strList43 = retryOnPrimaryException38.getResourceId();
        java.lang.Throwable throwable44 = retryOnPrimaryException38.getRootCause();
        boolean boolean45 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException38);
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", throwable52);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "", (java.lang.Throwable) retryOnPrimaryException53);
        java.lang.String[] strArray59 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException54.setResources("retry_on_primary_exception", strArray59);
        java.lang.String str61 = retryOnPrimaryException54.toString();
        org.elasticsearch.rest.RestStatus restStatus62 = retryOnPrimaryException54.status();
        java.lang.String str63 = retryOnPrimaryException54.getDetailedMessage();
        java.util.List<java.lang.String> strList64 = retryOnPrimaryException54.getResourceId();
        retryOnPrimaryException23.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList64);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable40.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]");
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str61, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus62 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus62.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str63, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strList64);
    }

    @Test
    public void test6122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6122");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException6.getHeaderKeys();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException6.getResourceId();
        java.lang.Class<?> wildcardClass17 = strList16.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test6123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6123");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException16.status();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException16.status();
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException16.getSuppressed();
        java.lang.Throwable throwable22 = retryOnPrimaryException16.unwrapCause();
        retryOnPrimaryException16.setShard("[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", 1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "");
        org.junit.Assert.assertEquals(throwable22.toString(), "[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6124");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException6.getHeader("[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.Throwable throwable17 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId18 = retryOnPrimaryException6.getShardId();
        java.lang.Throwable throwable19 = retryOnPrimaryException6.getRootCause();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6125");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        retryOnPrimaryException4.setResources("", strArray7);
        org.elasticsearch.index.Index index9 = retryOnPrimaryException4.getIndex();
        org.elasticsearch.index.Index index10 = retryOnPrimaryException4.getIndex();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", (java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String[] strArray27 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException22.setResources("retry_on_primary_exception", strArray27);
        java.lang.String str29 = retryOnPrimaryException22.toString();
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.Throwable[] throwableArray31 = retryOnPrimaryException22.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "", throwable37);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", (java.lang.Throwable) retryOnPrimaryException38);
        java.lang.String[] strArray44 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException39.setResources("retry_on_primary_exception", strArray44);
        java.util.List<java.lang.String> strList46 = retryOnPrimaryException39.getResourceId();
        retryOnPrimaryException22.addHeader("retry_on_primary_exception", strList46);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", throwable51);
        java.util.List<java.lang.String> strList54 = null;
        retryOnPrimaryException52.addHeader("retry_on_primary_exception", strList54);
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        retryOnPrimaryException52.setShard(shardId56);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "", throwable63);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "", (java.lang.Throwable) retryOnPrimaryException64);
        java.lang.String[] strArray70 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException65.setResources("retry_on_primary_exception", strArray70);
        retryOnPrimaryException52.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray70);
        retryOnPrimaryException22.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray70);
        retryOnPrimaryException4.setResources("[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray70);
        boolean boolean75 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray76 = retryOnPrimaryException4.getSuppressed();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertNull(index10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str29, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(throwableArray76);
    }

    @Test
    public void test6126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6126");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException6.guessRootCauses();
        retryOnPrimaryException6.setShard("hi!", (int) (byte) -1);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("");
        retryOnPrimaryException6.setShard("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]", (int) (short) 100);
        java.lang.Throwable throwable18 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", throwable22);
        java.util.List<java.lang.String> strList25 = null;
        retryOnPrimaryException23.addHeader("retry_on_primary_exception", strList25);
        java.lang.Throwable throwable27 = retryOnPrimaryException23.unwrapCause();
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException23.getHeader("hi!");
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException23.getHeader("");
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.Index index33 = retryOnPrimaryException23.getIndex();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "", throwable39);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "", (java.lang.Throwable) retryOnPrimaryException40);
        java.lang.String[] strArray46 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException41.setResources("retry_on_primary_exception", strArray46);
        java.util.List<java.lang.String> strList48 = retryOnPrimaryException41.getResourceId();
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray50 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException41);
        java.util.Set<java.lang.String> strSet51 = retryOnPrimaryException41.getHeaderKeys();
        java.util.Set<java.lang.String> strSet52 = retryOnPrimaryException41.getHeaderKeys();
        java.util.List<java.lang.String> strList53 = retryOnPrimaryException41.getResourceId();
        retryOnPrimaryException23.addHeader("[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList53);
        retryOnPrimaryException6.addHeader("[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList53);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]][[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "");
        org.junit.Assert.assertEquals(throwable27.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(index33);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(strList53);
    }

    @Test
    public void test6127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6127");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str19 = retryOnPrimaryException10.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", throwable22);
        java.util.List<java.lang.String> strList25 = null;
        retryOnPrimaryException23.addHeader("retry_on_primary_exception", strList25);
        java.lang.Throwable throwable27 = retryOnPrimaryException23.unwrapCause();
        org.elasticsearch.index.Index index28 = null;
        retryOnPrimaryException23.setIndex(index28);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", throwable34);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", (java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String[] strArray41 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException36.setResources("retry_on_primary_exception", strArray41);
        java.lang.String str43 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException36);
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "", throwable50);
        java.util.List<java.lang.String> strList53 = null;
        retryOnPrimaryException51.addHeader("retry_on_primary_exception", strList53);
        java.lang.Throwable throwable55 = retryOnPrimaryException51.unwrapCause();
        org.elasticsearch.index.Index index56 = null;
        retryOnPrimaryException51.setIndex(index56);
        retryOnPrimaryException51.setShard("hi!", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray65 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException64);
        java.lang.String[] strArray67 = new java.lang.String[] {};
        retryOnPrimaryException64.setResources("", strArray67);
        retryOnPrimaryException51.addHeader("", strArray67);
        retryOnPrimaryException23.addHeader("", strArray67);
        java.lang.String str71 = retryOnPrimaryException23.getDetailedMessage();
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.Throwable[] throwableArray73 = retryOnPrimaryException10.getSuppressed();
        org.elasticsearch.index.Index index74 = retryOnPrimaryException10.getIndex();
        java.lang.String str75 = retryOnPrimaryException10.getResourceType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException77 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException10, streamOutput76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "");
        org.junit.Assert.assertEquals(throwable27.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "retry_on_primary_exception" + "'", str43, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(throwable55);
        org.junit.Assert.assertEquals(throwable55.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable55.getMessage(), "");
        org.junit.Assert.assertEquals(throwable55.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str71, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNull(index74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "retry_on_primary_exception" + "'", str75, "retry_on_primary_exception");
    }

    @Test
    public void test6128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6128");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException6.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException27.setResources("retry_on_primary_exception", strArray32);
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException27);
        java.lang.Throwable throwable35 = retryOnPrimaryException27.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "", throwable40);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "", (java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String[] strArray47 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException42.setResources("retry_on_primary_exception", strArray47);
        throwable35.addSuppressed((java.lang.Throwable) retryOnPrimaryException42);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException42);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.index.shard.ShardId shardId52 = retryOnPrimaryException50.getShardId();
        boolean boolean53 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException50);
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException50.getResourceId();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.rest.RestStatus restStatus57 = retryOnPrimaryException50.status();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "");
        org.junit.Assert.assertEquals(throwable35.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(shardId52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertTrue("'" + restStatus57 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus57.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6129");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException6.setShard(shardId15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException6.status();
        java.lang.Throwable throwable19 = retryOnPrimaryException6.unwrapCause();
        java.lang.Throwable throwable20 = retryOnPrimaryException6.unwrapCause();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test6130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6130");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        java.lang.Throwable throwable9 = retryOnPrimaryException5.unwrapCause();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException5.getHeader("hi!");
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException5.getHeader("");
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index15 = retryOnPrimaryException5.getIndex();
        java.lang.String str16 = retryOnPrimaryException5.getResourceType();
        org.elasticsearch.index.Index index17 = retryOnPrimaryException5.getIndex();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(index15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(index17);
    }

    @Test
    public void test6131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6131");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.lang.Throwable throwable5 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", throwable12);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", (java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String[] strArray19 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException14.setResources("retry_on_primary_exception", strArray19);
        java.lang.String str21 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.Throwable throwable22 = retryOnPrimaryException14.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", throwable27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException29.setResources("retry_on_primary_exception", strArray34);
        throwable22.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable22);
        java.lang.String str38 = retryOnPrimaryException37.getResourceType();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        retryOnPrimaryException4.setIndex("[hi!][[hi!][10]] RetryOnPrimaryException[]");
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException4.getResourceId();
        retryOnPrimaryException4.setShard("", (int) (short) 100);
        java.lang.Throwable throwable46 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus47 = retryOnPrimaryException4.status();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable5.toString(), "[][[][100]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "retry_on_primary_exception" + "'", str21, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable46.toString(), "[][[][100]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus47 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus47.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6132");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray3 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray4 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray3);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray4);
        org.junit.Assert.assertNotNull(strSet5);
    }

    @Test
    public void test6133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6133");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        java.lang.Throwable throwable9 = retryOnPrimaryException5.unwrapCause();
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException5.setIndex(index10);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", throwable16);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", (java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String[] strArray23 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException18.setResources("retry_on_primary_exception", strArray23);
        java.lang.String str25 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException18);
        retryOnPrimaryException5.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = retryOnPrimaryException18.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", throwable33);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", (java.lang.Throwable) retryOnPrimaryException34);
        java.lang.String[] strArray40 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException35.setResources("retry_on_primary_exception", strArray40);
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException35);
        java.util.Set<java.lang.String> strSet43 = retryOnPrimaryException35.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        retryOnPrimaryException35.setShard(shardId44);
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        java.util.List<java.lang.String> strList48 = retryOnPrimaryException35.getHeader("[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]");
        org.elasticsearch.index.shard.ShardId shardId49 = retryOnPrimaryException35.getShardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "retry_on_primary_exception" + "'", str25, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(shardId49);
    }

    @Test
    public void test6134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6134");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str8 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[rest.exception.stacktrace.skip]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", throwable15);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", (java.lang.Throwable) retryOnPrimaryException16);
        java.lang.String[] strArray22 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException17.setResources("retry_on_primary_exception", strArray22);
        java.lang.String str24 = retryOnPrimaryException17.toString();
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.Throwable[] throwableArray26 = retryOnPrimaryException17.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", throwable32);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", (java.lang.Throwable) retryOnPrimaryException33);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException34.setResources("retry_on_primary_exception", strArray39);
        java.util.List<java.lang.String> strList41 = retryOnPrimaryException34.getResourceId();
        retryOnPrimaryException17.addHeader("retry_on_primary_exception", strList41);
        retryOnPrimaryException9.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strList41);
        java.lang.Throwable throwable44 = retryOnPrimaryException9.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable44);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str24, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
    }

    @Test
    public void test6135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6135");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException6.guessRootCauses();
        retryOnPrimaryException6.setShard("hi!", (int) (byte) -1);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("");
        retryOnPrimaryException6.setIndex("");
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException6.getSuppressed();
        retryOnPrimaryException6.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", 0);
        retryOnPrimaryException6.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException6.getHeaderKeys();
        java.lang.String str24 = retryOnPrimaryException6.getResourceType();
        java.lang.Throwable throwable25 = retryOnPrimaryException6.getRootCause();
        java.lang.Throwable[] throwableArray26 = throwable25.getSuppressed();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "");
        org.junit.Assert.assertEquals(throwable25.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test6136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6136");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("hi!", (int) (short) 10);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str18 = retryOnPrimaryException6.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        java.util.List<java.lang.String> strList26 = null;
        retryOnPrimaryException24.addHeader("retry_on_primary_exception", strList26);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        retryOnPrimaryException24.setShard(shardId28);
        org.elasticsearch.index.shard.ShardId shardId30 = retryOnPrimaryException24.getShardId();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", throwable36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException38.setResources("retry_on_primary_exception", strArray43);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException38);
        java.lang.String[] strArray52 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException38.setResources("", strArray52);
        retryOnPrimaryException24.addHeader("", strArray52);
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray52);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput56 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException6.writeTo(streamOutput56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str18, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertNotNull(strArray52);
    }

    @Test
    public void test6137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6137");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.index.Index index6 = retryOnPrimaryException2.getIndex();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        java.lang.Throwable throwable11 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = retryOnPrimaryException10.guessRootCauses();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId14 = retryOnPrimaryException10.getShardId();
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(index6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertNull(shardId14);
    }

    @Test
    public void test6138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6138");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("hi!", (int) (short) 10);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str18 = retryOnPrimaryException6.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = retryOnPrimaryException6.guessRootCauses();
        java.lang.String str20 = retryOnPrimaryException6.getResourceType();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str18, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "retry_on_primary_exception" + "'", str20, "retry_on_primary_exception");
    }

    @Test
    public void test6139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6139");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str11 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus13 = retryOnPrimaryException9.status();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException9.getSuppressed();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException9.getRootCause();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable17);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable17);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "retry_on_primary_exception" + "'", str11, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus13 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus13.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
    }

    @Test
    public void test6140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6140");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str24 = retryOnPrimaryException22.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        java.lang.String str40 = retryOnPrimaryException33.toString();
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException33);
        java.lang.Throwable[] throwableArray42 = retryOnPrimaryException33.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "", throwable48);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "", (java.lang.Throwable) retryOnPrimaryException49);
        java.lang.String[] strArray55 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException50.setResources("retry_on_primary_exception", strArray55);
        java.util.List<java.lang.String> strList57 = retryOnPrimaryException50.getResourceId();
        retryOnPrimaryException33.addHeader("retry_on_primary_exception", strList57);
        retryOnPrimaryException25.addHeader("", strList57);
        retryOnPrimaryException8.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strList57);
        java.util.List<java.lang.String> strList62 = retryOnPrimaryException8.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput63 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException8.writeTo(streamOutput63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str24, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str40, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNull(strList62);
    }

    @Test
    public void test6141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6141");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray4 = retryOnPrimaryException3.guessRootCauses();
        java.lang.String str5 = retryOnPrimaryException3.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", throwable10);
        java.util.List<java.lang.String> strList13 = null;
        retryOnPrimaryException11.addHeader("retry_on_primary_exception", strList13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String str16 = retryOnPrimaryException11.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", (java.lang.Throwable) retryOnPrimaryException11);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException11.getShardId();
        retryOnPrimaryException11.setIndex("[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][35]] RetryOnPrimaryException[]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = retryOnPrimaryException11.guessRootCauses();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "RetryOnPrimaryException[]" + "'", str16, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
    }

    @Test
    public void test6142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6142");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable14 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", throwable19);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException21.setResources("retry_on_primary_exception", strArray26);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String[] strArray35 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException21.setResources("", strArray35);
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) '#');
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        retryOnPrimaryException21.setShard(shardId41);
        java.lang.String str43 = retryOnPrimaryException21.getResourceType();
        throwable14.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = retryOnPrimaryException21.guessRootCauses();
        retryOnPrimaryException21.setShard("RetryOnPrimaryException[[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (int) (byte) -1);
        org.elasticsearch.rest.RestStatus restStatus49 = retryOnPrimaryException21.status();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "", throwable54);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", (java.lang.Throwable) retryOnPrimaryException55);
        java.lang.String[] strArray61 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException56.setResources("retry_on_primary_exception", strArray61);
        java.lang.String str63 = retryOnPrimaryException56.toString();
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException56);
        java.util.List<java.lang.String> strList66 = retryOnPrimaryException56.getHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip]");
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException56);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertTrue("'" + restStatus49 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus49.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str63, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(strList66);
    }

    @Test
    public void test6143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6143");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        java.lang.Throwable throwable10 = retryOnPrimaryException3.unwrapCause();
        java.lang.Throwable[] throwableArray11 = retryOnPrimaryException3.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable throwable28 = retryOnPrimaryException20.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", throwable33);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", (java.lang.Throwable) retryOnPrimaryException34);
        java.lang.String[] strArray40 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException35.setResources("retry_on_primary_exception", strArray40);
        throwable28.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String str44 = retryOnPrimaryException35.getDetailedMessage();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.Index index46 = retryOnPrimaryException3.getIndex();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", throwable51);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", (java.lang.Throwable) retryOnPrimaryException52);
        org.elasticsearch.index.shard.ShardId shardId54 = retryOnPrimaryException53.getShardId();
        org.elasticsearch.rest.RestStatus restStatus55 = retryOnPrimaryException53.status();
        java.lang.String str56 = retryOnPrimaryException53.getResourceType();
        java.util.List<java.lang.String> strList58 = retryOnPrimaryException53.getHeader("[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.Throwable throwable59 = retryOnPrimaryException53.unwrapCause();
        retryOnPrimaryException3.addSuppressed(throwable59);
        boolean boolean61 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.Index index62 = retryOnPrimaryException3.getIndex();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray63 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "");
        org.junit.Assert.assertEquals(throwable28.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str44, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(index46);
        org.junit.Assert.assertNull(shardId54);
        org.junit.Assert.assertTrue("'" + restStatus55 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus55.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(throwable59);
        org.junit.Assert.assertEquals(throwable59.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable59.getMessage(), "");
        org.junit.Assert.assertEquals(throwable59.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(index62);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray63);
    }

    @Test
    public void test6144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6144");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        java.lang.Throwable throwable9 = retryOnPrimaryException5.unwrapCause();
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException5.setIndex(index10);
        java.lang.Throwable throwable12 = retryOnPrimaryException5.unwrapCause();
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException5.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!][[hi!][10]] RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId15 = retryOnPrimaryException5.getShardId();
        java.lang.Throwable throwable16 = retryOnPrimaryException5.getRootCause();
        java.lang.Throwable throwable17 = retryOnPrimaryException5.getRootCause();
        java.lang.Throwable throwable18 = retryOnPrimaryException5.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable20 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException5, streamOutput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6145");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = retryOnPrimaryException8.toString();
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException8.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        org.elasticsearch.index.Index index20 = retryOnPrimaryException8.getIndex();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        java.util.List<java.lang.String> strList27 = null;
        retryOnPrimaryException25.addHeader("retry_on_primary_exception", strList27);
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException25);
        java.lang.Throwable throwable30 = retryOnPrimaryException25.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", throwable36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException38.setResources("retry_on_primary_exception", strArray43);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException38);
        retryOnPrimaryException38.setShard("hi!", (int) (short) 10);
        java.lang.String str49 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException38);
        java.lang.String str50 = retryOnPrimaryException38.toString();
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException38.getResourceId();
        retryOnPrimaryException25.addHeader("rest.exception.stacktrace.skip", strList51);
        retryOnPrimaryException8.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList51);
        org.elasticsearch.rest.RestStatus restStatus54 = retryOnPrimaryException8.status();
        org.elasticsearch.index.Index index55 = retryOnPrimaryException8.getIndex();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str19, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(index20);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "");
        org.junit.Assert.assertEquals(throwable30.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "retry_on_primary_exception" + "'", str49, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str50, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertTrue("'" + restStatus54 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus54.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index55);
    }

    @Test
    public void test6146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6146");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException16.status();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException16.status();
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", throwable26);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", (java.lang.Throwable) retryOnPrimaryException27);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException28.setResources("retry_on_primary_exception", strArray33);
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException28.getResourceId();
        retryOnPrimaryException16.addHeader("", strList35);
        java.lang.String str37 = retryOnPrimaryException16.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId38 = retryOnPrimaryException16.getShardId();
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException16.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][10]] RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str37, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(shardId38);
        org.junit.Assert.assertNull(strList40);
    }

    @Test
    public void test6147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6147");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str10 = retryOnPrimaryException5.toString();
        java.lang.String str11 = retryOnPrimaryException5.getDetailedMessage();
        retryOnPrimaryException5.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 0);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException5.setShard(shardId15);
        java.lang.String str17 = retryOnPrimaryException5.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str19 = retryOnPrimaryException18.toString();
        java.lang.Throwable throwable20 = retryOnPrimaryException18.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", throwable28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", (java.lang.Throwable) retryOnPrimaryException29);
        java.lang.Throwable throwable31 = retryOnPrimaryException30.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException32);
        retryOnPrimaryException32.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        java.lang.Throwable throwable42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "", throwable42);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "", (java.lang.Throwable) retryOnPrimaryException43);
        java.util.List<java.lang.String> strList46 = retryOnPrimaryException43.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        boolean boolean47 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.rest.RestStatus restStatus48 = retryOnPrimaryException43.status();
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "", throwable57);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "", (java.lang.Throwable) retryOnPrimaryException58);
        java.lang.String[] strArray64 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException59.setResources("retry_on_primary_exception", strArray64);
        java.lang.String str66 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException59);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray67 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException59);
        boolean boolean68 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException59);
        boolean boolean69 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException59);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException59);
        java.lang.String[] strArray85 = new java.lang.String[] { "RetryOnPrimaryException[retry_on_primary_exception]", "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        retryOnPrimaryException59.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList86);
        retryOnPrimaryException43.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList86);
        retryOnPrimaryException32.addHeader("[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList86);
        retryOnPrimaryException18.addHeader("[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList86);
        boolean boolean92 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException18);
        retryOnPrimaryException18.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        java.lang.Throwable throwable95 = retryOnPrimaryException18.getRootCause();
        java.lang.String str96 = retryOnPrimaryException18.getDetailedMessage();
        java.util.Set<java.lang.String> strSet97 = retryOnPrimaryException18.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable99 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException18, streamOutput98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[]" + "'", str10, "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str11, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];" + "'", str19, "RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable20.toString(), "[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "");
        org.junit.Assert.assertEquals(throwable31.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + restStatus48 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus48.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "retry_on_primary_exception" + "'", str66, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(throwable95);
        org.junit.Assert.assertEquals(throwable95.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable95.getMessage(), "");
        org.junit.Assert.assertEquals(throwable95.toString(), "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][0]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str96, "[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strSet97);
    }

    @Test
    public void test6148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6148");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.String str3 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray4 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "retry_on_primary_exception" + "'", str3, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]");
    }

    @Test
    public void test6149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6149");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        retryOnPrimaryException3.setShard(shardId27);
        java.util.List<java.lang.String> strList30 = null;
        retryOnPrimaryException3.addHeader("[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList30);
        org.elasticsearch.index.Index index32 = retryOnPrimaryException3.getIndex();
        java.lang.Throwable throwable33 = retryOnPrimaryException3.getRootCause();
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.Class<?> wildcardClass35 = retryOnPrimaryException3.getClass();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(index32);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "");
        org.junit.Assert.assertEquals(throwable33.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test6150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6150");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        java.lang.Throwable throwable10 = retryOnPrimaryException3.unwrapCause();
        java.lang.Throwable[] throwableArray11 = retryOnPrimaryException3.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable throwable28 = retryOnPrimaryException20.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", throwable33);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", (java.lang.Throwable) retryOnPrimaryException34);
        java.lang.String[] strArray40 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException35.setResources("retry_on_primary_exception", strArray40);
        throwable28.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String str44 = retryOnPrimaryException35.getDetailedMessage();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        java.util.Set<java.lang.String> strSet46 = retryOnPrimaryException35.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId47 = retryOnPrimaryException35.getShardId();
        java.lang.String str48 = retryOnPrimaryException35.toString();
        java.lang.String str49 = retryOnPrimaryException35.getResourceType();
        retryOnPrimaryException35.setIndex("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        java.lang.String str52 = retryOnPrimaryException35.toString();
        java.lang.Throwable throwable53 = retryOnPrimaryException35.getRootCause();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "");
        org.junit.Assert.assertEquals(throwable28.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str44, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str48, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "retry_on_primary_exception" + "'", str49, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str52, "[RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable53);
        org.junit.Assert.assertEquals(throwable53.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable53.getMessage(), "");
        org.junit.Assert.assertEquals(throwable53.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6151");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException6.getShardId();
        java.lang.String str8 = retryOnPrimaryException6.getResourceType();
        java.lang.String str9 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", throwable13);
        java.util.List<java.lang.String> strList16 = null;
        retryOnPrimaryException14.addHeader("retry_on_primary_exception", strList16);
        java.lang.Throwable throwable18 = retryOnPrimaryException14.unwrapCause();
        org.elasticsearch.index.Index index19 = null;
        retryOnPrimaryException14.setIndex(index19);
        java.lang.Throwable throwable21 = retryOnPrimaryException14.unwrapCause();
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException14.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", throwable26);
        java.util.List<java.lang.String> strList29 = null;
        retryOnPrimaryException27.addHeader("retry_on_primary_exception", strList29);
        java.lang.Throwable throwable31 = retryOnPrimaryException27.unwrapCause();
        org.elasticsearch.index.Index index32 = null;
        retryOnPrimaryException27.setIndex(index32);
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "", throwable38);
        java.util.List<java.lang.String> strList41 = null;
        retryOnPrimaryException39.addHeader("retry_on_primary_exception", strList41);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        retryOnPrimaryException39.setShard(shardId43);
        org.elasticsearch.index.shard.ShardId shardId45 = retryOnPrimaryException39.getShardId();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", throwable51);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", (java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String[] strArray58 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException53.setResources("retry_on_primary_exception", strArray58);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray60 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException53);
        java.lang.String[] strArray67 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException53.setResources("", strArray67);
        retryOnPrimaryException39.addHeader("", strArray67);
        retryOnPrimaryException27.addHeader("", strArray67);
        retryOnPrimaryException14.addHeader("[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray67);
        retryOnPrimaryException6.setResources("", strArray67);
        java.lang.Throwable throwable73 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray74 = retryOnPrimaryException6.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray75 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str9, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "");
        org.junit.Assert.assertEquals(throwable31.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray60);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(throwable73);
        org.junit.Assert.assertEquals(throwable73.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable73.getMessage(), "");
        org.junit.Assert.assertEquals(throwable73.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray74);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray75);
    }

    @Test
    public void test6152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6152");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.lang.String str17 = retryOnPrimaryException10.toString();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException10.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException10.status();
        org.elasticsearch.rest.RestStatus restStatus21 = retryOnPrimaryException10.status();
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException10.getSuppressed();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str24 = retryOnPrimaryException10.getResourceType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str17, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus21 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus21.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "retry_on_primary_exception" + "'", str24, "retry_on_primary_exception");
    }

    @Test
    public void test6153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6153");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        retryOnPrimaryException6.setResources("rest.exception.cause.skip", strArray25);
        java.lang.Throwable throwable28 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId29 = retryOnPrimaryException6.getShardId();
        java.lang.String str30 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable32 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "", throwable38);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", (java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.index.shard.ShardId shardId41 = retryOnPrimaryException40.getShardId();
        org.elasticsearch.rest.RestStatus restStatus42 = retryOnPrimaryException40.status();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        retryOnPrimaryException40.setShard(shardId43);
        org.elasticsearch.index.shard.ShardId shardId45 = retryOnPrimaryException40.getShardId();
        java.lang.String str46 = retryOnPrimaryException40.getDetailedMessage();
        java.lang.Throwable throwable47 = retryOnPrimaryException40.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", throwable51);
        java.util.List<java.lang.String> strList54 = null;
        retryOnPrimaryException52.addHeader("retry_on_primary_exception", strList54);
        boolean boolean56 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String str57 = retryOnPrimaryException52.toString();
        java.lang.String str58 = retryOnPrimaryException52.getDetailedMessage();
        org.elasticsearch.index.Index index59 = retryOnPrimaryException52.getIndex();
        java.lang.String str60 = retryOnPrimaryException52.getDetailedMessage();
        retryOnPrimaryException52.setIndex("[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId63 = retryOnPrimaryException52.getShardId();
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        java.lang.Throwable throwable69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "", throwable69);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "", (java.lang.Throwable) retryOnPrimaryException70);
        java.lang.String[] strArray76 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException71.setResources("retry_on_primary_exception", strArray76);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray78 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException71);
        retryOnPrimaryException71.setShard("hi!", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId83 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException85 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId83, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray86 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException85);
        java.lang.String[] strArray88 = new java.lang.String[] {};
        retryOnPrimaryException85.setResources("", strArray88);
        retryOnPrimaryException71.setResources("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]", strArray88);
        retryOnPrimaryException52.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]", strArray88);
        retryOnPrimaryException40.addHeader("rest.exception.stacktrace.skip", strArray88);
        retryOnPrimaryException6.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray88);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "");
        org.junit.Assert.assertEquals(throwable28.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "retry_on_primary_exception" + "'", str30, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertTrue("'" + restStatus42 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus42.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str46, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "");
        org.junit.Assert.assertEquals(throwable47.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "RetryOnPrimaryException[]" + "'", str57, "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str58, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(index59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str60, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(shardId63);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray78);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray86);
        org.junit.Assert.assertNotNull(strArray88);
    }

    @Test
    public void test6154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6154");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = retryOnPrimaryException6.toString();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        retryOnPrimaryException6.setShard(shardId16);
        java.util.Set<java.lang.String> strSet18 = retryOnPrimaryException6.getHeaderKeys();
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException6.getResourceId();
        java.lang.String str20 = retryOnPrimaryException6.getDetailedMessage();
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException6.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str20, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strSet21);
    }

    @Test
    public void test6155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6155");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str10 = retryOnPrimaryException5.toString();
        java.lang.String str11 = retryOnPrimaryException5.getDetailedMessage();
        retryOnPrimaryException5.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 0);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException5.setShard(shardId15);
        java.lang.String str17 = retryOnPrimaryException5.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str19 = retryOnPrimaryException18.toString();
        java.lang.Throwable throwable20 = retryOnPrimaryException18.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", throwable28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", (java.lang.Throwable) retryOnPrimaryException29);
        java.lang.Throwable throwable31 = retryOnPrimaryException30.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException32);
        retryOnPrimaryException32.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        java.lang.Throwable throwable42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "", throwable42);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "", (java.lang.Throwable) retryOnPrimaryException43);
        java.util.List<java.lang.String> strList46 = retryOnPrimaryException43.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        boolean boolean47 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.rest.RestStatus restStatus48 = retryOnPrimaryException43.status();
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "", throwable57);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "", (java.lang.Throwable) retryOnPrimaryException58);
        java.lang.String[] strArray64 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException59.setResources("retry_on_primary_exception", strArray64);
        java.lang.String str66 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException59);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray67 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException59);
        boolean boolean68 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException59);
        boolean boolean69 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException59);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException59);
        java.lang.String[] strArray85 = new java.lang.String[] { "RetryOnPrimaryException[retry_on_primary_exception]", "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        retryOnPrimaryException59.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList86);
        retryOnPrimaryException43.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList86);
        retryOnPrimaryException32.addHeader("[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList86);
        retryOnPrimaryException18.addHeader("[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList86);
        boolean boolean92 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException18);
        retryOnPrimaryException18.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        java.lang.Throwable throwable95 = retryOnPrimaryException18.getRootCause();
        java.lang.String str96 = retryOnPrimaryException18.getDetailedMessage();
        java.lang.String str97 = retryOnPrimaryException18.getResourceType();
        java.util.Set<java.lang.String> strSet98 = retryOnPrimaryException18.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus99 = retryOnPrimaryException18.status();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[]" + "'", str10, "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str11, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];" + "'", str19, "RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable20.toString(), "[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "");
        org.junit.Assert.assertEquals(throwable31.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + restStatus48 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus48.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "retry_on_primary_exception" + "'", str66, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(throwable95);
        org.junit.Assert.assertEquals(throwable95.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable95.getMessage(), "");
        org.junit.Assert.assertEquals(throwable95.toString(), "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][0]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str96, "[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(str97);
        org.junit.Assert.assertNotNull(strSet98);
        org.junit.Assert.assertTrue("'" + restStatus99 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus99.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6156");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        retryOnPrimaryException8.setIndex("hi!");
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException8);
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException8.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.common.io.stream.StreamInput streamInput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException25 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException8, streamInput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
    }

    @Test
    public void test6157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6157");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        java.lang.Throwable throwable9 = retryOnPrimaryException5.unwrapCause();
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException5.setIndex(index10);
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException20);
        retryOnPrimaryException20.setShard("hi!", (int) (short) 10);
        java.lang.String str31 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str32 = retryOnPrimaryException20.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException20);
        retryOnPrimaryException5.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.rest.RestStatus restStatus35 = retryOnPrimaryException20.status();
        java.lang.String str36 = retryOnPrimaryException20.getResourceType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput37 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException20.writeTo(streamOutput37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "retry_on_primary_exception" + "'", str31, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str32, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertTrue("'" + restStatus35 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus35.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "retry_on_primary_exception" + "'", str36, "retry_on_primary_exception");
    }

    @Test
    public void test6158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6158");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = retryOnPrimaryException3.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "retry_on_primary_exception");
        java.lang.Throwable throwable13 = retryOnPrimaryException12.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", throwable19);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException21.setResources("retry_on_primary_exception", strArray26);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", throwable34);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", (java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String[] strArray41 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException36.setResources("retry_on_primary_exception", strArray41);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException36);
        java.lang.String[] strArray50 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException36.setResources("", strArray50);
        retryOnPrimaryException21.addHeader("", strArray50);
        retryOnPrimaryException12.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray50);
        boolean boolean54 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str55 = retryOnPrimaryException12.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        java.lang.Throwable throwable59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "", throwable59);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray61 = retryOnPrimaryException60.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId62 = retryOnPrimaryException60.getShardId();
        retryOnPrimaryException60.setShard("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (int) (short) 10);
        java.lang.Throwable throwable66 = retryOnPrimaryException60.unwrapCause();
        retryOnPrimaryException60.setShard("", (-1));
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray74 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException73);
        java.lang.String[] strArray76 = new java.lang.String[] {};
        retryOnPrimaryException73.setResources("", strArray76);
        java.lang.String str78 = retryOnPrimaryException73.toString();
        java.lang.Throwable[] throwableArray79 = retryOnPrimaryException73.getSuppressed();
        retryOnPrimaryException73.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (short) 1);
        java.util.List<java.lang.String> strList83 = retryOnPrimaryException73.getResourceId();
        retryOnPrimaryException60.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList83);
        retryOnPrimaryException12.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[retry_on_primary_exception]", strList83);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.rest.RestStatus restStatus87 = retryOnPrimaryException3.status();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable13.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception" + "'", str55, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray61);
        org.junit.Assert.assertNull(shardId62);
        org.junit.Assert.assertNotNull(throwable66);
        org.junit.Assert.assertEquals(throwable66.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable66.getMessage(), "");
        org.junit.Assert.assertEquals(throwable66.toString(), "[][[][-1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]" + "'", str78, "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertTrue("'" + restStatus87 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus87.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6159");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("hi!", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        retryOnPrimaryException20.setResources("", strArray23);
        retryOnPrimaryException6.addHeader("retry_on_primary_exception", strArray23);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        retryOnPrimaryException6.setShard(shardId26);
        retryOnPrimaryException6.setIndex("");
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test6160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6160");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        java.lang.Throwable throwable10 = retryOnPrimaryException3.unwrapCause();
        java.lang.Throwable[] throwableArray11 = retryOnPrimaryException3.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable throwable28 = retryOnPrimaryException20.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", throwable33);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", (java.lang.Throwable) retryOnPrimaryException34);
        java.lang.String[] strArray40 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException35.setResources("retry_on_primary_exception", strArray40);
        throwable28.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String str44 = retryOnPrimaryException35.getDetailedMessage();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.Index index46 = retryOnPrimaryException35.getIndex();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray51 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException50);
        java.lang.String[] strArray53 = new java.lang.String[] {};
        retryOnPrimaryException50.setResources("", strArray53);
        org.elasticsearch.index.Index index55 = retryOnPrimaryException50.getIndex();
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        java.lang.Throwable throwable61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "", throwable61);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "", (java.lang.Throwable) retryOnPrimaryException62);
        java.lang.String[] strArray68 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException63.setResources("retry_on_primary_exception", strArray68);
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        java.lang.Throwable throwable75 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId73, "", throwable75);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException77 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "", (java.lang.Throwable) retryOnPrimaryException76);
        java.lang.String[] strArray82 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException77.setResources("retry_on_primary_exception", strArray82);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray84 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException77);
        java.lang.String[] strArray91 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException77.setResources("", strArray91);
        retryOnPrimaryException63.setResources("rest.exception.cause.skip", strArray91);
        retryOnPrimaryException50.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", strArray91);
        retryOnPrimaryException35.setResources("RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray91);
        java.lang.Throwable throwable96 = retryOnPrimaryException35.getRootCause();
        boolean boolean97 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable96);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "");
        org.junit.Assert.assertEquals(throwable28.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str44, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(index46);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNull(index55);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray84);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(throwable96);
        org.junit.Assert.assertEquals(throwable96.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable96.getMessage(), "");
        org.junit.Assert.assertEquals(throwable96.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test6161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6161");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", throwable10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray17 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException12.setResources("retry_on_primary_exception", strArray17);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable throwable20 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException27.setResources("retry_on_primary_exception", strArray32);
        throwable20.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable20);
        java.lang.String str36 = retryOnPrimaryException35.getResourceType();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.Index index38 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable39 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "", throwable46);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "", (java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "RetryOnPrimaryException[retry_on_primary_exception]", (java.lang.Throwable) retryOnPrimaryException48);
        throwable39.addSuppressed((java.lang.Throwable) retryOnPrimaryException50);
        java.lang.String str52 = retryOnPrimaryException50.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray62 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException61);
        java.lang.String str63 = retryOnPrimaryException61.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException61);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        java.lang.Throwable throwable70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "", throwable70);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "", (java.lang.Throwable) retryOnPrimaryException71);
        java.lang.String[] strArray77 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException72.setResources("retry_on_primary_exception", strArray77);
        retryOnPrimaryException61.addHeader("", strArray77);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException80 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException61);
        org.elasticsearch.index.shard.ShardId shardId81 = retryOnPrimaryException61.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException82 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException61);
        java.lang.Throwable throwable83 = retryOnPrimaryException82.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus84 = retryOnPrimaryException82.status();
        org.elasticsearch.index.shard.ShardId shardId85 = retryOnPrimaryException82.getShardId();
        org.elasticsearch.rest.RestStatus restStatus86 = retryOnPrimaryException82.status();
        java.lang.String str87 = retryOnPrimaryException82.getDetailedMessage();
        retryOnPrimaryException50.addSuppressed((java.lang.Throwable) retryOnPrimaryException82);
        java.lang.String str89 = retryOnPrimaryException50.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException91 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException50, streamOutput90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(index38);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str63, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNull(shardId81);
        org.junit.Assert.assertNotNull(throwable83);
        org.junit.Assert.assertEquals(throwable83.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable83.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable83.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertTrue("'" + restStatus84 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus84.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId85);
        org.junit.Assert.assertTrue("'" + restStatus86 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus86.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str87, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str89, "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6162");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "retry_on_primary_exception" + "'", str4, "retry_on_primary_exception");
    }

    @Test
    public void test6163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6163");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str19 = retryOnPrimaryException3.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.String str21 = retryOnPrimaryException3.toString();
        java.lang.Throwable throwable22 = retryOnPrimaryException3.unwrapCause();
        retryOnPrimaryException3.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", 1);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "RetryOnPrimaryException[]" + "'", str21, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "");
        org.junit.Assert.assertEquals(throwable22.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
    }

    @Test
    public void test6164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6164");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", throwable10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray17 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException12.setResources("retry_on_primary_exception", strArray17);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable throwable20 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException27.setResources("retry_on_primary_exception", strArray32);
        throwable20.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable20);
        java.lang.String str36 = retryOnPrimaryException35.getResourceType();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.Index index38 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable39 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "", throwable46);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "", (java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "RetryOnPrimaryException[retry_on_primary_exception]", (java.lang.Throwable) retryOnPrimaryException48);
        throwable39.addSuppressed((java.lang.Throwable) retryOnPrimaryException50);
        java.lang.String str52 = retryOnPrimaryException50.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray62 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException61);
        java.lang.String str63 = retryOnPrimaryException61.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException61);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        java.lang.Throwable throwable70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "", throwable70);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "", (java.lang.Throwable) retryOnPrimaryException71);
        java.lang.String[] strArray77 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException72.setResources("retry_on_primary_exception", strArray77);
        retryOnPrimaryException61.addHeader("", strArray77);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException80 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException61);
        org.elasticsearch.index.shard.ShardId shardId81 = retryOnPrimaryException61.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException82 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException61);
        java.lang.Throwable throwable83 = retryOnPrimaryException82.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus84 = retryOnPrimaryException82.status();
        org.elasticsearch.index.shard.ShardId shardId85 = retryOnPrimaryException82.getShardId();
        org.elasticsearch.rest.RestStatus restStatus86 = retryOnPrimaryException82.status();
        java.lang.String str87 = retryOnPrimaryException82.getDetailedMessage();
        retryOnPrimaryException50.addSuppressed((java.lang.Throwable) retryOnPrimaryException82);
        java.lang.String str89 = retryOnPrimaryException50.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray90 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException50);
        java.util.Set<java.lang.String> strSet91 = retryOnPrimaryException50.getHeaderKeys();
        java.lang.String str92 = retryOnPrimaryException50.getResourceType();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(index38);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str63, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNull(shardId81);
        org.junit.Assert.assertNotNull(throwable83);
        org.junit.Assert.assertEquals(throwable83.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable83.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable83.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertTrue("'" + restStatus84 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus84.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId85);
        org.junit.Assert.assertTrue("'" + restStatus86 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus86.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str87, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str89, "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray90);
        org.junit.Assert.assertNotNull(strSet91);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test6165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6165");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str6 = retryOnPrimaryException4.getDetailedMessage();
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException4.getHeader("[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]");
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException4.getResourceId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test6166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6166");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException5);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException5.getHeaderKeys();
        java.lang.Throwable[] throwableArray9 = retryOnPrimaryException5.getSuppressed();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException5.getHeader("[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId12 = retryOnPrimaryException5.getShardId();
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException5.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException16.guessRootCauses();
        retryOnPrimaryException5.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
    }

    @Test
    public void test6167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6167");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", throwable10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray17 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException12.setResources("retry_on_primary_exception", strArray17);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable throwable20 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException27.setResources("retry_on_primary_exception", strArray32);
        throwable20.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable20);
        java.lang.String str36 = retryOnPrimaryException35.getResourceType();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.Index index38 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable39 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "", throwable46);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "", (java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "RetryOnPrimaryException[retry_on_primary_exception]", (java.lang.Throwable) retryOnPrimaryException48);
        throwable39.addSuppressed((java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "hi!");
        retryOnPrimaryException54.setShard("retry_on_primary_exception", (int) (byte) 1);
        retryOnPrimaryException50.addSuppressed((java.lang.Throwable) retryOnPrimaryException54);
        java.lang.Throwable throwable59 = retryOnPrimaryException50.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray60 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder61 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params62 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder63 = retryOnPrimaryException50.toXContent(xContentBuilder61, params62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(index38);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertNotNull(throwable59);
        org.junit.Assert.assertEquals(throwable59.getLocalizedMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable59.getMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable59.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray60);
        org.junit.Assert.assertNotNull(params62);
    }

    @Test
    public void test6168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6168");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "RetryOnPrimaryException[retry_on_primary_exception]");
        java.lang.Throwable throwable19 = retryOnPrimaryException18.getRootCause();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", throwable26);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", (java.lang.Throwable) retryOnPrimaryException27);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException28.setResources("retry_on_primary_exception", strArray33);
        java.lang.String str35 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.Throwable throwable36 = retryOnPrimaryException28.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "", throwable41);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "", (java.lang.Throwable) retryOnPrimaryException42);
        java.lang.String[] strArray48 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException43.setResources("retry_on_primary_exception", strArray48);
        throwable36.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        java.lang.Throwable[] throwableArray51 = retryOnPrimaryException43.getSuppressed();
        org.elasticsearch.index.Index index52 = null;
        retryOnPrimaryException43.setIndex(index52);
        boolean boolean54 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException43);
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException43.getResourceId();
        retryOnPrimaryException18.addHeader("RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[];", strList55);
        java.lang.String str57 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException18);
        java.lang.String str58 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException18);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "retry_on_primary_exception" + "'", str35, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "retry_on_primary_exception" + "'", str57, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "retry_on_primary_exception" + "'", str58, "retry_on_primary_exception");
    }

    @Test
    public void test6169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6169");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("RetryOnPrimaryException[rest.exception.cause.skip]", (int) ' ');
        java.lang.String str20 = retryOnPrimaryException6.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Class<?> wildcardClass22 = elasticsearchExceptionArray21.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[RetryOnPrimaryException[rest.exception.cause.skip]][[RetryOnPrimaryException[rest.exception.cause.skip]][32]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str20, "[RetryOnPrimaryException[rest.exception.cause.skip]][[RetryOnPrimaryException[rest.exception.cause.skip]][32]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test6170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6170");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip");
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.Index index12 = retryOnPrimaryException10.getIndex();
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException10.getSuppressed();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(index12);
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test6171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6171");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", throwable13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        java.lang.String str18 = retryOnPrimaryException10.getResourceType();
        retryOnPrimaryException10.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (-1));
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException22.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test6172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6172");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable45);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "", (java.lang.Throwable) retryOnPrimaryException46);
        java.lang.String[] strArray52 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException47.setResources("retry_on_primary_exception", strArray52);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String[] strArray61 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException47.setResources("", strArray61);
        retryOnPrimaryException33.setResources("rest.exception.cause.skip", strArray61);
        retryOnPrimaryException16.addHeader("rest.exception.cause.skip", strArray61);
        java.lang.Throwable throwable65 = retryOnPrimaryException16.getRootCause();
        java.util.List<java.lang.String> strList67 = retryOnPrimaryException16.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.rest.RestStatus restStatus68 = retryOnPrimaryException16.status();
        java.util.List<java.lang.String> strList69 = retryOnPrimaryException16.getResourceId();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(throwable65);
        org.junit.Assert.assertEquals(throwable65.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable65.getMessage(), "");
        org.junit.Assert.assertEquals(throwable65.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertTrue("'" + restStatus68 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus68.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strList69);
    }

    @Test
    public void test6173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6173");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException6.getHeaderKeys();
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.util.Set<java.lang.String> strSet16 = retryOnPrimaryException6.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException6.getShardId();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(shardId17);
    }

    @Test
    public void test6174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6174");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str10 = retryOnPrimaryException5.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.Throwable throwable12 = retryOnPrimaryException11.unwrapCause();
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException11.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray22 = new java.lang.String[] {};
        retryOnPrimaryException19.setResources("", strArray22);
        org.elasticsearch.index.Index index24 = retryOnPrimaryException19.getIndex();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        java.lang.Throwable throwable30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", throwable30);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", (java.lang.Throwable) retryOnPrimaryException31);
        java.lang.String[] strArray37 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException32.setResources("retry_on_primary_exception", strArray37);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        java.lang.Throwable throwable44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "", throwable44);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "", (java.lang.Throwable) retryOnPrimaryException45);
        java.lang.String[] strArray51 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException46.setResources("retry_on_primary_exception", strArray51);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray53 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException46);
        java.lang.String[] strArray60 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException46.setResources("", strArray60);
        retryOnPrimaryException32.setResources("rest.exception.cause.skip", strArray60);
        retryOnPrimaryException19.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", strArray60);
        retryOnPrimaryException11.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray60);
        java.lang.String str65 = retryOnPrimaryException11.getDetailedMessage();
        java.lang.String str66 = retryOnPrimaryException11.getDetailedMessage();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[]" + "'", str10, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNull(index24);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray53);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str65, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str66, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6175");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.Throwable throwable5 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String[] strArray18 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException13.setResources("retry_on_primary_exception", strArray18);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", throwable26);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", (java.lang.Throwable) retryOnPrimaryException27);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException28.setResources("retry_on_primary_exception", strArray33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray42 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException28.setResources("", strArray42);
        retryOnPrimaryException13.addHeader("", strArray42);
        retryOnPrimaryException4.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray42);
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId47 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; [rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        java.lang.Throwable throwable53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "", throwable53);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", (java.lang.Throwable) retryOnPrimaryException54);
        java.lang.String[] strArray60 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException55.setResources("retry_on_primary_exception", strArray60);
        java.lang.String str62 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException55);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray63 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException55);
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException55);
        boolean boolean65 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException55);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException55);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray67 = retryOnPrimaryException55.guessRootCauses();
        boolean boolean68 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException55);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder69 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder71 = retryOnPrimaryException55.toXContent(xContentBuilder69, params70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "retry_on_primary_exception" + "'", str62, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test6176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6176");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str19 = retryOnPrimaryException3.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException3.getHeaderKeys();
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException3);
        java.util.List<java.lang.String> strList24 = retryOnPrimaryException3.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", throwable28);
        java.util.List<java.lang.String> strList31 = null;
        retryOnPrimaryException29.addHeader("retry_on_primary_exception", strList31);
        java.lang.Throwable throwable33 = retryOnPrimaryException29.unwrapCause();
        org.elasticsearch.index.Index index34 = null;
        retryOnPrimaryException29.setIndex(index34);
        java.lang.Throwable throwable36 = retryOnPrimaryException29.unwrapCause();
        java.lang.Throwable[] throwableArray37 = retryOnPrimaryException29.getSuppressed();
        org.elasticsearch.index.Index index38 = retryOnPrimaryException29.getIndex();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException43);
        java.lang.String[] strArray46 = new java.lang.String[] {};
        retryOnPrimaryException43.setResources("", strArray46);
        org.elasticsearch.index.Index index48 = retryOnPrimaryException43.getIndex();
        org.elasticsearch.index.Index index49 = retryOnPrimaryException43.getIndex();
        org.elasticsearch.index.shard.ShardId shardId50 = retryOnPrimaryException43.getShardId();
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException43.getResourceId();
        retryOnPrimaryException29.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList51);
        retryOnPrimaryException3.addHeader("[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList51);
        java.util.Set<java.lang.String> strSet54 = retryOnPrimaryException3.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId55 = retryOnPrimaryException3.getShardId();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "");
        org.junit.Assert.assertEquals(throwable33.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNull(index38);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNull(index48);
        org.junit.Assert.assertNull(index49);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNull(shardId55);
    }

    @Test
    public void test6177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6177");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", throwable19);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException21.setResources("retry_on_primary_exception", strArray26);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String[] strArray35 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException21.setResources("", strArray35);
        retryOnPrimaryException6.addHeader("", strArray35);
        org.elasticsearch.rest.RestStatus restStatus38 = retryOnPrimaryException6.status();
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput40 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException6.writeTo(streamOutput40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + restStatus38 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus38.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test6178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6178");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException26.setResources("retry_on_primary_exception", strArray31);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray40 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException26.setResources("", strArray40);
        retryOnPrimaryException11.addHeader("", strArray40);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray40);
        java.lang.String str44 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str46 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList48 = retryOnPrimaryException2.getHeader("[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str49 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];", (int) (short) 10);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", 0);
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable3.toString(), "[RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][0]] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str44, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "retry_on_primary_exception" + "'", str46, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "retry_on_primary_exception" + "'", str49, "retry_on_primary_exception");
    }

    @Test
    public void test6179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6179");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = retryOnPrimaryException8.toString();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException8.getSuppressed();
        java.lang.String str18 = retryOnPrimaryException8.getDetailedMessage();
        retryOnPrimaryException8.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.Throwable throwable21 = retryOnPrimaryException8.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str18, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "");
        org.junit.Assert.assertEquals(throwable21.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6180");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        retryOnPrimaryException3.setShard(shardId7);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = retryOnPrimaryException16.toString();
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable[] throwableArray25 = retryOnPrimaryException16.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException33.getResourceId();
        retryOnPrimaryException16.addHeader("retry_on_primary_exception", strList40);
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList40);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.String[] strArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException3.setResources("[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str23, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
    }

    @Test
    public void test6181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6181");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = retryOnPrimaryException6.toString();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException6.getSuppressed();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test6182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6182");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException6.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException6.setShard(shardId15);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException6.guessRootCauses();
        java.lang.String str19 = retryOnPrimaryException6.getResourceType();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
    }

    @Test
    public void test6183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6183");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.getResourceType();
        java.lang.Throwable throwable14 = retryOnPrimaryException6.unwrapCause();
        java.lang.String str15 = retryOnPrimaryException6.getResourceType();
        java.util.List<java.lang.String> strList17 = null;
        retryOnPrimaryException6.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [hi!][[hi!][10]] RetryOnPrimaryException[]][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [hi!][[hi!][10]] RetryOnPrimaryException[]][10]] RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList17);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
    }

    @Test
    public void test6184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6184");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = retryOnPrimaryException8.toString();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable17 = retryOnPrimaryException8.getRootCause();
        java.lang.Throwable[] throwableArray18 = throwable17.getSuppressed();
        java.lang.Throwable[] throwableArray19 = throwable17.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", throwable17);
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException20.getShardId();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
    }

    @Test
    public void test6185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6185");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        java.lang.Throwable throwable7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", throwable7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String[] strArray14 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException9.setResources("retry_on_primary_exception", strArray14);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", throwable27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException29.setResources("retry_on_primary_exception", strArray34);
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException29.getResourceId();
        retryOnPrimaryException21.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList36);
        retryOnPrimaryException9.addHeader("rest.exception.stacktrace.skip", strList36);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray40 = retryOnPrimaryException9.guessRootCauses();
        java.lang.String str41 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId42 = retryOnPrimaryException9.getShardId();
        java.lang.String str43 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "retry_on_primary_exception" + "'", str41, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str43, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
    }

    @Test
    public void test6186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6186");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        java.lang.Throwable throwable17 = retryOnPrimaryException6.getRootCause();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException26.setResources("retry_on_primary_exception", strArray31);
        java.lang.String str33 = retryOnPrimaryException26.toString();
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "", throwable40);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "", (java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId43 = retryOnPrimaryException42.getShardId();
        org.elasticsearch.rest.RestStatus restStatus44 = retryOnPrimaryException42.status();
        java.lang.String str45 = retryOnPrimaryException42.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        retryOnPrimaryException42.setShard(shardId46);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        java.lang.Throwable throwable53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "", throwable53);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", (java.lang.Throwable) retryOnPrimaryException54);
        org.elasticsearch.index.shard.ShardId shardId56 = retryOnPrimaryException55.getShardId();
        org.elasticsearch.rest.RestStatus restStatus57 = retryOnPrimaryException55.status();
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray64 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException63);
        java.lang.String str65 = retryOnPrimaryException63.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException63);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        java.lang.Throwable throwable72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "", throwable72);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "", (java.lang.Throwable) retryOnPrimaryException73);
        java.lang.String[] strArray79 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException74.setResources("retry_on_primary_exception", strArray79);
        retryOnPrimaryException63.addHeader("", strArray79);
        retryOnPrimaryException55.setResources("[hi!][[hi!][10]] RetryOnPrimaryException[]", strArray79);
        retryOnPrimaryException42.setResources("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray79);
        retryOnPrimaryException26.addHeader("RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];", strArray79);
        retryOnPrimaryException6.setResources("[][[][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray79);
        boolean boolean86 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str33, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertTrue("'" + restStatus44 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus44.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(shardId56);
        org.junit.Assert.assertTrue("'" + restStatus57 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus57.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str65, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test6187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6187");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        java.lang.String str14 = retryOnPrimaryException6.getResourceType();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException6.getHeader("hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException6.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", throwable22);
        java.util.List<java.lang.String> strList25 = null;
        retryOnPrimaryException23.addHeader("retry_on_primary_exception", strList25);
        java.lang.Throwable throwable27 = retryOnPrimaryException23.unwrapCause();
        org.elasticsearch.index.Index index28 = null;
        retryOnPrimaryException23.setIndex(index28);
        java.lang.Throwable throwable30 = retryOnPrimaryException23.unwrapCause();
        java.lang.Throwable[] throwableArray31 = retryOnPrimaryException23.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", throwable35);
        java.util.List<java.lang.String> strList38 = null;
        retryOnPrimaryException36.addHeader("retry_on_primary_exception", strList38);
        java.lang.Throwable throwable40 = retryOnPrimaryException36.unwrapCause();
        org.elasticsearch.index.Index index41 = null;
        retryOnPrimaryException36.setIndex(index41);
        java.lang.String str43 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", throwable47);
        java.util.List<java.lang.String> strList50 = null;
        retryOnPrimaryException48.addHeader("retry_on_primary_exception", strList50);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        retryOnPrimaryException48.setShard(shardId52);
        org.elasticsearch.index.shard.ShardId shardId54 = retryOnPrimaryException48.getShardId();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        java.lang.Throwable throwable60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "", throwable60);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "", (java.lang.Throwable) retryOnPrimaryException61);
        java.lang.String[] strArray67 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException62.setResources("retry_on_primary_exception", strArray67);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray69 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException62);
        java.lang.String[] strArray76 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException62.setResources("", strArray76);
        retryOnPrimaryException48.addHeader("", strArray76);
        retryOnPrimaryException36.addHeader("", strArray76);
        retryOnPrimaryException23.addHeader("[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray76);
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];", strArray76);
        java.lang.String str82 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str83 = retryOnPrimaryException6.getResourceType();
        java.util.Set<java.lang.String> strSet84 = retryOnPrimaryException6.getHeaderKeys();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder85 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params86 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder87 = retryOnPrimaryException6.toXContent(xContentBuilder85, params86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "");
        org.junit.Assert.assertEquals(throwable27.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "");
        org.junit.Assert.assertEquals(throwable30.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "");
        org.junit.Assert.assertEquals(throwable40.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "retry_on_primary_exception" + "'", str43, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId54);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray69);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "retry_on_primary_exception" + "'", str82, "retry_on_primary_exception");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertNotNull(params86);
    }

    @Test
    public void test6188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6188");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String str5 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String[] strArray18 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException13.setResources("retry_on_primary_exception", strArray18);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]", strArray18);
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "retry_on_primary_exception" + "'", str5, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test6189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6189");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("hi!", (int) (short) 10);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str18 = retryOnPrimaryException6.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        java.util.List<java.lang.String> strList26 = null;
        retryOnPrimaryException24.addHeader("retry_on_primary_exception", strList26);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        retryOnPrimaryException24.setShard(shardId28);
        org.elasticsearch.index.shard.ShardId shardId30 = retryOnPrimaryException24.getShardId();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", throwable36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException38.setResources("retry_on_primary_exception", strArray43);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException38);
        java.lang.String[] strArray52 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException38.setResources("", strArray52);
        retryOnPrimaryException24.addHeader("", strArray52);
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray52);
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        retryOnPrimaryException6.setShard(shardId56);
        java.util.List<java.lang.String> strList59 = retryOnPrimaryException6.getHeader("RetryOnPrimaryException[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ];");
        java.lang.Throwable[] throwableArray60 = retryOnPrimaryException6.getSuppressed();
        boolean boolean61 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.String str64 = retryOnPrimaryException6.getResourceType();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str18, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "retry_on_primary_exception" + "'", str64, "retry_on_primary_exception");
    }

    @Test
    public void test6190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6190");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.String str11 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.Index index12 = retryOnPrimaryException3.getIndex();
        java.lang.Throwable throwable13 = retryOnPrimaryException3.getRootCause();
        retryOnPrimaryException3.setShard("hi!", (int) (byte) 0);
        retryOnPrimaryException3.setIndex("");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "RetryOnPrimaryException[retry_on_primary_exception]");
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException22.getSuppressed();
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", throwable28);
        java.util.List<java.lang.String> strList31 = null;
        retryOnPrimaryException29.addHeader("retry_on_primary_exception", strList31);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.Throwable throwable34 = retryOnPrimaryException29.unwrapCause();
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException29.getResourceId();
        retryOnPrimaryException29.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str38 = retryOnPrimaryException29.getResourceType();
        java.lang.Throwable throwable39 = retryOnPrimaryException29.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable45);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "", (java.lang.Throwable) retryOnPrimaryException46);
        java.lang.String[] strArray52 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException47.setResources("retry_on_primary_exception", strArray52);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException47);
        retryOnPrimaryException47.setShard("hi!", (int) (short) 10);
        java.lang.String str58 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String str59 = retryOnPrimaryException47.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray60 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        java.lang.Throwable throwable64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "", throwable64);
        java.util.List<java.lang.String> strList67 = null;
        retryOnPrimaryException65.addHeader("retry_on_primary_exception", strList67);
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        retryOnPrimaryException65.setShard(shardId69);
        org.elasticsearch.index.shard.ShardId shardId71 = retryOnPrimaryException65.getShardId();
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.index.shard.ShardId shardId75 = null;
        java.lang.Throwable throwable77 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException78 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId75, "", throwable77);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId73, "", (java.lang.Throwable) retryOnPrimaryException78);
        java.lang.String[] strArray84 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException79.setResources("retry_on_primary_exception", strArray84);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray86 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException79);
        java.lang.String[] strArray93 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException79.setResources("", strArray93);
        retryOnPrimaryException65.addHeader("", strArray93);
        retryOnPrimaryException47.setResources("retry_on_primary_exception", strArray93);
        retryOnPrimaryException29.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray93);
        retryOnPrimaryException22.setResources("[[rest.exception.cause.skip] RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[[rest.exception.cause.skip] RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][100]] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray93);
        retryOnPrimaryException3.addHeader("[rest.exception.cause.skip] RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray93);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[][[][0]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "retry_on_primary_exception" + "'", str11, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "");
        org.junit.Assert.assertEquals(throwable13.toString(), "[][[][0]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "");
        org.junit.Assert.assertEquals(throwable34.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "");
        org.junit.Assert.assertEquals(throwable39.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "retry_on_primary_exception" + "'", str58, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str59, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray60);
        org.junit.Assert.assertNull(shardId71);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray86);
        org.junit.Assert.assertNotNull(strArray93);
    }

    @Test
    public void test6191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6191");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        retryOnPrimaryException5.setShard(shardId8);
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException5);
        retryOnPrimaryException5.setIndex("RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];");
        java.lang.String str13 = retryOnPrimaryException5.getDetailedMessage();
        java.lang.Throwable throwable14 = retryOnPrimaryException5.unwrapCause();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "[RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[]");
    }

    @Test
    public void test6192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6192");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException6.guessRootCauses();
        retryOnPrimaryException6.setIndex("");
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray12 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException6.guessRootCauses();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
    }

    @Test
    public void test6193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6193");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        retryOnPrimaryException6.setResources("rest.exception.cause.skip", strArray25);
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException6.status();
        retryOnPrimaryException6.setIndex("[hi!][[hi!][10]] RetryOnPrimaryException[]");
        java.lang.String str31 = retryOnPrimaryException6.toString();
        org.elasticsearch.rest.RestStatus restStatus32 = retryOnPrimaryException6.status();
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException6.getResourceId();
        retryOnPrimaryException6.setShard("[[hi!][[hi!][52]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[[hi!][[hi!][52]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][0]] RetryOnPrimaryException[[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]", (int) '4');
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str31, "[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus32 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus32.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strList33);
    }

    @Test
    public void test6194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6194");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[retry_on_primary_exception]", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", throwable16);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", (java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray25 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException33);
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException33);
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        retryOnPrimaryException33.setShard(shardId44);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        retryOnPrimaryException49.setShard("retry_on_primary_exception", (int) (byte) 1);
        java.lang.String str53 = retryOnPrimaryException49.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "", throwable57);
        java.util.List<java.lang.String> strList60 = null;
        retryOnPrimaryException58.addHeader("retry_on_primary_exception", strList60);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        retryOnPrimaryException58.setShard(shardId62);
        org.elasticsearch.index.shard.ShardId shardId64 = retryOnPrimaryException58.getShardId();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        java.lang.Throwable throwable70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "", throwable70);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "", (java.lang.Throwable) retryOnPrimaryException71);
        java.lang.String[] strArray77 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException72.setResources("retry_on_primary_exception", strArray77);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray79 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException72);
        java.lang.String[] strArray86 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException72.setResources("", strArray86);
        retryOnPrimaryException58.addHeader("", strArray86);
        retryOnPrimaryException49.setResources("hi!", strArray86);
        retryOnPrimaryException33.setResources("hi!", strArray86);
        retryOnPrimaryException22.addHeader("", strArray86);
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray86);
        java.lang.String str93 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId94 = retryOnPrimaryException8.getShardId();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder95 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params96 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder97 = retryOnPrimaryException8.toXContent(xContentBuilder95, params96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray25);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str53, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(shardId64);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray79);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "retry_on_primary_exception" + "'", str93, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId94);
        org.junit.Assert.assertNotNull(params96);
    }

    @Test
    public void test6195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6195");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str11 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException9);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable17 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str11, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
    }

    @Test
    public void test6196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6196");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        java.lang.String str14 = retryOnPrimaryException6.getResourceType();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException6.getHeader("hi!");
        java.lang.String str17 = retryOnPrimaryException6.getResourceType();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test6197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6197");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable18 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException25.setResources("retry_on_primary_exception", strArray30);
        throwable18.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String str34 = retryOnPrimaryException25.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException38.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 1);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable45);
        java.util.List<java.lang.String> strList48 = null;
        retryOnPrimaryException46.addHeader("retry_on_primary_exception", strList48);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        retryOnPrimaryException46.setShard(shardId50);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "", throwable57);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "", (java.lang.Throwable) retryOnPrimaryException58);
        java.lang.String[] strArray64 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException59.setResources("retry_on_primary_exception", strArray64);
        java.lang.String str66 = retryOnPrimaryException59.toString();
        boolean boolean67 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException59);
        java.lang.Throwable[] throwableArray68 = retryOnPrimaryException59.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        java.lang.Throwable throwable74 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "", throwable74);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "", (java.lang.Throwable) retryOnPrimaryException75);
        java.lang.String[] strArray81 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException76.setResources("retry_on_primary_exception", strArray81);
        java.util.List<java.lang.String> strList83 = retryOnPrimaryException76.getResourceId();
        retryOnPrimaryException59.addHeader("retry_on_primary_exception", strList83);
        retryOnPrimaryException46.addHeader("retry_on_primary_exception", strList83);
        retryOnPrimaryException38.addHeader("", strList83);
        retryOnPrimaryException25.addHeader("hi!", strList83);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray88 = retryOnPrimaryException25.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException89 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException25);
        retryOnPrimaryException89.setIndex("[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.String str92 = retryOnPrimaryException89.getResourceType();
        retryOnPrimaryException89.setIndex("RetryOnPrimaryException[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ];");
        java.lang.String str95 = retryOnPrimaryException89.getResourceType();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str34, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str66, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray88);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test6198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6198");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", throwable10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray17 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException12.setResources("retry_on_primary_exception", strArray17);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable throwable20 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException27.setResources("retry_on_primary_exception", strArray32);
        throwable20.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable20);
        java.lang.String str36 = retryOnPrimaryException35.getResourceType();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        retryOnPrimaryException2.setIndex("[hi!][[hi!][10]] RetryOnPrimaryException[]");
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) ' ');
        java.util.List<java.lang.String> strList43 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList45 = retryOnPrimaryException2.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str46 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable throwable48 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder49 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder51 = retryOnPrimaryException2.toXContent(xContentBuilder49, params50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][32]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str46, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwable48);
        org.junit.Assert.assertEquals(throwable48.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable48.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable48.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][32]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test6199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6199");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = retryOnPrimaryException6.toString();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable17 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException6.status();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException6.writeTo(streamOutput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6200");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException3.getHeaderKeys();
        java.lang.Class<?> wildcardClass5 = retryOnPrimaryException3.getClass();
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test6201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6201");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        retryOnPrimaryException3.setShard(shardId7);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        retryOnPrimaryException3.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray21);
        org.elasticsearch.index.Index index24 = retryOnPrimaryException3.getIndex();
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        retryOnPrimaryException3.setShard(shardId26);
        java.lang.String str28 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder29 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params30 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder31 = retryOnPrimaryException3.toXContent(xContentBuilder29, params30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNull(index24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "retry_on_primary_exception" + "'", str28, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(params30);
    }

    @Test
    public void test6202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6202");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException6.guessRootCauses();
        retryOnPrimaryException6.setShard("hi!", (int) (byte) -1);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException6.getHeaderKeys();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException6.getHeader("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        java.util.List<java.lang.String> strList23 = null;
        retryOnPrimaryException21.addHeader("retry_on_primary_exception", strList23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        retryOnPrimaryException21.setShard(shardId25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", (java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException31);
        java.lang.String[] strArray34 = new java.lang.String[] {};
        retryOnPrimaryException31.setResources("", strArray34);
        retryOnPrimaryException21.addHeader("[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray34);
        retryOnPrimaryException6.setResources("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray34);
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException6.getResourceId();
        java.lang.Class<?> wildcardClass39 = retryOnPrimaryException6.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test6203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6203");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException6.getHeader("[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.Throwable throwable17 = retryOnPrimaryException6.getRootCause();
        java.lang.Throwable throwable18 = retryOnPrimaryException6.getRootCause();
        retryOnPrimaryException6.setShard("[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (int) (byte) 100);
        java.lang.String str22 = retryOnPrimaryException6.getResourceType();
        java.lang.String str23 = retryOnPrimaryException6.getDetailedMessage();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str23, "[[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6204");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable[] throwableArray20 = retryOnPrimaryException10.getSuppressed();
        retryOnPrimaryException10.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]");
        org.elasticsearch.index.shard.ShardId shardId23 = retryOnPrimaryException10.getShardId();
        java.lang.Throwable throwable24 = retryOnPrimaryException10.getRootCause();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6205");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = retryOnPrimaryException6.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException6.getResourceId();
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException21 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException6, streamOutput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test6206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6206");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException23.getResourceId();
        retryOnPrimaryException6.addHeader("retry_on_primary_exception", strList30);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", throwable35);
        java.util.List<java.lang.String> strList38 = null;
        retryOnPrimaryException36.addHeader("retry_on_primary_exception", strList38);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        retryOnPrimaryException36.setShard(shardId40);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", throwable47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", (java.lang.Throwable) retryOnPrimaryException48);
        java.lang.String[] strArray54 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException49.setResources("retry_on_primary_exception", strArray54);
        java.lang.String str56 = retryOnPrimaryException49.toString();
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.Throwable[] throwableArray58 = retryOnPrimaryException49.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        java.lang.Throwable throwable64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "", throwable64);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "", (java.lang.Throwable) retryOnPrimaryException65);
        java.lang.String[] strArray71 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException66.setResources("retry_on_primary_exception", strArray71);
        java.util.List<java.lang.String> strList73 = retryOnPrimaryException66.getResourceId();
        retryOnPrimaryException49.addHeader("retry_on_primary_exception", strList73);
        retryOnPrimaryException36.addHeader("retry_on_primary_exception", strList73);
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList73);
        java.util.Set<java.lang.String> strSet77 = retryOnPrimaryException6.getHeaderKeys();
        java.lang.String str78 = retryOnPrimaryException6.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus79 = retryOnPrimaryException6.status();
        java.lang.Throwable throwable80 = retryOnPrimaryException6.getRootCause();
        java.lang.Throwable throwable81 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder82 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params83 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder84 = retryOnPrimaryException6.toXContent(xContentBuilder82, params83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str56, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "retry_on_primary_exception" + "'", str78, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus79 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus79.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable80);
        org.junit.Assert.assertEquals(throwable80.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable80.getMessage(), "");
        org.junit.Assert.assertEquals(throwable80.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable81);
        org.junit.Assert.assertEquals(throwable81.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable81.getMessage(), "");
        org.junit.Assert.assertEquals(throwable81.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(params83);
    }

    @Test
    public void test6207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6207");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable19 = retryOnPrimaryException11.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "RetryOnPrimaryException[retry_on_primary_exception]", throwable19);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException20.getHeader("");
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException20.status();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6208");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder3 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params4 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder5 = retryOnPrimaryException2.toXContent(xContentBuilder3, params4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params4);
    }

    @Test
    public void test6209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6209");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable14 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", throwable19);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException21.setResources("retry_on_primary_exception", strArray26);
        throwable14.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String str29 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException21);
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException21.getHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput32 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException21.writeTo(streamOutput32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "retry_on_primary_exception" + "'", str29, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList31);
    }

    @Test
    public void test6210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6210");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException25.setResources("retry_on_primary_exception", strArray30);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException25);
        retryOnPrimaryException25.setShard("hi!", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray40 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException39);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        retryOnPrimaryException39.setResources("", strArray42);
        retryOnPrimaryException25.addHeader("retry_on_primary_exception", strArray42);
        retryOnPrimaryException16.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray42);
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test6211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6211");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = retryOnPrimaryException8.toString();
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException8.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException8);
        retryOnPrimaryException17.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException17.status();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6212");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]", throwable2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", throwable22);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", throwable29);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", (java.lang.Throwable) retryOnPrimaryException30);
        java.lang.String[] strArray36 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException31.setResources("retry_on_primary_exception", strArray36);
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException31.getResourceId();
        retryOnPrimaryException23.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList38);
        retryOnPrimaryException11.addHeader("rest.exception.stacktrace.skip", strList38);
        retryOnPrimaryException3.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strList38);
        java.util.List<java.lang.String> strList43 = retryOnPrimaryException3.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str44 = retryOnPrimaryException3.getDetailedMessage();
        retryOnPrimaryException3.setIndex("[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.List<java.lang.String> strList48 = retryOnPrimaryException3.getHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        retryOnPrimaryException3.setShard("[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]", (-1));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]" + "'", str44, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList48);
    }

    @Test
    public void test6213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6213");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        retryOnPrimaryException12.setResources("", strArray15);
        org.elasticsearch.index.Index index17 = retryOnPrimaryException12.getIndex();
        org.elasticsearch.index.Index index18 = retryOnPrimaryException12.getIndex();
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException12.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        retryOnPrimaryException12.setShard(shardId21);
        java.lang.Throwable throwable23 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", throwable27);
        java.util.List<java.lang.String> strList30 = null;
        retryOnPrimaryException28.addHeader("retry_on_primary_exception", strList30);
        java.lang.Throwable throwable32 = retryOnPrimaryException28.unwrapCause();
        org.elasticsearch.index.Index index33 = null;
        retryOnPrimaryException28.setIndex(index33);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "", throwable39);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "", (java.lang.Throwable) retryOnPrimaryException40);
        java.lang.String[] strArray46 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException41.setResources("retry_on_primary_exception", strArray46);
        java.lang.String str48 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException41);
        retryOnPrimaryException28.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        java.lang.Throwable throwable55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "", throwable55);
        java.util.List<java.lang.String> strList58 = null;
        retryOnPrimaryException56.addHeader("retry_on_primary_exception", strList58);
        java.lang.Throwable throwable60 = retryOnPrimaryException56.unwrapCause();
        org.elasticsearch.index.Index index61 = null;
        retryOnPrimaryException56.setIndex(index61);
        retryOnPrimaryException56.setShard("hi!", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray70 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException69);
        java.lang.String[] strArray72 = new java.lang.String[] {};
        retryOnPrimaryException69.setResources("", strArray72);
        retryOnPrimaryException56.addHeader("", strArray72);
        retryOnPrimaryException28.addHeader("", strArray72);
        retryOnPrimaryException12.addHeader("[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray72);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException12.setIndex("[[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.List<java.lang.String> strList81 = retryOnPrimaryException12.getHeader("[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str7, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNull(index17);
        org.junit.Assert.assertNull(index18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "[[[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "retry_on_primary_exception" + "'", str48, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(throwable60);
        org.junit.Assert.assertEquals(throwable60.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable60.getMessage(), "");
        org.junit.Assert.assertEquals(throwable60.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNull(strList81);
    }

    @Test
    public void test6214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6214");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException26.setResources("retry_on_primary_exception", strArray31);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray40 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException26.setResources("", strArray40);
        retryOnPrimaryException11.addHeader("", strArray40);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray40);
        java.lang.String str44 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable46 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException48 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str44, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
    }

    @Test
    public void test6215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6215");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", (java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String[] strArray27 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException22.setResources("retry_on_primary_exception", strArray27);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray29 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray36 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException22.setResources("", strArray36);
        java.lang.Throwable[] throwableArray38 = retryOnPrimaryException22.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus39 = retryOnPrimaryException22.status();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.Throwable throwable41 = retryOnPrimaryException6.unwrapCause();
        java.lang.Throwable throwable42 = retryOnPrimaryException6.getRootCause();
        java.util.Set<java.lang.String> strSet43 = retryOnPrimaryException6.getHeaderKeys();
        retryOnPrimaryException6.setIndex("[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", throwable51);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", (java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String[] strArray58 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException53.setResources("retry_on_primary_exception", strArray58);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        java.lang.Throwable throwable65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "", throwable65);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "", (java.lang.Throwable) retryOnPrimaryException66);
        java.lang.String[] strArray72 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException67.setResources("retry_on_primary_exception", strArray72);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray74 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException67);
        java.lang.String[] strArray81 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException67.setResources("", strArray81);
        retryOnPrimaryException53.setResources("rest.exception.cause.skip", strArray81);
        retryOnPrimaryException6.addHeader("[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray81);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray29);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertTrue("'" + restStatus39 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus39.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "");
        org.junit.Assert.assertEquals(throwable41.toString(), "[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray74);
        org.junit.Assert.assertNotNull(strArray81);
    }

    @Test
    public void test6216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6216");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable[] throwableArray3 = retryOnPrimaryException2.getSuppressed();
        boolean boolean4 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test6217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6217");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", (java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String[] strArray27 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException22.setResources("retry_on_primary_exception", strArray27);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray29 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray36 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException22.setResources("", strArray36);
        java.lang.Throwable[] throwableArray38 = retryOnPrimaryException22.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus39 = retryOnPrimaryException22.status();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str43 = retryOnPrimaryException22.toString();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray29);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertTrue("'" + restStatus39 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus39.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str43, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6218");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable18 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException25.setResources("retry_on_primary_exception", strArray30);
        throwable18.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId35 = retryOnPrimaryException33.getShardId();
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException33);
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException33.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = retryOnPrimaryException33.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId40 = retryOnPrimaryException33.getShardId();
        org.elasticsearch.index.shard.ShardId shardId41 = retryOnPrimaryException33.getShardId();
        org.elasticsearch.index.Index index42 = retryOnPrimaryException33.getIndex();
        org.elasticsearch.index.Index index43 = retryOnPrimaryException33.getIndex();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNull(index42);
        org.junit.Assert.assertNull(index43);
    }

    @Test
    public void test6219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6219");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        retryOnPrimaryException3.setShard("hi!", (int) (short) 10);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException3.getResourceId();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException3.getHeaderKeys();
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.String str16 = retryOnPrimaryException3.getDetailedMessage();
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException3.getHeaderKeys();
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException3.getSuppressed();
        java.lang.Throwable throwable19 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable19);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str16, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
    }

    @Test
    public void test6220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6220");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        java.lang.Throwable throwable7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", throwable7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String[] strArray14 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException9.setResources("retry_on_primary_exception", strArray14);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", throwable27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException29.setResources("retry_on_primary_exception", strArray34);
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException29.getResourceId();
        retryOnPrimaryException21.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList36);
        retryOnPrimaryException9.addHeader("rest.exception.stacktrace.skip", strList36);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException9.getResourceId();
        java.util.Set<java.lang.String> strSet41 = retryOnPrimaryException9.getHeaderKeys();
        java.lang.Throwable throwable42 = retryOnPrimaryException9.getRootCause();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6221");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str19 = retryOnPrimaryException10.getResourceType();
        retryOnPrimaryException10.setShard("retry_on_primary_exception", (int) (byte) 100);
        org.elasticsearch.rest.RestStatus restStatus23 = retryOnPrimaryException10.status();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus23 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus23.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6222");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[retry_on_primary_exception]", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", throwable16);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", (java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray25 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException33);
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException33);
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        retryOnPrimaryException33.setShard(shardId44);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        retryOnPrimaryException49.setShard("retry_on_primary_exception", (int) (byte) 1);
        java.lang.String str53 = retryOnPrimaryException49.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "", throwable57);
        java.util.List<java.lang.String> strList60 = null;
        retryOnPrimaryException58.addHeader("retry_on_primary_exception", strList60);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        retryOnPrimaryException58.setShard(shardId62);
        org.elasticsearch.index.shard.ShardId shardId64 = retryOnPrimaryException58.getShardId();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        java.lang.Throwable throwable70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "", throwable70);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "", (java.lang.Throwable) retryOnPrimaryException71);
        java.lang.String[] strArray77 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException72.setResources("retry_on_primary_exception", strArray77);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray79 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException72);
        java.lang.String[] strArray86 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException72.setResources("", strArray86);
        retryOnPrimaryException58.addHeader("", strArray86);
        retryOnPrimaryException49.setResources("hi!", strArray86);
        retryOnPrimaryException33.setResources("hi!", strArray86);
        retryOnPrimaryException22.addHeader("", strArray86);
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray86);
        org.elasticsearch.common.io.stream.StreamInput streamInput93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException94 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException8, streamInput93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray25);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str53, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(shardId64);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray79);
        org.junit.Assert.assertNotNull(strArray86);
    }

    @Test
    public void test6223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6223");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[retry_on_primary_exception]");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]");
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test6224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6224");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.String str8 = retryOnPrimaryException3.toString();
        java.lang.String str9 = retryOnPrimaryException3.getDetailedMessage();
        java.lang.Throwable throwable10 = retryOnPrimaryException3.unwrapCause();
        java.lang.Class<?> wildcardClass11 = throwable10.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "RetryOnPrimaryException[]" + "'", str8, "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test6225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6225");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str22 = retryOnPrimaryException21.toString();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException33);
        java.lang.Throwable throwable41 = retryOnPrimaryException33.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "", throwable46);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "", (java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String[] strArray53 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException48.setResources("retry_on_primary_exception", strArray53);
        throwable41.addSuppressed((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable41);
        java.lang.String str57 = retryOnPrimaryException56.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus58 = retryOnPrimaryException56.status();
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        java.lang.Throwable throwable65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "", throwable65);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "", (java.lang.Throwable) retryOnPrimaryException66);
        java.lang.String[] strArray72 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException67.setResources("retry_on_primary_exception", strArray72);
        java.lang.String str74 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException67);
        java.lang.Throwable throwable75 = retryOnPrimaryException67.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId76 = null;
        org.elasticsearch.index.shard.ShardId shardId78 = null;
        java.lang.Throwable throwable80 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException81 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId78, "", throwable80);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException82 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId76, "", (java.lang.Throwable) retryOnPrimaryException81);
        java.lang.String[] strArray87 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException82.setResources("retry_on_primary_exception", strArray87);
        throwable75.addSuppressed((java.lang.Throwable) retryOnPrimaryException82);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException90 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable75);
        retryOnPrimaryException56.addSuppressed(throwable75);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException92 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable75);
        retryOnPrimaryException21.addSuppressed(throwable75);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException94 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId95 = retryOnPrimaryException21.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray96 = retryOnPrimaryException21.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId97 = retryOnPrimaryException21.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray98 = retryOnPrimaryException21.guessRootCauses();
        java.util.List<java.lang.String> strList99 = retryOnPrimaryException21.getResourceId();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str22, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "");
        org.junit.Assert.assertEquals(throwable41.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + restStatus58 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus58.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "retry_on_primary_exception" + "'", str74, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable75);
        org.junit.Assert.assertEquals(throwable75.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable75.getMessage(), "");
        org.junit.Assert.assertEquals(throwable75.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNull(shardId95);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray96);
        org.junit.Assert.assertNull(shardId97);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray98);
        org.junit.Assert.assertNull(strList99);
    }

    @Test
    public void test6226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6226");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNull(shardId6);
    }

    @Test
    public void test6227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6227");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String[] strArray20 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException6.setResources("", strArray20);
        retryOnPrimaryException6.setShard("", (int) (short) -1);
        java.lang.String str25 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", (int) (short) 0);
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "retry_on_primary_exception" + "'", str25, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test6228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6228");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable14 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", throwable19);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException21.setResources("retry_on_primary_exception", strArray26);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String[] strArray35 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException21.setResources("", strArray35);
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) '#');
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        retryOnPrimaryException21.setShard(shardId41);
        java.lang.String str43 = retryOnPrimaryException21.getResourceType();
        throwable14.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = retryOnPrimaryException21.guessRootCauses();
        retryOnPrimaryException21.setShard("RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];", (-1));
        java.lang.String str49 = retryOnPrimaryException21.getDetailedMessage();
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException21);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str49, "[RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test6229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6229");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable18 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException25.setResources("retry_on_primary_exception", strArray30);
        throwable18.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String str34 = retryOnPrimaryException25.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException38.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 1);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable45);
        java.util.List<java.lang.String> strList48 = null;
        retryOnPrimaryException46.addHeader("retry_on_primary_exception", strList48);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        retryOnPrimaryException46.setShard(shardId50);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "", throwable57);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "", (java.lang.Throwable) retryOnPrimaryException58);
        java.lang.String[] strArray64 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException59.setResources("retry_on_primary_exception", strArray64);
        java.lang.String str66 = retryOnPrimaryException59.toString();
        boolean boolean67 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException59);
        java.lang.Throwable[] throwableArray68 = retryOnPrimaryException59.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        java.lang.Throwable throwable74 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "", throwable74);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "", (java.lang.Throwable) retryOnPrimaryException75);
        java.lang.String[] strArray81 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException76.setResources("retry_on_primary_exception", strArray81);
        java.util.List<java.lang.String> strList83 = retryOnPrimaryException76.getResourceId();
        retryOnPrimaryException59.addHeader("retry_on_primary_exception", strList83);
        retryOnPrimaryException46.addHeader("retry_on_primary_exception", strList83);
        retryOnPrimaryException38.addHeader("", strList83);
        retryOnPrimaryException25.addHeader("hi!", strList83);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException88 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.common.io.stream.StreamInput streamInput89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException90 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException25, streamInput89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str34, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str66, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strList83);
    }

    @Test
    public void test6230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6230");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        retryOnPrimaryException6.setResources("rest.exception.cause.skip", strArray25);
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException6.status();
        retryOnPrimaryException6.setIndex("[hi!][[hi!][10]] RetryOnPrimaryException[]");
        java.lang.String str31 = retryOnPrimaryException6.toString();
        java.util.Set<java.lang.String> strSet32 = retryOnPrimaryException6.getHeaderKeys();
        java.lang.Throwable throwable33 = retryOnPrimaryException6.getRootCause();
        java.util.List<java.lang.String> strList34 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId35 = retryOnPrimaryException6.getShardId();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str31, "[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "");
        org.junit.Assert.assertEquals(throwable33.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(shardId35);
    }

    @Test
    public void test6231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6231");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        java.lang.Throwable throwable7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", throwable7);
        java.util.List<java.lang.String> strList10 = null;
        retryOnPrimaryException8.addHeader("retry_on_primary_exception", strList10);
        java.lang.Throwable throwable12 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.index.Index index13 = null;
        retryOnPrimaryException8.setIndex(index13);
        java.lang.Throwable throwable15 = retryOnPrimaryException8.unwrapCause();
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException8.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        java.util.List<java.lang.String> strList23 = null;
        retryOnPrimaryException21.addHeader("retry_on_primary_exception", strList23);
        java.lang.Throwable throwable25 = retryOnPrimaryException21.unwrapCause();
        org.elasticsearch.index.Index index26 = null;
        retryOnPrimaryException21.setIndex(index26);
        java.lang.String str28 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", throwable32);
        java.util.List<java.lang.String> strList35 = null;
        retryOnPrimaryException33.addHeader("retry_on_primary_exception", strList35);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        retryOnPrimaryException33.setShard(shardId37);
        org.elasticsearch.index.shard.ShardId shardId39 = retryOnPrimaryException33.getShardId();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable45);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "", (java.lang.Throwable) retryOnPrimaryException46);
        java.lang.String[] strArray52 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException47.setResources("retry_on_primary_exception", strArray52);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String[] strArray61 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException47.setResources("", strArray61);
        retryOnPrimaryException33.addHeader("", strArray61);
        retryOnPrimaryException21.addHeader("", strArray61);
        retryOnPrimaryException8.addHeader("[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray61);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strArray61);
        java.lang.String str67 = retryOnPrimaryException2.getResourceType();
        boolean boolean68 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index69 = retryOnPrimaryException2.getIndex();
        java.lang.String str70 = retryOnPrimaryException2.toString();
        java.lang.Class<?> wildcardClass71 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "");
        org.junit.Assert.assertEquals(throwable25.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "retry_on_primary_exception" + "'", str28, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(index69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]" + "'", str70, "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test6232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6232");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray3 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6233");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray3 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray3);
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test6234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6234");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test6235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6235");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("hi!", (int) (short) 10);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str18 = retryOnPrimaryException6.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = retryOnPrimaryException6.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException6.status();
        retryOnPrimaryException6.setShard("[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (short) 1);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str18, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6236");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException25.setResources("retry_on_primary_exception", strArray30);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String[] strArray39 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException25.setResources("", strArray39);
        retryOnPrimaryException10.addHeader("", strArray39);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable44 = retryOnPrimaryException10.unwrapCause();
        java.lang.String str45 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder47 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params48 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder49 = retryOnPrimaryException10.toXContent(xContentBuilder47, params48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "retry_on_primary_exception" + "'", str45, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(params48);
    }

    @Test
    public void test6237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6237");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException26.setResources("retry_on_primary_exception", strArray31);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray40 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException26.setResources("", strArray40);
        retryOnPrimaryException11.addHeader("", strArray40);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray40);
        java.lang.String str44 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str46 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", throwable52);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "", (java.lang.Throwable) retryOnPrimaryException53);
        java.lang.String[] strArray59 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException54.setResources("retry_on_primary_exception", strArray59);
        java.lang.String str61 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException54);
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        java.lang.Throwable throwable65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "", throwable65);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        java.lang.Throwable throwable72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "", throwable72);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "", (java.lang.Throwable) retryOnPrimaryException73);
        java.lang.String[] strArray79 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException74.setResources("retry_on_primary_exception", strArray79);
        java.util.List<java.lang.String> strList81 = retryOnPrimaryException74.getResourceId();
        retryOnPrimaryException66.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList81);
        retryOnPrimaryException54.addHeader("rest.exception.stacktrace.skip", strList81);
        retryOnPrimaryException2.addHeader("rest.exception.stacktrace.skip", strList81);
        java.lang.Throwable throwable85 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId86 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.rest.RestStatus restStatus87 = retryOnPrimaryException2.status();
        java.lang.String str88 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str44, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str46, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "retry_on_primary_exception" + "'", str61, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(throwable85);
        org.junit.Assert.assertEquals(throwable85.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable85.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable85.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(shardId86);
        org.junit.Assert.assertTrue("'" + restStatus87 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus87.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str88, "RetryOnPrimaryException[retry_on_primary_exception]");
    }

    @Test
    public void test6238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6238");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.util.Set<java.lang.String> strSet16 = retryOnPrimaryException6.getHeaderKeys();
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException6.status();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        java.lang.Throwable throwable30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", throwable30);
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException31);
        retryOnPrimaryException27.addSuppressed((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "", throwable39);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "", (java.lang.Throwable) retryOnPrimaryException40);
        java.lang.String[] strArray46 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException41.setResources("retry_on_primary_exception", strArray46);
        retryOnPrimaryException27.setResources("rest.exception.cause.skip", strArray46);
        java.lang.Throwable throwable49 = retryOnPrimaryException27.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.index.shard.ShardId shardId51 = retryOnPrimaryException50.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray52 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException50);
        retryOnPrimaryException50.setShard("[][[][-1]] RetryOnPrimaryException[]", (int) (byte) -1);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException50);
        java.util.Set<java.lang.String> strSet57 = retryOnPrimaryException50.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "");
        org.junit.Assert.assertEquals(throwable49.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(shardId51);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray52);
        org.junit.Assert.assertNotNull(strSet57);
    }

    @Test
    public void test6239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6239");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = retryOnPrimaryException6.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId18 = retryOnPrimaryException6.getShardId();
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException6.status();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6240");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String[] strArray7 = new java.lang.String[] {};
        retryOnPrimaryException4.setResources("", strArray7);
        org.elasticsearch.index.Index index9 = retryOnPrimaryException4.getIndex();
        org.elasticsearch.index.Index index10 = retryOnPrimaryException4.getIndex();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException4.getHeader("RetryOnPrimaryException[]");
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException4.setIndex(index16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str19 = retryOnPrimaryException4.toString();
        java.lang.String str20 = retryOnPrimaryException4.getDetailedMessage();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertNull(index10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]" + "'", str19, "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str20, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
    }

    @Test
    public void test6241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6241");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = retryOnPrimaryException6.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str18 = retryOnPrimaryException6.toString();
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException6.getHeader("[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException6.writeTo(streamOutput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str18, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(strList20);
    }

    @Test
    public void test6242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6242");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str10 = retryOnPrimaryException8.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", throwable17);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", (java.lang.Throwable) retryOnPrimaryException18);
        java.lang.String[] strArray24 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException19.setResources("retry_on_primary_exception", strArray24);
        retryOnPrimaryException8.addHeader("", strArray24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId28 = retryOnPrimaryException8.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException29);
        java.util.Set<java.lang.String> strSet31 = retryOnPrimaryException29.getHeaderKeys();
        retryOnPrimaryException29.setShard("[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (int) '#');
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException29.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "", throwable40);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray42 = retryOnPrimaryException41.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId43 = retryOnPrimaryException41.getShardId();
        java.util.Set<java.lang.String> strSet44 = retryOnPrimaryException41.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        java.lang.Throwable throwable49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", throwable49);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", (java.lang.Throwable) retryOnPrimaryException50);
        java.lang.String[] strArray56 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException51.setResources("retry_on_primary_exception", strArray56);
        java.util.List<java.lang.String> strList58 = retryOnPrimaryException51.getResourceId();
        retryOnPrimaryException51.setIndex("rest.exception.cause.skip");
        java.lang.String str61 = retryOnPrimaryException51.toString();
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException51);
        org.elasticsearch.index.shard.ShardId shardId63 = retryOnPrimaryException51.getShardId();
        java.util.List<java.lang.String> strList64 = retryOnPrimaryException51.getResourceId();
        retryOnPrimaryException29.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[retry_on_primary_exception]][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[retry_on_primary_exception]][0]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList64);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder66 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params67 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder68 = retryOnPrimaryException29.toXContent(xContentBuilder66, params67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray42);
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str61, "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(shardId63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(params67);
    }

    @Test
    public void test6243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6243");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("hi!", (int) (short) 10);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str18 = retryOnPrimaryException6.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = retryOnPrimaryException6.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException6.status();
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException6.getResourceId();
        java.lang.Throwable throwable22 = retryOnPrimaryException6.unwrapCause();
        java.util.List<java.lang.String> strList24 = retryOnPrimaryException6.getHeader("[] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str18, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "");
        org.junit.Assert.assertEquals(throwable22.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test6244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6244");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        java.lang.Throwable throwable9 = retryOnPrimaryException5.unwrapCause();
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException5.setIndex(index10);
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException5);
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException5.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException5.status();
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6245");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        java.util.List<java.lang.String> strList11 = null;
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", strList11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException9.setShard(shardId13);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        retryOnPrimaryException15.setIndex("rest.exception.stacktrace.skip");
        java.lang.Throwable throwable18 = retryOnPrimaryException15.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.Throwable[] throwableArray20 = retryOnPrimaryException19.getSuppressed();
        java.lang.String str21 = retryOnPrimaryException19.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; [rest.exception.stacktrace.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str21, "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; [rest.exception.stacktrace.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6246");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray3 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        retryOnPrimaryException2.setResources("", strArray5);
        java.lang.String str7 = retryOnPrimaryException2.toString();
        java.lang.Throwable[] throwableArray8 = retryOnPrimaryException2.getSuppressed();
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (short) 1);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String str19 = retryOnPrimaryException17.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", throwable29);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", (java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException30);
        java.lang.String str33 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.Index index34 = retryOnPrimaryException30.getIndex();
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "", throwable41);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "", (java.lang.Throwable) retryOnPrimaryException42);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "", throwable46);
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException47);
        retryOnPrimaryException43.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        java.lang.Throwable throwable55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "", throwable55);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "", (java.lang.Throwable) retryOnPrimaryException56);
        java.lang.String[] strArray62 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException57.setResources("retry_on_primary_exception", strArray62);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        java.lang.Throwable throwable69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "", throwable69);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "", (java.lang.Throwable) retryOnPrimaryException70);
        java.lang.String[] strArray76 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException71.setResources("retry_on_primary_exception", strArray76);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray78 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException71);
        java.lang.String[] strArray85 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException71.setResources("", strArray85);
        retryOnPrimaryException57.setResources("rest.exception.cause.skip", strArray85);
        retryOnPrimaryException43.addHeader("hi!", strArray85);
        retryOnPrimaryException30.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray85);
        retryOnPrimaryException17.addHeader("[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]][[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray85);
        retryOnPrimaryException2.setResources("", strArray85);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]" + "'", str7, "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str19, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "retry_on_primary_exception" + "'", str33, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray78);
        org.junit.Assert.assertNotNull(strArray85);
    }

    @Test
    public void test6247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6247");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        retryOnPrimaryException2.setShard(shardId3);
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str6 = retryOnPrimaryException2.getResourceType();
        java.lang.String str7 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test6248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6248");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.String str8 = retryOnPrimaryException3.getResourceType();
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException3.getHeader("");
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException3.getHeader("RetryOnPrimaryException[]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException3.guessRootCauses();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException3.getResourceId();
        java.lang.Throwable throwable15 = retryOnPrimaryException3.unwrapCause();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException3.writeTo(streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
    }

    @Test
    public void test6249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6249");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = retryOnPrimaryException8.toString();
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException8.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException8);
        retryOnPrimaryException8.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][10]] RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (int) (byte) 100);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Class<?> wildcardClass22 = retryOnPrimaryException8.getClass();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test6250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6250");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.index.Index index6 = retryOnPrimaryException2.getIndex();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.Index index9 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(index6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]");
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
    }

    @Test
    public void test6251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6251");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray3 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String[] strArray5 = new java.lang.String[] {};
        retryOnPrimaryException2.setResources("", strArray5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.index.Index index8 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", throwable16);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", (java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String[] strArray23 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException18.setResources("retry_on_primary_exception", strArray23);
        java.lang.String str25 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException18);
        java.lang.Throwable throwable26 = retryOnPrimaryException18.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        throwable26.addSuppressed((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId42 = retryOnPrimaryException41.getShardId();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", throwable47);
        java.util.List<java.lang.String> strList50 = null;
        retryOnPrimaryException48.addHeader("retry_on_primary_exception", strList50);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        retryOnPrimaryException48.setShard(shardId52);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", (java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "", throwable57);
        java.util.List<java.lang.String> strList60 = null;
        retryOnPrimaryException58.addHeader("retry_on_primary_exception", strList60);
        retryOnPrimaryException48.addSuppressed((java.lang.Throwable) retryOnPrimaryException58);
        java.lang.String str63 = retryOnPrimaryException48.toString();
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException48);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException48);
        java.util.List<java.lang.String> strList67 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.Throwable throwable68 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable70 = org.elasticsearch.ElasticsearchException.readStackTrace(throwable68, streamInput69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertNull(index8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "retry_on_primary_exception" + "'", str25, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "");
        org.junit.Assert.assertEquals(throwable26.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "RetryOnPrimaryException[]" + "'", str63, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(throwable68);
        org.junit.Assert.assertEquals(throwable68.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable68.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable68.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
    }

    @Test
    public void test6252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6252");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        retryOnPrimaryException6.setResources("rest.exception.cause.skip", strArray25);
        java.lang.Throwable throwable28 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", throwable33);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", (java.lang.Throwable) retryOnPrimaryException34);
        java.lang.String[] strArray40 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException35.setResources("retry_on_primary_exception", strArray40);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray42 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String[] strArray49 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException35.setResources("", strArray49);
        java.lang.Throwable[] throwableArray51 = retryOnPrimaryException35.getSuppressed();
        throwable28.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "", throwable58);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "", (java.lang.Throwable) retryOnPrimaryException59);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "", throwable63);
        boolean boolean65 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException64);
        retryOnPrimaryException60.addSuppressed((java.lang.Throwable) retryOnPrimaryException64);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        java.lang.Throwable throwable72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "", throwable72);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "", (java.lang.Throwable) retryOnPrimaryException73);
        java.lang.String[] strArray79 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException74.setResources("retry_on_primary_exception", strArray79);
        retryOnPrimaryException60.setResources("rest.exception.cause.skip", strArray79);
        retryOnPrimaryException35.addHeader("retry_on_primary_exception", strArray79);
        boolean boolean83 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException35);
        boolean boolean84 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String str85 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException35);
        java.util.List<java.lang.String> strList86 = retryOnPrimaryException35.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray87 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException35);
        java.util.Set<java.lang.String> strSet88 = retryOnPrimaryException35.getHeaderKeys();
        java.lang.Throwable[] throwableArray89 = retryOnPrimaryException35.getSuppressed();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "");
        org.junit.Assert.assertEquals(throwable28.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray42);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "retry_on_primary_exception" + "'", str85, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray87);
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertNotNull(throwableArray89);
    }

    @Test
    public void test6253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6253");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException16.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.index.shard.ShardId shardId31 = retryOnPrimaryException29.getShardId();
        org.elasticsearch.index.Index index32 = retryOnPrimaryException29.getIndex();
        org.elasticsearch.index.Index index33 = retryOnPrimaryException29.getIndex();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNull(index32);
        org.junit.Assert.assertNull(index33);
    }

    @Test
    public void test6254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6254");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        org.elasticsearch.index.Index index4 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder5 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params6 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder7 = retryOnPrimaryException2.toXContent(xContentBuilder5, params6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index4);
        org.junit.Assert.assertNotNull(params6);
    }

    @Test
    public void test6255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6255");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        retryOnPrimaryException2.setShard(shardId3);
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray6 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("");
        java.lang.String str12 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException2.getResourceId();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder15 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params16 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder17 = retryOnPrimaryException2.toXContent(xContentBuilder15, params16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable7.toString(), "[] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(params16);
    }

    @Test
    public void test6256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6256");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("hi!", (int) '4');
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable19 = retryOnPrimaryException6.unwrapCause();
        java.util.List<java.lang.String> strList21 = null;
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strList21);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder23 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params24 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder25 = retryOnPrimaryException6.toXContent(xContentBuilder23, params24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "[hi!][[hi!][52]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(params24);
    }

    @Test
    public void test6257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6257");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str19 = retryOnPrimaryException3.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException3.getHeaderKeys();
        java.util.Set<java.lang.String> strSet22 = retryOnPrimaryException3.getHeaderKeys();
        org.elasticsearch.index.Index index23 = retryOnPrimaryException3.getIndex();
        java.util.Set<java.lang.String> strSet24 = retryOnPrimaryException3.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(index23);
        org.junit.Assert.assertNotNull(strSet24);
    }

    @Test
    public void test6258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6258");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        java.lang.String str14 = retryOnPrimaryException6.getResourceType();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException6.getHeader("hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException6.setShard(shardId17);
        org.elasticsearch.rest.RestStatus restStatus19 = retryOnPrimaryException6.status();
        retryOnPrimaryException6.setShard("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (int) 'a');
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertTrue("'" + restStatus19 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus19.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6259");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        java.lang.Throwable throwable9 = retryOnPrimaryException5.unwrapCause();
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException5.setIndex(index10);
        java.lang.Throwable throwable12 = retryOnPrimaryException5.unwrapCause();
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable12);
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable12);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test6260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6260");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str19 = retryOnPrimaryException3.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception22 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException3, streamOutput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
    }

    @Test
    public void test6261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6261");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = retryOnPrimaryException6.toString();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        retryOnPrimaryException6.setShard(shardId16);
        java.util.Set<java.lang.String> strSet18 = retryOnPrimaryException6.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException6.getShardId();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNull(shardId19);
    }

    @Test
    public void test6262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6262");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip");
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException3.getResourceId();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder13 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params14 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder15 = retryOnPrimaryException3.toXContent(xContentBuilder13, params14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(params14);
    }

    @Test
    public void test6263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6263");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        retryOnPrimaryException6.setResources("rest.exception.cause.skip", strArray25);
        java.lang.Throwable throwable28 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", throwable33);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", (java.lang.Throwable) retryOnPrimaryException34);
        java.lang.String[] strArray40 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException35.setResources("retry_on_primary_exception", strArray40);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray42 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String[] strArray49 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException35.setResources("", strArray49);
        java.lang.Throwable[] throwableArray51 = retryOnPrimaryException35.getSuppressed();
        throwable28.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "", throwable58);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "", (java.lang.Throwable) retryOnPrimaryException59);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "", throwable63);
        boolean boolean65 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException64);
        retryOnPrimaryException60.addSuppressed((java.lang.Throwable) retryOnPrimaryException64);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        java.lang.Throwable throwable72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "", throwable72);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "", (java.lang.Throwable) retryOnPrimaryException73);
        java.lang.String[] strArray79 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException74.setResources("retry_on_primary_exception", strArray79);
        retryOnPrimaryException60.setResources("rest.exception.cause.skip", strArray79);
        retryOnPrimaryException35.addHeader("retry_on_primary_exception", strArray79);
        boolean boolean83 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException35);
        boolean boolean84 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String str85 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException35);
        java.util.List<java.lang.String> strList86 = retryOnPrimaryException35.getResourceId();
        java.lang.Throwable throwable87 = retryOnPrimaryException35.unwrapCause();
        java.util.List<java.lang.String> strList88 = retryOnPrimaryException35.getResourceId();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "");
        org.junit.Assert.assertEquals(throwable28.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray42);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "retry_on_primary_exception" + "'", str85, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertNotNull(throwable87);
        org.junit.Assert.assertEquals(throwable87.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable87.getMessage(), "");
        org.junit.Assert.assertEquals(throwable87.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strList88);
    }

    @Test
    public void test6264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6264");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable19 = retryOnPrimaryException11.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "RetryOnPrimaryException[retry_on_primary_exception]", throwable19);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException20.getSuppressed();
        org.elasticsearch.index.Index index23 = retryOnPrimaryException20.getIndex();
        java.util.Set<java.lang.String> strSet24 = retryOnPrimaryException20.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNull(index23);
        org.junit.Assert.assertNotNull(strSet24);
    }

    @Test
    public void test6265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6265");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", throwable22);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", throwable29);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", (java.lang.Throwable) retryOnPrimaryException30);
        java.lang.String[] strArray36 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException31.setResources("retry_on_primary_exception", strArray36);
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException31.getResourceId();
        retryOnPrimaryException23.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList38);
        retryOnPrimaryException11.addHeader("rest.exception.stacktrace.skip", strList38);
        retryOnPrimaryException2.addHeader("[hi!][[hi!][10]] RetryOnPrimaryException[]", strList38);
        java.lang.Throwable throwable42 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable44 = org.elasticsearch.ElasticsearchException.writeStackTraces(throwable42, streamOutput43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
    }

    @Test
    public void test6266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6266");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", throwable10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray17 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException12.setResources("retry_on_primary_exception", strArray17);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable throwable20 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException27.setResources("retry_on_primary_exception", strArray32);
        throwable20.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable20);
        java.lang.String str36 = retryOnPrimaryException35.getResourceType();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String str38 = retryOnPrimaryException35.getDetailedMessage();
        java.lang.Throwable throwable39 = retryOnPrimaryException35.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput40 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException35.writeTo(streamOutput40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str38, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable39.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6267");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        retryOnPrimaryException3.setShard(shardId7);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        retryOnPrimaryException3.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray21);
        java.lang.Throwable throwable24 = retryOnPrimaryException3.getRootCause();
        java.lang.String str25 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        retryOnPrimaryException3.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (-1));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "");
        org.junit.Assert.assertEquals(throwable24.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][-1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "retry_on_primary_exception" + "'", str25, "retry_on_primary_exception");
    }

    @Test
    public void test6268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6268");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("retry_on_primary_exception", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str10 = retryOnPrimaryException2.getResourceType();
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test6269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6269");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable16 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        throwable16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable16);
        java.lang.String str32 = retryOnPrimaryException31.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus33 = retryOnPrimaryException31.status();
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException31);
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException31);
        java.lang.Throwable[] throwableArray37 = retryOnPrimaryException31.getSuppressed();
        retryOnPrimaryException31.setIndex("[[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.Throwable throwable40 = retryOnPrimaryException31.unwrapCause();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + restStatus33 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus33.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6270");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable16 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        throwable16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable16);
        java.lang.String str32 = retryOnPrimaryException31.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus33 = retryOnPrimaryException31.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray34 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException31);
        java.lang.Throwable throwable35 = retryOnPrimaryException31.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus36 = retryOnPrimaryException31.status();
        java.lang.String str37 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException31);
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException31.getResourceId();
        java.lang.Throwable throwable39 = retryOnPrimaryException31.getRootCause();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + restStatus33 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus33.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray34);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "");
        org.junit.Assert.assertEquals(throwable35.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + restStatus36 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus36.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "retry_on_primary_exception" + "'", str37, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "");
        org.junit.Assert.assertEquals(throwable39.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6271");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str10 = retryOnPrimaryException5.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException11.status();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException11.getHeader("[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[]" + "'", str10, "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test6272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6272");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException3.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        java.lang.String str28 = retryOnPrimaryException3.toString();
        java.lang.Throwable throwable29 = retryOnPrimaryException3.unwrapCause();
        java.util.Set<java.lang.String> strSet30 = retryOnPrimaryException3.getHeaderKeys();
        retryOnPrimaryException3.setIndex("[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "RetryOnPrimaryException[]" + "'", str28, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "");
        org.junit.Assert.assertEquals(throwable29.toString(), "[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test6273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6273");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", throwable19);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", throwable26);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", (java.lang.Throwable) retryOnPrimaryException27);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException28.setResources("retry_on_primary_exception", strArray33);
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException28.getResourceId();
        retryOnPrimaryException20.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList35);
        retryOnPrimaryException8.addHeader("rest.exception.stacktrace.skip", strList35);
        java.lang.Throwable throwable38 = retryOnPrimaryException8.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "");
        org.junit.Assert.assertEquals(throwable38.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6274");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        retryOnPrimaryException2.setShard(shardId3);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (int) '4');
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
    }

    @Test
    public void test6275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6275");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException16.status();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException16.status();
        java.lang.String str19 = retryOnPrimaryException16.getResourceType();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test6276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6276");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        java.lang.Throwable throwable30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", throwable30);
        java.util.List<java.lang.String> strList33 = null;
        retryOnPrimaryException31.addHeader("retry_on_primary_exception", strList33);
        java.lang.Throwable throwable35 = retryOnPrimaryException31.unwrapCause();
        org.elasticsearch.index.Index index36 = null;
        retryOnPrimaryException31.setIndex(index36);
        retryOnPrimaryException31.setShard("hi!", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException44);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        retryOnPrimaryException44.setResources("", strArray47);
        retryOnPrimaryException31.addHeader("", strArray47);
        retryOnPrimaryException3.addHeader("", strArray47);
        java.lang.String str51 = retryOnPrimaryException3.getDetailedMessage();
        java.lang.Throwable throwable52 = retryOnPrimaryException3.unwrapCause();
        java.lang.String str53 = retryOnPrimaryException3.toString();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "");
        org.junit.Assert.assertEquals(throwable35.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str51, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "");
        org.junit.Assert.assertEquals(throwable52.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "RetryOnPrimaryException[]" + "'", str53, "RetryOnPrimaryException[]");
    }

    @Test
    public void test6277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6277");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable throwable9 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable11 = retryOnPrimaryException10.unwrapCause();
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException10.getHeaderKeys();
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException10.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamInput streamInput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable16 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException10, streamInput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test6278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6278");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = retryOnPrimaryException8.toString();
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException8.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        java.lang.String str20 = retryOnPrimaryException8.getResourceType();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str19, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "retry_on_primary_exception" + "'", str20, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test6279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6279");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException23.getResourceId();
        retryOnPrimaryException6.addHeader("retry_on_primary_exception", strList30);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", throwable35);
        java.util.List<java.lang.String> strList38 = null;
        retryOnPrimaryException36.addHeader("retry_on_primary_exception", strList38);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        retryOnPrimaryException36.setShard(shardId40);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", throwable47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", (java.lang.Throwable) retryOnPrimaryException48);
        java.lang.String[] strArray54 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException49.setResources("retry_on_primary_exception", strArray54);
        java.lang.String str56 = retryOnPrimaryException49.toString();
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.Throwable[] throwableArray58 = retryOnPrimaryException49.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        java.lang.Throwable throwable64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "", throwable64);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "", (java.lang.Throwable) retryOnPrimaryException65);
        java.lang.String[] strArray71 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException66.setResources("retry_on_primary_exception", strArray71);
        java.util.List<java.lang.String> strList73 = retryOnPrimaryException66.getResourceId();
        retryOnPrimaryException49.addHeader("retry_on_primary_exception", strList73);
        retryOnPrimaryException36.addHeader("retry_on_primary_exception", strList73);
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList73);
        java.util.Set<java.lang.String> strSet77 = retryOnPrimaryException6.getHeaderKeys();
        java.lang.String str78 = retryOnPrimaryException6.getResourceType();
        java.lang.String str79 = retryOnPrimaryException6.getDetailedMessage();
        java.util.Set<java.lang.String> strSet80 = retryOnPrimaryException6.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray81 = retryOnPrimaryException6.guessRootCauses();
        boolean boolean82 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str56, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "retry_on_primary_exception" + "'", str78, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str79, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test6280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6280");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException8.getResourceId();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException8);
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException8.getHeaderKeys();
        java.lang.String str18 = retryOnPrimaryException8.getResourceType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
    }

    @Test
    public void test6281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6281");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str6 = retryOnPrimaryException2.getResourceType();
        java.lang.String[] strArray8 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test6282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6282");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable16 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        throwable16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.Throwable[] throwableArray31 = retryOnPrimaryException23.getSuppressed();
        org.elasticsearch.index.Index index32 = null;
        retryOnPrimaryException23.setIndex(index32);
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException23.getShardId();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException23.getSuppressed();
        java.lang.String str36 = retryOnPrimaryException23.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.index.Index index40 = retryOnPrimaryException39.getIndex();
        java.lang.Throwable throwable41 = retryOnPrimaryException39.getRootCause();
        retryOnPrimaryException23.addSuppressed(throwable41);
        java.lang.String str43 = retryOnPrimaryException23.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException23);
        java.util.List<java.lang.String> strList45 = retryOnPrimaryException44.getResourceId();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "retry_on_primary_exception" + "'", str36, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index40);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable41.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str43, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(strList45);
    }

    @Test
    public void test6283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6283");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException11.getResourceId();
        retryOnPrimaryException3.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList18);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "retry_on_primary_exception");
        java.lang.Throwable throwable24 = retryOnPrimaryException23.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        java.lang.Throwable throwable30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", throwable30);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", (java.lang.Throwable) retryOnPrimaryException31);
        java.lang.String[] strArray37 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException32.setResources("retry_on_primary_exception", strArray37);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable45);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "", (java.lang.Throwable) retryOnPrimaryException46);
        java.lang.String[] strArray52 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException47.setResources("retry_on_primary_exception", strArray52);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String[] strArray61 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException47.setResources("", strArray61);
        retryOnPrimaryException32.addHeader("", strArray61);
        retryOnPrimaryException23.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray61);
        retryOnPrimaryException3.setResources("retry_on_primary_exception", strArray61);
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        java.lang.Throwable throwable69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "", throwable69);
        java.util.List<java.lang.String> strList72 = null;
        retryOnPrimaryException70.addHeader("retry_on_primary_exception", strList72);
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        retryOnPrimaryException70.setShard(shardId74);
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.index.shard.ShardId shardId79 = null;
        java.lang.Throwable throwable81 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException82 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId79, "", throwable81);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException83 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId77, "", (java.lang.Throwable) retryOnPrimaryException82);
        java.lang.String[] strArray88 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException83.setResources("retry_on_primary_exception", strArray88);
        retryOnPrimaryException70.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray88);
        retryOnPrimaryException3.addHeader("rest.exception.stacktrace.skip", strArray88);
        java.util.List<java.lang.String> strList93 = retryOnPrimaryException3.getHeader("RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray94 = retryOnPrimaryException3.guessRootCauses();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray94);
    }

    @Test
    public void test6284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6284");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test6285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6285");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException6.getShardId();
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException6.status();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str10 = retryOnPrimaryException6.toString();
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str10, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6286");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", throwable10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray17 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException12.setResources("retry_on_primary_exception", strArray17);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable throwable20 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException27.setResources("retry_on_primary_exception", strArray32);
        throwable20.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable20);
        java.lang.String str36 = retryOnPrimaryException35.getResourceType();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        retryOnPrimaryException2.setIndex("[hi!][[hi!][10]] RetryOnPrimaryException[]");
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str43 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable47 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "retry_on_primary_exception" + "'", str43, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable47.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test6287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6287");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[retry_on_primary_exception]");
        java.lang.Throwable[] throwableArray3 = retryOnPrimaryException2.getSuppressed();
        retryOnPrimaryException2.setIndex("[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test6288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6288");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str11 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable15 = retryOnPrimaryException9.unwrapCause();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable15);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable15);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "retry_on_primary_exception" + "'", str11, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
    }

    @Test
    public void test6289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6289");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception19 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException16, streamOutput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
    }

    @Test
    public void test6290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6290");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        java.util.List<java.lang.String> strList9 = null;
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", strList9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String str12 = retryOnPrimaryException7.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable throwable14 = retryOnPrimaryException13.unwrapCause();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException13.getResourceId();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String[] strArray24 = new java.lang.String[] {};
        retryOnPrimaryException21.setResources("", strArray24);
        org.elasticsearch.index.Index index26 = retryOnPrimaryException21.getIndex();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", throwable32);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", (java.lang.Throwable) retryOnPrimaryException33);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException34.setResources("retry_on_primary_exception", strArray39);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "", throwable46);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "", (java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String[] strArray53 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException48.setResources("retry_on_primary_exception", strArray53);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray55 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException48);
        java.lang.String[] strArray62 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException48.setResources("", strArray62);
        retryOnPrimaryException34.setResources("rest.exception.cause.skip", strArray62);
        retryOnPrimaryException21.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", strArray62);
        retryOnPrimaryException13.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray62);
        java.lang.String str67 = retryOnPrimaryException13.getDetailedMessage();
        org.elasticsearch.index.Index index68 = retryOnPrimaryException13.getIndex();
        retryOnPrimaryException13.setIndex("[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.util.List<java.lang.String> strList71 = retryOnPrimaryException13.getResourceId();
        java.util.List<java.lang.String> strList72 = retryOnPrimaryException13.getResourceId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "RetryOnPrimaryException[]" + "'", str12, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "[[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(index26);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray55);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str67, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(index68);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
    }

    @Test
    public void test6291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6291");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str12 = retryOnPrimaryException10.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", throwable19);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException21.setResources("retry_on_primary_exception", strArray26);
        retryOnPrimaryException10.addHeader("", strArray26);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId30 = retryOnPrimaryException10.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException31);
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException31.getHeaderKeys();
        retryOnPrimaryException31.setShard("[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (int) '#');
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException31.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        java.util.Set<java.lang.String> strSet39 = retryOnPrimaryException31.getHeaderKeys();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strSet39);
    }

    @Test
    public void test6292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6292");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.Throwable throwable5 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String[] strArray18 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException13.setResources("retry_on_primary_exception", strArray18);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", throwable26);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", (java.lang.Throwable) retryOnPrimaryException27);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException28.setResources("retry_on_primary_exception", strArray33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray42 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException28.setResources("", strArray42);
        retryOnPrimaryException13.addHeader("", strArray42);
        retryOnPrimaryException4.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray42);
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", throwable52);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "", (java.lang.Throwable) retryOnPrimaryException53);
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException53.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "", throwable63);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "", (java.lang.Throwable) retryOnPrimaryException64);
        java.lang.String[] strArray70 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException65.setResources("retry_on_primary_exception", strArray70);
        java.lang.String str72 = retryOnPrimaryException65.toString();
        boolean boolean73 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException65);
        java.lang.Throwable[] throwableArray74 = retryOnPrimaryException65.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId76 = null;
        org.elasticsearch.index.shard.ShardId shardId78 = null;
        java.lang.Throwable throwable80 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException81 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId78, "", throwable80);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException82 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId76, "", (java.lang.Throwable) retryOnPrimaryException81);
        java.lang.String[] strArray87 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException82.setResources("retry_on_primary_exception", strArray87);
        java.util.List<java.lang.String> strList89 = retryOnPrimaryException82.getResourceId();
        retryOnPrimaryException65.addHeader("retry_on_primary_exception", strList89);
        retryOnPrimaryException53.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", strList89);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]", strList89);
        org.elasticsearch.index.shard.ShardId shardId93 = retryOnPrimaryException4.getShardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str72, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(shardId93);
    }

    @Test
    public void test6293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6293");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[retry_on_primary_exception]", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", throwable16);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", (java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray25 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException33);
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException33);
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        retryOnPrimaryException33.setShard(shardId44);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        retryOnPrimaryException49.setShard("retry_on_primary_exception", (int) (byte) 1);
        java.lang.String str53 = retryOnPrimaryException49.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "", throwable57);
        java.util.List<java.lang.String> strList60 = null;
        retryOnPrimaryException58.addHeader("retry_on_primary_exception", strList60);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        retryOnPrimaryException58.setShard(shardId62);
        org.elasticsearch.index.shard.ShardId shardId64 = retryOnPrimaryException58.getShardId();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        java.lang.Throwable throwable70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "", throwable70);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "", (java.lang.Throwable) retryOnPrimaryException71);
        java.lang.String[] strArray77 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException72.setResources("retry_on_primary_exception", strArray77);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray79 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException72);
        java.lang.String[] strArray86 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException72.setResources("", strArray86);
        retryOnPrimaryException58.addHeader("", strArray86);
        retryOnPrimaryException49.setResources("hi!", strArray86);
        retryOnPrimaryException33.setResources("hi!", strArray86);
        retryOnPrimaryException22.addHeader("", strArray86);
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray86);
        java.lang.String str93 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str94 = retryOnPrimaryException8.toString();
        java.util.Set<java.lang.String> strSet95 = retryOnPrimaryException8.getHeaderKeys();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray25);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str53, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(shardId64);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray79);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "retry_on_primary_exception" + "'", str93, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str94, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strSet95);
    }

    @Test
    public void test6294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6294");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray4 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException2.status();
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray4);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test6295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6295");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        retryOnPrimaryException2.setShard(shardId3);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        retryOnPrimaryException2.setShard(shardId5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException2.status();
        java.lang.String str10 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test6296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6296");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable45);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "", (java.lang.Throwable) retryOnPrimaryException46);
        java.lang.String[] strArray52 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException47.setResources("retry_on_primary_exception", strArray52);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String[] strArray61 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException47.setResources("", strArray61);
        retryOnPrimaryException33.setResources("rest.exception.cause.skip", strArray61);
        retryOnPrimaryException16.addHeader("rest.exception.cause.skip", strArray61);
        org.elasticsearch.rest.RestStatus restStatus65 = retryOnPrimaryException16.status();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput66 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException16.writeTo(streamOutput66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + restStatus65 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus65.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6297");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException6.getShardId();
        java.lang.String str8 = retryOnPrimaryException6.getResourceType();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable10 = retryOnPrimaryException6.getRootCause();
        java.lang.String str11 = retryOnPrimaryException6.getResourceType();
        retryOnPrimaryException6.setShard("", (int) (byte) 10);
        java.lang.String str15 = retryOnPrimaryException6.getDetailedMessage();
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[][[][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str15, "[][[][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6298");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException16.status();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        retryOnPrimaryException16.setShard(shardId18);
        java.lang.Throwable[] throwableArray20 = retryOnPrimaryException16.getSuppressed();
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException16.getSuppressed();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException16, streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test6299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6299");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable16 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[retry_on_primary_exception]", throwable16);
        org.elasticsearch.index.Index index18 = retryOnPrimaryException17.getIndex();
        retryOnPrimaryException17.setIndex("[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException17.getShardId();
        java.lang.Throwable throwable22 = retryOnPrimaryException17.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus23 = retryOnPrimaryException17.status();
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException17.status();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(index18);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable22.toString(), "[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus23 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus23.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6300");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException6.getShardId();
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException6.status();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        retryOnPrimaryException6.setShard(shardId9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException6.status();
        retryOnPrimaryException6.setIndex("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6301");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        retryOnPrimaryException5.setShard(shardId9);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", throwable16);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", (java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String[] strArray23 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException18.setResources("retry_on_primary_exception", strArray23);
        retryOnPrimaryException5.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray23);
        java.lang.Throwable throwable26 = retryOnPrimaryException5.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "");
        org.junit.Assert.assertEquals(throwable26.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6302");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String str5 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", throwable10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray17 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException12.setResources("retry_on_primary_exception", strArray17);
        java.lang.String str19 = retryOnPrimaryException12.toString();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str21 = retryOnPrimaryException12.toString();
        org.elasticsearch.index.shard.ShardId shardId22 = retryOnPrimaryException12.getShardId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str24 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable25 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str19, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str21, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "retry_on_primary_exception" + "'", str24, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable25.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]");
    }

    @Test
    public void test6303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6303");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException16.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.index.shard.ShardId shardId31 = retryOnPrimaryException29.getShardId();
        org.elasticsearch.index.shard.ShardId shardId32 = retryOnPrimaryException29.getShardId();
        retryOnPrimaryException29.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]");
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException29.getSuppressed();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test6304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6304");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", throwable32);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", (java.lang.Throwable) retryOnPrimaryException33);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException34.setResources("retry_on_primary_exception", strArray39);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException34);
        java.lang.String[] strArray48 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException34.setResources("", strArray48);
        retryOnPrimaryException20.setResources("rest.exception.cause.skip", strArray48);
        retryOnPrimaryException6.addHeader("hi!", strArray48);
        java.lang.String str52 = retryOnPrimaryException6.getResourceType();
        retryOnPrimaryException6.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput55 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException6.writeTo(streamOutput55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test6305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6305");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str10 = retryOnPrimaryException5.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException5);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException11.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException11.getShardId();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[]" + "'", str10, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(shardId13);
    }

    @Test
    public void test6306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6306");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("hi!");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.Set<java.lang.String> strSet18 = retryOnPrimaryException6.getHeaderKeys();
        java.lang.String str19 = retryOnPrimaryException6.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", throwable27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException29.setResources("retry_on_primary_exception", strArray34);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!", (java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "", throwable41);
        java.util.List<java.lang.String> strList44 = null;
        retryOnPrimaryException42.addHeader("retry_on_primary_exception", strList44);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        retryOnPrimaryException42.setShard(shardId46);
        org.elasticsearch.index.shard.ShardId shardId48 = retryOnPrimaryException42.getShardId();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "", throwable54);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", (java.lang.Throwable) retryOnPrimaryException55);
        java.lang.String[] strArray61 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException56.setResources("retry_on_primary_exception", strArray61);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray63 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException56);
        java.lang.String[] strArray70 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException56.setResources("", strArray70);
        retryOnPrimaryException42.addHeader("", strArray70);
        retryOnPrimaryException29.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray70);
        retryOnPrimaryException6.setResources("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray70);
        org.elasticsearch.index.shard.ShardId shardId75 = retryOnPrimaryException6.getShardId();
        org.elasticsearch.index.shard.ShardId shardId76 = null;
        org.elasticsearch.index.shard.ShardId shardId78 = null;
        org.elasticsearch.index.shard.ShardId shardId80 = null;
        java.lang.Throwable throwable82 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException83 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId80, "", throwable82);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException84 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId78, "", (java.lang.Throwable) retryOnPrimaryException83);
        java.lang.String str85 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException84);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray86 = retryOnPrimaryException84.guessRootCauses();
        retryOnPrimaryException84.setShard("hi!", (int) (byte) -1);
        boolean boolean90 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException84);
        retryOnPrimaryException84.setIndex("");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException93 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId76, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException84);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException93);
        java.lang.String str95 = retryOnPrimaryException93.getResourceType();
        java.lang.String str96 = retryOnPrimaryException93.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException93.writeTo(streamOutput97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray63);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNull(shardId75);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "retry_on_primary_exception" + "'", str85, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str96, "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6307");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.getResourceType();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException6.setShard(shardId15);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test6308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6308");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException6.getShardId();
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException6.status();
        retryOnPrimaryException6.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", 10);
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException6.status();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException20.getHeaderKeys();
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException20.getResourceId();
        retryOnPrimaryException6.addHeader("[RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][0]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList31);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strList31);
    }

    @Test
    public void test6309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6309");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        java.lang.Throwable throwable9 = retryOnPrimaryException5.unwrapCause();
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException5.setIndex(index10);
        java.lang.Throwable throwable12 = retryOnPrimaryException5.unwrapCause();
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException5.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", (java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String[] strArray27 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException22.setResources("retry_on_primary_exception", strArray27);
        java.lang.String str29 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.Throwable throwable30 = retryOnPrimaryException22.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", throwable35);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", (java.lang.Throwable) retryOnPrimaryException36);
        java.lang.String[] strArray42 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException37.setResources("retry_on_primary_exception", strArray42);
        throwable30.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String str46 = retryOnPrimaryException37.getDetailedMessage();
        retryOnPrimaryException5.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        java.util.Set<java.lang.String> strSet48 = retryOnPrimaryException37.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId49 = retryOnPrimaryException37.getShardId();
        java.lang.String str50 = retryOnPrimaryException37.toString();
        java.lang.String str51 = retryOnPrimaryException37.getResourceType();
        java.lang.String str52 = retryOnPrimaryException37.getResourceType();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException37);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "retry_on_primary_exception" + "'", str29, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "");
        org.junit.Assert.assertEquals(throwable30.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str46, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNull(shardId49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str50, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "retry_on_primary_exception" + "'", str51, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "retry_on_primary_exception" + "'", str52, "retry_on_primary_exception");
    }

    @Test
    public void test6310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6310");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", (java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String[] strArray27 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException22.setResources("retry_on_primary_exception", strArray27);
        retryOnPrimaryException8.setResources("rest.exception.cause.skip", strArray27);
        java.lang.Throwable throwable30 = retryOnPrimaryException8.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = retryOnPrimaryException8.guessRootCauses();
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "", throwable37);
        java.util.List<java.lang.String> strList40 = null;
        retryOnPrimaryException38.addHeader("retry_on_primary_exception", strList40);
        java.lang.Throwable throwable42 = retryOnPrimaryException38.unwrapCause();
        org.elasticsearch.index.Index index43 = null;
        retryOnPrimaryException38.setIndex(index43);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        java.lang.Throwable throwable49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", throwable49);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", (java.lang.Throwable) retryOnPrimaryException50);
        java.lang.String[] strArray56 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException51.setResources("retry_on_primary_exception", strArray56);
        java.lang.String str58 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException51);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray59 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException51);
        retryOnPrimaryException38.addSuppressed((java.lang.Throwable) retryOnPrimaryException51);
        boolean boolean61 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        java.lang.Throwable throwable65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "", throwable65);
        java.util.List<java.lang.String> strList68 = null;
        retryOnPrimaryException66.addHeader("retry_on_primary_exception", strList68);
        java.lang.Throwable throwable70 = retryOnPrimaryException66.unwrapCause();
        org.elasticsearch.index.Index index71 = null;
        retryOnPrimaryException66.setIndex(index71);
        retryOnPrimaryException66.setShard("hi!", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId77, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray80 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException79);
        java.lang.String[] strArray82 = new java.lang.String[] {};
        retryOnPrimaryException79.setResources("", strArray82);
        retryOnPrimaryException66.addHeader("", strArray82);
        retryOnPrimaryException38.addHeader("", strArray82);
        retryOnPrimaryException8.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray82);
        java.lang.Throwable throwable87 = retryOnPrimaryException8.getRootCause();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "");
        org.junit.Assert.assertEquals(throwable30.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "retry_on_primary_exception" + "'", str58, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(throwable70);
        org.junit.Assert.assertEquals(throwable70.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable70.getMessage(), "");
        org.junit.Assert.assertEquals(throwable70.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwable87);
        org.junit.Assert.assertEquals(throwable87.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable87.getMessage(), "");
        org.junit.Assert.assertEquals(throwable87.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6311");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip");
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.Index index12 = retryOnPrimaryException10.getIndex();
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException10.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) (short) 100);
        retryOnPrimaryException10.setShard("[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (-1));
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        java.util.List<java.lang.String> strList26 = null;
        retryOnPrimaryException24.addHeader("retry_on_primary_exception", strList26);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        retryOnPrimaryException24.setShard(shardId28);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", throwable35);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", (java.lang.Throwable) retryOnPrimaryException36);
        java.lang.String[] strArray42 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException37.setResources("retry_on_primary_exception", strArray42);
        java.lang.String str44 = retryOnPrimaryException37.toString();
        boolean boolean45 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException37);
        java.lang.Throwable[] throwableArray46 = retryOnPrimaryException37.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", throwable52);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "", (java.lang.Throwable) retryOnPrimaryException53);
        java.lang.String[] strArray59 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException54.setResources("retry_on_primary_exception", strArray59);
        java.util.List<java.lang.String> strList61 = retryOnPrimaryException54.getResourceId();
        retryOnPrimaryException37.addHeader("retry_on_primary_exception", strList61);
        retryOnPrimaryException24.addHeader("retry_on_primary_exception", strList61);
        java.lang.String str64 = retryOnPrimaryException24.getDetailedMessage();
        java.lang.String str65 = retryOnPrimaryException24.getDetailedMessage();
        java.lang.Throwable throwable66 = retryOnPrimaryException24.getRootCause();
        java.lang.String str67 = retryOnPrimaryException24.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        java.lang.Throwable throwable73 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "", throwable73);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "", (java.lang.Throwable) retryOnPrimaryException74);
        java.lang.String[] strArray80 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException75.setResources("retry_on_primary_exception", strArray80);
        retryOnPrimaryException24.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray80);
        retryOnPrimaryException10.setResources("[[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][97]] RetryOnPrimaryException[rest.exception.stacktrace.skip]", strArray80);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(index12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str44, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str64, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str65, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable66);
        org.junit.Assert.assertEquals(throwable66.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable66.getMessage(), "");
        org.junit.Assert.assertEquals(throwable66.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(strArray80);
    }

    @Test
    public void test6312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6312");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        retryOnPrimaryException3.setShard("hi!", (int) (short) 10);
        java.lang.String str13 = retryOnPrimaryException3.toString();
        java.lang.String str14 = retryOnPrimaryException3.getResourceType();
        java.lang.Throwable throwable15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException3.addSuppressed(throwable15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str13, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test6313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6313");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException26.setResources("retry_on_primary_exception", strArray31);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray40 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException26.setResources("", strArray40);
        retryOnPrimaryException11.addHeader("", strArray40);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray40);
        java.lang.String str44 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str46 = retryOnPrimaryException2.toString();
        retryOnPrimaryException2.setShard("", 100);
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable3.toString(), "[][[][100]] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str44, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str46, "RetryOnPrimaryException[retry_on_primary_exception]");
    }

    @Test
    public void test6314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6314");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str11 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = retryOnPrimaryException10.guessRootCauses();
        retryOnPrimaryException10.setIndex("");
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException10.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        java.util.List<java.lang.String> strList23 = null;
        retryOnPrimaryException21.addHeader("retry_on_primary_exception", strList23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        retryOnPrimaryException21.setShard(shardId25);
        org.elasticsearch.index.shard.ShardId shardId27 = retryOnPrimaryException21.getShardId();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", throwable33);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", (java.lang.Throwable) retryOnPrimaryException34);
        java.lang.String[] strArray40 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException35.setResources("retry_on_primary_exception", strArray40);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray42 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String[] strArray49 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException35.setResources("", strArray49);
        retryOnPrimaryException21.addHeader("", strArray49);
        retryOnPrimaryException10.addHeader("[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]", strArray49);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable54 = retryOnPrimaryException10.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId55 = retryOnPrimaryException10.getShardId();
        java.lang.String str56 = retryOnPrimaryException10.getResourceType();
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "retry_on_primary_exception" + "'", str11, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray42);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(throwable54);
        org.junit.Assert.assertEquals(throwable54.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable54.getMessage(), "");
        org.junit.Assert.assertEquals(throwable54.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(shardId55);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test6315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6315");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str22 = retryOnPrimaryException21.toString();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException33);
        java.lang.Throwable throwable41 = retryOnPrimaryException33.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "", throwable46);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "", (java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String[] strArray53 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException48.setResources("retry_on_primary_exception", strArray53);
        throwable41.addSuppressed((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable41);
        java.lang.String str57 = retryOnPrimaryException56.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus58 = retryOnPrimaryException56.status();
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        java.lang.Throwable throwable65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "", throwable65);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "", (java.lang.Throwable) retryOnPrimaryException66);
        java.lang.String[] strArray72 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException67.setResources("retry_on_primary_exception", strArray72);
        java.lang.String str74 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException67);
        java.lang.Throwable throwable75 = retryOnPrimaryException67.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId76 = null;
        org.elasticsearch.index.shard.ShardId shardId78 = null;
        java.lang.Throwable throwable80 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException81 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId78, "", throwable80);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException82 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId76, "", (java.lang.Throwable) retryOnPrimaryException81);
        java.lang.String[] strArray87 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException82.setResources("retry_on_primary_exception", strArray87);
        throwable75.addSuppressed((java.lang.Throwable) retryOnPrimaryException82);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException90 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable75);
        retryOnPrimaryException56.addSuppressed(throwable75);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException92 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable75);
        retryOnPrimaryException21.addSuppressed(throwable75);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException94 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray95 = retryOnPrimaryException94.guessRootCauses();
        java.util.List<java.lang.String> strList97 = retryOnPrimaryException94.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.Throwable throwable98 = retryOnPrimaryException94.unwrapCause();
        java.lang.String str99 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable98);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str22, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "");
        org.junit.Assert.assertEquals(throwable41.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + restStatus58 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus58.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "retry_on_primary_exception" + "'", str74, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable75);
        org.junit.Assert.assertEquals(throwable75.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable75.getMessage(), "");
        org.junit.Assert.assertEquals(throwable75.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray95);
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertNotNull(throwable98);
        org.junit.Assert.assertEquals(throwable98.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable98.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable98.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "retry_on_primary_exception" + "'", str99, "retry_on_primary_exception");
    }

    @Test
    public void test6316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6316");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException6.getHeader("[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.Throwable throwable17 = retryOnPrimaryException6.getRootCause();
        java.lang.Throwable throwable18 = retryOnPrimaryException6.unwrapCause();
        retryOnPrimaryException6.setShard("", (int) (short) 100);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", throwable27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException29.setResources("retry_on_primary_exception", strArray34);
        java.lang.String str36 = retryOnPrimaryException29.toString();
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String str38 = retryOnPrimaryException29.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "RetryOnPrimaryException[retry_on_primary_exception]");
        java.lang.Throwable throwable42 = retryOnPrimaryException41.getRootCause();
        retryOnPrimaryException29.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.Index index44 = retryOnPrimaryException29.getIndex();
        java.lang.Throwable throwable45 = retryOnPrimaryException29.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", throwable51);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", (java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String[] strArray58 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException53.setResources("retry_on_primary_exception", strArray58);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray60 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        java.lang.Throwable throwable66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "", throwable66);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "", (java.lang.Throwable) retryOnPrimaryException67);
        java.lang.String[] strArray73 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException68.setResources("retry_on_primary_exception", strArray73);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray75 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException68);
        java.lang.String[] strArray82 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException68.setResources("", strArray82);
        retryOnPrimaryException53.addHeader("", strArray82);
        retryOnPrimaryException29.addHeader("RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[];", strArray82);
        retryOnPrimaryException6.setResources("RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray82);
        boolean boolean87 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        boolean boolean88 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "[][[][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str36, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str38, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]");
        org.junit.Assert.assertNull(index44);
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "");
        org.junit.Assert.assertEquals(throwable45.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray60);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray75);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test6317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6317");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        boolean boolean4 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException11.guessRootCauses();
        retryOnPrimaryException11.setShard("hi!", (int) (byte) -1);
        java.lang.String str17 = retryOnPrimaryException11.toString();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable19 = retryOnPrimaryException11.getRootCause();
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException11.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str17, "[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList21);
    }

    @Test
    public void test6318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6318");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str6 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.String str7 = retryOnPrimaryException4.getDetailedMessage();
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException4.getResourceId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str7, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNull(strList8);
    }

    @Test
    public void test6319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6319");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException11.getResourceId();
        retryOnPrimaryException3.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList18);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "retry_on_primary_exception");
        java.lang.Throwable throwable24 = retryOnPrimaryException23.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        java.lang.Throwable throwable30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", throwable30);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", (java.lang.Throwable) retryOnPrimaryException31);
        java.lang.String[] strArray37 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException32.setResources("retry_on_primary_exception", strArray37);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable45);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "", (java.lang.Throwable) retryOnPrimaryException46);
        java.lang.String[] strArray52 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException47.setResources("retry_on_primary_exception", strArray52);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String[] strArray61 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException47.setResources("", strArray61);
        retryOnPrimaryException32.addHeader("", strArray61);
        retryOnPrimaryException23.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray61);
        retryOnPrimaryException3.setResources("retry_on_primary_exception", strArray61);
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        java.lang.Throwable throwable69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "", throwable69);
        java.util.List<java.lang.String> strList72 = null;
        retryOnPrimaryException70.addHeader("retry_on_primary_exception", strList72);
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        retryOnPrimaryException70.setShard(shardId74);
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.index.shard.ShardId shardId79 = null;
        java.lang.Throwable throwable81 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException82 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId79, "", throwable81);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException83 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId77, "", (java.lang.Throwable) retryOnPrimaryException82);
        java.lang.String[] strArray88 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException83.setResources("retry_on_primary_exception", strArray88);
        retryOnPrimaryException70.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray88);
        retryOnPrimaryException3.addHeader("rest.exception.stacktrace.skip", strArray88);
        java.util.List<java.lang.String> strList93 = retryOnPrimaryException3.getHeader("RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.List<java.lang.String> strList94 = retryOnPrimaryException3.getResourceId();
        org.elasticsearch.index.Index index95 = retryOnPrimaryException3.getIndex();
        boolean boolean96 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNotNull(strList94);
        org.junit.Assert.assertNull(index95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test6320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6320");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String[] strArray20 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException6.setResources("", strArray20);
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus23 = retryOnPrimaryException6.status();
        java.lang.Throwable throwable24 = retryOnPrimaryException6.unwrapCause();
        java.lang.String str25 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable24);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertTrue("'" + restStatus23 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus23.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "retry_on_primary_exception" + "'", str25, "retry_on_primary_exception");
    }

    @Test
    public void test6321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6321");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        retryOnPrimaryException2.setShard(shardId3);
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray6 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (byte) -1);
        java.lang.Throwable throwable11 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][-1]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
    }

    @Test
    public void test6322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6322");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        retryOnPrimaryException3.setShard("hi!", (int) (short) 10);
        java.lang.String str13 = retryOnPrimaryException3.toString();
        java.lang.String str14 = retryOnPrimaryException3.toString();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        java.util.List<java.lang.String> strList23 = null;
        retryOnPrimaryException21.addHeader("retry_on_primary_exception", strList23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        retryOnPrimaryException21.setShard(shardId25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", (java.lang.Throwable) retryOnPrimaryException21);
        retryOnPrimaryException27.setIndex("rest.exception.stacktrace.skip");
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", throwable33);
        java.util.List<java.lang.String> strList36 = null;
        retryOnPrimaryException34.addHeader("retry_on_primary_exception", strList36);
        java.lang.Throwable throwable38 = retryOnPrimaryException34.unwrapCause();
        org.elasticsearch.index.Index index39 = null;
        retryOnPrimaryException34.setIndex(index39);
        java.lang.Throwable throwable41 = retryOnPrimaryException34.unwrapCause();
        java.lang.Throwable[] throwableArray42 = retryOnPrimaryException34.getSuppressed();
        retryOnPrimaryException34.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) '4');
        java.lang.String[] strArray54 = new java.lang.String[] { "retry_on_primary_exception", "hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "", "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        retryOnPrimaryException34.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException27.addHeader("hi!", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException3.addHeader("[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList55);
        java.lang.String str60 = retryOnPrimaryException3.getDetailedMessage();
        boolean boolean61 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray62 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        java.util.List<java.lang.String> strList63 = retryOnPrimaryException3.getResourceId();
        java.util.List<java.lang.String> strList65 = retryOnPrimaryException3.getHeader("[hi!][[hi!][52]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str13, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str14, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "");
        org.junit.Assert.assertEquals(throwable38.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "");
        org.junit.Assert.assertEquals(throwable41.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str60, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList65);
    }

    @Test
    public void test6323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6323");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        java.lang.Throwable throwable10 = retryOnPrimaryException3.unwrapCause();
        java.lang.Throwable[] throwableArray11 = retryOnPrimaryException3.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable throwable28 = retryOnPrimaryException20.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", throwable33);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", (java.lang.Throwable) retryOnPrimaryException34);
        java.lang.String[] strArray40 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException35.setResources("retry_on_primary_exception", strArray40);
        throwable28.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String str44 = retryOnPrimaryException35.getDetailedMessage();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        java.util.Set<java.lang.String> strSet46 = retryOnPrimaryException35.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId47 = retryOnPrimaryException35.getShardId();
        java.lang.String str48 = retryOnPrimaryException35.toString();
        java.lang.String str49 = retryOnPrimaryException35.getResourceType();
        retryOnPrimaryException35.setIndex("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        java.lang.String str52 = retryOnPrimaryException35.getDetailedMessage();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "");
        org.junit.Assert.assertEquals(throwable28.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str44, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str48, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "retry_on_primary_exception" + "'", str49, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str52, "[RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6324");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException3.getSuppressed();
        java.lang.Throwable[] throwableArray20 = retryOnPrimaryException3.getSuppressed();
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException3.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(strSet21);
    }

    @Test
    public void test6325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6325");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        java.lang.String str14 = retryOnPrimaryException6.getResourceType();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException6.getHeader("hi!");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException6.setShard(shardId17);
        java.lang.String str19 = retryOnPrimaryException6.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", throwable27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException29.setResources("retry_on_primary_exception", strArray34);
        java.lang.String str36 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.Throwable throwable37 = retryOnPrimaryException29.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        java.lang.Throwable throwable42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "", throwable42);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "", (java.lang.Throwable) retryOnPrimaryException43);
        java.lang.String[] strArray49 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException44.setResources("retry_on_primary_exception", strArray49);
        throwable37.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable37);
        java.lang.String str53 = retryOnPrimaryException52.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "", throwable57);
        java.util.List<java.lang.String> strList60 = null;
        retryOnPrimaryException58.addHeader("retry_on_primary_exception", strList60);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        retryOnPrimaryException58.setShard(shardId62);
        org.elasticsearch.index.shard.ShardId shardId64 = retryOnPrimaryException58.getShardId();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        java.lang.Throwable throwable70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "", throwable70);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "", (java.lang.Throwable) retryOnPrimaryException71);
        java.lang.String[] strArray77 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException72.setResources("retry_on_primary_exception", strArray77);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray79 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException72);
        java.lang.String[] strArray86 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException72.setResources("", strArray86);
        retryOnPrimaryException58.addHeader("", strArray86);
        org.elasticsearch.index.Index index89 = retryOnPrimaryException58.getIndex();
        java.lang.String[] strArray91 = new java.lang.String[] {};
        retryOnPrimaryException58.addHeader("rest.exception.cause.skip", strArray91);
        retryOnPrimaryException52.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[]]", strArray91);
        retryOnPrimaryException6.setResources("[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray91);
        java.lang.Throwable throwable95 = retryOnPrimaryException6.unwrapCause();
        java.util.Set<java.lang.String> strSet96 = retryOnPrimaryException6.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "retry_on_primary_exception" + "'", str36, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "");
        org.junit.Assert.assertEquals(throwable37.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(shardId64);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray79);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNull(index89);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(throwable95);
        org.junit.Assert.assertEquals(throwable95.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable95.getMessage(), "");
        org.junit.Assert.assertEquals(throwable95.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strSet96);
    }

    @Test
    public void test6326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6326");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException6.getHeaderKeys();
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException6.getHeader("[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException6.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable22 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException6, streamOutput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
    }

    @Test
    public void test6327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6327");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = retryOnPrimaryException8.toString();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException8.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        retryOnPrimaryException8.setShard(shardId18);
        java.lang.Throwable throwable20 = retryOnPrimaryException8.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!][[hi!][10]] RetryOnPrimaryException[]", throwable20);
        java.lang.String str22 = retryOnPrimaryException21.getDetailedMessage();
        java.lang.Throwable throwable23 = retryOnPrimaryException21.unwrapCause();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "RetryOnPrimaryException[[hi!][[hi!][10]] RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str22, "RetryOnPrimaryException[[hi!][[hi!][10]] RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals(throwable23.toString(), "RetryOnPrimaryException[[hi!][[hi!][10]] RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6328");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        java.util.List<java.lang.String> strList14 = null;
        retryOnPrimaryException12.addHeader("retry_on_primary_exception", strList14);
        java.lang.Throwable throwable16 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.index.Index index17 = null;
        retryOnPrimaryException12.setIndex(index17);
        java.lang.Throwable throwable19 = retryOnPrimaryException12.unwrapCause();
        java.lang.Throwable[] throwableArray20 = retryOnPrimaryException12.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        java.util.List<java.lang.String> strList27 = null;
        retryOnPrimaryException25.addHeader("retry_on_primary_exception", strList27);
        java.lang.Throwable throwable29 = retryOnPrimaryException25.unwrapCause();
        org.elasticsearch.index.Index index30 = null;
        retryOnPrimaryException25.setIndex(index30);
        java.lang.String str32 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", throwable36);
        java.util.List<java.lang.String> strList39 = null;
        retryOnPrimaryException37.addHeader("retry_on_primary_exception", strList39);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        retryOnPrimaryException37.setShard(shardId41);
        org.elasticsearch.index.shard.ShardId shardId43 = retryOnPrimaryException37.getShardId();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        java.lang.Throwable throwable49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", throwable49);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", (java.lang.Throwable) retryOnPrimaryException50);
        java.lang.String[] strArray56 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException51.setResources("retry_on_primary_exception", strArray56);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray58 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException51);
        java.lang.String[] strArray65 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException51.setResources("", strArray65);
        retryOnPrimaryException37.addHeader("", strArray65);
        retryOnPrimaryException25.addHeader("", strArray65);
        retryOnPrimaryException12.addHeader("[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray65);
        retryOnPrimaryException6.addHeader("[hi!][[hi!][10]] RetryOnPrimaryException[]", strArray65);
        java.util.List<java.lang.String> strList71 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray72 = retryOnPrimaryException6.guessRootCauses();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "");
        org.junit.Assert.assertEquals(throwable29.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "retry_on_primary_exception" + "'", str32, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray58);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray72);
    }

    @Test
    public void test6329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6329");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        java.lang.Throwable throwable9 = retryOnPrimaryException5.unwrapCause();
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException5.setIndex(index10);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", throwable16);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", (java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String[] strArray23 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException18.setResources("retry_on_primary_exception", strArray23);
        java.lang.String str25 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException18);
        retryOnPrimaryException5.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", throwable32);
        java.util.List<java.lang.String> strList35 = null;
        retryOnPrimaryException33.addHeader("retry_on_primary_exception", strList35);
        java.lang.Throwable throwable37 = retryOnPrimaryException33.unwrapCause();
        org.elasticsearch.index.Index index38 = null;
        retryOnPrimaryException33.setIndex(index38);
        retryOnPrimaryException33.setShard("hi!", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException46);
        java.lang.String[] strArray49 = new java.lang.String[] {};
        retryOnPrimaryException46.setResources("", strArray49);
        retryOnPrimaryException33.addHeader("", strArray49);
        retryOnPrimaryException5.addHeader("", strArray49);
        java.lang.String str53 = retryOnPrimaryException5.getResourceType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "retry_on_primary_exception" + "'", str25, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "");
        org.junit.Assert.assertEquals(throwable37.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test6330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6330");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "retry_on_primary_exception");
        java.lang.Throwable throwable24 = retryOnPrimaryException23.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        java.lang.Throwable throwable30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", throwable30);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", (java.lang.Throwable) retryOnPrimaryException31);
        java.lang.String[] strArray37 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException32.setResources("retry_on_primary_exception", strArray37);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable45);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "", (java.lang.Throwable) retryOnPrimaryException46);
        java.lang.String[] strArray52 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException47.setResources("retry_on_primary_exception", strArray52);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String[] strArray61 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException47.setResources("", strArray61);
        retryOnPrimaryException32.addHeader("", strArray61);
        retryOnPrimaryException23.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray61);
        java.lang.String str65 = retryOnPrimaryException23.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray66 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.String str67 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.Throwable[] throwableArray68 = retryOnPrimaryException23.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException23);
        retryOnPrimaryException17.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.common.io.stream.StreamInput streamInput71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException17, streamInput71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str65, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "retry_on_primary_exception" + "'", str67, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray68);
    }

    @Test
    public void test6331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6331");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        retryOnPrimaryException3.setShard(shardId7);
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException3.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.Throwable[] throwableArray11 = retryOnPrimaryException3.getSuppressed();
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test6332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6332");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str10 = retryOnPrimaryException8.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", throwable17);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", (java.lang.Throwable) retryOnPrimaryException18);
        java.lang.String[] strArray24 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException19.setResources("retry_on_primary_exception", strArray24);
        retryOnPrimaryException8.addHeader("", strArray24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId28 = retryOnPrimaryException8.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.rest.RestStatus restStatus31 = retryOnPrimaryException29.status();
        retryOnPrimaryException29.setIndex("[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]][[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertTrue("'" + restStatus31 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus31.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6333");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException5.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException5.getShardId();
        java.lang.Throwable throwable10 = retryOnPrimaryException5.unwrapCause();
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable10);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test6334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6334");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException16.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException33);
        java.util.Set<java.lang.String> strSet41 = retryOnPrimaryException33.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        retryOnPrimaryException33.setShard(shardId42);
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException33);
        java.lang.String str45 = retryOnPrimaryException33.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId46 = retryOnPrimaryException33.getShardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException33.writeTo(streamOutput47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "retry_on_primary_exception" + "'", str45, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId46);
    }

    @Test
    public void test6335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6335");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String[] strArray20 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException6.setResources("", strArray20);
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", throwable28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", (java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String[] strArray35 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException30.setResources("retry_on_primary_exception", strArray35);
        java.util.List<java.lang.String> strList37 = retryOnPrimaryException30.getResourceId();
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException30.getHeader("[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.Throwable throwable41 = retryOnPrimaryException30.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId42 = retryOnPrimaryException30.getShardId();
        java.lang.String str43 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String[] strArray50 = new java.lang.String[] {};
        retryOnPrimaryException47.setResources("", strArray50);
        org.elasticsearch.index.Index index52 = retryOnPrimaryException47.getIndex();
        org.elasticsearch.index.Index index53 = retryOnPrimaryException47.getIndex();
        java.util.List<java.lang.String> strList54 = retryOnPrimaryException47.getResourceId();
        retryOnPrimaryException30.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList54);
        retryOnPrimaryException6.addHeader("[[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList54);
        org.elasticsearch.index.shard.ShardId shardId57 = retryOnPrimaryException6.getShardId();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "");
        org.junit.Assert.assertEquals(throwable41.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "retry_on_primary_exception" + "'", str43, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNull(index52);
        org.junit.Assert.assertNull(index53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNull(shardId57);
    }

    @Test
    public void test6336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6336");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException3.getHeader("hi!");
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException3.getHeader("");
        retryOnPrimaryException3.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException17.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 1);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        java.util.List<java.lang.String> strList27 = null;
        retryOnPrimaryException25.addHeader("retry_on_primary_exception", strList27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        retryOnPrimaryException25.setShard(shardId29);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", throwable36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException38.setResources("retry_on_primary_exception", strArray43);
        java.lang.String str45 = retryOnPrimaryException38.toString();
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException38);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException38.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        java.lang.Throwable throwable53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "", throwable53);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", (java.lang.Throwable) retryOnPrimaryException54);
        java.lang.String[] strArray60 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException55.setResources("retry_on_primary_exception", strArray60);
        java.util.List<java.lang.String> strList62 = retryOnPrimaryException55.getResourceId();
        retryOnPrimaryException38.addHeader("retry_on_primary_exception", strList62);
        retryOnPrimaryException25.addHeader("retry_on_primary_exception", strList62);
        retryOnPrimaryException17.addHeader("", strList62);
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList62);
        java.util.Set<java.lang.String> strSet67 = retryOnPrimaryException3.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException69 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException3, streamOutput68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str45, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(strSet67);
    }

    @Test
    public void test6337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6337");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        retryOnPrimaryException3.setShard("hi!", (int) (short) 10);
        java.lang.String str13 = retryOnPrimaryException3.toString();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException3.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", (java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String[] strArray27 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException22.setResources("retry_on_primary_exception", strArray27);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray29 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        retryOnPrimaryException22.setShard("hi!", (int) (short) 10);
        java.lang.String str33 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str34 = retryOnPrimaryException22.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = retryOnPrimaryException22.guessRootCauses();
        java.lang.Throwable throwable36 = retryOnPrimaryException22.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        java.lang.Throwable throwable42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "", throwable42);
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException43);
        java.util.Set<java.lang.String> strSet46 = retryOnPrimaryException43.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "", throwable54);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", (java.lang.Throwable) retryOnPrimaryException55);
        java.lang.String[] strArray61 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException56.setResources("retry_on_primary_exception", strArray61);
        java.lang.String str63 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray64 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException56);
        boolean boolean65 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException56);
        boolean boolean66 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException56);
        java.lang.String[] strArray82 = new java.lang.String[] { "RetryOnPrimaryException[retry_on_primary_exception]", "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        retryOnPrimaryException56.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList83);
        retryOnPrimaryException43.addHeader("RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList83);
        retryOnPrimaryException22.addHeader("[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList83);
        retryOnPrimaryException3.addHeader("[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList83);
        org.elasticsearch.common.io.stream.StreamInput streamInput89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception90 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException3, streamInput89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str13, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "retry_on_primary_exception" + "'", str33, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str34, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "retry_on_primary_exception" + "'", str63, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test6338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6338");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str10 = retryOnPrimaryException8.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", throwable17);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", (java.lang.Throwable) retryOnPrimaryException18);
        java.lang.String[] strArray24 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException19.setResources("retry_on_primary_exception", strArray24);
        retryOnPrimaryException8.addHeader("", strArray24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId28 = retryOnPrimaryException8.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String str31 = retryOnPrimaryException29.toString();
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "", throwable37);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", (java.lang.Throwable) retryOnPrimaryException38);
        java.util.Set<java.lang.String> strSet40 = retryOnPrimaryException38.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "retry_on_primary_exception");
        java.lang.Throwable throwable45 = retryOnPrimaryException44.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", throwable51);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", (java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String[] strArray58 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException53.setResources("retry_on_primary_exception", strArray58);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray60 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        java.lang.Throwable throwable66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "", throwable66);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "", (java.lang.Throwable) retryOnPrimaryException67);
        java.lang.String[] strArray73 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException68.setResources("retry_on_primary_exception", strArray73);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray75 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException68);
        java.lang.String[] strArray82 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException68.setResources("", strArray82);
        retryOnPrimaryException53.addHeader("", strArray82);
        retryOnPrimaryException44.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray82);
        retryOnPrimaryException38.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray82);
        retryOnPrimaryException29.addHeader("RetryOnPrimaryException[]", strArray82);
        java.lang.String str88 = retryOnPrimaryException29.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray89 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String str90 = retryOnPrimaryException29.getDetailedMessage();
        org.elasticsearch.index.Index index91 = retryOnPrimaryException29.getIndex();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];" + "'", str31, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable45.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray60);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray75);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];" + "'", str88, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str90, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNull(index91);
    }

    @Test
    public void test6339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6339");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException4.guessRootCauses();
        retryOnPrimaryException4.setIndex("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("RetryOnPrimaryException[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ];");
        java.lang.Throwable throwable11 = retryOnPrimaryException4.getRootCause();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", throwable17);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", (java.lang.Throwable) retryOnPrimaryException18);
        java.lang.String[] strArray24 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException19.setResources("retry_on_primary_exception", strArray24);
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException19.getResourceId();
        boolean boolean27 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException19.getHeader("[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.Throwable throwable30 = retryOnPrimaryException19.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", throwable36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException38.setResources("retry_on_primary_exception", strArray43);
        java.lang.String str45 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray46 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException38);
        retryOnPrimaryException38.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "", throwable54);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", (java.lang.Throwable) retryOnPrimaryException55);
        java.lang.String[] strArray61 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException56.setResources("retry_on_primary_exception", strArray61);
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        java.lang.Throwable throwable68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "", throwable68);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "", (java.lang.Throwable) retryOnPrimaryException69);
        java.lang.String[] strArray75 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException70.setResources("retry_on_primary_exception", strArray75);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray77 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException70);
        java.lang.String[] strArray84 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException70.setResources("", strArray84);
        retryOnPrimaryException56.setResources("rest.exception.cause.skip", strArray84);
        retryOnPrimaryException38.setResources("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray84);
        retryOnPrimaryException19.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray84);
        java.lang.String str89 = retryOnPrimaryException19.getDetailedMessage();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "");
        org.junit.Assert.assertEquals(throwable30.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "retry_on_primary_exception" + "'", str45, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray46);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray77);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str89, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6340");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.Throwable throwable8 = retryOnPrimaryException7.getRootCause();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable throwable10 = retryOnPrimaryException7.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException7.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6341");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable18 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException25.setResources("retry_on_primary_exception", strArray30);
        throwable18.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId35 = retryOnPrimaryException33.getShardId();
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        retryOnPrimaryException39.setShard(shardId40);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        retryOnPrimaryException39.setShard(shardId42);
        java.util.List<java.lang.String> strList45 = retryOnPrimaryException39.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.Throwable throwable46 = retryOnPrimaryException39.unwrapCause();
        retryOnPrimaryException33.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.rest.RestStatus restStatus48 = retryOnPrimaryException39.status();
        java.lang.String str49 = retryOnPrimaryException39.getResourceType();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        org.junit.Assert.assertTrue("'" + restStatus48 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus48.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test6342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6342");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str20 = retryOnPrimaryException19.toString();
        retryOnPrimaryException19.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) (byte) 10);
        java.util.Set<java.lang.String> strSet24 = retryOnPrimaryException19.getHeaderKeys();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder25 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params26 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder27 = retryOnPrimaryException19.toXContent(xContentBuilder25, params26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str20, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(params26);
    }

    @Test
    public void test6343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6343");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException16.status();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException16.status();
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException16.getSuppressed();
        retryOnPrimaryException16.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 1);
        java.lang.Throwable throwable25 = retryOnPrimaryException16.unwrapCause();
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable25);
        boolean boolean27 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable25);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "");
        org.junit.Assert.assertEquals(throwable25.toString(), "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test6344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6344");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str19 = retryOnPrimaryException10.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", throwable22);
        java.util.List<java.lang.String> strList25 = null;
        retryOnPrimaryException23.addHeader("retry_on_primary_exception", strList25);
        java.lang.Throwable throwable27 = retryOnPrimaryException23.unwrapCause();
        org.elasticsearch.index.Index index28 = null;
        retryOnPrimaryException23.setIndex(index28);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", throwable34);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", (java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String[] strArray41 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException36.setResources("retry_on_primary_exception", strArray41);
        java.lang.String str43 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException36);
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "", throwable50);
        java.util.List<java.lang.String> strList53 = null;
        retryOnPrimaryException51.addHeader("retry_on_primary_exception", strList53);
        java.lang.Throwable throwable55 = retryOnPrimaryException51.unwrapCause();
        org.elasticsearch.index.Index index56 = null;
        retryOnPrimaryException51.setIndex(index56);
        retryOnPrimaryException51.setShard("hi!", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray65 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException64);
        java.lang.String[] strArray67 = new java.lang.String[] {};
        retryOnPrimaryException64.setResources("", strArray67);
        retryOnPrimaryException51.addHeader("", strArray67);
        retryOnPrimaryException23.addHeader("", strArray67);
        java.lang.String str71 = retryOnPrimaryException23.getDetailedMessage();
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        boolean boolean73 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.rest.RestStatus restStatus74 = retryOnPrimaryException10.status();
        java.lang.String str75 = retryOnPrimaryException10.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray76 = retryOnPrimaryException10.guessRootCauses();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "");
        org.junit.Assert.assertEquals(throwable27.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "retry_on_primary_exception" + "'", str43, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(throwable55);
        org.junit.Assert.assertEquals(throwable55.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable55.getMessage(), "");
        org.junit.Assert.assertEquals(throwable55.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str71, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + restStatus74 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus74.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str75, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray76);
    }

    @Test
    public void test6345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6345");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable18 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[retry_on_primary_exception]", throwable18);
        org.elasticsearch.index.Index index20 = retryOnPrimaryException19.getIndex();
        java.lang.String str21 = retryOnPrimaryException19.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(index20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str21, "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6346");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        java.lang.Throwable throwable10 = retryOnPrimaryException3.unwrapCause();
        java.lang.Throwable[] throwableArray11 = retryOnPrimaryException3.getSuppressed();
        retryOnPrimaryException3.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) '4');
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException3.setShard(shardId15);
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException3.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", throwable22);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", (java.lang.Throwable) retryOnPrimaryException23);
        java.lang.String[] strArray29 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException24.setResources("retry_on_primary_exception", strArray29);
        java.lang.String str31 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable throwable32 = retryOnPrimaryException24.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "", throwable37);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", (java.lang.Throwable) retryOnPrimaryException38);
        java.lang.String[] strArray44 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException39.setResources("retry_on_primary_exception", strArray44);
        throwable32.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException39.getSuppressed();
        org.elasticsearch.index.Index index48 = null;
        retryOnPrimaryException39.setIndex(index48);
        org.elasticsearch.index.shard.ShardId shardId50 = retryOnPrimaryException39.getShardId();
        java.lang.Throwable[] throwableArray51 = retryOnPrimaryException39.getSuppressed();
        java.lang.String str52 = retryOnPrimaryException39.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.index.Index index56 = retryOnPrimaryException55.getIndex();
        java.lang.Throwable throwable57 = retryOnPrimaryException55.getRootCause();
        retryOnPrimaryException39.addSuppressed(throwable57);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray59 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException39);
        retryOnPrimaryException39.setShard("[hi!][[hi!][52]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (byte) 0);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        java.lang.Class<?> wildcardClass64 = retryOnPrimaryException39.getClass();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "retry_on_primary_exception" + "'", str31, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "retry_on_primary_exception" + "'", str52, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index56);
        org.junit.Assert.assertNotNull(throwable57);
        org.junit.Assert.assertEquals(throwable57.getLocalizedMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable57.getMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable57.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray59);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test6347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6347");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException23.getResourceId();
        retryOnPrimaryException6.addHeader("retry_on_primary_exception", strList30);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", throwable35);
        java.util.List<java.lang.String> strList38 = null;
        retryOnPrimaryException36.addHeader("retry_on_primary_exception", strList38);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        retryOnPrimaryException36.setShard(shardId40);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", throwable47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", (java.lang.Throwable) retryOnPrimaryException48);
        java.lang.String[] strArray54 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException49.setResources("retry_on_primary_exception", strArray54);
        java.lang.String str56 = retryOnPrimaryException49.toString();
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.Throwable[] throwableArray58 = retryOnPrimaryException49.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        java.lang.Throwable throwable64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "", throwable64);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "", (java.lang.Throwable) retryOnPrimaryException65);
        java.lang.String[] strArray71 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException66.setResources("retry_on_primary_exception", strArray71);
        java.util.List<java.lang.String> strList73 = retryOnPrimaryException66.getResourceId();
        retryOnPrimaryException49.addHeader("retry_on_primary_exception", strList73);
        retryOnPrimaryException36.addHeader("retry_on_primary_exception", strList73);
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList73);
        java.util.Set<java.lang.String> strSet77 = retryOnPrimaryException6.getHeaderKeys();
        java.lang.Throwable throwable78 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus79 = retryOnPrimaryException6.status();
        java.lang.Throwable throwable80 = retryOnPrimaryException6.unwrapCause();
        java.lang.Class<?> wildcardClass81 = retryOnPrimaryException6.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str56, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertNotNull(throwable78);
        org.junit.Assert.assertEquals(throwable78.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable78.getMessage(), "");
        org.junit.Assert.assertEquals(throwable78.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + restStatus79 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus79.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable80);
        org.junit.Assert.assertEquals(throwable80.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable80.getMessage(), "");
        org.junit.Assert.assertEquals(throwable80.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test6348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6348");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
    }

    @Test
    public void test6349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6349");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str22 = retryOnPrimaryException21.toString();
        retryOnPrimaryException21.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) (byte) 10);
        java.util.Set<java.lang.String> strSet26 = retryOnPrimaryException21.getHeaderKeys();
        java.lang.Throwable throwable27 = retryOnPrimaryException21.getRootCause();
        java.lang.String str28 = retryOnPrimaryException21.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str22, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "");
        org.junit.Assert.assertEquals(throwable27.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][10]] RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str28, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][10]] RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6350");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable8 = retryOnPrimaryException6.getRootCause();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", throwable12);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException13.addHeader("retry_on_primary_exception", strList15);
        java.lang.Throwable throwable17 = retryOnPrimaryException13.unwrapCause();
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException13.setIndex(index18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException26.setResources("retry_on_primary_exception", strArray31);
        java.lang.String str33 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray34 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = retryOnPrimaryException26.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.index.shard.ShardId shardId41 = retryOnPrimaryException39.getShardId();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException39);
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException39);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "retry_on_primary_exception" + "'", str33, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test6351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6351");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = retryOnPrimaryException7.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException7.guessRootCauses();
        java.lang.String str11 = retryOnPrimaryException7.toString();
        org.elasticsearch.common.io.stream.StreamInput streamInput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException13 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException7, streamInput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];" + "'", str11, "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6352");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        java.lang.Throwable throwable7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", throwable7);
        java.util.List<java.lang.String> strList10 = null;
        retryOnPrimaryException8.addHeader("retry_on_primary_exception", strList10);
        java.lang.Throwable throwable12 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.index.Index index13 = null;
        retryOnPrimaryException8.setIndex(index13);
        java.lang.Throwable throwable15 = retryOnPrimaryException8.unwrapCause();
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException8.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        java.util.List<java.lang.String> strList23 = null;
        retryOnPrimaryException21.addHeader("retry_on_primary_exception", strList23);
        java.lang.Throwable throwable25 = retryOnPrimaryException21.unwrapCause();
        org.elasticsearch.index.Index index26 = null;
        retryOnPrimaryException21.setIndex(index26);
        java.lang.String str28 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", throwable32);
        java.util.List<java.lang.String> strList35 = null;
        retryOnPrimaryException33.addHeader("retry_on_primary_exception", strList35);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        retryOnPrimaryException33.setShard(shardId37);
        org.elasticsearch.index.shard.ShardId shardId39 = retryOnPrimaryException33.getShardId();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable45);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "", (java.lang.Throwable) retryOnPrimaryException46);
        java.lang.String[] strArray52 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException47.setResources("retry_on_primary_exception", strArray52);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String[] strArray61 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException47.setResources("", strArray61);
        retryOnPrimaryException33.addHeader("", strArray61);
        retryOnPrimaryException21.addHeader("", strArray61);
        retryOnPrimaryException8.addHeader("[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray61);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strArray61);
        java.lang.Throwable throwable67 = retryOnPrimaryException2.getRootCause();
        retryOnPrimaryException2.setIndex("[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.String str70 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "");
        org.junit.Assert.assertEquals(throwable25.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "retry_on_primary_exception" + "'", str28, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(throwable67);
        org.junit.Assert.assertEquals(throwable67.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable67.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable67.toString(), "[[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[rest.exception.stacktrace.skip]" + "'", str70, "[[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
    }

    @Test
    public void test6353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6353");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.String str3 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("[hi!][[hi!][52]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (short) 0);
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException2.getSuppressed();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "retry_on_primary_exception" + "'", str3, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test6354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6354");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException26.setResources("retry_on_primary_exception", strArray31);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray40 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException26.setResources("", strArray40);
        retryOnPrimaryException11.addHeader("", strArray40);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray40);
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str45 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId46 = retryOnPrimaryException2.getShardId();
        java.util.List<java.lang.String> strList47 = retryOnPrimaryException2.getResourceId();
        java.util.Set<java.lang.String> strSet48 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception" + "'", str45, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(strSet48);
    }

    @Test
    public void test6355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6355");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException6.getHeader("[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.Throwable throwable17 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", throwable22);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", (java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId25 = retryOnPrimaryException24.getShardId();
        org.elasticsearch.rest.RestStatus restStatus26 = retryOnPrimaryException24.status();
        java.lang.String str27 = retryOnPrimaryException24.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        retryOnPrimaryException24.setShard(shardId28);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", throwable35);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", (java.lang.Throwable) retryOnPrimaryException36);
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException36.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "", throwable46);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "", (java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String[] strArray53 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException48.setResources("retry_on_primary_exception", strArray53);
        java.lang.String str55 = retryOnPrimaryException48.toString();
        boolean boolean56 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException48);
        java.lang.Throwable[] throwableArray57 = retryOnPrimaryException48.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "", throwable63);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "", (java.lang.Throwable) retryOnPrimaryException64);
        java.lang.String[] strArray70 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException65.setResources("retry_on_primary_exception", strArray70);
        java.util.List<java.lang.String> strList72 = retryOnPrimaryException65.getResourceId();
        retryOnPrimaryException48.addHeader("retry_on_primary_exception", strList72);
        retryOnPrimaryException36.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", strList72);
        retryOnPrimaryException24.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList72);
        org.elasticsearch.index.shard.ShardId shardId76 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException78 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId76, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        boolean boolean79 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException78);
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException78);
        java.lang.String str81 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException24);
        throwable17.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.util.List<java.lang.String> strList83 = retryOnPrimaryException24.getResourceId();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertTrue("'" + restStatus26 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus26.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str55, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "retry_on_primary_exception" + "'", str81, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList83);
    }

    @Test
    public void test6356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6356");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable13 = retryOnPrimaryException10.getRootCause();
        retryOnPrimaryException10.setShard("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 10);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "");
        org.junit.Assert.assertEquals(throwable13.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
    }

    @Test
    public void test6357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6357");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        retryOnPrimaryException2.setIndex("[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        retryOnPrimaryException2.setShard(shardId7);
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable6.toString(), "[[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]");
    }

    @Test
    public void test6358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6358");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray4 = retryOnPrimaryException3.guessRootCauses();
        java.lang.String str5 = retryOnPrimaryException3.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", throwable10);
        java.util.List<java.lang.String> strList13 = null;
        retryOnPrimaryException11.addHeader("retry_on_primary_exception", strList13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String str16 = retryOnPrimaryException11.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", (java.lang.Throwable) retryOnPrimaryException11);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.rest.RestStatus restStatus19 = retryOnPrimaryException11.status();
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException11.getHeader("");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "");
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException33);
        java.lang.Throwable throwable41 = retryOnPrimaryException33.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "RetryOnPrimaryException[retry_on_primary_exception]", throwable41);
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException42);
        java.lang.String str44 = retryOnPrimaryException24.getResourceType();
        java.util.Set<java.lang.String> strSet45 = retryOnPrimaryException24.getHeaderKeys();
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Class<?> wildcardClass47 = retryOnPrimaryException11.getClass();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "RetryOnPrimaryException[]" + "'", str16, "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + restStatus19 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus19.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "");
        org.junit.Assert.assertEquals(throwable41.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test6359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6359");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException5.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", throwable15);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", (java.lang.Throwable) retryOnPrimaryException16);
        java.lang.String[] strArray22 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException17.setResources("retry_on_primary_exception", strArray22);
        java.lang.String str24 = retryOnPrimaryException17.toString();
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.Throwable[] throwableArray26 = retryOnPrimaryException17.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", throwable32);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", (java.lang.Throwable) retryOnPrimaryException33);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException34.setResources("retry_on_primary_exception", strArray39);
        java.util.List<java.lang.String> strList41 = retryOnPrimaryException34.getResourceId();
        retryOnPrimaryException17.addHeader("retry_on_primary_exception", strList41);
        retryOnPrimaryException5.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", strList41);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", throwable47);
        java.util.List<java.lang.String> strList50 = null;
        retryOnPrimaryException48.addHeader("retry_on_primary_exception", strList50);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        retryOnPrimaryException48.setShard(shardId52);
        org.elasticsearch.index.shard.ShardId shardId54 = retryOnPrimaryException48.getShardId();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        java.lang.Throwable throwable60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "", throwable60);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "", (java.lang.Throwable) retryOnPrimaryException61);
        java.lang.String[] strArray67 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException62.setResources("retry_on_primary_exception", strArray67);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray69 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException62);
        java.lang.String[] strArray76 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException62.setResources("", strArray76);
        retryOnPrimaryException48.addHeader("", strArray76);
        org.elasticsearch.index.Index index79 = retryOnPrimaryException48.getIndex();
        java.lang.String[] strArray81 = new java.lang.String[] {};
        retryOnPrimaryException48.addHeader("rest.exception.cause.skip", strArray81);
        retryOnPrimaryException5.addHeader("[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray81);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray84 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException5);
        java.lang.Throwable[] throwableArray85 = retryOnPrimaryException5.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus86 = retryOnPrimaryException5.status();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str24, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(shardId54);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray69);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNull(index79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray84);
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertTrue("'" + restStatus86 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus86.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6360");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.String str8 = retryOnPrimaryException3.toString();
        java.lang.String str9 = retryOnPrimaryException3.getDetailedMessage();
        org.elasticsearch.index.Index index10 = retryOnPrimaryException3.getIndex();
        java.lang.String str11 = retryOnPrimaryException3.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.common.io.stream.StreamInput streamInput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception14 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException3, streamInput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "RetryOnPrimaryException[]" + "'", str8, "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(index10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
    }

    @Test
    public void test6361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6361");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        java.lang.Throwable throwable10 = retryOnPrimaryException3.unwrapCause();
        java.lang.Throwable[] throwableArray11 = retryOnPrimaryException3.getSuppressed();
        org.elasticsearch.index.Index index12 = retryOnPrimaryException3.getIndex();
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException20);
        retryOnPrimaryException20.setIndex("hi!");
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str32 = retryOnPrimaryException20.toString();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException3.getShardId();
        org.elasticsearch.rest.RestStatus restStatus35 = retryOnPrimaryException3.status();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNull(index12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str32, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertTrue("'" + restStatus35 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus35.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6362");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable18 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException25.setResources("retry_on_primary_exception", strArray30);
        throwable18.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String str34 = retryOnPrimaryException25.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!][[hi!][10]] RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = retryOnPrimaryException35.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String str38 = retryOnPrimaryException35.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = retryOnPrimaryException35.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus40 = retryOnPrimaryException35.status();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str34, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertTrue("'" + restStatus40 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus40.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6363");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];]");
    }

    @Test
    public void test6364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6364");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException23.getResourceId();
        retryOnPrimaryException6.addHeader("retry_on_primary_exception", strList30);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", throwable35);
        java.util.List<java.lang.String> strList38 = null;
        retryOnPrimaryException36.addHeader("retry_on_primary_exception", strList38);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        retryOnPrimaryException36.setShard(shardId40);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", throwable47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", (java.lang.Throwable) retryOnPrimaryException48);
        java.lang.String[] strArray54 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException49.setResources("retry_on_primary_exception", strArray54);
        java.lang.String str56 = retryOnPrimaryException49.toString();
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.Throwable[] throwableArray58 = retryOnPrimaryException49.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        java.lang.Throwable throwable64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "", throwable64);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "", (java.lang.Throwable) retryOnPrimaryException65);
        java.lang.String[] strArray71 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException66.setResources("retry_on_primary_exception", strArray71);
        java.util.List<java.lang.String> strList73 = retryOnPrimaryException66.getResourceId();
        retryOnPrimaryException49.addHeader("retry_on_primary_exception", strList73);
        retryOnPrimaryException36.addHeader("retry_on_primary_exception", strList73);
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList73);
        java.util.Set<java.lang.String> strSet77 = retryOnPrimaryException6.getHeaderKeys();
        java.lang.String str78 = retryOnPrimaryException6.getResourceType();
        java.lang.String str79 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.index.Index index80 = retryOnPrimaryException6.getIndex();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str56, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "retry_on_primary_exception" + "'", str78, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str79, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(index80);
    }

    @Test
    public void test6365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6365");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str19 = retryOnPrimaryException10.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", throwable22);
        java.util.List<java.lang.String> strList25 = null;
        retryOnPrimaryException23.addHeader("retry_on_primary_exception", strList25);
        java.lang.Throwable throwable27 = retryOnPrimaryException23.unwrapCause();
        org.elasticsearch.index.Index index28 = null;
        retryOnPrimaryException23.setIndex(index28);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", throwable34);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", (java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String[] strArray41 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException36.setResources("retry_on_primary_exception", strArray41);
        java.lang.String str43 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException36);
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "", throwable50);
        java.util.List<java.lang.String> strList53 = null;
        retryOnPrimaryException51.addHeader("retry_on_primary_exception", strList53);
        java.lang.Throwable throwable55 = retryOnPrimaryException51.unwrapCause();
        org.elasticsearch.index.Index index56 = null;
        retryOnPrimaryException51.setIndex(index56);
        retryOnPrimaryException51.setShard("hi!", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray65 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException64);
        java.lang.String[] strArray67 = new java.lang.String[] {};
        retryOnPrimaryException64.setResources("", strArray67);
        retryOnPrimaryException51.addHeader("", strArray67);
        retryOnPrimaryException23.addHeader("", strArray67);
        java.lang.String str71 = retryOnPrimaryException23.getDetailedMessage();
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.String str73 = retryOnPrimaryException23.toString();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "");
        org.junit.Assert.assertEquals(throwable27.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "retry_on_primary_exception" + "'", str43, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(throwable55);
        org.junit.Assert.assertEquals(throwable55.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable55.getMessage(), "");
        org.junit.Assert.assertEquals(throwable55.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray65);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str71, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "RetryOnPrimaryException[]" + "'", str73, "RetryOnPrimaryException[]");
    }

    @Test
    public void test6366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6366");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        retryOnPrimaryException3.setShard(shardId7);
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException3.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException3);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test6367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6367");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getHeader("retry_on_primary_exception");
        org.elasticsearch.index.Index index7 = retryOnPrimaryException4.getIndex();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
    }

    @Test
    public void test6368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6368");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        java.lang.Throwable throwable30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", throwable30);
        java.util.List<java.lang.String> strList33 = null;
        retryOnPrimaryException31.addHeader("retry_on_primary_exception", strList33);
        java.lang.Throwable throwable35 = retryOnPrimaryException31.unwrapCause();
        org.elasticsearch.index.Index index36 = null;
        retryOnPrimaryException31.setIndex(index36);
        retryOnPrimaryException31.setShard("hi!", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException44);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        retryOnPrimaryException44.setResources("", strArray47);
        retryOnPrimaryException31.addHeader("", strArray47);
        retryOnPrimaryException3.addHeader("", strArray47);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        retryOnPrimaryException3.setShard(shardId51);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray53 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        java.util.List<java.lang.String> strList54 = retryOnPrimaryException3.getResourceId();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "");
        org.junit.Assert.assertEquals(throwable35.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray53);
        org.junit.Assert.assertNull(strList54);
    }

    @Test
    public void test6369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6369");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException25.setResources("retry_on_primary_exception", strArray30);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String[] strArray39 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException25.setResources("", strArray39);
        retryOnPrimaryException10.addHeader("", strArray39);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str44 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException43);
        java.lang.Throwable throwable45 = retryOnPrimaryException43.getRootCause();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "retry_on_primary_exception" + "'", str44, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "");
        org.junit.Assert.assertEquals(throwable45.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6370");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        retryOnPrimaryException2.setShard(shardId3);
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.String str9 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "retry_on_primary_exception");
        java.lang.Throwable throwable14 = retryOnPrimaryException13.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", (java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String[] strArray27 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException22.setResources("retry_on_primary_exception", strArray27);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray29 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", throwable35);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", (java.lang.Throwable) retryOnPrimaryException36);
        java.lang.String[] strArray42 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException37.setResources("retry_on_primary_exception", strArray42);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String[] strArray51 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException37.setResources("", strArray51);
        retryOnPrimaryException22.addHeader("", strArray51);
        retryOnPrimaryException13.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray51);
        java.lang.String str55 = retryOnPrimaryException13.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray56 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        java.lang.Throwable throwable64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "", throwable64);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "", (java.lang.Throwable) retryOnPrimaryException65);
        java.lang.String[] strArray71 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException66.setResources("retry_on_primary_exception", strArray71);
        java.lang.String str73 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException66);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "", (java.lang.Throwable) retryOnPrimaryException66);
        org.elasticsearch.rest.RestStatus restStatus75 = retryOnPrimaryException74.status();
        org.elasticsearch.rest.RestStatus restStatus76 = retryOnPrimaryException74.status();
        java.lang.String str77 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException74);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray78 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException74);
        org.elasticsearch.index.shard.ShardId shardId80 = null;
        org.elasticsearch.index.shard.ShardId shardId82 = null;
        java.lang.Throwable throwable84 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException85 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId82, "", throwable84);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException86 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId80, "", (java.lang.Throwable) retryOnPrimaryException85);
        java.lang.String[] strArray91 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException86.setResources("retry_on_primary_exception", strArray91);
        java.util.List<java.lang.String> strList93 = retryOnPrimaryException86.getResourceId();
        retryOnPrimaryException74.addHeader("", strList93);
        retryOnPrimaryException13.addHeader("[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList93);
        retryOnPrimaryException2.addHeader("rest.exception.stacktrace.skip", strList93);
        java.lang.Throwable throwable97 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray29);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str55, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray56);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "retry_on_primary_exception" + "'", str73, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus75 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus75.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus76 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus76.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "retry_on_primary_exception" + "'", str77, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray78);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNotNull(throwable97);
        org.junit.Assert.assertEquals(throwable97.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable97.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable97.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
    }

    @Test
    public void test6371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6371");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str19 = retryOnPrimaryException3.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException27.setResources("retry_on_primary_exception", strArray32);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray34 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException27);
        java.lang.String[] strArray41 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException27.setResources("", strArray41);
        retryOnPrimaryException27.setShard("rest.exception.cause.skip", (int) '#');
        java.lang.String str46 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException27);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        java.lang.Throwable throwable48 = retryOnPrimaryException27.unwrapCause();
        java.lang.String str49 = retryOnPrimaryException27.toString();
        org.elasticsearch.rest.RestStatus restStatus50 = retryOnPrimaryException27.status();
        java.lang.Throwable[] throwableArray51 = retryOnPrimaryException27.getSuppressed();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray34);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "retry_on_primary_exception" + "'", str46, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable48);
        org.junit.Assert.assertEquals(throwable48.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable48.getMessage(), "");
        org.junit.Assert.assertEquals(throwable48.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str49, "[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus50 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus50.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test6372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6372");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        retryOnPrimaryException4.setShard(shardId5);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray14 = new java.lang.String[] {};
        retryOnPrimaryException11.setResources("", strArray14);
        org.elasticsearch.index.Index index16 = retryOnPrimaryException11.getIndex();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", throwable22);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", (java.lang.Throwable) retryOnPrimaryException23);
        java.lang.String[] strArray29 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException24.setResources("retry_on_primary_exception", strArray29);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", throwable36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException38.setResources("retry_on_primary_exception", strArray43);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException38);
        java.lang.String[] strArray52 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException38.setResources("", strArray52);
        retryOnPrimaryException24.setResources("rest.exception.cause.skip", strArray52);
        retryOnPrimaryException11.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", strArray52);
        java.util.Set<java.lang.String> strSet56 = retryOnPrimaryException11.getHeaderKeys();
        java.lang.Throwable[] throwableArray57 = retryOnPrimaryException11.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        retryOnPrimaryException11.setShard(shardId58);
        java.lang.String str60 = retryOnPrimaryException11.getResourceType();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]" + "'", str7, "RetryOnPrimaryException[[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str60, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
    }

    @Test
    public void test6373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6373");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        java.lang.Throwable throwable7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", throwable7);
        java.util.List<java.lang.String> strList10 = null;
        retryOnPrimaryException8.addHeader("retry_on_primary_exception", strList10);
        java.lang.Throwable throwable12 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.index.Index index13 = null;
        retryOnPrimaryException8.setIndex(index13);
        java.lang.Throwable throwable15 = retryOnPrimaryException8.unwrapCause();
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException8.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        java.util.List<java.lang.String> strList23 = null;
        retryOnPrimaryException21.addHeader("retry_on_primary_exception", strList23);
        java.lang.Throwable throwable25 = retryOnPrimaryException21.unwrapCause();
        org.elasticsearch.index.Index index26 = null;
        retryOnPrimaryException21.setIndex(index26);
        java.lang.String str28 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", throwable32);
        java.util.List<java.lang.String> strList35 = null;
        retryOnPrimaryException33.addHeader("retry_on_primary_exception", strList35);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        retryOnPrimaryException33.setShard(shardId37);
        org.elasticsearch.index.shard.ShardId shardId39 = retryOnPrimaryException33.getShardId();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable45);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "", (java.lang.Throwable) retryOnPrimaryException46);
        java.lang.String[] strArray52 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException47.setResources("retry_on_primary_exception", strArray52);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String[] strArray61 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException47.setResources("", strArray61);
        retryOnPrimaryException33.addHeader("", strArray61);
        retryOnPrimaryException21.addHeader("", strArray61);
        retryOnPrimaryException8.addHeader("[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray61);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strArray61);
        java.lang.String str67 = retryOnPrimaryException2.getResourceType();
        boolean boolean68 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList69 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus70 = retryOnPrimaryException2.status();
        java.lang.String str71 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index72 = retryOnPrimaryException2.getIndex();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "");
        org.junit.Assert.assertEquals(throwable25.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "retry_on_primary_exception" + "'", str28, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertTrue("'" + restStatus70 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus70.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]" + "'", str71, "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNull(index72);
    }

    @Test
    public void test6374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6374");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        retryOnPrimaryException3.setShard(shardId27);
        java.util.List<java.lang.String> strList30 = null;
        retryOnPrimaryException3.addHeader("[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList30);
        org.elasticsearch.index.Index index32 = retryOnPrimaryException3.getIndex();
        java.lang.Throwable throwable33 = retryOnPrimaryException3.getRootCause();
        java.lang.String str34 = retryOnPrimaryException3.toString();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(index32);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "");
        org.junit.Assert.assertEquals(throwable33.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "RetryOnPrimaryException[]" + "'", str34, "RetryOnPrimaryException[]");
    }

    @Test
    public void test6375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6375");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException3.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", throwable32);
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.Index index36 = retryOnPrimaryException33.getIndex();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = retryOnPrimaryException3.guessRootCauses();
        java.lang.String str39 = retryOnPrimaryException3.getResourceType();
        retryOnPrimaryException3.setShard("[][[][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 100);
        java.util.Set<java.lang.String> strSet43 = retryOnPrimaryException3.getHeaderKeys();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[[][[][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[[][[][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][100]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(index36);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strSet43);
    }

    @Test
    public void test6376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6376");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str6 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        retryOnPrimaryException4.setShard(shardId8);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException4.getHeader("[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        java.lang.String str27 = retryOnPrimaryException20.toString();
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException20.status();
        java.lang.String str29 = retryOnPrimaryException20.getDetailedMessage();
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException20.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "", throwable38);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", (java.lang.Throwable) retryOnPrimaryException39);
        java.lang.String[] strArray45 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException40.setResources("retry_on_primary_exception", strArray45);
        java.lang.String str47 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException40);
        retryOnPrimaryException40.setIndex("[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]");
        java.lang.String str51 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException40);
        java.util.List<java.lang.String> strList52 = retryOnPrimaryException40.getResourceId();
        retryOnPrimaryException20.addHeader("[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList52);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]", strList52);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str27, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str29, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "retry_on_primary_exception" + "'", str47, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "retry_on_primary_exception" + "'", str51, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strList52);
    }

    @Test
    public void test6377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6377");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.stacktrace.skip]", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = retryOnPrimaryException3.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
    }

    @Test
    public void test6378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6378");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[retry_on_primary_exception]");
        java.lang.Throwable[] throwableArray3 = retryOnPrimaryException2.getSuppressed();
        boolean boolean4 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        java.util.List<java.lang.String> strList11 = null;
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", strList11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable14 = retryOnPrimaryException9.unwrapCause();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException9.getResourceId();
        retryOnPrimaryException9.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str18 = retryOnPrimaryException9.getResourceType();
        java.lang.Throwable throwable19 = retryOnPrimaryException9.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException27.setResources("retry_on_primary_exception", strArray32);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray34 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException27);
        retryOnPrimaryException27.setShard("hi!", (int) (short) 10);
        java.lang.String str38 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException27);
        java.lang.String str39 = retryOnPrimaryException27.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray40 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        java.lang.Throwable throwable44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "", throwable44);
        java.util.List<java.lang.String> strList47 = null;
        retryOnPrimaryException45.addHeader("retry_on_primary_exception", strList47);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        retryOnPrimaryException45.setShard(shardId49);
        org.elasticsearch.index.shard.ShardId shardId51 = retryOnPrimaryException45.getShardId();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "", throwable57);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "", (java.lang.Throwable) retryOnPrimaryException58);
        java.lang.String[] strArray64 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException59.setResources("retry_on_primary_exception", strArray64);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray66 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException59);
        java.lang.String[] strArray73 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException59.setResources("", strArray73);
        retryOnPrimaryException45.addHeader("", strArray73);
        retryOnPrimaryException27.setResources("retry_on_primary_exception", strArray73);
        retryOnPrimaryException9.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray73);
        retryOnPrimaryException2.setResources("[[rest.exception.cause.skip] RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[[rest.exception.cause.skip] RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][100]] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray73);
        java.lang.Throwable throwable79 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable80 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "retry_on_primary_exception" + "'", str38, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str39, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray40);
        org.junit.Assert.assertNull(shardId51);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray66);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(throwable79);
        org.junit.Assert.assertEquals(throwable79.getLocalizedMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable79.getMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable79.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]");
        org.junit.Assert.assertNotNull(throwable80);
        org.junit.Assert.assertEquals(throwable80.getLocalizedMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable80.getMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable80.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]");
    }

    @Test
    public void test6379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6379");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException5.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException5.status();
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException5.getHeaderKeys();
        retryOnPrimaryException5.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", throwable19);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId22 = retryOnPrimaryException21.getShardId();
        org.elasticsearch.rest.RestStatus restStatus23 = retryOnPrimaryException21.status();
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String str25 = retryOnPrimaryException21.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray31 = retryOnPrimaryException29.guessRootCauses();
        retryOnPrimaryException29.setIndex("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException29.getHeader("RetryOnPrimaryException[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ];");
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "", throwable41);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "", (java.lang.Throwable) retryOnPrimaryException42);
        java.lang.String str44 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = retryOnPrimaryException43.guessRootCauses();
        retryOnPrimaryException43.setShard("hi!", (int) (byte) -1);
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException43);
        retryOnPrimaryException43.setIndex("");
        retryOnPrimaryException43.setIndex("");
        java.lang.Throwable[] throwableArray54 = retryOnPrimaryException43.getSuppressed();
        retryOnPrimaryException43.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", 0);
        boolean boolean58 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        java.lang.Throwable throwable64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "", throwable64);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "", (java.lang.Throwable) retryOnPrimaryException65);
        java.lang.String[] strArray71 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException66.setResources("retry_on_primary_exception", strArray71);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray73 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException66);
        retryOnPrimaryException66.setShard("hi!", (int) (short) 10);
        java.lang.String str77 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException66);
        java.lang.String str78 = retryOnPrimaryException66.toString();
        java.util.List<java.lang.String> strList79 = retryOnPrimaryException66.getResourceId();
        retryOnPrimaryException43.addHeader("RetryOnPrimaryException[[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList79);
        retryOnPrimaryException29.addHeader("[RetryOnPrimaryException[rest.exception.cause.skip]][[RetryOnPrimaryException[rest.exception.cause.skip]][32]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList79);
        retryOnPrimaryException21.addHeader("[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList79);
        retryOnPrimaryException5.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList79);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertTrue("'" + restStatus23 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus23.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray31);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "retry_on_primary_exception" + "'", str44, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "retry_on_primary_exception" + "'", str77, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str78, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strList79);
    }

    @Test
    public void test6380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6380");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]");
        java.util.List<java.lang.String> strList3 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[]]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
    }

    @Test
    public void test6381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6381");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException6.getShardId();
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException6.getShardId();
        java.lang.Throwable throwable9 = retryOnPrimaryException6.getRootCause();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable11 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", throwable15);
        java.util.List<java.lang.String> strList18 = null;
        retryOnPrimaryException16.addHeader("retry_on_primary_exception", strList18);
        java.lang.Throwable throwable20 = retryOnPrimaryException16.unwrapCause();
        org.elasticsearch.index.Index index21 = null;
        retryOnPrimaryException16.setIndex(index21);
        retryOnPrimaryException16.setShard("hi!", (int) (short) 10);
        java.lang.String str26 = retryOnPrimaryException16.toString();
        java.lang.String str27 = retryOnPrimaryException16.toString();
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", throwable32);
        java.util.List<java.lang.String> strList35 = null;
        retryOnPrimaryException33.addHeader("retry_on_primary_exception", strList35);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        retryOnPrimaryException33.setShard(shardId37);
        org.elasticsearch.index.shard.ShardId shardId39 = retryOnPrimaryException33.getShardId();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable45);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "", (java.lang.Throwable) retryOnPrimaryException46);
        java.lang.String[] strArray52 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException47.setResources("retry_on_primary_exception", strArray52);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String[] strArray61 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException47.setResources("", strArray61);
        retryOnPrimaryException33.addHeader("", strArray61);
        org.elasticsearch.index.Index index64 = retryOnPrimaryException33.getIndex();
        java.lang.String[] strArray66 = new java.lang.String[] {};
        retryOnPrimaryException33.addHeader("rest.exception.cause.skip", strArray66);
        retryOnPrimaryException16.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]", strArray66);
        retryOnPrimaryException6.setResources("[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray66);
        java.util.List<java.lang.String> strList71 = retryOnPrimaryException6.getHeader("[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        boolean boolean72 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str26, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str27, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNull(index64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test6382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6382");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId5 = retryOnPrimaryException2.getShardId();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("[retry_on_primary_exception] RetryOnPrimaryException[]");
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params13 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder14 = retryOnPrimaryException2.toXContent(xContentBuilder12, params13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(params13);
    }

    @Test
    public void test6383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6383");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException8.setShard("rest.exception.stacktrace.skip", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[retry_on_primary_exception]", (java.lang.Throwable) retryOnPrimaryException8);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException12.getResourceId();
        java.lang.Throwable throwable14 = retryOnPrimaryException12.unwrapCause();
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.Index index16 = retryOnPrimaryException12.getIndex();
        java.lang.Throwable throwable17 = retryOnPrimaryException12.getRootCause();
        java.lang.Throwable[] throwableArray18 = throwable17.getSuppressed();
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test6384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6384");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.util.Set<java.lang.String> strSet16 = retryOnPrimaryException6.getHeaderKeys();
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException6.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException6.guessRootCauses();
        java.lang.String str19 = retryOnPrimaryException6.toString();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str19, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6385");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        retryOnPrimaryException3.setShard(shardId7);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = retryOnPrimaryException16.toString();
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable[] throwableArray25 = retryOnPrimaryException16.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException33.getResourceId();
        retryOnPrimaryException16.addHeader("retry_on_primary_exception", strList40);
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList40);
        java.util.Set<java.lang.String> strSet43 = retryOnPrimaryException3.getHeaderKeys();
        java.lang.String str44 = retryOnPrimaryException3.toString();
        java.lang.String str45 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput46 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException3.writeTo(streamOutput46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str23, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[]" + "'", str44, "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "retry_on_primary_exception" + "'", str45, "retry_on_primary_exception");
    }

    @Test
    public void test6386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6386");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable throwable9 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", throwable15);
        java.util.List<java.lang.String> strList18 = null;
        retryOnPrimaryException16.addHeader("retry_on_primary_exception", strList18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        retryOnPrimaryException16.setShard(shardId20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", (java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        java.util.List<java.lang.String> strList28 = null;
        retryOnPrimaryException26.addHeader("retry_on_primary_exception", strList28);
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String str31 = retryOnPrimaryException16.toString();
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        retryOnPrimaryException8.setShard(shardId33);
        org.elasticsearch.index.shard.ShardId shardId35 = retryOnPrimaryException8.getShardId();
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "RetryOnPrimaryException[]" + "'", str31, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test6387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6387");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        retryOnPrimaryException3.setShard("hi!", (int) (short) 10);
        java.lang.String str13 = retryOnPrimaryException3.toString();
        java.lang.String str14 = retryOnPrimaryException3.toString();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        java.util.List<java.lang.String> strList23 = null;
        retryOnPrimaryException21.addHeader("retry_on_primary_exception", strList23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        retryOnPrimaryException21.setShard(shardId25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", (java.lang.Throwable) retryOnPrimaryException21);
        retryOnPrimaryException27.setIndex("rest.exception.stacktrace.skip");
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", throwable33);
        java.util.List<java.lang.String> strList36 = null;
        retryOnPrimaryException34.addHeader("retry_on_primary_exception", strList36);
        java.lang.Throwable throwable38 = retryOnPrimaryException34.unwrapCause();
        org.elasticsearch.index.Index index39 = null;
        retryOnPrimaryException34.setIndex(index39);
        java.lang.Throwable throwable41 = retryOnPrimaryException34.unwrapCause();
        java.lang.Throwable[] throwableArray42 = retryOnPrimaryException34.getSuppressed();
        retryOnPrimaryException34.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) '4');
        java.lang.String[] strArray54 = new java.lang.String[] { "retry_on_primary_exception", "hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "", "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        retryOnPrimaryException34.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException27.addHeader("hi!", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException3.addHeader("[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList55);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "", throwable63);
        java.util.List<java.lang.String> strList66 = null;
        retryOnPrimaryException64.addHeader("retry_on_primary_exception", strList66);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        retryOnPrimaryException64.setShard(shardId68);
        org.elasticsearch.index.shard.ShardId shardId70 = retryOnPrimaryException64.getShardId();
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        java.lang.Throwable throwable76 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException77 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId74, "", throwable76);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException78 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "", (java.lang.Throwable) retryOnPrimaryException77);
        java.lang.String[] strArray83 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException78.setResources("retry_on_primary_exception", strArray83);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray85 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException78);
        java.lang.String[] strArray92 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException78.setResources("", strArray92);
        retryOnPrimaryException64.addHeader("", strArray92);
        retryOnPrimaryException3.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray92);
        java.lang.Throwable throwable96 = retryOnPrimaryException3.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus97 = retryOnPrimaryException3.status();
        org.elasticsearch.rest.RestStatus restStatus98 = retryOnPrimaryException3.status();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str13, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str14, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "");
        org.junit.Assert.assertEquals(throwable38.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "");
        org.junit.Assert.assertEquals(throwable41.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(shardId70);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray85);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(throwable96);
        org.junit.Assert.assertEquals(throwable96.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable96.getMessage(), "");
        org.junit.Assert.assertEquals(throwable96.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + restStatus97 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus97.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus98 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus98.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6388");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str19 = retryOnPrimaryException3.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.Class<?> wildcardClass22 = elasticsearchExceptionArray21.getClass();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test6389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6389");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException6.getHeader("[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.Throwable throwable17 = retryOnPrimaryException6.getRootCause();
        java.lang.Throwable throwable18 = retryOnPrimaryException6.unwrapCause();
        retryOnPrimaryException6.setShard("", (int) (short) 100);
        java.lang.String str22 = retryOnPrimaryException6.toString();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray31 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.String str32 = retryOnPrimaryException30.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException30);
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException30.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "", throwable41);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "", (java.lang.Throwable) retryOnPrimaryException42);
        java.lang.String[] strArray48 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException43.setResources("retry_on_primary_exception", strArray48);
        java.lang.String str50 = retryOnPrimaryException43.toString();
        org.elasticsearch.rest.RestStatus restStatus51 = retryOnPrimaryException43.status();
        java.lang.Throwable throwable52 = retryOnPrimaryException43.unwrapCause();
        java.util.List<java.lang.String> strList53 = retryOnPrimaryException43.getResourceId();
        retryOnPrimaryException30.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList53);
        retryOnPrimaryException6.addHeader("[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList53);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "[][[][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[][[][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str22, "[][[][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str32, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str50, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus51 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus51.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "");
        org.junit.Assert.assertEquals(throwable52.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strList53);
    }

    @Test
    public void test6390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6390");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", (int) (short) 1);
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException6.getHeader("[rest.exception.cause.skip] RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = retryOnPrimaryException6.guessRootCauses();
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
    }

    @Test
    public void test6391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6391");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException16.status();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException16.status();
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException16.getSuppressed();
        retryOnPrimaryException16.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 1);
        java.lang.Throwable throwable25 = retryOnPrimaryException16.unwrapCause();
        java.lang.Throwable throwable26 = retryOnPrimaryException16.unwrapCause();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "");
        org.junit.Assert.assertEquals(throwable25.toString(), "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "");
        org.junit.Assert.assertEquals(throwable26.toString(), "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6392");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException6.getSuppressed();
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException6.getSuppressed();
        retryOnPrimaryException6.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [hi!][[hi!][10]] RetryOnPrimaryException[]", (int) (byte) -1);
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException6.getResourceId();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(strList20);
    }

    @Test
    public void test6393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6393");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.String str8 = retryOnPrimaryException3.toString();
        java.lang.String str9 = retryOnPrimaryException3.getDetailedMessage();
        retryOnPrimaryException3.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 0);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        java.lang.String str27 = retryOnPrimaryException20.toString();
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException20.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", throwable35);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", (java.lang.Throwable) retryOnPrimaryException36);
        java.lang.String[] strArray42 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException37.setResources("retry_on_primary_exception", strArray42);
        java.util.List<java.lang.String> strList44 = retryOnPrimaryException37.getResourceId();
        retryOnPrimaryException20.addHeader("retry_on_primary_exception", strList44);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", throwable52);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "", (java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "", throwable57);
        boolean boolean59 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException58);
        retryOnPrimaryException54.addSuppressed((java.lang.Throwable) retryOnPrimaryException58);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        java.lang.Throwable throwable66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "", throwable66);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "", (java.lang.Throwable) retryOnPrimaryException67);
        java.lang.String[] strArray73 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException68.setResources("retry_on_primary_exception", strArray73);
        retryOnPrimaryException54.setResources("rest.exception.cause.skip", strArray73);
        java.lang.Throwable throwable76 = retryOnPrimaryException54.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException77 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException54);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray78 = retryOnPrimaryException54.guessRootCauses();
        java.lang.String str79 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException54);
        retryOnPrimaryException20.addSuppressed((java.lang.Throwable) retryOnPrimaryException54);
        java.util.List<java.lang.String> strList81 = retryOnPrimaryException20.getResourceId();
        retryOnPrimaryException3.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]", strList81);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray83 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "RetryOnPrimaryException[]" + "'", str8, "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str27, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(throwable76);
        org.junit.Assert.assertEquals(throwable76.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable76.getMessage(), "");
        org.junit.Assert.assertEquals(throwable76.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "retry_on_primary_exception" + "'", str79, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray83);
    }

    @Test
    public void test6394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6394");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable throwable9 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", throwable15);
        java.util.List<java.lang.String> strList18 = null;
        retryOnPrimaryException16.addHeader("retry_on_primary_exception", strList18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        retryOnPrimaryException16.setShard(shardId20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", (java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        java.util.List<java.lang.String> strList28 = null;
        retryOnPrimaryException26.addHeader("retry_on_primary_exception", strList28);
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String str31 = retryOnPrimaryException16.toString();
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable[] throwableArray34 = retryOnPrimaryException16.getSuppressed();
        java.lang.String str35 = retryOnPrimaryException16.getResourceType();
        java.util.Set<java.lang.String> strSet36 = retryOnPrimaryException16.getHeaderKeys();
        java.lang.Throwable throwable37 = retryOnPrimaryException16.unwrapCause();
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "RetryOnPrimaryException[]" + "'", str31, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "");
        org.junit.Assert.assertEquals(throwable37.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6395");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException7.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]");
        retryOnPrimaryException7.setShard("RetryOnPrimaryException[[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]", (int) (short) 0);
        java.lang.Throwable[] throwableArray14 = retryOnPrimaryException7.getSuppressed();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(throwableArray14);
    }

    @Test
    public void test6396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6396");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable18 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException25.setResources("retry_on_primary_exception", strArray30);
        throwable18.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException25);
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException33);
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException33.getResourceId();
        org.elasticsearch.index.Index index36 = retryOnPrimaryException33.getIndex();
        org.elasticsearch.rest.RestStatus restStatus37 = retryOnPrimaryException33.status();
        retryOnPrimaryException33.setShard("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", 0);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(index36);
        org.junit.Assert.assertTrue("'" + restStatus37 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus37.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6397");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.Throwable throwable5 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String[] strArray18 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException13.setResources("retry_on_primary_exception", strArray18);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", throwable26);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", (java.lang.Throwable) retryOnPrimaryException27);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException28.setResources("retry_on_primary_exception", strArray33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray42 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException28.setResources("", strArray42);
        retryOnPrimaryException13.addHeader("", strArray42);
        retryOnPrimaryException4.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray42);
        java.lang.String str46 = retryOnPrimaryException4.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str48 = retryOnPrimaryException4.toString();
        java.lang.Throwable throwable49 = retryOnPrimaryException4.unwrapCause();
        retryOnPrimaryException4.setShard("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (int) (byte) -1);
        java.lang.String str53 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.rest.RestStatus restStatus55 = retryOnPrimaryException4.status();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder56 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params57 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder58 = retryOnPrimaryException4.toXContent(xContentBuilder56, params57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable5.toString(), "[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][-1]] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str46, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str48, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable49.toString(), "[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][-1]] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception" + "'", str53, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus55 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus55.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(params57);
    }

    @Test
    public void test6398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6398");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str20 = retryOnPrimaryException19.toString();
        retryOnPrimaryException19.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) (byte) 10);
        retryOnPrimaryException19.setShard("[hi!][[hi!][10]] RetryOnPrimaryException[]", (int) '#');
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException19.getResourceId();
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException30 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException19, streamOutput29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str20, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test6399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6399");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        retryOnPrimaryException3.setShard("hi!", (int) (short) 10);
        java.lang.String str13 = retryOnPrimaryException3.toString();
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException3.getHeaderKeys();
        java.lang.String str16 = retryOnPrimaryException3.toString();
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException3.getHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str13, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str16, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList18);
    }

    @Test
    public void test6400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6400");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException10.setShard(shardId11);
        retryOnPrimaryException10.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException10.getHeader("[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", throwable22);
        java.util.List<java.lang.String> strList25 = null;
        retryOnPrimaryException23.addHeader("retry_on_primary_exception", strList25);
        boolean boolean27 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.String str28 = retryOnPrimaryException23.toString();
        java.lang.String str29 = retryOnPrimaryException23.getDetailedMessage();
        org.elasticsearch.index.Index index30 = retryOnPrimaryException23.getIndex();
        java.lang.String str31 = retryOnPrimaryException23.getDetailedMessage();
        retryOnPrimaryException23.setIndex("[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException23.getShardId();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "", throwable40);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "", (java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String[] strArray47 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException42.setResources("retry_on_primary_exception", strArray47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException42);
        retryOnPrimaryException42.setShard("hi!", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray57 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException56);
        java.lang.String[] strArray59 = new java.lang.String[] {};
        retryOnPrimaryException56.setResources("", strArray59);
        retryOnPrimaryException42.setResources("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]", strArray59);
        retryOnPrimaryException23.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]", strArray59);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray59);
        java.lang.Throwable throwable64 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException2, streamInput65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "RetryOnPrimaryException[]" + "'", str28, "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(index30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str31, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(throwable64);
        org.junit.Assert.assertEquals(throwable64.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable64.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable64.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test6401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6401");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable15 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", throwable19);
        java.util.List<java.lang.String> strList22 = null;
        retryOnPrimaryException20.addHeader("retry_on_primary_exception", strList22);
        java.lang.Throwable throwable24 = retryOnPrimaryException20.unwrapCause();
        org.elasticsearch.index.Index index25 = null;
        retryOnPrimaryException20.setIndex(index25);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException33);
        retryOnPrimaryException20.addSuppressed((java.lang.Throwable) retryOnPrimaryException33);
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", throwable47);
        java.util.List<java.lang.String> strList50 = null;
        retryOnPrimaryException48.addHeader("retry_on_primary_exception", strList50);
        java.lang.Throwable throwable52 = retryOnPrimaryException48.unwrapCause();
        org.elasticsearch.index.Index index53 = null;
        retryOnPrimaryException48.setIndex(index53);
        retryOnPrimaryException48.setShard("hi!", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray62 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException61);
        java.lang.String[] strArray64 = new java.lang.String[] {};
        retryOnPrimaryException61.setResources("", strArray64);
        retryOnPrimaryException48.addHeader("", strArray64);
        retryOnPrimaryException20.addHeader("", strArray64);
        retryOnPrimaryException6.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray64);
        boolean boolean69 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str70 = retryOnPrimaryException6.getDetailedMessage();
        boolean boolean71 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "");
        org.junit.Assert.assertEquals(throwable52.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str70, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test6402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6402");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = retryOnPrimaryException8.toString();
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException8.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException8.status();
        org.elasticsearch.rest.RestStatus restStatus19 = retryOnPrimaryException8.status();
        java.lang.Throwable throwable20 = retryOnPrimaryException8.getRootCause();
        retryOnPrimaryException8.setShard("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 0);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus19 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus19.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6403");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("hi!", (int) '4');
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable19 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException6.guessRootCauses();
        java.lang.Throwable throwable21 = retryOnPrimaryException6.unwrapCause();
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException6.getHeader("[][[][-1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "[hi!][[hi!][52]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "");
        org.junit.Assert.assertEquals(throwable21.toString(), "[hi!][[hi!][52]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(strList23);
    }

    @Test
    public void test6404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6404");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException6.getSuppressed();
        java.lang.String str16 = retryOnPrimaryException6.getDetailedMessage();
        java.lang.Throwable throwable17 = retryOnPrimaryException6.getRootCause();
        retryOnPrimaryException6.setIndex("RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str16, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6405");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("hi!", (int) (short) 10);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str18 = retryOnPrimaryException6.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        java.util.List<java.lang.String> strList26 = null;
        retryOnPrimaryException24.addHeader("retry_on_primary_exception", strList26);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        retryOnPrimaryException24.setShard(shardId28);
        org.elasticsearch.index.shard.ShardId shardId30 = retryOnPrimaryException24.getShardId();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", throwable36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException38.setResources("retry_on_primary_exception", strArray43);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException38);
        java.lang.String[] strArray52 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException38.setResources("", strArray52);
        retryOnPrimaryException24.addHeader("", strArray52);
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray52);
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        retryOnPrimaryException6.setShard(shardId56);
        java.lang.String str58 = retryOnPrimaryException6.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        java.lang.Throwable throwable61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "", throwable61);
        java.util.List<java.lang.String> strList64 = null;
        retryOnPrimaryException62.addHeader("retry_on_primary_exception", strList64);
        java.lang.Throwable throwable66 = retryOnPrimaryException62.unwrapCause();
        java.lang.String str67 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException62);
        boolean boolean68 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException62);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException62);
        retryOnPrimaryException6.setIndex("[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.rest.RestStatus restStatus72 = retryOnPrimaryException6.status();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str18, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "retry_on_primary_exception" + "'", str58, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable66);
        org.junit.Assert.assertEquals(throwable66.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable66.getMessage(), "");
        org.junit.Assert.assertEquals(throwable66.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "retry_on_primary_exception" + "'", str67, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + restStatus72 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus72.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6406");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException16.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String str31 = retryOnPrimaryException16.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", throwable34);
        java.util.List<java.lang.String> strList37 = null;
        retryOnPrimaryException35.addHeader("retry_on_primary_exception", strList37);
        java.lang.Throwable throwable39 = retryOnPrimaryException35.unwrapCause();
        org.elasticsearch.index.Index index40 = null;
        retryOnPrimaryException35.setIndex(index40);
        java.lang.Throwable throwable42 = retryOnPrimaryException35.unwrapCause();
        java.lang.String str43 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable42);
        retryOnPrimaryException16.addSuppressed(throwable42);
        java.lang.String str45 = retryOnPrimaryException16.getDetailedMessage();
        retryOnPrimaryException16.setIndex("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.Class<?> wildcardClass48 = retryOnPrimaryException16.getClass();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str31, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "");
        org.junit.Assert.assertEquals(throwable39.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "retry_on_primary_exception" + "'", str43, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str45, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test6407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6407");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException16.status();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        retryOnPrimaryException16.setShard(shardId18);
        org.elasticsearch.index.shard.ShardId shardId20 = retryOnPrimaryException16.getShardId();
        retryOnPrimaryException16.setShard("[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (short) -1);
        java.lang.String str24 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "retry_on_primary_exception" + "'", str24, "retry_on_primary_exception");
    }

    @Test
    public void test6408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6408");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String[] strArray20 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException6.setResources("", strArray20);
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException6.getSuppressed();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException6.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray25 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.rest.RestStatus restStatus26 = retryOnPrimaryException6.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray25);
        org.junit.Assert.assertTrue("'" + restStatus26 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus26.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test6409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6409");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException6.guessRootCauses();
        retryOnPrimaryException6.setShard("hi!", (int) (byte) -1);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("");
        retryOnPrimaryException6.setIndex("");
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException6.getSuppressed();
        retryOnPrimaryException6.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", 0);
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", throwable27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException29.setResources("retry_on_primary_exception", strArray34);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException29);
        retryOnPrimaryException29.setShard("hi!", (int) (short) 10);
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String str41 = retryOnPrimaryException29.toString();
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException29.getResourceId();
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList42);
        retryOnPrimaryException6.setIndex("[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]][[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.Throwable[] throwableArray46 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str41, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
    }

    @Test
    public void test6410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6410");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        retryOnPrimaryException6.setResources("rest.exception.cause.skip", strArray25);
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException6.status();
        retryOnPrimaryException6.setIndex("[hi!][[hi!][10]] RetryOnPrimaryException[]");
        java.lang.String str31 = retryOnPrimaryException6.toString();
        java.lang.Throwable[] throwableArray32 = retryOnPrimaryException6.getSuppressed();
        java.lang.Throwable throwable33 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "", throwable40);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "", (java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String[] strArray47 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException42.setResources("retry_on_primary_exception", strArray47);
        java.lang.String str49 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException42);
        java.lang.Throwable throwable50 = retryOnPrimaryException42.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        java.lang.Throwable throwable55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "", throwable55);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "", (java.lang.Throwable) retryOnPrimaryException56);
        java.lang.String[] strArray62 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException57.setResources("retry_on_primary_exception", strArray62);
        throwable50.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException57);
        boolean boolean66 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException57);
        java.util.List<java.lang.String> strList67 = retryOnPrimaryException57.getResourceId();
        java.lang.String str68 = retryOnPrimaryException57.toString();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str31, "[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "");
        org.junit.Assert.assertEquals(throwable33.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "retry_on_primary_exception" + "'", str49, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable50);
        org.junit.Assert.assertEquals(throwable50.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable50.getMessage(), "");
        org.junit.Assert.assertEquals(throwable50.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str68, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6411");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable18 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException25.setResources("retry_on_primary_exception", strArray30);
        throwable18.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException33.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException33);
        java.util.List<java.lang.String> strList37 = retryOnPrimaryException35.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException35);
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String str40 = retryOnPrimaryException35.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        java.lang.Throwable throwable44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "", throwable44);
        java.util.List<java.lang.String> strList47 = null;
        retryOnPrimaryException45.addHeader("retry_on_primary_exception", strList47);
        java.lang.Throwable throwable49 = retryOnPrimaryException45.unwrapCause();
        org.elasticsearch.index.Index index50 = null;
        retryOnPrimaryException45.setIndex(index50);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        java.lang.Throwable throwable56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "", throwable56);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "", (java.lang.Throwable) retryOnPrimaryException57);
        java.lang.String[] strArray63 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException58.setResources("retry_on_primary_exception", strArray63);
        java.lang.String str65 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException58);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray66 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException58);
        retryOnPrimaryException45.addSuppressed((java.lang.Throwable) retryOnPrimaryException58);
        java.lang.String str68 = retryOnPrimaryException45.toString();
        java.lang.Throwable throwable69 = retryOnPrimaryException45.getRootCause();
        java.lang.Throwable throwable70 = retryOnPrimaryException45.getRootCause();
        retryOnPrimaryException45.setShard("RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]]", (int) (byte) 1);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray74 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException45);
        org.elasticsearch.index.shard.ShardId shardId76 = null;
        org.elasticsearch.index.shard.ShardId shardId78 = null;
        java.lang.Throwable throwable80 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException81 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId78, "", throwable80);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException82 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId76, "", (java.lang.Throwable) retryOnPrimaryException81);
        java.lang.String[] strArray87 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException82.setResources("retry_on_primary_exception", strArray87);
        java.util.List<java.lang.String> strList89 = retryOnPrimaryException82.getResourceId();
        boolean boolean90 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException82);
        java.lang.String str91 = retryOnPrimaryException82.toString();
        java.util.Set<java.lang.String> strSet92 = retryOnPrimaryException82.getHeaderKeys();
        java.util.List<java.lang.String> strList93 = retryOnPrimaryException82.getResourceId();
        retryOnPrimaryException45.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];", strList93);
        retryOnPrimaryException35.addHeader("[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList93);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "");
        org.junit.Assert.assertEquals(throwable49.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]]][[RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]]][1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "retry_on_primary_exception" + "'", str65, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "RetryOnPrimaryException[]" + "'", str68, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable69);
        org.junit.Assert.assertEquals(throwable69.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable69.getMessage(), "");
        org.junit.Assert.assertEquals(throwable69.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]]][[RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]]][1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable70);
        org.junit.Assert.assertEquals(throwable70.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable70.getMessage(), "");
        org.junit.Assert.assertEquals(throwable70.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]]][[RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]]][1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray74);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str91, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strSet92);
        org.junit.Assert.assertNotNull(strList93);
    }

    @Test
    public void test6412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6412");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        java.lang.String str18 = retryOnPrimaryException11.toString();
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable[] throwableArray20 = retryOnPrimaryException11.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", throwable26);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", (java.lang.Throwable) retryOnPrimaryException27);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException28.setResources("retry_on_primary_exception", strArray33);
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException28.getResourceId();
        retryOnPrimaryException11.addHeader("retry_on_primary_exception", strList35);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "", throwable40);
        java.util.List<java.lang.String> strList43 = null;
        retryOnPrimaryException41.addHeader("retry_on_primary_exception", strList43);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        retryOnPrimaryException41.setShard(shardId45);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", throwable52);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "", (java.lang.Throwable) retryOnPrimaryException53);
        java.lang.String[] strArray59 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException54.setResources("retry_on_primary_exception", strArray59);
        java.lang.String str61 = retryOnPrimaryException54.toString();
        boolean boolean62 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException54);
        java.lang.Throwable[] throwableArray63 = retryOnPrimaryException54.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        java.lang.Throwable throwable69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "", throwable69);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "", (java.lang.Throwable) retryOnPrimaryException70);
        java.lang.String[] strArray76 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException71.setResources("retry_on_primary_exception", strArray76);
        java.util.List<java.lang.String> strList78 = retryOnPrimaryException71.getResourceId();
        retryOnPrimaryException54.addHeader("retry_on_primary_exception", strList78);
        retryOnPrimaryException41.addHeader("retry_on_primary_exception", strList78);
        retryOnPrimaryException11.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList78);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip] RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList78);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray83 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray84 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray85 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str18, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str61, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray83);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray84);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray85);
    }

    @Test
    public void test6413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6413");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable throwable9 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable[] throwableArray11 = retryOnPrimaryException8.getSuppressed();
        org.elasticsearch.common.io.stream.StreamInput streamInput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException8, streamInput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test6414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6414");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("hi!", (int) '4');
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable19 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str21 = retryOnPrimaryException6.getDetailedMessage();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "[hi!][[hi!][52]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[hi!][[hi!][52]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str21, "[hi!][[hi!][52]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6415");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", (java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String[] strArray27 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException22.setResources("retry_on_primary_exception", strArray27);
        retryOnPrimaryException8.setResources("rest.exception.cause.skip", strArray27);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = retryOnPrimaryException8.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str33 = retryOnPrimaryException8.getResourceType();
        java.lang.String str34 = retryOnPrimaryException8.getDetailedMessage();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "rest.exception.cause.skip" + "'", str33, "rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str34, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6416");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", throwable29);
        java.util.List<java.lang.String> strList32 = null;
        retryOnPrimaryException30.addHeader("retry_on_primary_exception", strList32);
        java.lang.Throwable throwable34 = retryOnPrimaryException30.unwrapCause();
        org.elasticsearch.index.Index index35 = null;
        retryOnPrimaryException30.setIndex(index35);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "", throwable41);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "", (java.lang.Throwable) retryOnPrimaryException42);
        java.lang.String[] strArray48 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException43.setResources("retry_on_primary_exception", strArray48);
        java.lang.String str50 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray51 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException43);
        retryOnPrimaryException30.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "", throwable58);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "", (java.lang.Throwable) retryOnPrimaryException59);
        java.lang.String[] strArray65 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException60.setResources("retry_on_primary_exception", strArray65);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        java.lang.Throwable throwable72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "", throwable72);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "", (java.lang.Throwable) retryOnPrimaryException73);
        java.lang.String[] strArray79 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException74.setResources("retry_on_primary_exception", strArray79);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray81 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException74);
        java.lang.String[] strArray88 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException74.setResources("", strArray88);
        retryOnPrimaryException60.setResources("rest.exception.cause.skip", strArray88);
        retryOnPrimaryException43.addHeader("rest.exception.cause.skip", strArray88);
        retryOnPrimaryException3.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", strArray88);
        java.lang.String str93 = retryOnPrimaryException3.getResourceType();
        java.lang.String str94 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        retryOnPrimaryException3.setIndex("[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str97 = retryOnPrimaryException3.getDetailedMessage();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "retry_on_primary_exception" + "'", str50, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray51);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray81);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str93, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "retry_on_primary_exception" + "'", str94, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str97, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6417");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = retryOnPrimaryException6.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException6.getResourceId();
        retryOnPrimaryException6.setIndex("[rest.exception.stacktrace.skip] RetryOnPrimaryException[hi!]");
        java.lang.String str22 = retryOnPrimaryException6.getDetailedMessage();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[[rest.exception.stacktrace.skip] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str22, "[[rest.exception.stacktrace.skip] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6418");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]", throwable4);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String[] strArray18 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException13.setResources("retry_on_primary_exception", strArray18);
        java.lang.String str20 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException33.getResourceId();
        retryOnPrimaryException25.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList40);
        retryOnPrimaryException13.addHeader("rest.exception.stacktrace.skip", strList40);
        retryOnPrimaryException5.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strList40);
        java.util.List<java.lang.String> strList45 = retryOnPrimaryException5.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList47 = retryOnPrimaryException5.getHeader("[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException5);
        retryOnPrimaryException5.setIndex("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.elasticsearch.index.shard.ShardId shardId51 = retryOnPrimaryException5.getShardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "retry_on_primary_exception" + "'", str20, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertNull(shardId51);
    }

    @Test
    public void test6419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6419");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable14 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", throwable19);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException21.setResources("retry_on_primary_exception", strArray26);
        throwable14.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String str29 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String str30 = retryOnPrimaryException21.toString();
        java.util.List<java.lang.String> strList32 = retryOnPrimaryException21.getHeader("");
        java.lang.Throwable throwable33 = retryOnPrimaryException21.getRootCause();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "retry_on_primary_exception" + "'", str29, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str30, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "");
        org.junit.Assert.assertEquals(throwable33.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6420");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip");
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.Index index12 = retryOnPrimaryException10.getIndex();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException10.guessRootCauses();
        java.lang.String str14 = retryOnPrimaryException10.toString();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        java.util.List<java.lang.String> strList21 = null;
        retryOnPrimaryException19.addHeader("retry_on_primary_exception", strList21);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException19);
        java.lang.Throwable throwable24 = retryOnPrimaryException19.unwrapCause();
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException19.getResourceId();
        retryOnPrimaryException19.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str28 = retryOnPrimaryException19.getResourceType();
        java.lang.Throwable throwable29 = retryOnPrimaryException19.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", throwable35);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", (java.lang.Throwable) retryOnPrimaryException36);
        java.lang.String[] strArray42 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException37.setResources("retry_on_primary_exception", strArray42);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException37);
        retryOnPrimaryException37.setShard("hi!", (int) (short) 10);
        java.lang.String str48 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String str49 = retryOnPrimaryException37.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray50 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "", throwable54);
        java.util.List<java.lang.String> strList57 = null;
        retryOnPrimaryException55.addHeader("retry_on_primary_exception", strList57);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        retryOnPrimaryException55.setShard(shardId59);
        org.elasticsearch.index.shard.ShardId shardId61 = retryOnPrimaryException55.getShardId();
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        java.lang.Throwable throwable67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "", throwable67);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "", (java.lang.Throwable) retryOnPrimaryException68);
        java.lang.String[] strArray74 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException69.setResources("retry_on_primary_exception", strArray74);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray76 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException69);
        java.lang.String[] strArray83 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException69.setResources("", strArray83);
        retryOnPrimaryException55.addHeader("", strArray83);
        retryOnPrimaryException37.setResources("retry_on_primary_exception", strArray83);
        retryOnPrimaryException19.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray83);
        retryOnPrimaryException10.setResources("[RetryOnPrimaryException[rest.exception.cause.skip]][[RetryOnPrimaryException[rest.exception.cause.skip]][32]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray83);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(index12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]" + "'", str14, "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "");
        org.junit.Assert.assertEquals(throwable24.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "");
        org.junit.Assert.assertEquals(throwable29.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "retry_on_primary_exception" + "'", str48, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str49, "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray50);
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray76);
        org.junit.Assert.assertNotNull(strArray83);
    }

    @Test
    public void test6421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6421");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String[] strArray20 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException6.setResources("", strArray20);
        retryOnPrimaryException6.setShard("", (int) (short) -1);
        java.lang.String str25 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str26 = retryOnPrimaryException6.getResourceType();
        retryOnPrimaryException6.setIndex("");
        java.lang.String str29 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray30 = retryOnPrimaryException6.getSuppressed();
        java.lang.String str31 = retryOnPrimaryException6.getDetailedMessage();
        retryOnPrimaryException6.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.Throwable[] throwableArray34 = retryOnPrimaryException6.getSuppressed();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "retry_on_primary_exception" + "'", str25, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "retry_on_primary_exception" + "'", str29, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str31, "[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test6422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6422");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException6.guessRootCauses();
        java.lang.Throwable[] throwableArray9 = retryOnPrimaryException6.getSuppressed();
        java.lang.Throwable throwable10 = retryOnPrimaryException6.unwrapCause();
        retryOnPrimaryException6.setIndex("[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]][[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.common.io.stream.StreamInput streamInput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException15 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException6, streamInput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "[[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]][[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test6423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6423");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.List<java.lang.String> strList3 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertNull(strList3);
    }

    @Test
    public void test6424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6424");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String[] strArray18 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException13.setResources("retry_on_primary_exception", strArray18);
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException13.getResourceId();
        retryOnPrimaryException5.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList20);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "retry_on_primary_exception");
        java.lang.Throwable throwable26 = retryOnPrimaryException25.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", throwable32);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", (java.lang.Throwable) retryOnPrimaryException33);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException34.setResources("retry_on_primary_exception", strArray39);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", throwable47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", (java.lang.Throwable) retryOnPrimaryException48);
        java.lang.String[] strArray54 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException49.setResources("retry_on_primary_exception", strArray54);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray56 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.String[] strArray63 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException49.setResources("", strArray63);
        retryOnPrimaryException34.addHeader("", strArray63);
        retryOnPrimaryException25.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray63);
        retryOnPrimaryException5.setResources("retry_on_primary_exception", strArray63);
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        java.lang.Throwable throwable71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "", throwable71);
        java.util.List<java.lang.String> strList74 = null;
        retryOnPrimaryException72.addHeader("retry_on_primary_exception", strList74);
        org.elasticsearch.index.shard.ShardId shardId76 = null;
        retryOnPrimaryException72.setShard(shardId76);
        org.elasticsearch.index.shard.ShardId shardId79 = null;
        org.elasticsearch.index.shard.ShardId shardId81 = null;
        java.lang.Throwable throwable83 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException84 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId81, "", throwable83);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException85 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId79, "", (java.lang.Throwable) retryOnPrimaryException84);
        java.lang.String[] strArray90 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException85.setResources("retry_on_primary_exception", strArray90);
        retryOnPrimaryException72.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray90);
        retryOnPrimaryException5.addHeader("rest.exception.stacktrace.skip", strArray90);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException94 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str95 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException5);
        java.util.List<java.lang.String> strList96 = retryOnPrimaryException5.getResourceId();
        java.util.List<java.lang.String> strList97 = retryOnPrimaryException5.getResourceId();
        java.lang.Class<?> wildcardClass98 = retryOnPrimaryException5.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable26.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray56);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "retry_on_primary_exception" + "'", str95, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strList96);
        org.junit.Assert.assertNotNull(strList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test6425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6425");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException8.getShardId();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        retryOnPrimaryException8.setShard(shardId10);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str13 = retryOnPrimaryException8.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException8.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", throwable19);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException21.setResources("retry_on_primary_exception", strArray26);
        java.lang.String str28 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.Throwable throwable29 = retryOnPrimaryException21.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", throwable34);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", (java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String[] strArray41 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException36.setResources("retry_on_primary_exception", strArray41);
        throwable29.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        java.lang.Throwable[] throwableArray44 = retryOnPrimaryException36.getSuppressed();
        org.elasticsearch.index.Index index45 = null;
        retryOnPrimaryException36.setIndex(index45);
        org.elasticsearch.index.shard.ShardId shardId47 = retryOnPrimaryException36.getShardId();
        java.lang.Throwable[] throwableArray48 = retryOnPrimaryException36.getSuppressed();
        java.lang.String str49 = retryOnPrimaryException36.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.index.Index index53 = retryOnPrimaryException52.getIndex();
        java.lang.Throwable throwable54 = retryOnPrimaryException52.getRootCause();
        retryOnPrimaryException36.addSuppressed(throwable54);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][-1]] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        java.lang.Throwable throwable61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "", throwable61);
        java.util.List<java.lang.String> strList64 = null;
        retryOnPrimaryException62.addHeader("retry_on_primary_exception", strList64);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        retryOnPrimaryException62.setShard(shardId66);
        org.elasticsearch.index.shard.ShardId shardId68 = retryOnPrimaryException62.getShardId();
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        java.lang.Throwable throwable74 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "", throwable74);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "", (java.lang.Throwable) retryOnPrimaryException75);
        java.lang.String[] strArray81 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException76.setResources("retry_on_primary_exception", strArray81);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray83 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException76);
        java.lang.String[] strArray90 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException76.setResources("", strArray90);
        retryOnPrimaryException62.addHeader("", strArray90);
        retryOnPrimaryException57.setResources("[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray90);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "retry_on_primary_exception" + "'", str28, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "");
        org.junit.Assert.assertEquals(throwable29.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "retry_on_primary_exception" + "'", str49, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index53);
        org.junit.Assert.assertNotNull(throwable54);
        org.junit.Assert.assertEquals(throwable54.getLocalizedMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable54.getMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals(throwable54.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]");
        org.junit.Assert.assertNull(shardId68);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray83);
        org.junit.Assert.assertNotNull(strArray90);
    }

    @Test
    public void test6426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6426");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable throwable11 = retryOnPrimaryException7.unwrapCause();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException7.setIndex("RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "");
        org.junit.Assert.assertEquals(throwable11.toString(), "[RetryOnPrimaryException[hi!]] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test6427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6427");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        retryOnPrimaryException3.setShard(shardId7);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = retryOnPrimaryException16.toString();
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable[] throwableArray25 = retryOnPrimaryException16.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException33.getResourceId();
        retryOnPrimaryException16.addHeader("retry_on_primary_exception", strList40);
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList40);
        java.util.Set<java.lang.String> strSet43 = retryOnPrimaryException3.getHeaderKeys();
        retryOnPrimaryException3.setShard("", 1);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException3.getSuppressed();
        java.lang.String str48 = retryOnPrimaryException3.getDetailedMessage();
        java.lang.String str49 = retryOnPrimaryException3.getDetailedMessage();
        java.util.List<java.lang.String> strList50 = retryOnPrimaryException3.getResourceId();
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str23, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str48, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str49, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(strList50);
    }

    @Test
    public void test6428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6428");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        retryOnPrimaryException3.setShard(shardId7);
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException3.getShardId();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", throwable13);
        java.util.List<java.lang.String> strList16 = null;
        retryOnPrimaryException14.addHeader("retry_on_primary_exception", strList16);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str19 = retryOnPrimaryException14.toString();
        java.lang.String str20 = retryOnPrimaryException14.getDetailedMessage();
        java.lang.Throwable throwable21 = retryOnPrimaryException14.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String str27 = retryOnPrimaryException25.getDetailedMessage();
        java.lang.String str28 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String str29 = retryOnPrimaryException25.toString();
        java.lang.String str30 = retryOnPrimaryException25.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "hi!");
        retryOnPrimaryException34.setShard("retry_on_primary_exception", (int) (byte) 1);
        java.lang.String str38 = retryOnPrimaryException34.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        java.lang.Throwable throwable42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "", throwable42);
        java.util.List<java.lang.String> strList45 = null;
        retryOnPrimaryException43.addHeader("retry_on_primary_exception", strList45);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        retryOnPrimaryException43.setShard(shardId47);
        org.elasticsearch.index.shard.ShardId shardId49 = retryOnPrimaryException43.getShardId();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        java.lang.Throwable throwable55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "", throwable55);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "", (java.lang.Throwable) retryOnPrimaryException56);
        java.lang.String[] strArray62 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException57.setResources("retry_on_primary_exception", strArray62);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray64 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException57);
        java.lang.String[] strArray71 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException57.setResources("", strArray71);
        retryOnPrimaryException43.addHeader("", strArray71);
        retryOnPrimaryException34.setResources("hi!", strArray71);
        retryOnPrimaryException25.setResources("RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]]", strArray71);
        retryOnPrimaryException14.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]", strArray71);
        retryOnPrimaryException3.setResources("[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray71);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "RetryOnPrimaryException[]" + "'", str19, "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str20, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "retry_on_primary_exception" + "'", str28, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]" + "'", str29, "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str38, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(shardId49);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray64);
        org.junit.Assert.assertNotNull(strArray71);
    }

    @Test
    public void test6429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6429");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String[] strArray20 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException6.setResources("", strArray20);
        java.lang.String str22 = retryOnPrimaryException6.getResourceType();
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException6.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.Index index25 = retryOnPrimaryException6.getIndex();
        retryOnPrimaryException6.setShard("[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];", (-1));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNull(index25);
    }

    @Test
    public void test6430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6430");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]");
        java.util.List<java.lang.String> strList3 = retryOnPrimaryException2.getResourceId();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(strSet4);
    }

    @Test
    public void test6431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6431");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String[] strArray22 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException8.setResources("", strArray22);
        java.lang.String str24 = retryOnPrimaryException8.getResourceType();
        java.lang.String str25 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "retry_on_primary_exception" + "'", str25, "retry_on_primary_exception");
    }

    @Test
    public void test6432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6432");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        retryOnPrimaryException3.setShard(shardId7);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        retryOnPrimaryException3.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray21);
        org.elasticsearch.index.Index index24 = retryOnPrimaryException3.getIndex();
        org.elasticsearch.index.Index index25 = retryOnPrimaryException3.getIndex();
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNull(index24);
        org.junit.Assert.assertNull(index25);
    }

    @Test
    public void test6433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6433");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String[] strArray20 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException6.setResources("", strArray20);
        java.lang.String str22 = retryOnPrimaryException6.getResourceType();
        retryOnPrimaryException6.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) '4');
        retryOnPrimaryException6.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        retryOnPrimaryException6.setIndex("[][[][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.util.Set<java.lang.String> strSet30 = retryOnPrimaryException6.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test6434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6434");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        java.lang.Throwable throwable10 = retryOnPrimaryException3.unwrapCause();
        java.lang.Throwable[] throwableArray11 = retryOnPrimaryException3.getSuppressed();
        retryOnPrimaryException3.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) '4');
        java.lang.String[] strArray23 = new java.lang.String[] { "retry_on_primary_exception", "hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "", "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        retryOnPrimaryException3.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList24);
        java.util.Set<java.lang.String> strSet27 = retryOnPrimaryException3.getHeaderKeys();
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException3.getHeader("RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.common.io.stream.StreamInput streamInput30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException31 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException3, streamInput30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(strList29);
    }

    @Test
    public void test6435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6435");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str11 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str12 = retryOnPrimaryException9.getDetailedMessage();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException9.getHeaderKeys();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException9.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException9.status();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "retry_on_primary_exception" + "'", str11, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str12, "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6436");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable13 = retryOnPrimaryException10.getRootCause();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException10.guessRootCauses();
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "");
        org.junit.Assert.assertEquals(throwable13.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
    }

    @Test
    public void test6437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6437");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", throwable13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException18.status();
        java.lang.Throwable throwable21 = retryOnPrimaryException18.unwrapCause();
        retryOnPrimaryException18.setShard("RetryOnPrimaryException[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ];", (int) (byte) 10);
        org.elasticsearch.rest.RestStatus restStatus25 = retryOnPrimaryException18.status();
        java.util.Set<java.lang.String> strSet26 = retryOnPrimaryException18.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertTrue("'" + restStatus25 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus25.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test6438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6438");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = retryOnPrimaryException6.getDetailedMessage();
        java.lang.String str16 = retryOnPrimaryException6.getResourceType();
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException6.getHeaderKeys();
        org.elasticsearch.index.Index index18 = retryOnPrimaryException6.getIndex();
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(index18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test6439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6439");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        retryOnPrimaryException8.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException26.setResources("retry_on_primary_exception", strArray31);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "", throwable38);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", (java.lang.Throwable) retryOnPrimaryException39);
        java.lang.String[] strArray45 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException40.setResources("retry_on_primary_exception", strArray45);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException40);
        java.lang.String[] strArray54 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException40.setResources("", strArray54);
        retryOnPrimaryException26.setResources("rest.exception.cause.skip", strArray54);
        retryOnPrimaryException8.setResources("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray54);
        java.lang.String str58 = retryOnPrimaryException8.getResourceType();
        java.lang.String str59 = retryOnPrimaryException8.getResourceType();
        java.lang.Throwable[] throwableArray60 = retryOnPrimaryException8.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str58, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str59, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwableArray60);
    }

    @Test
    public void test6440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6440");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        retryOnPrimaryException3.setShard(shardId7);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray21 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException16.setResources("retry_on_primary_exception", strArray21);
        java.lang.String str23 = retryOnPrimaryException16.toString();
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable[] throwableArray25 = retryOnPrimaryException16.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", throwable31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray38 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException33.setResources("retry_on_primary_exception", strArray38);
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException33.getResourceId();
        retryOnPrimaryException16.addHeader("retry_on_primary_exception", strList40);
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList40);
        java.lang.String str43 = retryOnPrimaryException3.getDetailedMessage();
        java.lang.String str44 = retryOnPrimaryException3.getDetailedMessage();
        java.lang.Throwable throwable45 = retryOnPrimaryException3.getRootCause();
        java.lang.String str46 = retryOnPrimaryException3.getResourceType();
        java.lang.String str47 = retryOnPrimaryException3.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput48 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException3.writeTo(streamOutput48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str23, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str43, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str44, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "");
        org.junit.Assert.assertEquals(throwable45.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "RetryOnPrimaryException[]" + "'", str47, "RetryOnPrimaryException[]");
    }

    @Test
    public void test6441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6441");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = retryOnPrimaryException8.toString();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException8.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException25.setResources("retry_on_primary_exception", strArray30);
        java.util.List<java.lang.String> strList32 = retryOnPrimaryException25.getResourceId();
        retryOnPrimaryException8.addHeader("retry_on_primary_exception", strList32);
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException8.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.Set<java.lang.String> strSet36 = retryOnPrimaryException8.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = retryOnPrimaryException8.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable[] throwableArray39 = retryOnPrimaryException38.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        java.lang.Throwable throwable44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "", throwable44);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "", (java.lang.Throwable) retryOnPrimaryException45);
        java.lang.String str47 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = retryOnPrimaryException46.guessRootCauses();
        retryOnPrimaryException46.setShard("hi!", (int) (byte) -1);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException46);
        retryOnPrimaryException46.setIndex("");
        retryOnPrimaryException46.setShard("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]", (int) (short) 100);
        retryOnPrimaryException38.addSuppressed((java.lang.Throwable) retryOnPrimaryException46);
        java.lang.String str59 = retryOnPrimaryException38.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput60 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException38.writeTo(streamOutput60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "retry_on_primary_exception" + "'", str47, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "RetryOnPrimaryException[[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str59, "RetryOnPrimaryException[[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6442");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable throwable9 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable[] throwableArray11 = retryOnPrimaryException8.getSuppressed();
        retryOnPrimaryException8.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException8.getHeaderKeys();
        java.lang.String str15 = retryOnPrimaryException8.getResourceType();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder16 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params17 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder18 = retryOnPrimaryException8.toXContent(xContentBuilder16, params17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(params17);
    }

    @Test
    public void test6443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6443");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException3.getHeader("hi!");
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException3.getHeader("");
        retryOnPrimaryException3.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException17.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 1);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        java.util.List<java.lang.String> strList27 = null;
        retryOnPrimaryException25.addHeader("retry_on_primary_exception", strList27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        retryOnPrimaryException25.setShard(shardId29);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", throwable36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException38.setResources("retry_on_primary_exception", strArray43);
        java.lang.String str45 = retryOnPrimaryException38.toString();
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException38);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException38.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        java.lang.Throwable throwable53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "", throwable53);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", (java.lang.Throwable) retryOnPrimaryException54);
        java.lang.String[] strArray60 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException55.setResources("retry_on_primary_exception", strArray60);
        java.util.List<java.lang.String> strList62 = retryOnPrimaryException55.getResourceId();
        retryOnPrimaryException38.addHeader("retry_on_primary_exception", strList62);
        retryOnPrimaryException25.addHeader("retry_on_primary_exception", strList62);
        retryOnPrimaryException17.addHeader("", strList62);
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList62);
        java.util.List<java.lang.String> strList67 = retryOnPrimaryException3.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus68 = retryOnPrimaryException3.status();
        java.lang.Throwable throwable69 = retryOnPrimaryException3.getRootCause();
        java.lang.String str70 = retryOnPrimaryException3.getResourceType();
        java.lang.Throwable throwable71 = retryOnPrimaryException3.unwrapCause();
        java.lang.Throwable throwable72 = retryOnPrimaryException3.unwrapCause();
        boolean boolean73 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str45, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertTrue("'" + restStatus68 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus68.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable69);
        org.junit.Assert.assertEquals(throwable69.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable69.getMessage(), "");
        org.junit.Assert.assertEquals(throwable69.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(throwable71);
        org.junit.Assert.assertEquals(throwable71.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable71.getMessage(), "");
        org.junit.Assert.assertEquals(throwable71.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable72);
        org.junit.Assert.assertEquals(throwable72.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable72.getMessage(), "");
        org.junit.Assert.assertEquals(throwable72.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test6444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6444");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        java.lang.String str18 = retryOnPrimaryException11.toString();
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable[] throwableArray20 = retryOnPrimaryException11.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", throwable26);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", (java.lang.Throwable) retryOnPrimaryException27);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException28.setResources("retry_on_primary_exception", strArray33);
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException28.getResourceId();
        retryOnPrimaryException11.addHeader("retry_on_primary_exception", strList35);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "", throwable40);
        java.util.List<java.lang.String> strList43 = null;
        retryOnPrimaryException41.addHeader("retry_on_primary_exception", strList43);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        retryOnPrimaryException41.setShard(shardId45);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", throwable52);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "", (java.lang.Throwable) retryOnPrimaryException53);
        java.lang.String[] strArray59 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException54.setResources("retry_on_primary_exception", strArray59);
        java.lang.String str61 = retryOnPrimaryException54.toString();
        boolean boolean62 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException54);
        java.lang.Throwable[] throwableArray63 = retryOnPrimaryException54.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        java.lang.Throwable throwable69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "", throwable69);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "", (java.lang.Throwable) retryOnPrimaryException70);
        java.lang.String[] strArray76 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException71.setResources("retry_on_primary_exception", strArray76);
        java.util.List<java.lang.String> strList78 = retryOnPrimaryException71.getResourceId();
        retryOnPrimaryException54.addHeader("retry_on_primary_exception", strList78);
        retryOnPrimaryException41.addHeader("retry_on_primary_exception", strList78);
        retryOnPrimaryException11.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList78);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip] RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList78);
        java.lang.Class<?> wildcardClass83 = strList78.getClass();
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str18, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str61, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test6445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6445");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String str10 = retryOnPrimaryException7.getResourceType();
        java.lang.String str11 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException7);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "retry_on_primary_exception" + "'", str11, "retry_on_primary_exception");
    }

    @Test
    public void test6446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6446");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[retry_on_primary_exception]");
        java.lang.Throwable[] throwableArray3 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray25 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException11.setResources("", strArray25);
        retryOnPrimaryException11.setShard("", (int) (short) -1);
        java.lang.String str30 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException11);
        retryOnPrimaryException11.setShard("rest.exception.stacktrace.skip", (int) (short) 0);
        java.lang.String[] strArray49 = new java.lang.String[] { "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "", "", "rest.exception.cause.skip", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.stacktrace.skip", "rest.exception.cause.skip", "[hi!][[hi!][10]] RetryOnPrimaryException[]", "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "hi!", "", "rest.exception.stacktrace.skip", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        retryOnPrimaryException11.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList50);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList50);
        boolean boolean54 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "retry_on_primary_exception" + "'", str30, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test6447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6447");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException26.setResources("retry_on_primary_exception", strArray31);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray40 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException26.setResources("", strArray40);
        retryOnPrimaryException11.addHeader("", strArray40);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray40);
        java.lang.String str44 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str46 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable47 = retryOnPrimaryException2.unwrapCause();
        java.lang.Throwable throwable48 = retryOnPrimaryException2.getRootCause();
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str44, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str46, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable47.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable48);
        org.junit.Assert.assertEquals(throwable48.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable48.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable48.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test6448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6448");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable throwable9 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException8);
        retryOnPrimaryException10.setShard("[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) '4');
        java.lang.Throwable[] throwableArray14 = retryOnPrimaryException10.getSuppressed();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException10.getHeaderKeys();
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test6449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6449");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("RetryOnPrimaryException[retry_on_primary_exception]", (int) 'a');
        org.elasticsearch.rest.RestStatus restStatus19 = retryOnPrimaryException6.status();
        java.lang.Class<?> wildcardClass20 = retryOnPrimaryException6.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + restStatus19 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus19.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test6450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6450");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable16 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray28 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray28);
        throwable16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable16);
        java.lang.String str32 = retryOnPrimaryException31.getResourceType();
        retryOnPrimaryException31.setShard("[[hi!][[hi!][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (byte) 0);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test6451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6451");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = retryOnPrimaryException6.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str17 = retryOnPrimaryException6.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException6.status();
        org.elasticsearch.rest.RestStatus restStatus19 = retryOnPrimaryException6.status();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException6.getHeader("[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable24 = retryOnPrimaryException6.getRootCause();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus19 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus19.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6452");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", throwable22);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", throwable29);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", (java.lang.Throwable) retryOnPrimaryException30);
        java.lang.String[] strArray36 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException31.setResources("retry_on_primary_exception", strArray36);
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException31.getResourceId();
        retryOnPrimaryException23.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList38);
        retryOnPrimaryException11.addHeader("rest.exception.stacktrace.skip", strList38);
        retryOnPrimaryException2.addHeader("[hi!][[hi!][10]] RetryOnPrimaryException[]", strList38);
        org.elasticsearch.index.Index index42 = retryOnPrimaryException2.getIndex();
        retryOnPrimaryException2.setShard("[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) 'a');
        java.lang.String str46 = retryOnPrimaryException2.toString();
        java.lang.String str47 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput48 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(index42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][97]] RetryOnPrimaryException[rest.exception.stacktrace.skip]" + "'", str46, "[[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][97]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str47, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
    }

    @Test
    public void test6453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6453");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "RetryOnPrimaryException[retry_on_primary_exception]");
        java.lang.Throwable throwable19 = retryOnPrimaryException18.getRootCause();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = retryOnPrimaryException6.guessRootCauses();
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException6.getSuppressed();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str15, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(throwableArray23);
    }

    @Test
    public void test6454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6454");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", throwable12);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", (java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String[] strArray19 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException14.setResources("retry_on_primary_exception", strArray19);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String[] strArray28 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException14.setResources("", strArray28);
        java.lang.String str30 = retryOnPrimaryException14.getResourceType();
        java.util.Set<java.lang.String> strSet31 = retryOnPrimaryException14.getHeaderKeys();
        java.lang.Throwable[] throwableArray32 = retryOnPrimaryException14.getSuppressed();
        throwable7.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        retryOnPrimaryException14.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][-1]] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 0);
        java.lang.Throwable throwable37 = retryOnPrimaryException14.unwrapCause();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "");
    }

    @Test
    public void test6455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6455");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        java.util.Set<java.lang.String> strSet18 = retryOnPrimaryException16.getHeaderKeys();
        java.lang.Class<?> wildcardClass19 = retryOnPrimaryException16.getClass();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test6456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6456");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str11 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException9);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str11, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]]");
        org.junit.Assert.assertNull(strList18);
    }

    @Test
    public void test6457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6457");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray3 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str5 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (int) 'a');
        java.lang.Throwable[] throwableArray9 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable throwable10 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", throwable13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException14.getHeader("retry_on_primary_exception");
        java.lang.String str18 = retryOnPrimaryException14.getDetailedMessage();
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException14.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId20 = retryOnPrimaryException14.getShardId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "retry_on_primary_exception" + "'", str5, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][97]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(shardId20);
    }

    @Test
    public void test6458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6458");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String[] strArray20 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException6.setResources("", strArray20);
        retryOnPrimaryException6.setShard("", (int) (short) -1);
        retryOnPrimaryException6.setShard("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (int) (short) 100);
        java.lang.String str28 = retryOnPrimaryException6.toString();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str28, "[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6459");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException6.guessRootCauses();
        retryOnPrimaryException6.setShard("hi!", (int) (byte) -1);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException6.getHeaderKeys();
        retryOnPrimaryException6.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", throwable19);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException21.setResources("retry_on_primary_exception", strArray26);
        java.lang.String str28 = retryOnPrimaryException21.toString();
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.Throwable[] throwableArray30 = retryOnPrimaryException21.getSuppressed();
        java.lang.String str31 = retryOnPrimaryException21.getDetailedMessage();
        retryOnPrimaryException21.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException21);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str28, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str31, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test6460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6460");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException3.getIndex();
        java.lang.String str12 = retryOnPrimaryException3.getDetailedMessage();
        java.lang.String str13 = retryOnPrimaryException3.getDetailedMessage();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test6461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6461");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable19 = retryOnPrimaryException11.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "RetryOnPrimaryException[retry_on_primary_exception]", throwable19);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException20.getHeader("");
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException20.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.index.Index index26 = retryOnPrimaryException20.getIndex();
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException20.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][10]] RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException30 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException20, streamOutput29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(index26);
        org.junit.Assert.assertNull(strList28);
    }

    @Test
    public void test6462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6462");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException6.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException6.guessRootCauses();
        java.lang.Throwable throwable9 = retryOnPrimaryException6.getRootCause();
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", throwable16);
        java.util.List<java.lang.String> strList19 = null;
        retryOnPrimaryException17.addHeader("retry_on_primary_exception", strList19);
        java.lang.Throwable throwable21 = retryOnPrimaryException17.unwrapCause();
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException17.setIndex(index22);
        retryOnPrimaryException17.setShard("hi!", (int) (short) 10);
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException17.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", throwable36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException38.setResources("retry_on_primary_exception", strArray43);
        java.lang.String str45 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        java.lang.Throwable throwable49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", throwable49);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        java.lang.Throwable throwable56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "", throwable56);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "", (java.lang.Throwable) retryOnPrimaryException57);
        java.lang.String[] strArray63 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException58.setResources("retry_on_primary_exception", strArray63);
        java.util.List<java.lang.String> strList65 = retryOnPrimaryException58.getResourceId();
        retryOnPrimaryException50.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList65);
        retryOnPrimaryException38.addHeader("rest.exception.stacktrace.skip", strList65);
        retryOnPrimaryException31.addSuppressed((java.lang.Throwable) retryOnPrimaryException38);
        java.util.List<java.lang.String> strList69 = retryOnPrimaryException38.getResourceId();
        java.util.List<java.lang.String> strList70 = retryOnPrimaryException38.getResourceId();
        retryOnPrimaryException17.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]", strList70);
        retryOnPrimaryException6.addHeader("", strList70);
        java.lang.String str73 = retryOnPrimaryException6.getResourceType();
        boolean boolean74 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray75 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray76 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "");
        org.junit.Assert.assertEquals(throwable21.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "retry_on_primary_exception" + "'", str45, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray76);
    }

    @Test
    public void test6463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6463");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("retry_on_primary_exception", (int) (byte) 1);
        java.lang.String str10 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        java.util.List<java.lang.String> strList17 = null;
        retryOnPrimaryException15.addHeader("retry_on_primary_exception", strList17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        retryOnPrimaryException15.setShard(shardId19);
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException15.getShardId();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", throwable27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException29.setResources("retry_on_primary_exception", strArray34);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String[] strArray43 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException29.setResources("", strArray43);
        retryOnPrimaryException15.addHeader("", strArray43);
        retryOnPrimaryException6.setResources("hi!", strArray43);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray51 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException50);
        java.lang.String[] strArray53 = new java.lang.String[] {};
        retryOnPrimaryException50.setResources("", strArray53);
        org.elasticsearch.index.Index index55 = retryOnPrimaryException50.getIndex();
        org.elasticsearch.index.Index index56 = retryOnPrimaryException50.getIndex();
        java.util.List<java.lang.String> strList57 = retryOnPrimaryException50.getResourceId();
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[]", strList57);
        boolean boolean59 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str61 = retryOnPrimaryException60.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNull(index55);
        org.junit.Assert.assertNull(index56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str61, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test6464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6464");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        retryOnPrimaryException2.setShard(shardId3);
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test6465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6465");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        retryOnPrimaryException3.setShard("hi!", (int) (short) 10);
        java.lang.String str13 = retryOnPrimaryException3.toString();
        java.lang.String str14 = retryOnPrimaryException3.toString();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        java.util.List<java.lang.String> strList23 = null;
        retryOnPrimaryException21.addHeader("retry_on_primary_exception", strList23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        retryOnPrimaryException21.setShard(shardId25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", (java.lang.Throwable) retryOnPrimaryException21);
        retryOnPrimaryException27.setIndex("rest.exception.stacktrace.skip");
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", throwable33);
        java.util.List<java.lang.String> strList36 = null;
        retryOnPrimaryException34.addHeader("retry_on_primary_exception", strList36);
        java.lang.Throwable throwable38 = retryOnPrimaryException34.unwrapCause();
        org.elasticsearch.index.Index index39 = null;
        retryOnPrimaryException34.setIndex(index39);
        java.lang.Throwable throwable41 = retryOnPrimaryException34.unwrapCause();
        java.lang.Throwable[] throwableArray42 = retryOnPrimaryException34.getSuppressed();
        retryOnPrimaryException34.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) '4');
        java.lang.String[] strArray54 = new java.lang.String[] { "retry_on_primary_exception", "hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "", "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        retryOnPrimaryException34.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException27.addHeader("hi!", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException3.addHeader("[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList55);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "", throwable63);
        java.util.List<java.lang.String> strList66 = null;
        retryOnPrimaryException64.addHeader("retry_on_primary_exception", strList66);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        retryOnPrimaryException64.setShard(shardId68);
        org.elasticsearch.index.shard.ShardId shardId70 = retryOnPrimaryException64.getShardId();
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        java.lang.Throwable throwable76 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException77 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId74, "", throwable76);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException78 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "", (java.lang.Throwable) retryOnPrimaryException77);
        java.lang.String[] strArray83 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException78.setResources("retry_on_primary_exception", strArray83);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray85 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException78);
        java.lang.String[] strArray92 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException78.setResources("", strArray92);
        retryOnPrimaryException64.addHeader("", strArray92);
        retryOnPrimaryException3.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray92);
        java.lang.String str96 = retryOnPrimaryException3.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray97 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        java.util.List<java.lang.String> strList98 = retryOnPrimaryException3.getResourceId();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str13, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str14, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "");
        org.junit.Assert.assertEquals(throwable38.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "");
        org.junit.Assert.assertEquals(throwable41.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(shardId70);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray85);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str96, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray97);
        org.junit.Assert.assertNull(strList98);
    }

    @Test
    public void test6466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6466");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String[] strArray18 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException13.setResources("retry_on_primary_exception", strArray18);
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException13.getResourceId();
        retryOnPrimaryException5.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList20);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "retry_on_primary_exception");
        java.lang.Throwable throwable26 = retryOnPrimaryException25.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", throwable32);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", (java.lang.Throwable) retryOnPrimaryException33);
        java.lang.String[] strArray39 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException34.setResources("retry_on_primary_exception", strArray39);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", throwable47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", (java.lang.Throwable) retryOnPrimaryException48);
        java.lang.String[] strArray54 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException49.setResources("retry_on_primary_exception", strArray54);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray56 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.String[] strArray63 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException49.setResources("", strArray63);
        retryOnPrimaryException34.addHeader("", strArray63);
        retryOnPrimaryException25.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray63);
        retryOnPrimaryException5.setResources("retry_on_primary_exception", strArray63);
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        java.lang.Throwable throwable71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "", throwable71);
        java.util.List<java.lang.String> strList74 = null;
        retryOnPrimaryException72.addHeader("retry_on_primary_exception", strList74);
        org.elasticsearch.index.shard.ShardId shardId76 = null;
        retryOnPrimaryException72.setShard(shardId76);
        org.elasticsearch.index.shard.ShardId shardId79 = null;
        org.elasticsearch.index.shard.ShardId shardId81 = null;
        java.lang.Throwable throwable83 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException84 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId81, "", throwable83);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException85 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId79, "", (java.lang.Throwable) retryOnPrimaryException84);
        java.lang.String[] strArray90 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException85.setResources("retry_on_primary_exception", strArray90);
        retryOnPrimaryException72.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray90);
        retryOnPrimaryException5.addHeader("rest.exception.stacktrace.skip", strArray90);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException94 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str95 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException5);
        java.util.List<java.lang.String> strList97 = retryOnPrimaryException5.getHeader("[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        boolean boolean98 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException5);
        java.lang.Throwable throwable99 = retryOnPrimaryException5.getRootCause();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable26.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray56);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "retry_on_primary_exception" + "'", str95, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(throwable99);
        org.junit.Assert.assertEquals(throwable99.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable99.getMessage(), "");
        org.junit.Assert.assertEquals(throwable99.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6467");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.String str11 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException3.getHeader("RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "retry_on_primary_exception" + "'", str11, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test6468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6468");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        java.util.List<java.lang.String> strList7 = null;
        retryOnPrimaryException5.addHeader("retry_on_primary_exception", strList7);
        java.lang.Throwable throwable9 = retryOnPrimaryException5.unwrapCause();
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException5.setIndex(index10);
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index13 = retryOnPrimaryException5.getIndex();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        retryOnPrimaryException5.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable throwable18 = retryOnPrimaryException16.unwrapCause();
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException16);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test6469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6469");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!][[hi!][52]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder3 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params4 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder5 = retryOnPrimaryException2.toXContent(xContentBuilder3, params4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params4);
    }

    @Test
    public void test6470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6470");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException6.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException6.guessRootCauses();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException6.getResourceId();
        retryOnPrimaryException6.setShard("[[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (short) 0);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test6471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6471");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable18 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", throwable23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException25.setResources("retry_on_primary_exception", strArray30);
        throwable18.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String str34 = retryOnPrimaryException25.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException38.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", 1);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable45);
        java.util.List<java.lang.String> strList48 = null;
        retryOnPrimaryException46.addHeader("retry_on_primary_exception", strList48);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        retryOnPrimaryException46.setShard(shardId50);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "", throwable57);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "", (java.lang.Throwable) retryOnPrimaryException58);
        java.lang.String[] strArray64 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException59.setResources("retry_on_primary_exception", strArray64);
        java.lang.String str66 = retryOnPrimaryException59.toString();
        boolean boolean67 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException59);
        java.lang.Throwable[] throwableArray68 = retryOnPrimaryException59.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        java.lang.Throwable throwable74 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "", throwable74);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "", (java.lang.Throwable) retryOnPrimaryException75);
        java.lang.String[] strArray81 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException76.setResources("retry_on_primary_exception", strArray81);
        java.util.List<java.lang.String> strList83 = retryOnPrimaryException76.getResourceId();
        retryOnPrimaryException59.addHeader("retry_on_primary_exception", strList83);
        retryOnPrimaryException46.addHeader("retry_on_primary_exception", strList83);
        retryOnPrimaryException38.addHeader("", strList83);
        retryOnPrimaryException25.addHeader("hi!", strList83);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray88 = retryOnPrimaryException25.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException89 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException25);
        retryOnPrimaryException89.setIndex("[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.String str92 = retryOnPrimaryException89.getResourceType();
        retryOnPrimaryException89.setIndex("RetryOnPrimaryException[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ];");
        java.lang.Throwable throwable95 = retryOnPrimaryException89.getRootCause();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str34, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str66, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray88);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNotNull(throwable95);
        org.junit.Assert.assertEquals(throwable95.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable95.getMessage(), "");
        org.junit.Assert.assertEquals(throwable95.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6472");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        retryOnPrimaryException3.setShard("hi!", (int) (short) 10);
        java.lang.String str13 = retryOnPrimaryException3.toString();
        java.lang.String str14 = retryOnPrimaryException3.toString();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        java.util.List<java.lang.String> strList23 = null;
        retryOnPrimaryException21.addHeader("retry_on_primary_exception", strList23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        retryOnPrimaryException21.setShard(shardId25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", (java.lang.Throwable) retryOnPrimaryException21);
        retryOnPrimaryException27.setIndex("rest.exception.stacktrace.skip");
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", throwable33);
        java.util.List<java.lang.String> strList36 = null;
        retryOnPrimaryException34.addHeader("retry_on_primary_exception", strList36);
        java.lang.Throwable throwable38 = retryOnPrimaryException34.unwrapCause();
        org.elasticsearch.index.Index index39 = null;
        retryOnPrimaryException34.setIndex(index39);
        java.lang.Throwable throwable41 = retryOnPrimaryException34.unwrapCause();
        java.lang.Throwable[] throwableArray42 = retryOnPrimaryException34.getSuppressed();
        retryOnPrimaryException34.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) '4');
        java.lang.String[] strArray54 = new java.lang.String[] { "retry_on_primary_exception", "hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "", "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        retryOnPrimaryException34.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException27.addHeader("hi!", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException3.addHeader("[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList55);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "", throwable63);
        java.util.List<java.lang.String> strList66 = null;
        retryOnPrimaryException64.addHeader("retry_on_primary_exception", strList66);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        retryOnPrimaryException64.setShard(shardId68);
        org.elasticsearch.index.shard.ShardId shardId70 = retryOnPrimaryException64.getShardId();
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        java.lang.Throwable throwable76 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException77 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId74, "", throwable76);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException78 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "", (java.lang.Throwable) retryOnPrimaryException77);
        java.lang.String[] strArray83 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException78.setResources("retry_on_primary_exception", strArray83);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray85 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException78);
        java.lang.String[] strArray92 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException78.setResources("", strArray92);
        retryOnPrimaryException64.addHeader("", strArray92);
        retryOnPrimaryException3.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray92);
        java.lang.String str96 = retryOnPrimaryException3.getDetailedMessage();
        retryOnPrimaryException3.setIndex("[rest.exception.stacktrace.skip] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray99 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[[rest.exception.stacktrace.skip] RetryOnPrimaryException[hi!]][[[rest.exception.stacktrace.skip] RetryOnPrimaryException[hi!]][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str13, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str14, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "");
        org.junit.Assert.assertEquals(throwable38.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "");
        org.junit.Assert.assertEquals(throwable41.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(shardId70);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray85);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str96, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray99);
    }

    @Test
    public void test6473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6473");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException6.getHeader("");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException6.status();
        java.lang.Throwable throwable18 = retryOnPrimaryException6.getRootCause();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6474");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException16.status();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException16.status();
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException16.getSuppressed();
        java.lang.Throwable throwable22 = retryOnPrimaryException16.unwrapCause();
        java.lang.String str23 = retryOnPrimaryException16.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.stacktrace.skip");
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String str31 = retryOnPrimaryException29.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "RetryOnPrimaryException[rest.exception.stacktrace.skip]", (java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "", throwable38);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", (java.lang.Throwable) retryOnPrimaryException39);
        java.lang.String[] strArray45 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException40.setResources("retry_on_primary_exception", strArray45);
        java.lang.String str47 = retryOnPrimaryException40.toString();
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException40);
        java.lang.Throwable[] throwableArray49 = retryOnPrimaryException40.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        java.lang.Throwable throwable55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "", throwable55);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "", (java.lang.Throwable) retryOnPrimaryException56);
        java.lang.String[] strArray62 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException57.setResources("retry_on_primary_exception", strArray62);
        java.util.List<java.lang.String> strList64 = retryOnPrimaryException57.getResourceId();
        retryOnPrimaryException40.addHeader("retry_on_primary_exception", strList64);
        retryOnPrimaryException32.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strList64);
        retryOnPrimaryException16.addHeader("", strList64);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str31, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str47, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strList64);
    }

    @Test
    public void test6475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6475");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray4 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str12 = retryOnPrimaryException10.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", throwable19);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String[] strArray26 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException21.setResources("retry_on_primary_exception", strArray26);
        java.lang.String str28 = retryOnPrimaryException21.toString();
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.Throwable[] throwableArray30 = retryOnPrimaryException21.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", throwable36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String[] strArray43 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException38.setResources("retry_on_primary_exception", strArray43);
        java.util.List<java.lang.String> strList45 = retryOnPrimaryException38.getResourceId();
        retryOnPrimaryException21.addHeader("retry_on_primary_exception", strList45);
        retryOnPrimaryException13.addHeader("", strList45);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList45);
        retryOnPrimaryException2.setIndex("");
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.toString(), "[] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str28, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strList45);
    }

    @Test
    public void test6476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6476");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String[] strArray13 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException8.setResources("retry_on_primary_exception", strArray13);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable16 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[retry_on_primary_exception]", throwable16);
        org.elasticsearch.index.Index index18 = retryOnPrimaryException17.getIndex();
        retryOnPrimaryException17.setIndex("[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException17.getShardId();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        java.util.List<java.lang.String> strList27 = null;
        retryOnPrimaryException25.addHeader("retry_on_primary_exception", strList27);
        java.lang.Throwable throwable29 = retryOnPrimaryException25.unwrapCause();
        org.elasticsearch.index.Index index30 = null;
        retryOnPrimaryException25.setIndex(index30);
        java.lang.String str32 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.index.Index index33 = retryOnPrimaryException25.getIndex();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        retryOnPrimaryException25.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException25);
        retryOnPrimaryException17.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(index18);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "");
        org.junit.Assert.assertEquals(throwable29.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "retry_on_primary_exception" + "'", str32, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
    }

    @Test
    public void test6477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6477");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", throwable22);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", throwable29);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", (java.lang.Throwable) retryOnPrimaryException30);
        java.lang.String[] strArray36 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException31.setResources("retry_on_primary_exception", strArray36);
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException31.getResourceId();
        retryOnPrimaryException23.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList38);
        retryOnPrimaryException11.addHeader("rest.exception.stacktrace.skip", strList38);
        retryOnPrimaryException2.addHeader("[hi!][[hi!][10]] RetryOnPrimaryException[]", strList38);
        org.elasticsearch.index.Index index42 = retryOnPrimaryException2.getIndex();
        retryOnPrimaryException2.setShard("[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) 'a');
        java.lang.String str46 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable47 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str48 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList50 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable52 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNull(index42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][97]] RetryOnPrimaryException[rest.exception.stacktrace.skip]" + "'", str46, "[[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][97]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable47.toString(), "[[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[[hi!][[hi!][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][97]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "retry_on_primary_exception" + "'", str48, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList50);
    }

    @Test
    public void test6478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6478");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable throwable9 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable11 = retryOnPrimaryException8.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("retry_on_primary_exception", (int) (byte) 1);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", throwable26);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", (java.lang.Throwable) retryOnPrimaryException27);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException28.setResources("retry_on_primary_exception", strArray33);
        java.lang.String str35 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.Throwable throwable36 = retryOnPrimaryException28.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "", throwable41);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "", (java.lang.Throwable) retryOnPrimaryException42);
        java.lang.String[] strArray48 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException43.setResources("retry_on_primary_exception", strArray48);
        throwable36.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable36);
        java.lang.String str52 = retryOnPrimaryException51.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus53 = retryOnPrimaryException51.status();
        boolean boolean54 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException51);
        boolean boolean55 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException51);
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        java.lang.Throwable throwable61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "", throwable61);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "", (java.lang.Throwable) retryOnPrimaryException62);
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        java.lang.Throwable throwable66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "", throwable66);
        boolean boolean68 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException67);
        retryOnPrimaryException63.addSuppressed((java.lang.Throwable) retryOnPrimaryException67);
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        java.lang.Throwable throwable75 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId73, "", throwable75);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException77 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "", (java.lang.Throwable) retryOnPrimaryException76);
        java.lang.String[] strArray82 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException77.setResources("retry_on_primary_exception", strArray82);
        retryOnPrimaryException63.setResources("rest.exception.cause.skip", strArray82);
        retryOnPrimaryException51.addHeader("retry_on_primary_exception", strArray82);
        retryOnPrimaryException14.addHeader("rest.exception.cause.skip", strArray82);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray87 = retryOnPrimaryException14.guessRootCauses();
        java.lang.String str88 = retryOnPrimaryException14.getResourceType();
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "retry_on_primary_exception" + "'", str35, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + restStatus53 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus53.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray87);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test6479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6479");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", throwable18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String[] strArray25 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray25);
        retryOnPrimaryException6.setResources("rest.exception.cause.skip", strArray25);
        java.lang.String str28 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId29 = retryOnPrimaryException6.getShardId();
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException6.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "retry_on_primary_exception" + "'", str28, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNull(strList31);
    }

    @Test
    public void test6480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6480");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        retryOnPrimaryException3.setShard("hi!", (int) (short) 10);
        java.lang.String str13 = retryOnPrimaryException3.toString();
        java.lang.String str14 = retryOnPrimaryException3.toString();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        java.util.List<java.lang.String> strList23 = null;
        retryOnPrimaryException21.addHeader("retry_on_primary_exception", strList23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        retryOnPrimaryException21.setShard(shardId25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", (java.lang.Throwable) retryOnPrimaryException21);
        retryOnPrimaryException27.setIndex("rest.exception.stacktrace.skip");
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "", throwable33);
        java.util.List<java.lang.String> strList36 = null;
        retryOnPrimaryException34.addHeader("retry_on_primary_exception", strList36);
        java.lang.Throwable throwable38 = retryOnPrimaryException34.unwrapCause();
        org.elasticsearch.index.Index index39 = null;
        retryOnPrimaryException34.setIndex(index39);
        java.lang.Throwable throwable41 = retryOnPrimaryException34.unwrapCause();
        java.lang.Throwable[] throwableArray42 = retryOnPrimaryException34.getSuppressed();
        retryOnPrimaryException34.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) '4');
        java.lang.String[] strArray54 = new java.lang.String[] { "retry_on_primary_exception", "hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "", "[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        retryOnPrimaryException34.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException27.addHeader("hi!", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException3.addHeader("[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList55);
        java.lang.String str60 = retryOnPrimaryException3.getDetailedMessage();
        boolean boolean61 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray62 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException3);
        java.util.List<java.lang.String> strList63 = retryOnPrimaryException3.getResourceId();
        java.util.List<java.lang.String> strList64 = retryOnPrimaryException3.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus65 = retryOnPrimaryException3.status();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str13, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str14, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "");
        org.junit.Assert.assertEquals(throwable38.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "");
        org.junit.Assert.assertEquals(throwable41.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][52]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str60, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertTrue("'" + restStatus65 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus65.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test6481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6481");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.String str11 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = retryOnPrimaryException3.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException3.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException3.guessRootCauses();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder15 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder17 = retryOnPrimaryException3.toXContent(xContentBuilder15, params16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "retry_on_primary_exception" + "'", str11, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
    }

    @Test
    public void test6482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6482");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException6.getShardId();
        java.lang.String str8 = retryOnPrimaryException6.getResourceType();
        retryOnPrimaryException6.setIndex("rest.exception.cause.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException6.guessRootCauses();
        java.lang.Throwable throwable12 = retryOnPrimaryException6.unwrapCause();
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable14 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException16 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException6, streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "");
        org.junit.Assert.assertEquals(throwable12.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6483");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.Throwable[] throwableArray3 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        java.util.List<java.lang.String> strList12 = null;
        retryOnPrimaryException10.addHeader("retry_on_primary_exception", strList12);
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str15 = retryOnPrimaryException10.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException10);
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException10.getHeaderKeys();
        java.lang.String[] strArray25 = new java.lang.String[] { "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "RetryOnPrimaryException[[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; [hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "[rest.exception.stacktrace.skip] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException10.addHeader("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray25);
        retryOnPrimaryException2.addHeader("[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[[][[][-1]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];", strArray25);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[]" + "'", str15, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strArray25);
    }

    @Test
    public void test6484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6484");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        java.util.List<java.lang.String> strList5 = null;
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strList5);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException3.setIndex(index8);
        retryOnPrimaryException3.setShard("hi!", (int) (short) 10);
        java.lang.String str13 = retryOnPrimaryException3.toString();
        java.lang.String str14 = retryOnPrimaryException3.toString();
        java.lang.Throwable throwable15 = retryOnPrimaryException3.getRootCause();
        retryOnPrimaryException3.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]");
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException3.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException3.writeTo(streamOutput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]][[RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str13, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[hi!][[hi!][10]] RetryOnPrimaryException[]" + "'", str14, "[hi!][[hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "");
        org.junit.Assert.assertEquals(throwable15.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]][[RetryOnPrimaryException[RetryOnPrimaryException[retry_on_primary_exception]]][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList18);
    }

    @Test
    public void test6485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6485");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException6.getResourceId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException6.getHeader("[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.Throwable throwable17 = retryOnPrimaryException6.getRootCause();
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
    }

    @Test
    public void test6486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6486");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", throwable10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray17 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException12.setResources("retry_on_primary_exception", strArray17);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable throwable20 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", throwable25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray32 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException27.setResources("retry_on_primary_exception", strArray32);
        throwable20.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", throwable20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException36);
        java.lang.String str38 = retryOnPrimaryException36.toString();
        java.lang.String str39 = retryOnPrimaryException36.toString();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str38, "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str39, "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test6487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6487");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException8.getResourceId();
        java.lang.String str16 = retryOnPrimaryException8.getResourceType();
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException8.getHeader("hi!");
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        retryOnPrimaryException8.setShard(shardId19);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        java.util.List<java.lang.String> strList27 = null;
        retryOnPrimaryException25.addHeader("retry_on_primary_exception", strList27);
        java.lang.Throwable throwable29 = retryOnPrimaryException25.unwrapCause();
        org.elasticsearch.index.Index index30 = null;
        retryOnPrimaryException25.setIndex(index30);
        java.lang.Throwable throwable32 = retryOnPrimaryException25.unwrapCause();
        java.lang.Throwable[] throwableArray33 = retryOnPrimaryException25.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "", throwable37);
        java.util.List<java.lang.String> strList40 = null;
        retryOnPrimaryException38.addHeader("retry_on_primary_exception", strList40);
        java.lang.Throwable throwable42 = retryOnPrimaryException38.unwrapCause();
        org.elasticsearch.index.Index index43 = null;
        retryOnPrimaryException38.setIndex(index43);
        java.lang.String str45 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        java.lang.Throwable throwable49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", throwable49);
        java.util.List<java.lang.String> strList52 = null;
        retryOnPrimaryException50.addHeader("retry_on_primary_exception", strList52);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        retryOnPrimaryException50.setShard(shardId54);
        org.elasticsearch.index.shard.ShardId shardId56 = retryOnPrimaryException50.getShardId();
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        java.lang.Throwable throwable62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "", throwable62);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "", (java.lang.Throwable) retryOnPrimaryException63);
        java.lang.String[] strArray69 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException64.setResources("retry_on_primary_exception", strArray69);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray71 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException64);
        java.lang.String[] strArray78 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException64.setResources("", strArray78);
        retryOnPrimaryException50.addHeader("", strArray78);
        retryOnPrimaryException38.addHeader("", strArray78);
        retryOnPrimaryException25.addHeader("[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray78);
        retryOnPrimaryException8.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];", strArray78);
        java.lang.Throwable[] throwableArray84 = retryOnPrimaryException8.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "");
        org.junit.Assert.assertEquals(throwable29.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "retry_on_primary_exception" + "'", str45, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId56);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray71);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(throwableArray84);
    }

    @Test
    public void test6488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6488");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", throwable11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", (java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String[] strArray27 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException22.setResources("retry_on_primary_exception", strArray27);
        retryOnPrimaryException8.setResources("rest.exception.cause.skip", strArray27);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = retryOnPrimaryException8.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException31);
        java.lang.String str33 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException31);
        retryOnPrimaryException31.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder36 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params37 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder38 = retryOnPrimaryException31.toXContent(xContentBuilder36, params37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "retry_on_primary_exception" + "'", str33, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(params37);
    }

    @Test
    public void test6489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6489");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException6.getShardId();
        java.lang.String str8 = retryOnPrimaryException6.getResourceType();
        retryOnPrimaryException6.setIndex("rest.exception.cause.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException6.guessRootCauses();
        java.lang.Throwable throwable12 = retryOnPrimaryException6.unwrapCause();
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable14 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException6.writeTo(streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "");
        org.junit.Assert.assertEquals(throwable12.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6490");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", (java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", throwable19);
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", throwable28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", (java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String[] strArray35 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException30.setResources("retry_on_primary_exception", strArray35);
        retryOnPrimaryException16.setResources("rest.exception.cause.skip", strArray35);
        retryOnPrimaryException7.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException16.setShard("RetryOnPrimaryException[[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (int) (short) 0);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder42 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params43 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder44 = retryOnPrimaryException16.toXContent(xContentBuilder42, params43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(params43);
    }

    @Test
    public void test6491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6491");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        java.lang.Throwable throwable7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", throwable7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String[] strArray14 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException9.setResources("retry_on_primary_exception", strArray14);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "", throwable20);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", throwable27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray34 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException29.setResources("retry_on_primary_exception", strArray34);
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException29.getResourceId();
        retryOnPrimaryException21.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList36);
        retryOnPrimaryException9.addHeader("rest.exception.stacktrace.skip", strList36);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException9.getResourceId();
        java.lang.String str41 = retryOnPrimaryException9.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray42 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        java.util.Set<java.lang.String> strSet43 = retryOnPrimaryException9.getHeaderKeys();
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str45 = retryOnPrimaryException9.toString();
        java.util.List<java.lang.String> strList46 = retryOnPrimaryException9.getResourceId();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "retry_on_primary_exception" + "'", str41, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str45, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strList46);
    }

    @Test
    public void test6492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6492");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", throwable9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String[] strArray16 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException26.setResources("retry_on_primary_exception", strArray31);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray40 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException26.setResources("", strArray40);
        retryOnPrimaryException11.addHeader("", strArray40);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray40);
        java.lang.String str44 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId46 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str44, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertNull(shardId46);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
    }

    @Test
    public void test6493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6493");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str6 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException7.getResourceId();
        org.elasticsearch.common.io.stream.StreamInput streamInput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException11 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException7, streamInput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test6494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6494");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        org.elasticsearch.index.shard.ShardId shardId3 = retryOnPrimaryException2.getShardId();
        java.lang.String str4 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "retry_on_primary_exception" + "'", str4, "retry_on_primary_exception");
    }

    @Test
    public void test6495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6495");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", throwable8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException10.setResources("retry_on_primary_exception", strArray15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", throwable22);
        java.util.List<java.lang.String> strList25 = null;
        retryOnPrimaryException23.addHeader("retry_on_primary_exception", strList25);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        retryOnPrimaryException23.setShard(shardId27);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", throwable34);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", (java.lang.Throwable) retryOnPrimaryException35);
        java.lang.String[] strArray41 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException36.setResources("retry_on_primary_exception", strArray41);
        java.lang.String str43 = retryOnPrimaryException36.toString();
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException36);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException36.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", throwable51);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", (java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String[] strArray58 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException53.setResources("retry_on_primary_exception", strArray58);
        java.util.List<java.lang.String> strList60 = retryOnPrimaryException53.getResourceId();
        retryOnPrimaryException36.addHeader("retry_on_primary_exception", strList60);
        retryOnPrimaryException23.addHeader("retry_on_primary_exception", strList60);
        retryOnPrimaryException10.addHeader("[[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList60);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str43, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strList60);
    }

    @Test
    public void test6496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6496");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException6.getShardId();
        java.lang.String str8 = retryOnPrimaryException6.getResourceType();
        retryOnPrimaryException6.setIndex("rest.exception.cause.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException6.guessRootCauses();
        retryOnPrimaryException6.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (short) 100);
        java.lang.String str15 = retryOnPrimaryException6.toString();
        java.lang.String str16 = retryOnPrimaryException6.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str15, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
    }

    @Test
    public void test6497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6497");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        java.lang.String str13 = retryOnPrimaryException6.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("hi!", (int) '4');
        retryOnPrimaryException6.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException6.getHeader("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]][[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
    }

    @Test
    public void test6498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6498");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable8 = retryOnPrimaryException6.getRootCause();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "", throwable12);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException13.addHeader("retry_on_primary_exception", strList15);
        java.lang.Throwable throwable17 = retryOnPrimaryException13.unwrapCause();
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException13.setIndex(index18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", throwable24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String[] strArray31 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException26.setResources("retry_on_primary_exception", strArray31);
        java.lang.String str33 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray34 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = retryOnPrimaryException26.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.index.shard.ShardId shardId41 = retryOnPrimaryException39.getShardId();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = retryOnPrimaryException39.guessRootCauses();
        java.util.List<java.lang.String> strList46 = retryOnPrimaryException39.getHeader("[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "retry_on_primary_exception" + "'", str33, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
        org.junit.Assert.assertNull(strList46);
    }

    @Test
    public void test6499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6499");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException6.getShardId();
        java.lang.String str8 = retryOnPrimaryException6.getResourceType();
        java.lang.String str9 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", throwable13);
        java.util.List<java.lang.String> strList16 = null;
        retryOnPrimaryException14.addHeader("retry_on_primary_exception", strList16);
        java.lang.Throwable throwable18 = retryOnPrimaryException14.unwrapCause();
        org.elasticsearch.index.Index index19 = null;
        retryOnPrimaryException14.setIndex(index19);
        java.lang.Throwable throwable21 = retryOnPrimaryException14.unwrapCause();
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException14.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", throwable26);
        java.util.List<java.lang.String> strList29 = null;
        retryOnPrimaryException27.addHeader("retry_on_primary_exception", strList29);
        java.lang.Throwable throwable31 = retryOnPrimaryException27.unwrapCause();
        org.elasticsearch.index.Index index32 = null;
        retryOnPrimaryException27.setIndex(index32);
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "", throwable38);
        java.util.List<java.lang.String> strList41 = null;
        retryOnPrimaryException39.addHeader("retry_on_primary_exception", strList41);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        retryOnPrimaryException39.setShard(shardId43);
        org.elasticsearch.index.shard.ShardId shardId45 = retryOnPrimaryException39.getShardId();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "", throwable51);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", (java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String[] strArray58 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException53.setResources("retry_on_primary_exception", strArray58);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray60 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException53);
        java.lang.String[] strArray67 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException53.setResources("", strArray67);
        retryOnPrimaryException39.addHeader("", strArray67);
        retryOnPrimaryException27.addHeader("", strArray67);
        retryOnPrimaryException14.addHeader("[hi!][[hi!][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray67);
        retryOnPrimaryException6.setResources("", strArray67);
        retryOnPrimaryException6.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.String str75 = retryOnPrimaryException6.getDetailedMessage();
        java.lang.Throwable throwable76 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable78 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException6, streamOutput77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str9, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "");
        org.junit.Assert.assertEquals(throwable31.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray60);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str75, "[[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable76);
        org.junit.Assert.assertEquals(throwable76.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable76.getMessage(), "");
        org.junit.Assert.assertEquals(throwable76.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test6500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test6500");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String[] strArray11 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException6.setResources("retry_on_primary_exception", strArray11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String[] strArray20 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", "rest.exception.cause.skip", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" };
        retryOnPrimaryException6.setResources("", strArray20);
        retryOnPrimaryException6.setShard("rest.exception.cause.skip", (int) '#');
        java.lang.String str25 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        retryOnPrimaryException6.setShard(shardId26);
        java.lang.Throwable throwable28 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        retryOnPrimaryException6.setShard(shardId29);
        java.lang.String str31 = retryOnPrimaryException6.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray33 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray34 = retryOnPrimaryException6.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "", throwable39);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "", (java.lang.Throwable) retryOnPrimaryException40);
        java.lang.String[] strArray46 = new java.lang.String[] { "", "retry_on_primary_exception", "" };
        retryOnPrimaryException41.setResources("retry_on_primary_exception", strArray46);
        java.lang.String str48 = retryOnPrimaryException41.toString();
        org.elasticsearch.rest.RestStatus restStatus49 = retryOnPrimaryException41.status();
        java.lang.Throwable throwable50 = retryOnPrimaryException41.unwrapCause();
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable50);
        retryOnPrimaryException6.addSuppressed(throwable50);
        java.lang.String str53 = retryOnPrimaryException6.getDetailedMessage();
        java.lang.Throwable throwable54 = retryOnPrimaryException6.unwrapCause();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "retry_on_primary_exception" + "'", str25, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "");
        org.junit.Assert.assertEquals(throwable28.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray34);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str48, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus49 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus49.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable50);
        org.junit.Assert.assertEquals(throwable50.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable50.getMessage(), "");
        org.junit.Assert.assertEquals(throwable50.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str53, "[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable54);
        org.junit.Assert.assertEquals(throwable54.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable54.getMessage(), "");
        org.junit.Assert.assertEquals(throwable54.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][35]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
    }
}

