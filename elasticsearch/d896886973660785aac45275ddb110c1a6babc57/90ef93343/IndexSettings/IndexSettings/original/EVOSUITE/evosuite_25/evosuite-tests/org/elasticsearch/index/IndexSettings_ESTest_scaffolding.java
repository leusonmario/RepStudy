/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Nov 05 11:46:22 GMT 2021
 */

package org.elasticsearch.index;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class IndexSettings_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 10000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.elasticsearch.index.IndexSettings"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/CIN/lmps2/semanticConflicts/SMAT/output-test-dest/elasticsearch/d896886973660785aac45275ddb110c1a6babc57/evosuite_25"); 
    java.lang.System.setProperty("user.home", "/home/CIN/lmps2"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "lmps2"); 
    java.lang.System.setProperty("user.timezone", "America/Recife"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
    java.lang.System.setProperty("sun.arch.data.model", "64"); 
    java.lang.System.setProperty("sun.boot.class.path", "/usr/lib/jvm/jdk1.8.0_291/jre/lib/resources.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/rt.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/sunrsasign.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jsse.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jce.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/charsets.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jfr.jar:/usr/lib/jvm/jdk1.8.0_291/jre/classes"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(IndexSettings_ESTest_scaffolding.class.getClassLoader() ,
      "org.joda.time.DateTimeZone",
      "org.elasticsearch.common.joda.Joda$1",
      "com.carrotsearch.hppc.ObjectObjectHashMap$ValuesIterator",
      "org.elasticsearch.common.cache.CacheLoader",
      "org.apache.lucene.mockfile.DisableFsyncFS",
      "org.elasticsearch.common.io.BytesStream",
      "org.elasticsearch.common.unit.SizeValue",
      "org.elasticsearch.cluster.Diff",
      "org.elasticsearch.common.joda.Joda$2",
      "org.elasticsearch.indices.recovery.RecoverySettings",
      "org.elasticsearch.common.xcontent.AbstractObjectParser$NoContextParser",
      "org.elasticsearch.index.engine.EngineConfig",
      "org.elasticsearch.action.admin.indices.stats.IndicesStatsRequest",
      "org.apache.lucene.index.MergePolicy",
      "com.carrotsearch.hppc.predicates.ObjectPredicate",
      "org.apache.lucene.index.LeafReader$CoreClosedListener",
      "org.apache.lucene.search.QueryCache",
      "org.apache.lucene.mockfile.FilterInputStream2",
      "org.elasticsearch.common.logging.ESLogger",
      "org.joda.time.DateTimeFieldType$StandardDateTimeFieldType",
      "org.apache.lucene.mockfile.FilterFileSystemProvider",
      "org.elasticsearch.action.ActionRequest",
      "org.elasticsearch.common.io.FastStringReader",
      "org.joda.time.format.PeriodFormatterBuilder",
      "org.elasticsearch.cluster.metadata.IndexMetaData",
      "com.carrotsearch.hppc.Containers",
      "org.apache.lucene.util.Accountable",
      "org.joda.time.format.PeriodFormatterBuilder$FieldFormatter",
      "com.carrotsearch.hppc.IntLookupContainer",
      "org.elasticsearch.common.lucene.store.FilterIndexOutput",
      "org.elasticsearch.ElasticsearchParseException",
      "org.elasticsearch.index.mapper.MapperException",
      "org.elasticsearch.indices.InvalidTypeNameException",
      "org.joda.time.field.BaseDateTimeField",
      "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationDecider$Rebalance",
      "org.elasticsearch.common.unit.ByteSizeUnit$6",
      "org.elasticsearch.common.unit.ByteSizeUnit$5",
      "org.elasticsearch.common.io.stream.Streamable",
      "org.elasticsearch.ingest.PipelineConfiguration$Builder",
      "org.elasticsearch.common.settings.Setting$Key",
      "org.elasticsearch.cluster.metadata.IndexGraveyard",
      "org.elasticsearch.index.IndexModule",
      "com.carrotsearch.hppc.BitMixer",
      "org.apache.log4j.Hierarchy",
      "org.elasticsearch.index.MergePolicyConfig",
      "org.joda.time.format.DateTimePrinterInternalPrinter",
      "com.carrotsearch.hppc.ObjectContainer",
      "org.apache.lucene.mockfile.FilterAsynchronousFileChannel",
      "org.elasticsearch.common.component.AbstractComponent",
      "org.elasticsearch.index.shard.IndexEventListener",
      "org.elasticsearch.discovery.DiscoverySettings",
      "org.elasticsearch.discovery.Discovery$AckListener",
      "org.elasticsearch.common.xcontent.XContentParser$Token$10",
      "org.elasticsearch.action.admin.cluster.node.stats.NodesStatsRequest",
      "org.elasticsearch.common.joda.FormatDateTimeFormatter",
      "org.joda.time.field.PreciseDateTimeField",
      "org.elasticsearch.common.util.concurrent.EsRejectedExecutionException",
      "org.elasticsearch.common.logging.ESLoggerFactory",
      "com.carrotsearch.hppc.IntObjectHashMap",
      "org.apache.lucene.store.LockFactory",
      "org.apache.log4j.helpers.OptionConverter",
      "org.elasticsearch.cluster.metadata.IndexMetaData$1",
      "org.elasticsearch.index.store.Store$StoreDirectory",
      "org.apache.lucene.store.FileSwitchDirectory",
      "org.elasticsearch.transport.TransportRequest",
      "org.elasticsearch.cluster.metadata.MappingMetaData",
      "org.apache.lucene.store.ChecksumIndexInput",
      "org.elasticsearch.index.MergeSchedulerConfig",
      "org.elasticsearch.common.settings.Settings",
      "org.elasticsearch.common.settings.Setting$AffixKey",
      "com.carrotsearch.hppc.ObjectSet",
      "org.joda.time.DateTimeField",
      "org.elasticsearch.cluster.metadata.IndexMetaData$IndexMetaDataDiff",
      "org.apache.log4j.Category",
      "org.elasticsearch.common.lease.Releasable",
      "org.elasticsearch.index.fielddata.IndexFieldDataService$1",
      "org.elasticsearch.index.store.Store$LuceneVerifyingIndexOutput",
      "org.elasticsearch.common.util.concurrent.AbstractRefCounted",
      "org.elasticsearch.index.store.IndexStoreConfig",
      "org.elasticsearch.index.store.IndexStore",
      "org.apache.lucene.mockfile.HandleTrackingFS",
      "org.elasticsearch.index.store.FsDirectoryService",
      "org.elasticsearch.common.util.set.Sets",
      "org.joda.time.format.DateTimeFormatterBuilder$Composite",
      "org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix",
      "org.joda.time.ReadablePeriod",
      "org.elasticsearch.Version",
      "org.elasticsearch.index.SearchSlowLog",
      "org.elasticsearch.cluster.service.ClusterService$SafeClusterStateTaskListener",
      "org.elasticsearch.common.unit.ByteSizeUnit$2",
      "org.elasticsearch.common.xcontent.ObjectParser",
      "org.elasticsearch.common.unit.ByteSizeUnit$1",
      "org.elasticsearch.common.unit.ByteSizeUnit$4",
      "org.elasticsearch.common.unit.ByteSizeUnit$3",
      "org.elasticsearch.cluster.node.DiscoveryNodeFilters",
      "org.elasticsearch.cluster.metadata.AliasOrIndex",
      "org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber",
      "org.elasticsearch.index.store.Store$1",
      "org.elasticsearch.cluster.metadata.IndexGraveyard$Builder",
      "org.elasticsearch.common.logging.DeprecationLogger",
      "org.elasticsearch.common.xcontent.XContentType",
      "org.elasticsearch.common.ParsingException",
      "org.apache.lucene.store.DataOutput",
      "org.apache.lucene.mockfile.HandleTrackingFS$1",
      "org.apache.lucene.mockfile.HandleTrackingFS$4",
      "org.elasticsearch.common.xcontent.XContentParser$Token",
      "org.joda.time.field.DecoratedDurationField",
      "org.apache.lucene.mockfile.HandleTrackingFS$2",
      "org.apache.lucene.mockfile.HandleTrackingFS$3",
      "com.carrotsearch.hppc.IntObjectAssociativeContainer",
      "org.elasticsearch.common.unit.TimeValue",
      "com.carrotsearch.hppc.predicates.ObjectObjectPredicate",
      "org.elasticsearch.cluster.block.ClusterBlockLevel",
      "org.apache.lucene.store.SimpleFSDirectory",
      "com.carrotsearch.hppc.ObjectObjectHashMap$ValuesContainer",
      "org.elasticsearch.index.store.Store$StoreStatsCache",
      "org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter",
      "org.elasticsearch.index.mapper.Mapper",
      "org.elasticsearch.action.support.ToXContentToBytes",
      "org.elasticsearch.common.xcontent.AbstractObjectParser$ContextParser",
      "org.elasticsearch.common.io.CharSequenceReader",
      "org.elasticsearch.gateway.PrimaryShardAllocator",
      "org.apache.log4j.spi.AppenderAttachable",
      "org.apache.lucene.search.Collector",
      "org.elasticsearch.common.settings.IndexScopedSettings",
      "org.joda.time.format.PeriodFormatterBuilder$Separator",
      "org.elasticsearch.common.util.SingleObjectCache",
      "org.elasticsearch.script.ScriptMetaData",
      "org.apache.lucene.store.NIOFSDirectory",
      "org.elasticsearch.common.settings.Setting$4",
      "org.elasticsearch.cluster.AckedClusterStateTaskListener",
      "org.elasticsearch.common.settings.Setting$3",
      "org.joda.time.DurationFieldType$StandardDurationFieldType",
      "org.elasticsearch.common.settings.Setting$2",
      "com.carrotsearch.hppc.ObjectLookupContainer",
      "org.elasticsearch.common.unit.ByteSizeUnit",
      "org.elasticsearch.common.io.stream.StreamOutput",
      "org.apache.lucene.index.IndexFormatTooNewException",
      "org.joda.time.format.DateTimeFormatterBuilder$StringLiteral",
      "org.elasticsearch.action.IndicesRequest",
      "org.elasticsearch.common.xcontent.XContentBuilder",
      "org.apache.lucene.mockfile.HandleLimitFS",
      "org.elasticsearch.action.support.broadcast.BroadcastRequest",
      "org.joda.time.DateTimeFieldType",
      "org.elasticsearch.ElasticsearchGenerationException",
      "org.joda.time.format.DateTimeFormatterBuilder$Fraction",
      "org.elasticsearch.common.xcontent.AbstractObjectParser",
      "org.elasticsearch.cluster.ClusterInfoService",
      "org.elasticsearch.common.xcontent.XContentParser$Token$6",
      "org.elasticsearch.cluster.routing.allocation.decider.ShardsLimitAllocationDecider",
      "org.elasticsearch.index.mapper.FieldMapper",
      "org.elasticsearch.common.xcontent.XContentParser$Token$7",
      "org.elasticsearch.common.xcontent.XContentParser$Token$8",
      "org.elasticsearch.cluster.InternalClusterInfoService",
      "org.elasticsearch.common.xcontent.XContentParser$Token$9",
      "org.elasticsearch.common.joda.Joda",
      "org.elasticsearch.common.settings.AbstractScopedSettings$SettingUpdater",
      "org.elasticsearch.common.xcontent.XContentParser$Token$2",
      "org.elasticsearch.common.xcontent.XContentParser$Token$3",
      "org.elasticsearch.common.xcontent.XContentParser$Token$4",
      "org.elasticsearch.common.xcontent.XContentParser$Token$5",
      "org.elasticsearch.common.xcontent.XContentParser$Token$1",
      "com.carrotsearch.hppc.Containers$1",
      "org.elasticsearch.action.IndicesRequest$Replaceable",
      "org.elasticsearch.cluster.service.ClusterService$SafeAckedClusterStateTaskListener",
      "org.elasticsearch.index.fielddata.IndexFieldDataCache$Listener",
      "org.elasticsearch.cluster.routing.allocation.decider.MaxRetryAllocationDecider",
      "org.apache.lucene.store.FSLockFactory",
      "org.elasticsearch.common.io.stream.NamedWriteable",
      "org.apache.log4j.helpers.Loader",
      "org.elasticsearch.common.bytes.BytesArray",
      "org.apache.lucene.analysis.DelegatingAnalyzerWrapper",
      "org.joda.time.field.ScaledDurationField",
      "org.apache.lucene.store.SimpleFSLockFactory",
      "org.apache.lucene.analysis.Analyzer",
      "org.elasticsearch.cluster.routing.UnassignedInfo",
      "org.apache.lucene.store.SleepingLockWrapper",
      "org.elasticsearch.index.cache.query.QueryCache",
      "org.joda.time.format.PeriodParser",
      "org.elasticsearch.cluster.metadata.IndexGraveyard$Tombstone$Builder",
      "org.apache.lucene.store.BaseDirectory",
      "org.apache.lucene.index.IndexReader$ReaderClosedListener",
      "com.carrotsearch.hppc.AbstractIterator",
      "org.elasticsearch.action.ActionListener",
      "org.elasticsearch.ElasticsearchException",
      "org.apache.lucene.store.MMapDirectory",
      "org.elasticsearch.common.settings.PropertyPlaceholder$PlaceholderResolver",
      "org.apache.lucene.document.FieldType",
      "org.apache.lucene.index.CorruptIndexException",
      "org.apache.lucene.store.Directory",
      "org.elasticsearch.common.ParseFieldMatcher",
      "org.apache.lucene.index.LeafReaderContext",
      "org.joda.time.format.DateTimeFormatterBuilder$MatchingParser",
      "org.elasticsearch.common.settings.Setting",
      "org.apache.lucene.util.BytesRef",
      "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDecider",
      "org.elasticsearch.common.bytes.BytesReference",
      "org.joda.time.tz.Provider",
      "org.elasticsearch.index.IndexComponent",
      "org.joda.time.DurationFieldType",
      "org.elasticsearch.cluster.routing.allocation.decider.AllocationDecider",
      "org.apache.log4j.PropertyConfigurator",
      "org.elasticsearch.action.support.nodes.BaseNodesRequest",
      "org.apache.lucene.search.join.BitSetProducer",
      "org.elasticsearch.cluster.ClusterStateTaskListener",
      "org.apache.lucene.index.IndexableFieldType",
      "org.elasticsearch.client.Requests",
      "org.elasticsearch.index.store.IndexStore$IndexRateLimitingType",
      "org.elasticsearch.common.Classes",
      "org.apache.lucene.store.IndexOutput",
      "org.elasticsearch.index.mapper.MapperParsingException",
      "org.elasticsearch.index.fielddata.IndexFieldDataCache",
      "org.joda.time.format.PeriodFormat",
      "com.carrotsearch.hppc.Preallocable",
      "org.elasticsearch.index.mapper.object.RootObjectMapper",
      "org.joda.time.format.PeriodFormatterBuilder$Composite",
      "org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix",
      "org.apache.lucene.index.IndexFormatTooOldException",
      "com.carrotsearch.hppc.IntObjectMap",
      "org.joda.time.UTCDateTimeZone",
      "org.elasticsearch.index.shard.AbstractIndexShardComponent",
      "org.elasticsearch.cluster.LocalNodeMasterListener",
      "org.apache.log4j.spi.LoggerRepository",
      "org.apache.lucene.mockfile.DisableFsyncFS$1",
      "org.elasticsearch.indices.TypeMissingException",
      "org.joda.time.field.BaseDurationField",
      "org.apache.lucene.mockfile.DisableFsyncFS$2",
      "org.elasticsearch.cluster.metadata.MetaData",
      "org.apache.lucene.index.IndexNotFoundException",
      "org.elasticsearch.index.store.Store$VerifyingIndexInput",
      "org.apache.lucene.store.StoreRateLimiting$Listener",
      "org.apache.lucene.store.AlreadyClosedException",
      "org.elasticsearch.index.store.FsDirectoryService$1",
      "org.elasticsearch.cluster.block.ClusterBlock",
      "org.apache.log4j.Level",
      "org.elasticsearch.common.xcontent.ToXContent$MapParams",
      "com.carrotsearch.hppc.cursors.ObjectCursor",
      "org.elasticsearch.common.settings.Setting$Property",
      "org.elasticsearch.common.lucene.store.InputStreamIndexInput",
      "org.joda.time.format.DateTimePrinter",
      "org.joda.time.field.DividedDateTimeField",
      "org.apache.lucene.store.StoreRateLimiting$Type",
      "org.apache.lucene.store.DataInput",
      "org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset",
      "org.elasticsearch.common.collect.ImmutableOpenMap",
      "org.elasticsearch.common.xcontent.ObjectParser$Parser",
      "org.apache.lucene.store.NativeFSLockFactory",
      "org.joda.time.format.PeriodFormatter",
      "org.elasticsearch.index.shard.IndexShardComponent",
      "org.elasticsearch.index.mapper.object.ObjectMapper",
      "org.elasticsearch.common.settings.Setting$GroupKey",
      "org.apache.lucene.mockfile.FilterFileSystem",
      "org.elasticsearch.index.store.Store",
      "org.elasticsearch.gateway.MetaDataStateFormat",
      "org.elasticsearch.cluster.metadata.MetaData$Custom",
      "org.apache.lucene.store.FSDirectory",
      "org.apache.lucene.store.RateLimitedFSDirectory",
      "org.apache.lucene.index.TieredMergePolicy",
      "com.carrotsearch.hppc.ObjectHashSet",
      "org.elasticsearch.common.logging.Loggers",
      "org.elasticsearch.cluster.metadata.IndexMetaData$State",
      "org.elasticsearch.cluster.metadata.MetaData$XContentContext",
      "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationDecider",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.lucene.store.IndexInput",
      "org.elasticsearch.index.mapper.internal.AllFieldMapper$IncludeInAll",
      "org.joda.time.ReadWritablePeriod",
      "org.elasticsearch.common.unit.RatioValue",
      "com.carrotsearch.hppc.ObjectObjectMap",
      "org.elasticsearch.cluster.ClusterStateTaskConfig",
      "org.elasticsearch.cluster.ClusterStateTaskExecutor",
      "org.joda.time.tz.FixedDateTimeZone",
      "org.joda.time.format.PeriodPrinter",
      "org.apache.lucene.store.RateLimiter$SimpleRateLimiter",
      "org.elasticsearch.common.xcontent.XContentParser",
      "org.joda.time.field.DecoratedDateTimeField",
      "org.joda.time.format.DateTimeParser",
      "org.elasticsearch.env.Environment",
      "org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral",
      "org.elasticsearch.common.xcontent.XContent",
      "org.apache.log4j.or.ObjectRenderer",
      "org.elasticsearch.index.mapper.MapperService$MapperAnalyzerWrapper",
      "org.joda.time.field.OffsetDateTimeField",
      "org.elasticsearch.index.shard.SearchOperationListener",
      "org.elasticsearch.common.settings.AbstractScopedSettings",
      "org.joda.time.format.ISODateTimeFormat",
      "org.elasticsearch.index.Index$Builder",
      "org.elasticsearch.search.DocValueFormat$DateTime",
      "org.elasticsearch.common.xcontent.ToXContent",
      "com.carrotsearch.hppc.IntContainer",
      "org.elasticsearch.search.DocValueFormat$Decimal",
      "org.joda.time.IllegalInstantException",
      "org.elasticsearch.gateway.MetaDataStateFormat$1",
      "org.elasticsearch.cluster.AbstractDiffable",
      "org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber",
      "org.elasticsearch.index.mapper.MapperService",
      "org.elasticsearch.discovery.Discovery$FailedToCommitClusterStateException",
      "org.apache.log4j.spi.LoggerFactory",
      "org.apache.log4j.spi.Configurator",
      "org.elasticsearch.index.SlowLogLevel",
      "org.elasticsearch.index.shard.IndexingOperationListener",
      "org.elasticsearch.common.Booleans",
      "org.elasticsearch.index.translog.Translog$Durability",
      "org.elasticsearch.index.Index",
      "org.elasticsearch.index.IndexingSlowLog",
      "org.elasticsearch.common.xcontent.FromXContentBuilder",
      "org.elasticsearch.cluster.metadata.ProcessClusterEventTimeoutException",
      "org.elasticsearch.common.Strings",
      "org.elasticsearch.index.IndexSettings",
      "org.elasticsearch.cluster.metadata.RepositoryMetaData",
      "org.joda.time.DurationField",
      "org.joda.time.format.DateTimeFormatter",
      "org.elasticsearch.cluster.metadata.MetaData$2",
      "org.elasticsearch.index.store.DirectoryService",
      "org.apache.lucene.util.Version",
      "org.joda.time.format.DateTimeParserInternalParser",
      "com.carrotsearch.hppc.HashOrderMixing$1",
      "org.apache.log4j.Priority",
      "org.elasticsearch.common.io.stream.StreamInput",
      "org.elasticsearch.cluster.metadata.MetaData$Builder",
      "org.elasticsearch.common.cache.RemovalListener",
      "org.apache.log4j.LogManager",
      "org.elasticsearch.common.xcontent.ToXContent$Params",
      "org.apache.lucene.store.RateLimiter",
      "com.carrotsearch.hppc.HashOrderMixing$4",
      "org.elasticsearch.index.cache.bitset.BitsetFilterCache",
      "com.carrotsearch.hppc.ObjectObjectHashMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.elasticsearch.ElasticsearchCorruptionException",
      "org.elasticsearch.search.DocValueFormat",
      "org.joda.time.format.ISODateTimeFormat$Constants",
      "org.elasticsearch.cluster.ClusterStateListener",
      "org.apache.log4j.or.RendererMap",
      "org.elasticsearch.common.ParseFieldMatcherSupplier",
      "com.carrotsearch.hppc.ObjectCollection",
      "org.elasticsearch.index.IndexNotFoundException",
      "org.joda.time.JodaTimePermission",
      "org.elasticsearch.ResourceNotFoundException",
      "org.elasticsearch.common.ParseField",
      "org.joda.time.format.DateTimeFormatterBuilder$FixedNumber",
      "org.elasticsearch.common.util.concurrent.RefCounted",
      "com.carrotsearch.hppc.AbstractObjectCollection",
      "org.elasticsearch.common.xcontent.XContentType$4",
      "com.carrotsearch.hppc.RandomizedHashOrderMixer",
      "org.elasticsearch.common.settings.Setting$SimpleKey",
      "org.elasticsearch.index.seqno.LocalCheckpointService",
      "org.elasticsearch.common.xcontent.XContentType$1",
      "org.elasticsearch.common.xcontent.XContentType$3",
      "org.apache.log4j.CategoryKey",
      "org.elasticsearch.common.xcontent.XContentType$2",
      "org.elasticsearch.rest.RestStatus",
      "com.carrotsearch.hppc.HashOrderMixing$Strategy$2",
      "com.carrotsearch.hppc.HashOrderMixing$Strategy$3",
      "org.elasticsearch.common.lucene.store.IndexOutputOutputStream",
      "com.carrotsearch.hppc.HashOrderMixing$Strategy$1",
      "org.joda.time.format.DateTimeFormatterBuilder",
      "org.elasticsearch.cluster.service.ClusterService",
      "com.carrotsearch.hppc.HashOrderMixing",
      "org.joda.time.PeriodType",
      "org.apache.log4j.ProvisionNode",
      "org.joda.time.format.InternalPrinter",
      "org.elasticsearch.common.collect.ImmutableOpenIntMap$Builder",
      "org.elasticsearch.cluster.metadata.IndexMetaData$Custom",
      "org.elasticsearch.common.logging.ESLoggerFactory$LogLevel",
      "org.elasticsearch.transport.TransportMessage",
      "com.carrotsearch.hppc.HashContainers",
      "org.elasticsearch.cluster.metadata.IndexGraveyard$Tombstone",
      "org.apache.log4j.spi.RootLogger",
      "org.elasticsearch.indices.ttl.IndicesTTLService",
      "org.elasticsearch.common.settings.SettingsException",
      "org.joda.time.field.PreciseDurationDateTimeField",
      "org.apache.log4j.spi.RendererSupport",
      "org.elasticsearch.cluster.metadata.AutoExpandReplicas",
      "org.apache.lucene.analysis.AnalyzerWrapper",
      "org.elasticsearch.common.component.LifecycleComponent",
      "org.joda.time.format.PeriodFormatterBuilder$PluralAffix",
      "org.elasticsearch.indices.IndicesRequestCache",
      "com.carrotsearch.hppc.BitUtil",
      "org.elasticsearch.ingest.IngestMetadata",
      "org.jboss.netty.buffer.ChannelBuffer",
      "com.carrotsearch.hppc.HashOrderMixingStrategy",
      "org.apache.lucene.index.IndexableField",
      "org.apache.log4j.Logger",
      "com.carrotsearch.hppc.HashOrderMixing$Strategy",
      "org.elasticsearch.index.analysis.NamedAnalyzer",
      "com.carrotsearch.hppc.BufferAllocationException",
      "org.elasticsearch.index.mapper.MappedFieldType",
      "org.apache.log4j.helpers.LogLog",
      "org.elasticsearch.common.unit.ByteSizeValue",
      "org.apache.log4j.spi.RepositorySelector",
      "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationDecider$Allocation",
      "org.elasticsearch.ingest.PipelineConfiguration",
      "org.elasticsearch.common.collect.ImmutableOpenMap$Builder",
      "org.apache.lucene.mockfile.FilterOutputStream2",
      "org.elasticsearch.common.collect.ImmutableOpenIntMap",
      "org.joda.time.format.PeriodFormat$DynamicWordBased",
      "org.apache.lucene.store.OutputStreamIndexOutput",
      "org.joda.time.tz.NameProvider",
      "org.apache.log4j.or.DefaultRenderer",
      "org.elasticsearch.index.fielddata.IndexFieldDataService",
      "org.apache.log4j.spi.ThrowableRendererSupport",
      "org.elasticsearch.gateway.CorruptStateException",
      "org.elasticsearch.common.xcontent.ObjectParser$ValueType",
      "org.apache.lucene.mockfile.FilterFileChannel",
      "org.elasticsearch.common.xcontent.ObjectParser$FieldParser",
      "com.carrotsearch.hppc.ObjectObjectAssociativeContainer",
      "org.elasticsearch.cluster.metadata.RepositoriesMetaData",
      "org.elasticsearch.cluster.Diffable",
      "org.elasticsearch.index.AbstractIndexComponent",
      "org.elasticsearch.index.store.VerifyingIndexOutput",
      "org.apache.lucene.store.StoreRateLimiting$Provider",
      "com.carrotsearch.hppc.IntCollection",
      "org.elasticsearch.cluster.ClusterInfoService$Listener",
      "org.elasticsearch.index.IndexWarmer$Listener",
      "org.elasticsearch.common.component.AbstractLifecycleComponent",
      "org.joda.time.format.InternalParserDateTimeParser",
      "org.joda.time.format.InternalParser",
      "org.apache.lucene.store.FilterDirectory",
      "org.elasticsearch.cluster.metadata.IndexMetaData$Builder",
      "org.elasticsearch.common.io.stream.Writeable",
      "org.elasticsearch.common.settings.Settings$Builder",
      "org.apache.lucene.index.IndexReaderContext"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(IndexSettings_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.elasticsearch.action.support.ToXContentToBytes",
      "org.elasticsearch.common.logging.Loggers",
      "org.elasticsearch.common.Classes",
      "org.elasticsearch.common.logging.ESLoggerFactory$LogLevel",
      "org.elasticsearch.common.settings.Setting$Property",
      "org.elasticsearch.common.settings.Setting$SimpleKey",
      "org.elasticsearch.common.xcontent.XContentType",
      "org.elasticsearch.client.Requests",
      "org.elasticsearch.common.settings.Setting$AffixKey",
      "org.elasticsearch.common.settings.Setting$4",
      "org.elasticsearch.common.logging.ESLoggerFactory",
      "org.elasticsearch.common.logging.ESLogger",
      "org.apache.log4j.Category",
      "org.apache.log4j.Logger",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.log4j.Priority",
      "org.apache.log4j.Level",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.ProvisionNode",
      "org.elasticsearch.common.logging.DeprecationLogger",
      "org.elasticsearch.common.settings.Setting",
      "org.elasticsearch.common.unit.TimeValue",
      "org.joda.time.format.PeriodFormat",
      "org.joda.time.format.PeriodFormat$DynamicWordBased",
      "org.joda.time.format.PeriodFormatterBuilder",
      "org.joda.time.format.PeriodFormatterBuilder$FieldFormatter",
      "org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix",
      "org.joda.time.format.PeriodFormatterBuilder$PluralAffix",
      "org.joda.time.format.PeriodFormatterBuilder$Composite",
      "org.joda.time.format.PeriodFormatterBuilder$Separator",
      "org.joda.time.format.PeriodFormatter",
      "org.joda.time.PeriodType",
      "org.joda.time.DurationFieldType$StandardDurationFieldType",
      "org.joda.time.DurationFieldType",
      "org.elasticsearch.index.translog.Translog$Durability",
      "org.elasticsearch.common.unit.ByteSizeValue",
      "org.elasticsearch.common.unit.ByteSizeUnit",
      "org.elasticsearch.index.IndexSettings",
      "org.elasticsearch.common.component.AbstractComponent",
      "org.elasticsearch.cluster.routing.allocation.decider.AllocationDecider",
      "org.elasticsearch.cluster.routing.allocation.decider.MaxRetryAllocationDecider",
      "org.elasticsearch.index.AbstractIndexComponent",
      "org.elasticsearch.index.store.IndexStore",
      "org.elasticsearch.index.MergeSchedulerConfig",
      "org.elasticsearch.rest.RestStatus",
      "org.elasticsearch.cluster.block.ClusterBlockLevel",
      "org.elasticsearch.cluster.metadata.AutoExpandReplicas",
      "org.apache.lucene.util.Version",
      "org.elasticsearch.Version",
      "org.elasticsearch.cluster.block.ClusterBlock",
      "org.elasticsearch.common.settings.Setting$3",
      "org.elasticsearch.common.settings.Setting$GroupKey",
      "org.elasticsearch.cluster.metadata.IndexMetaData$Builder",
      "org.elasticsearch.cluster.metadata.IndexMetaData$State",
      "org.elasticsearch.common.settings.Settings",
      "org.elasticsearch.common.settings.Settings$Builder",
      "com.carrotsearch.hppc.ObjectObjectHashMap",
      "com.carrotsearch.hppc.HashOrderMixing$1",
      "com.carrotsearch.hppc.HashOrderMixing",
      "com.carrotsearch.hppc.HashOrderMixing$4",
      "com.carrotsearch.hppc.HashOrderMixing$Strategy",
      "com.carrotsearch.hppc.Containers",
      "com.carrotsearch.hppc.Containers$1",
      "com.carrotsearch.hppc.BitMixer",
      "com.carrotsearch.hppc.RandomizedHashOrderMixer",
      "com.carrotsearch.hppc.HashContainers",
      "com.carrotsearch.hppc.BitUtil",
      "org.elasticsearch.common.collect.ImmutableOpenMap",
      "org.elasticsearch.common.collect.ImmutableOpenMap$Builder",
      "com.carrotsearch.hppc.IntObjectHashMap",
      "org.elasticsearch.common.collect.ImmutableOpenIntMap",
      "org.elasticsearch.common.collect.ImmutableOpenIntMap$Builder",
      "org.elasticsearch.common.xcontent.AbstractObjectParser",
      "org.elasticsearch.common.xcontent.ObjectParser",
      "org.elasticsearch.common.ParseField",
      "org.elasticsearch.common.util.set.Sets",
      "org.elasticsearch.common.Strings",
      "org.elasticsearch.common.xcontent.XContentParser$Token",
      "org.elasticsearch.common.xcontent.ObjectParser$ValueType",
      "org.elasticsearch.common.xcontent.ObjectParser$FieldParser",
      "org.elasticsearch.index.Index",
      "org.elasticsearch.common.xcontent.ToXContent$MapParams",
      "org.elasticsearch.gateway.MetaDataStateFormat",
      "org.elasticsearch.cluster.metadata.IndexMetaData$1",
      "org.elasticsearch.cluster.metadata.IndexMetaData",
      "org.elasticsearch.index.SlowLogLevel",
      "org.elasticsearch.index.SearchSlowLog",
      "org.elasticsearch.index.IndexingSlowLog",
      "org.elasticsearch.index.MergePolicyConfig",
      "org.elasticsearch.index.shard.AbstractIndexShardComponent",
      "org.elasticsearch.index.seqno.LocalCheckpointService",
      "org.elasticsearch.cluster.routing.allocation.decider.ShardsLimitAllocationDecider",
      "org.elasticsearch.indices.IndicesRequestCache",
      "org.joda.time.format.DateTimeFormatterBuilder",
      "org.joda.time.DateTimeFieldType$StandardDateTimeFieldType",
      "org.joda.time.DateTimeFieldType",
      "org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter",
      "org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber",
      "org.joda.time.format.DateTimeFormatter",
      "org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral",
      "org.joda.time.format.DateTimeFormatterBuilder$Composite",
      "org.joda.time.format.DateTimeFormatterBuilder$StringLiteral",
      "org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber",
      "org.joda.time.format.DateTimeFormatterBuilder$Fraction",
      "org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset",
      "org.joda.time.format.ISODateTimeFormat",
      "org.joda.time.format.DateTimeFormatterBuilder$FixedNumber",
      "org.joda.time.format.InternalParserDateTimeParser",
      "org.joda.time.format.DateTimeParserInternalParser",
      "org.joda.time.format.DateTimeFormatterBuilder$MatchingParser",
      "org.joda.time.format.DateTimePrinterInternalPrinter",
      "org.joda.time.UTCDateTimeZone",
      "org.joda.time.DateTimeZone",
      "org.joda.time.format.ISODateTimeFormat$Constants",
      "org.joda.time.format.StrictISODateTimeFormat",
      "org.joda.time.format.StrictISODateTimeFormat$Constants",
      "org.joda.time.format.DateTimeFormat",
      "org.elasticsearch.common.joda.Joda$1",
      "org.elasticsearch.common.joda.Joda$2",
      "org.elasticsearch.common.joda.Joda",
      "org.elasticsearch.common.joda.FormatDateTimeFormatter",
      "org.elasticsearch.cluster.routing.UnassignedInfo",
      "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationDecider$Allocation",
      "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationDecider$Rebalance",
      "org.elasticsearch.cluster.routing.allocation.decider.EnableAllocationDecider",
      "org.elasticsearch.index.fielddata.IndexFieldDataService$1",
      "org.elasticsearch.index.fielddata.IndexFieldDataService",
      "org.elasticsearch.index.mapper.Mapper",
      "org.elasticsearch.index.mapper.FieldMapper",
      "org.elasticsearch.index.store.Store",
      "com.carrotsearch.hppc.AbstractObjectCollection",
      "com.carrotsearch.hppc.ObjectHashSet",
      "org.elasticsearch.index.mapper.MapperService",
      "org.elasticsearch.index.cache.bitset.BitsetFilterCache",
      "org.elasticsearch.index.IndexModule",
      "org.elasticsearch.gateway.PrimaryShardAllocator",
      "org.elasticsearch.index.store.DirectoryService",
      "org.elasticsearch.index.store.FsDirectoryService",
      "org.elasticsearch.index.engine.EngineConfig",
      "org.elasticsearch.common.settings.AbstractScopedSettings",
      "org.elasticsearch.common.Booleans",
      "org.elasticsearch.common.settings.IndexScopedSettings",
      "com.carrotsearch.randomizedtesting.annotations.ThreadLeakScope$Scope",
      "com.carrotsearch.randomizedtesting.annotations.ThreadLeakGroup$Group",
      "com.carrotsearch.randomizedtesting.annotations.ThreadLeakAction$Action",
      "com.carrotsearch.randomizedtesting.annotations.ThreadLeakZombies$Consequence",
      "org.elasticsearch.test.ESIntegTestCase$Scope",
      "org.elasticsearch.cluster.metadata.MetaData$Builder",
      "org.elasticsearch.cluster.metadata.IndexGraveyard$Tombstone",
      "org.elasticsearch.cluster.metadata.IndexGraveyard",
      "org.elasticsearch.cluster.metadata.IndexGraveyard$Builder",
      "com.carrotsearch.hppc.ObjectObjectHashMap$ValuesContainer",
      "com.carrotsearch.hppc.AbstractIterator",
      "com.carrotsearch.hppc.ObjectObjectHashMap$ValuesIterator",
      "com.carrotsearch.hppc.cursors.ObjectCursor",
      "org.elasticsearch.cluster.AbstractDiffable",
      "org.elasticsearch.cluster.metadata.RepositoriesMetaData",
      "org.elasticsearch.ingest.PipelineConfiguration",
      "org.elasticsearch.ingest.IngestMetadata",
      "org.elasticsearch.script.ScriptMetaData",
      "org.apache.lucene.store.StoreRateLimiting$Type",
      "org.elasticsearch.index.store.IndexStoreConfig",
      "org.elasticsearch.indices.recovery.RecoverySettings",
      "org.elasticsearch.common.component.AbstractLifecycleComponent",
      "org.elasticsearch.indices.ttl.IndicesTTLService",
      "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDecider",
      "org.elasticsearch.cluster.InternalClusterInfoService",
      "org.elasticsearch.discovery.DiscoverySettings",
      "org.elasticsearch.cluster.service.ClusterService",
      "org.elasticsearch.cluster.metadata.MetaData$2",
      "org.elasticsearch.cluster.metadata.MetaData",
      "org.elasticsearch.common.io.stream.StreamInput",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser$1",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser$2",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser",
      "org.elasticsearch.common.xcontent.json.JsonXContentParser",
      "org.elasticsearch.common.ParseFieldMatcher",
      "org.elasticsearch.cluster.ClusterName",
      "org.elasticsearch.cluster.ClusterState$Builder",
      "org.elasticsearch.cluster.routing.RoutingTable$Builder",
      "org.elasticsearch.cluster.routing.RoutingTable",
      "org.elasticsearch.cluster.node.DiscoveryNodes$Builder",
      "com.carrotsearch.hppc.ObjectObjectHashMap$EntryIterator",
      "com.carrotsearch.hppc.cursors.ObjectObjectCursor",
      "org.elasticsearch.cluster.node.DiscoveryNodes",
      "org.elasticsearch.cluster.block.ClusterBlocks$ImmutableLevelHolder",
      "org.elasticsearch.cluster.block.ClusterBlocks",
      "org.elasticsearch.common.RandomBasedUUIDGenerator",
      "org.elasticsearch.common.MacAddressProvider",
      "org.elasticsearch.common.SecureRandomHolder",
      "org.elasticsearch.common.TimeBasedUUIDGenerator",
      "org.elasticsearch.common.UUIDs",
      "org.elasticsearch.cluster.ClusterState$ClusterStateStatus",
      "org.elasticsearch.cluster.SnapshotsInProgress",
      "org.elasticsearch.cluster.RestoreInProgress",
      "org.elasticsearch.cluster.ClusterState",
      "org.elasticsearch.cluster.routing.RoutingNodes",
      "org.elasticsearch.cluster.routing.RoutingNodes$UnassignedShards",
      "org.elasticsearch.cluster.ClusterInfo",
      "org.elasticsearch.transport.TransportMessage",
      "org.elasticsearch.transport.TransportRequest",
      "org.elasticsearch.action.ActionRequest",
      "org.elasticsearch.action.support.single.instance.InstanceShardOperationRequest",
      "org.elasticsearch.action.update.UpdateRequest",
      "org.elasticsearch.tasks.TaskId",
      "org.elasticsearch.index.VersionType",
      "org.elasticsearch.action.WriteConsistencyLevel",
      "org.apache.lucene.util.BytesRef",
      "org.elasticsearch.common.bytes.BytesArray",
      "org.elasticsearch.script.ScriptParameterParser",
      "org.elasticsearch.script.ScriptService",
      "org.elasticsearch.common.xcontent.XContentFactory",
      "org.elasticsearch.ElasticsearchException$ElasticsearchExceptionHandle",
      "org.elasticsearch.ElasticsearchException",
      "org.elasticsearch.ElasticsearchParseException",
      "org.elasticsearch.common.logging.LoggerMessageFormat",
      "org.elasticsearch.common.settings.Setting$2",
      "org.elasticsearch.common.settings.Setting$ListKey",
      "org.elasticsearch.common.io.PathUtils",
      "org.elasticsearch.env.Environment",
      "org.elasticsearch.rest.RestRequest",
      "org.elasticsearch.test.rest.FakeRestRequest",
      "org.apache.lucene.store.StoreRateLimiting",
      "org.apache.lucene.store.RateLimiter",
      "org.apache.lucene.store.RateLimiter$SimpleRateLimiter",
      "org.apache.lucene.util.SetOnce",
      "org.elasticsearch.common.io.stream.InputStreamStreamInput",
      "org.apache.lucene.util.CharsRefBuilder",
      "org.apache.lucene.util.CharsRef$UTF16SortedAsUTF8Comparator",
      "org.apache.lucene.util.CharsRef",
      "org.apache.lucene.util.Constants",
      "org.apache.lucene.util.RamUsageEstimator$1",
      "org.apache.lucene.util.RamUsageEstimator",
      "org.apache.lucene.util.ArrayUtil",
      "org.elasticsearch.env.NodeEnvironment",
      "org.elasticsearch.cluster.node.DiscoveryNode",
      "org.elasticsearch.node.Node",
      "org.elasticsearch.common.settings.SettingsFilter",
      "org.elasticsearch.common.xcontent.ToXContent$1",
      "org.elasticsearch.common.xcontent.ToXContent",
      "org.elasticsearch.ResourceNotFoundException",
      "org.elasticsearch.index.IndexNotFoundException",
      "org.elasticsearch.common.collect.ImmutableOpenMap$2",
      "org.elasticsearch.common.unit.SizeValue",
      "com.fasterxml.jackson.core.JsonFactory$Feature",
      "com.fasterxml.jackson.core.JsonParser$Feature",
      "com.fasterxml.jackson.core.JsonGenerator$Feature",
      "com.fasterxml.jackson.core.io.SerializedString",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
      "com.fasterxml.jackson.core.JsonFactory",
      "com.fasterxml.jackson.dataformat.smile.SmileParser$Feature",
      "com.fasterxml.jackson.dataformat.smile.SmileGenerator$Feature",
      "com.fasterxml.jackson.dataformat.smile.SmileFactory",
      "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
      "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer",
      "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo",
      "org.elasticsearch.common.xcontent.smile.SmileXContent",
      "org.elasticsearch.common.xcontent.smile.SmileXContentParser",
      "com.fasterxml.jackson.core.io.IOContext",
      "com.fasterxml.jackson.core.util.BufferRecycler",
      "com.fasterxml.jackson.dataformat.smile.SmileParserBootstrapper",
      "com.fasterxml.jackson.core.JsonParser",
      "com.fasterxml.jackson.core.base.ParserMinimalBase",
      "com.fasterxml.jackson.core.base.ParserBase",
      "com.fasterxml.jackson.dataformat.smile.SmileParser",
      "com.fasterxml.jackson.core.util.TextBuffer",
      "com.fasterxml.jackson.core.JsonStreamContext",
      "com.fasterxml.jackson.core.json.JsonReadContext",
      "com.fasterxml.jackson.dataformat.smile.SmileBufferRecycler",
      "com.fasterxml.jackson.core.JsonToken",
      "org.apache.lucene.util.AttributeImpl",
      "org.apache.lucene.analysis.tokenattributes.CharTermAttributeImpl",
      "org.apache.lucene.analysis.tokenattributes.PackedTokenAttributeImpl",
      "org.apache.lucene.util.BytesRefBuilder",
      "com.fasterxml.jackson.core.JsonProcessingException",
      "com.fasterxml.jackson.core.JsonParseException",
      "com.fasterxml.jackson.core.JsonLocation",
      "org.elasticsearch.common.util.BigArrays",
      "org.elasticsearch.common.util.AbstractArray",
      "org.elasticsearch.common.util.BigArrays$AbstractArrayWrapper",
      "org.elasticsearch.common.util.BigArrays$ByteArrayWrapper",
      "org.elasticsearch.common.bytes.PagedBytesReference",
      "org.elasticsearch.common.bytes.ReleasablePagedBytesReference",
      "org.elasticsearch.common.bytes.PagedBytesReference$PagedBytesReferenceStreamInput",
      "org.elasticsearch.common.io.stream.ByteBufferStreamInput",
      "org.elasticsearch.common.io.stream.NotSerializableExceptionWrapper",
      "org.elasticsearch.ExceptionsHelper",
      "org.elasticsearch.common.bytes.ByteBufferBytesReference",
      "org.elasticsearch.common.xcontent.json.JsonXContent",
      "com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper",
      "com.fasterxml.jackson.core.JsonEncoding",
      "com.fasterxml.jackson.core.io.CharTypes",
      "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "org.elasticsearch.common.unit.MemorySizeValue",
      "org.elasticsearch.cluster.routing.allocation.decider.AllocationDeciders",
      "org.elasticsearch.common.unit.RatioValue",
      "org.elasticsearch.gateway.MetaStateService",
      "com.vividsolutions.jts.geom.Coordinate",
      "org.locationtech.spatial4j.context.SpatialContextFactory",
      "org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl",
      "org.locationtech.spatial4j.distance.AbstractDistanceCalculator",
      "org.locationtech.spatial4j.distance.DistanceUtils",
      "org.locationtech.spatial4j.distance.GeodesicSphereDistCalc",
      "org.locationtech.spatial4j.distance.GeodesicSphereDistCalc$Haversine",
      "org.locationtech.spatial4j.shape.BaseShape",
      "org.locationtech.spatial4j.shape.impl.RectangleImpl",
      "org.locationtech.spatial4j.io.BinaryCodec",
      "org.locationtech.spatial4j.io.WKTReader",
      "org.locationtech.spatial4j.io.PolyshapeReader",
      "org.locationtech.spatial4j.io.LegacyShapeReader",
      "org.locationtech.spatial4j.io.GeoJSONWriter",
      "org.locationtech.spatial4j.io.WKTWriter",
      "org.locationtech.spatial4j.io.PolyshapeWriter",
      "org.locationtech.spatial4j.io.LegacyShapeWriter",
      "org.locationtech.spatial4j.io.SupportedFormats",
      "org.locationtech.spatial4j.context.SpatialContext",
      "com.vividsolutions.jts.geom.PrecisionModel$Type",
      "com.vividsolutions.jts.geom.PrecisionModel",
      "org.locationtech.spatial4j.context.jts.JtsSpatialContextFactory",
      "com.vividsolutions.jts.geom.impl.CoordinateArraySequenceFactory",
      "org.locationtech.spatial4j.context.jts.DatelineRule",
      "org.locationtech.spatial4j.context.jts.ValidationRule",
      "org.locationtech.spatial4j.shape.jts.JtsShapeFactory",
      "com.vividsolutions.jts.geom.GeometryFactory",
      "org.locationtech.spatial4j.io.jts.JtsBinaryCodec",
      "org.locationtech.spatial4j.io.jts.JtsGeoJSONWriter",
      "org.locationtech.spatial4j.io.jts.JtsWKTWriter",
      "org.locationtech.spatial4j.io.jts.JtsPolyshapeWriter",
      "org.locationtech.spatial4j.context.jts.JtsSpatialContext",
      "org.elasticsearch.common.geo.builders.ShapeBuilder$IntersectionOrder",
      "org.elasticsearch.common.geo.builders.ShapeBuilder",
      "com.vividsolutions.jts.geom.impl.CoordinateArraySequence",
      "org.jboss.netty.buffer.AbstractChannelBuffer",
      "org.jboss.netty.buffer.DynamicChannelBuffer",
      "org.jboss.netty.buffer.AbstractChannelBufferFactory",
      "org.jboss.netty.buffer.HeapChannelBufferFactory",
      "org.jboss.netty.buffer.HeapChannelBuffer",
      "org.jboss.netty.buffer.BigEndianHeapChannelBuffer",
      "org.jboss.netty.buffer.EmptyChannelBuffer",
      "org.jboss.netty.buffer.ChannelBuffers",
      "org.elasticsearch.common.bytes.ChannelBufferBytesReference",
      "org.jboss.netty.buffer.DuplicatedChannelBuffer",
      "org.elasticsearch.transport.netty.ChannelBufferStreamInputFactory",
      "org.elasticsearch.transport.netty.ChannelBufferStreamInput",
      "org.elasticsearch.index.query.AbstractQueryBuilder",
      "org.elasticsearch.index.query.MatchAllQueryBuilder",
      "org.elasticsearch.search.builder.SearchSourceBuilder",
      "org.elasticsearch.index.query.InnerHitBuilder",
      "org.elasticsearch.common.io.stream.NamedWriteableRegistry",
      "org.elasticsearch.common.io.stream.FilterStreamInput",
      "org.elasticsearch.common.io.stream.NamedWriteableAwareStreamInput",
      "org.elasticsearch.cluster.metadata.MetaData$MetaDataDiff",
      "com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature",
      "com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature",
      "com.fasterxml.jackson.dataformat.yaml.YAMLFactory",
      "org.elasticsearch.common.xcontent.yaml.YamlXContent",
      "com.fasterxml.jackson.core.util.JsonParserDelegate",
      "com.fasterxml.jackson.core.util.JsonParserSequence",
      "org.elasticsearch.common.xcontent.cbor.CborXContentParser",
      "org.elasticsearch.index.query.MatchQueryBuilder",
      "com.carrotsearch.hppc.ObjectObjectHashMap$KeysContainer",
      "org.elasticsearch.common.collect.HppcMaps",
      "com.carrotsearch.hppc.ObjectHashSet$EntryIterator",
      "org.elasticsearch.common.collect.HppcMaps$2",
      "org.elasticsearch.common.collect.HppcMaps$3",
      "org.elasticsearch.common.xcontent.yaml.YamlXContentParser",
      "com.fasterxml.jackson.dataformat.yaml.YAMLParser",
      "com.fasterxml.jackson.dataformat.yaml.UTF8Reader",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.resolver.Resolver",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper$2",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.external.com.google.gdata.util.common.base.PercentEscaper",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.util.UriEncoder",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.nodes.Tag",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.resolver.ResolverTuple",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.parser.ParserImpl",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.reader.StreamReader",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.error.YAMLException",
      "org.elasticsearch.common.io.CharSequenceReader",
      "org.elasticsearch.common.io.FastStringReader",
      "org.apache.lucene.util.UnicodeUtil",
      "com.fasterxml.jackson.dataformat.cbor.CBORParser$Feature",
      "com.fasterxml.jackson.dataformat.cbor.CBORGenerator$Feature",
      "com.fasterxml.jackson.dataformat.cbor.CBORFactory",
      "org.elasticsearch.common.xcontent.cbor.CborXContent",
      "com.fasterxml.jackson.dataformat.cbor.CBORParserBootstrapper",
      "com.fasterxml.jackson.dataformat.cbor.CBORConstants",
      "com.fasterxml.jackson.dataformat.cbor.CBORParser",
      "com.fasterxml.jackson.dataformat.cbor.CBORReadContext",
      "com.fasterxml.jackson.core.JsonParser$NumberType",
      "org.elasticsearch.common.xcontent.json.JsonXContentParser$1",
      "org.jboss.netty.buffer.LittleEndianHeapChannelBuffer",
      "org.elasticsearch.common.io.stream.StreamOutput",
      "org.elasticsearch.common.io.stream.DataOutputStreamOutput",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter",
      "com.fasterxml.jackson.core.util.DefaultIndenter",
      "org.elasticsearch.common.xcontent.json.JsonXContentGenerator",
      "org.elasticsearch.common.xcontent.smile.SmileXContentGenerator",
      "com.fasterxml.jackson.core.JsonGenerator",
      "com.fasterxml.jackson.core.base.GeneratorBase",
      "com.fasterxml.jackson.dataformat.smile.SmileGenerator",
      "com.fasterxml.jackson.core.json.JsonWriteContext",
      "org.elasticsearch.common.util.CollectionUtils",
      "com.fasterxml.jackson.core.filter.TokenFilter",
      "com.fasterxml.jackson.core.filter.FilteringParserDelegate",
      "com.fasterxml.jackson.core.filter.TokenFilterContext",
      "org.elasticsearch.cluster.routing.ShardRouting",
      "org.elasticsearch.index.shard.ShardId",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.scanner.ScannerImpl",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.util.ArrayStack",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.error.Mark",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.tokens.Token",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.tokens.StreamStartToken",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.parser.VersionTagsTuple",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.parser.ParserImpl$ParseStreamStart",
      "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
      "org.apache.log4j.helpers.NullEnumeration",
      "org.elasticsearch.search.aggregations.PipelineAggregatorBuilder",
      "org.elasticsearch.search.aggregations.pipeline.AbstractPipelineAggregatorBuilder",
      "org.elasticsearch.search.aggregations.pipeline.PipelineAggregator",
      "org.elasticsearch.search.aggregations.InternalAggregation$Type",
      "org.elasticsearch.search.aggregations.pipeline.movavg.MovAvgPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.movavg.MovAvgPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.movavg.MovAvgPipelineAggregatorBuilder",
      "org.elasticsearch.search.aggregations.pipeline.BucketHelpers$GapPolicy",
      "org.elasticsearch.search.aggregations.pipeline.movavg.models.MovAvgModel",
      "org.elasticsearch.search.aggregations.pipeline.movavg.models.MovAvgModel$AbstractModelParser",
      "org.elasticsearch.search.aggregations.pipeline.movavg.models.SimpleModel$1",
      "org.elasticsearch.search.aggregations.pipeline.movavg.models.SimpleModel",
      "org.elasticsearch.common.io.stream.BytesStreamOutput",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.Event",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.StreamStartEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.Event$ID",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.tokens.Token$ID",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.scanner.Constant",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.scanner.SimpleKey",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.tokens.ScalarToken",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.tokens.StreamEndToken",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.DocumentStartEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.parser.ParserImpl$ParseBlockNode",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.ImplicitTuple",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.NodeEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.ScalarEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.nodes.NodeId",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.resolver.Resolver$1",
      "org.elasticsearch.index.Index$Builder",
      "org.apache.lucene.util.AttributeSource$2",
      "org.apache.lucene.util.AttributeSource",
      "org.apache.lucene.util.AttributeFactory$DefaultAttributeFactory",
      "org.apache.lucene.util.AttributeFactory$DefaultAttributeFactory$1",
      "org.apache.lucene.util.AttributeFactory",
      "org.apache.lucene.util.AttributeFactory$StaticImplementationAttributeFactory",
      "org.apache.lucene.util.AttributeFactory$1",
      "org.apache.lucene.analysis.TokenStream",
      "org.apache.lucene.analysis.Tokenizer$1",
      "org.apache.lucene.analysis.Tokenizer",
      "org.apache.lucene.util.automaton.RunAutomaton",
      "org.apache.lucene.util.automaton.CharacterRunAutomaton",
      "org.apache.lucene.util.automaton.RegExp",
      "org.apache.lucene.util.automaton.RegExp$Kind",
      "org.apache.lucene.util.automaton.RegExp$1",
      "org.apache.lucene.util.automaton.Automata",
      "org.apache.lucene.util.automaton.Automaton",
      "org.apache.lucene.util.Sorter",
      "org.apache.lucene.util.InPlaceMergeSorter",
      "org.apache.lucene.util.automaton.Automaton$1",
      "org.apache.lucene.util.automaton.Automaton$2",
      "org.apache.lucene.util.automaton.Operations",
      "org.apache.lucene.util.automaton.Transition",
      "org.apache.lucene.util.automaton.Automaton$Builder",
      "org.apache.lucene.util.automaton.Automaton$Builder$1",
      "org.apache.lucene.util.automaton.MinimizationOperations",
      "org.apache.lucene.util.automaton.MinimizationOperations$StateList",
      "org.apache.lucene.util.automaton.MinimizationOperations$StateListNode",
      "org.apache.lucene.util.automaton.MinimizationOperations$IntPair",
      "org.apache.lucene.util.automaton.StatePair",
      "org.apache.lucene.analysis.MockTokenizer",
      "org.apache.lucene.analysis.Analyzer$ReuseStrategy",
      "org.apache.lucene.analysis.Analyzer$1",
      "org.apache.lucene.analysis.Analyzer$2",
      "org.apache.lucene.analysis.Analyzer",
      "org.apache.lucene.analysis.MockAnalyzer",
      "org.apache.lucene.util.CloseableThreadLocal",
      "org.elasticsearch.search.aggregations.support.ValuesSourceConfig",
      "org.elasticsearch.search.aggregations.support.ValuesSource",
      "org.elasticsearch.search.aggregations.support.ValuesSource$Numeric$1",
      "org.elasticsearch.search.aggregations.support.ValuesSource$Numeric",
      "org.elasticsearch.search.aggregations.support.ValuesSource$Numeric$Script",
      "org.elasticsearch.search.aggregations.support.ValuesSource$Numeric$WithScript",
      "org.elasticsearch.indices.breaker.CircuitBreakerService",
      "org.elasticsearch.indices.breaker.NoneCircuitBreakerService",
      "org.elasticsearch.common.component.Lifecycle",
      "org.elasticsearch.common.component.Lifecycle$State",
      "org.elasticsearch.common.breaker.NoopCircuitBreaker",
      "org.elasticsearch.common.util.MockBigArrays",
      "org.elasticsearch.common.util.PageCacheRecycler$Type",
      "org.elasticsearch.common.util.PageCacheRecycler",
      "org.elasticsearch.common.util.MockPageCacheRecycler",
      "org.apache.log4j.AppenderSkeleton",
      "org.apache.log4j.WriterAppender",
      "org.apache.log4j.FileAppender",
      "org.apache.log4j.helpers.OnlyOnceErrorHandler",
      "org.apache.log4j.helpers.AppenderAttachableImpl",
      "org.jboss.netty.buffer.DirectChannelBufferFactory",
      "org.jboss.netty.buffer.ByteBufferBackedChannelBuffer",
      "org.elasticsearch.index.query.QueryRewriteContext",
      "org.elasticsearch.index.query.QueryShardContext",
      "org.jboss.netty.buffer.ReadOnlyChannelBuffer",
      "org.elasticsearch.cluster.metadata.IndexNameExpressionResolver",
      "org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$DateMathExpressionResolver",
      "org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$WildcardExpressionResolver",
      "org.elasticsearch.action.support.broadcast.BroadcastRequest",
      "org.elasticsearch.action.admin.indices.flush.FlushRequest",
      "org.elasticsearch.action.support.IndicesOptions",
      "org.elasticsearch.cluster.metadata.IndexNameExpressionResolver$Context",
      "org.elasticsearch.common.regex.Regex",
      "org.elasticsearch.index.mapper.SourceToParse",
      "com.carrotsearch.hppc.IntObjectHashMap$EntryIterator",
      "com.carrotsearch.hppc.cursors.IntObjectCursor",
      "org.elasticsearch.cluster.DiffableUtils$NonDiffableValueSerializer",
      "org.elasticsearch.cluster.DiffableUtils$StringSetValueSerializer",
      "com.carrotsearch.randomizedtesting.RandomizedTest$5",
      "com.carrotsearch.randomizedtesting.RandomizedTest",
      "org.apache.lucene.store.MockDirectoryWrapper$Throttling",
      "org.apache.lucene.util.LuceneTestCase$1",
      "org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures",
      "org.apache.lucene.util.TestRuleDelegate",
      "com.carrotsearch.randomizedtesting.rules.TestRuleAdapter",
      "org.apache.lucene.util.TestRuleLimitSysouts$DelegateStream",
      "org.apache.lucene.util.TestRuleLimitSysouts",
      "org.apache.lucene.util.TestRuleIgnoreTestSuites",
      "org.apache.lucene.util.TestRuleMarkFailure",
      "org.apache.lucene.util.TestRuleAssertionsRequired",
      "org.apache.lucene.util.TestRuleTemporaryFilesCleanup",
      "com.carrotsearch.randomizedtesting.rules.StaticFieldsInvariantRule",
      "org.apache.lucene.util.LuceneTestCase$3",
      "com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule",
      "com.carrotsearch.randomizedtesting.rules.NoClassHooksShadowingRule",
      "com.carrotsearch.randomizedtesting.rules.NoInstanceHooksOverridesRule",
      "org.apache.lucene.util.LuceneTestCase$2",
      "org.apache.lucene.util.TestRuleStoreClassName",
      "org.apache.lucene.util.TestRuleRestoreSystemProperties",
      "org.apache.lucene.util.AbstractBeforeAfterRule",
      "org.apache.lucene.util.TestRuleSetupAndRestoreClassEnv",
      "org.apache.lucene.search.similarities.Similarity",
      "org.apache.lucene.search.IndexSearcher$1",
      "org.apache.lucene.search.UsageTrackingQueryCachingPolicy",
      "org.apache.lucene.search.QueryCachingPolicy$CacheOnLargeSegments",
      "org.apache.lucene.util.FrequencyTrackingRingBuffer",
      "org.apache.lucene.util.FrequencyTrackingRingBuffer$IntBag",
      "org.apache.lucene.search.LRUQueryCache",
      "org.apache.lucene.util.SmallFloat",
      "org.apache.lucene.search.similarities.BM25Similarity",
      "org.apache.lucene.search.IndexSearcher",
      "org.apache.lucene.util.LuceneTestCase",
      "org.apache.lucene.analysis.BaseTokenStreamTestCase",
      "com.carrotsearch.randomizedtesting.RandomizedContext",
      "com.carrotsearch.randomizedtesting.Threads",
      "org.elasticsearch.index.store.StoreFileMetaData",
      "org.jboss.netty.buffer.CompositeChannelBuffer",
      "org.jboss.netty.buffer.TruncatedChannelBuffer",
      "org.apache.lucene.store.DataInput",
      "org.apache.lucene.store.IndexInput",
      "org.apache.lucene.store.ByteArrayIndexInput",
      "org.apache.lucene.store.ChecksumIndexInput",
      "org.apache.lucene.store.BufferedChecksumIndexInput",
      "org.apache.lucene.store.BufferedChecksum",
      "org.elasticsearch.script.AbstractScriptParser",
      "org.elasticsearch.script.Script$ScriptParser",
      "org.elasticsearch.script.Script",
      "org.elasticsearch.cluster.ack.ClusterStateUpdateRequest",
      "org.elasticsearch.repositories.RepositoriesService$RegisterRepositoryRequest",
      "org.elasticsearch.common.lease.Releasables",
      "org.apache.lucene.util.IOUtils",
      "org.elasticsearch.tasks.Task",
      "org.elasticsearch.client.support.AbstractClient",
      "org.elasticsearch.client.FilterClient",
      "org.elasticsearch.client.ParentTaskAssigningClient",
      "org.elasticsearch.common.io.stream.OutputStreamStreamOutput",
      "org.apache.lucene.store.Directory",
      "org.apache.lucene.store.BaseDirectory",
      "org.apache.lucene.store.FSDirectory",
      "org.apache.lucene.store.MMapDirectory",
      "org.apache.lucene.store.LockFactory",
      "org.apache.lucene.store.FSLockFactory",
      "org.apache.lucene.store.NativeFSLockFactory",
      "org.elasticsearch.index.translog.TranslogConfig",
      "org.elasticsearch.common.xcontent.ToXContent$DelegatingMapParams",
      "org.elasticsearch.cluster.DiffableUtils",
      "org.elasticsearch.cluster.DiffableUtils$StringKeySerializer",
      "org.elasticsearch.cluster.DiffableUtils$MapDiff",
      "org.elasticsearch.cluster.DiffableUtils$ImmutableOpenMapDiff",
      "org.elasticsearch.cluster.DiffableUtils$DiffableValueSerializer$1",
      "org.elasticsearch.cluster.DiffableUtils$DiffableValueSerializer",
      "com.carrotsearch.hppc.ObjectObjectHashMap$KeysIterator",
      "org.elasticsearch.cluster.routing.allocation.decider.AwarenessAllocationDecider",
      "org.elasticsearch.client.transport.TransportClientNodesService",
      "org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator",
      "org.elasticsearch.cluster.routing.allocation.decider.ClusterRebalanceAllocationDecider$ClusterRebalanceType",
      "org.elasticsearch.cluster.routing.allocation.decider.ClusterRebalanceAllocationDecider",
      "org.elasticsearch.cluster.routing.allocation.decider.ConcurrentRebalanceAllocationDecider",
      "org.elasticsearch.cluster.routing.allocation.decider.FilterAllocationDecider",
      "org.elasticsearch.repositories.blobstore.BlobStoreRepository",
      "org.elasticsearch.repositories.fs.FsRepository",
      "org.elasticsearch.indices.IndicesQueryCache",
      "org.elasticsearch.cluster.action.index.MappingUpdatedAction",
      "org.elasticsearch.threadpool.ThreadPool$ThreadPoolType",
      "org.elasticsearch.threadpool.ThreadPool",
      "org.elasticsearch.cluster.routing.allocation.decider.ThrottlingAllocationDecider",
      "org.elasticsearch.cluster.routing.allocation.decider.SnapshotInProgressAllocationDecider",
      "org.elasticsearch.action.support.DestructiveOperations",
      "org.elasticsearch.gateway.GatewayService",
      "org.elasticsearch.common.inject.AbstractModule",
      "org.elasticsearch.common.network.NetworkModule",
      "org.elasticsearch.http.HttpTransportSettings",
      "org.elasticsearch.common.netty.NettyUtils$EsThreadNameDeterminer",
      "org.jboss.netty.logging.JdkLoggerFactory",
      "org.jboss.netty.logging.InternalLoggerFactory",
      "org.elasticsearch.transport.netty.NettyInternalESLoggerFactory",
      "org.elasticsearch.common.netty.NettyUtils$1",
      "org.jboss.netty.logging.AbstractInternalLogger",
      "org.elasticsearch.transport.netty.NettyInternalESLogger",
      "org.jboss.netty.util.ThreadNameDeterminer$1",
      "org.jboss.netty.util.ThreadNameDeterminer$2",
      "org.jboss.netty.util.ThreadNameDeterminer",
      "org.jboss.netty.util.ThreadRenamingRunnable",
      "org.elasticsearch.common.netty.NettyUtils",
      "org.elasticsearch.common.network.NetworkUtils$2",
      "org.elasticsearch.common.network.NetworkUtils",
      "org.elasticsearch.common.network.NetworkService$TcpSettings",
      "org.elasticsearch.http.netty.NettyHttpServerTransport",
      "org.elasticsearch.indices.breaker.HierarchyCircuitBreakerService",
      "org.elasticsearch.search.SearchService",
      "org.elasticsearch.discovery.zen.elect.ElectMasterService",
      "org.elasticsearch.action.support.TransportAction",
      "org.elasticsearch.action.support.HandledTransportAction",
      "org.elasticsearch.action.search.TransportSearchAction",
      "org.elasticsearch.transport.TransportService",
      "org.elasticsearch.action.support.master.TransportMasterNodeAction",
      "org.elasticsearch.action.admin.indices.close.TransportCloseIndexAction",
      "org.elasticsearch.cluster.NodeConnectionsService",
      "org.elasticsearch.transport.Transport",
      "org.elasticsearch.transport.TransportSettings",
      "org.elasticsearch.transport.netty.NettyTransport",
      "org.elasticsearch.common.network.NetworkService",
      "org.elasticsearch.action.search.SearchType",
      "org.elasticsearch.indices.IndicesService",
      "org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCache",
      "org.elasticsearch.indices.analysis.HunspellService",
      "org.elasticsearch.index.shard.IndexShardState",
      "org.elasticsearch.indices.store.IndicesStore",
      "org.elasticsearch.cluster.node.DiscoveryNodeService",
      "org.elasticsearch.discovery.DiscoveryModule",
      "org.elasticsearch.discovery.zen.fd.FaultDetection",
      "org.elasticsearch.discovery.zen.ZenDiscovery",
      "org.elasticsearch.discovery.zen.ping.unicast.UnicastZenPing",
      "org.elasticsearch.repositories.uri.URLRepository",
      "org.elasticsearch.action.support.master.TransportMasterNodeReadAction",
      "org.elasticsearch.action.support.AutoCreateIndex",
      "org.elasticsearch.rest.BaseRestHandler",
      "org.elasticsearch.client.Client",
      "org.elasticsearch.cluster.ClusterModule",
      "org.elasticsearch.common.util.concurrent.EsExecutors",
      "org.elasticsearch.common.util.concurrent.ThreadContext$ThreadContextStruct",
      "org.elasticsearch.common.util.concurrent.ThreadContext",
      "org.elasticsearch.tribe.TribeService",
      "org.elasticsearch.monitor.os.OsService",
      "org.elasticsearch.monitor.process.ProcessService",
      "org.elasticsearch.monitor.jvm.JvmService",
      "org.elasticsearch.monitor.fs.FsService",
      "org.elasticsearch.monitor.jvm.JvmGcMonitorService",
      "org.elasticsearch.plugins.PluginsService",
      "org.elasticsearch.bootstrap.BootstrapSettings",
      "org.elasticsearch.indices.IndexingMemoryController",
      "org.elasticsearch.watcher.ResourceWatcherService$Frequency",
      "org.elasticsearch.watcher.ResourceWatcherService",
      "org.elasticsearch.search.aggregations.InternalAggregation",
      "org.elasticsearch.search.aggregations.metrics.InternalMetricsAggregation",
      "org.elasticsearch.search.aggregations.metrics.InternalNumericMetricsAggregation",
      "org.elasticsearch.search.aggregations.metrics.InternalNumericMetricsAggregation$SingleValue",
      "org.elasticsearch.search.aggregations.metrics.avg.InternalAvg$1",
      "org.elasticsearch.search.aggregations.metrics.avg.InternalAvg",
      "org.elasticsearch.search.aggregations.AggregationStreams",
      "org.elasticsearch.common.bytes.BytesReference$Helper",
      "org.elasticsearch.search.aggregations.metrics.sum.InternalSum$1",
      "org.elasticsearch.search.aggregations.metrics.sum.InternalSum",
      "org.elasticsearch.search.aggregations.metrics.min.InternalMin$1",
      "org.elasticsearch.search.aggregations.metrics.min.InternalMin",
      "org.elasticsearch.search.aggregations.metrics.max.InternalMax$1",
      "org.elasticsearch.search.aggregations.metrics.max.InternalMax",
      "org.elasticsearch.search.aggregations.metrics.InternalNumericMetricsAggregation$MultiValue",
      "org.elasticsearch.search.aggregations.metrics.stats.InternalStats$1",
      "org.elasticsearch.search.aggregations.metrics.stats.InternalStats",
      "org.elasticsearch.search.aggregations.metrics.stats.extended.InternalExtendedStats$1",
      "org.elasticsearch.search.aggregations.metrics.stats.extended.InternalExtendedStats",
      "org.elasticsearch.search.aggregations.metrics.valuecount.InternalValueCount$1",
      "org.elasticsearch.search.aggregations.metrics.valuecount.InternalValueCount",
      "org.elasticsearch.search.aggregations.metrics.percentiles.tdigest.AbstractInternalTDigestPercentiles",
      "org.elasticsearch.search.aggregations.metrics.percentiles.tdigest.InternalTDigestPercentiles$1",
      "org.elasticsearch.search.aggregations.metrics.percentiles.tdigest.InternalTDigestPercentiles",
      "org.elasticsearch.search.aggregations.metrics.percentiles.tdigest.InternalTDigestPercentileRanks$1",
      "org.elasticsearch.search.aggregations.metrics.percentiles.tdigest.InternalTDigestPercentileRanks",
      "org.elasticsearch.search.aggregations.metrics.percentiles.hdr.AbstractInternalHDRPercentiles",
      "org.elasticsearch.search.aggregations.metrics.percentiles.hdr.InternalHDRPercentiles$1",
      "org.elasticsearch.search.aggregations.metrics.percentiles.hdr.InternalHDRPercentiles",
      "org.elasticsearch.search.aggregations.metrics.percentiles.hdr.InternalHDRPercentileRanks$1",
      "org.elasticsearch.search.aggregations.metrics.percentiles.hdr.InternalHDRPercentileRanks",
      "org.elasticsearch.search.aggregations.metrics.cardinality.InternalCardinality$1",
      "org.elasticsearch.search.aggregations.metrics.cardinality.InternalCardinality",
      "org.elasticsearch.search.aggregations.metrics.scripted.InternalScriptedMetric$1",
      "org.elasticsearch.search.aggregations.metrics.scripted.InternalScriptedMetric",
      "org.elasticsearch.search.aggregations.metrics.geocentroid.InternalGeoCentroid$1",
      "org.elasticsearch.search.aggregations.metrics.geocentroid.InternalGeoCentroid",
      "org.elasticsearch.search.aggregations.bucket.InternalSingleBucketAggregation",
      "org.elasticsearch.search.aggregations.bucket.global.InternalGlobal$1",
      "org.elasticsearch.search.aggregations.bucket.global.InternalGlobal",
      "org.elasticsearch.search.aggregations.bucket.filter.InternalFilter$1",
      "org.elasticsearch.search.aggregations.bucket.filter.InternalFilter",
      "org.elasticsearch.search.aggregations.InternalMultiBucketAggregation",
      "org.elasticsearch.search.aggregations.bucket.filters.InternalFilters$1",
      "org.elasticsearch.search.aggregations.bucket.filters.InternalFilters$2",
      "org.elasticsearch.search.aggregations.bucket.filters.InternalFilters",
      "org.elasticsearch.search.aggregations.bucket.BucketStreams",
      "org.elasticsearch.search.aggregations.bucket.sampler.InternalSampler$1",
      "org.elasticsearch.search.aggregations.bucket.sampler.InternalSampler",
      "org.elasticsearch.search.aggregations.bucket.sampler.UnmappedSampler$1",
      "org.elasticsearch.search.aggregations.bucket.sampler.UnmappedSampler",
      "org.elasticsearch.search.aggregations.bucket.missing.InternalMissing$1",
      "org.elasticsearch.search.aggregations.bucket.missing.InternalMissing",
      "org.elasticsearch.search.aggregations.bucket.terms.InternalTerms",
      "org.elasticsearch.search.aggregations.bucket.terms.StringTerms$1",
      "org.elasticsearch.search.aggregations.bucket.terms.StringTerms$2",
      "org.elasticsearch.search.aggregations.bucket.terms.StringTerms",
      "org.elasticsearch.search.aggregations.bucket.terms.LongTerms$1",
      "org.elasticsearch.search.aggregations.bucket.terms.LongTerms$2",
      "org.elasticsearch.search.aggregations.bucket.terms.LongTerms",
      "org.elasticsearch.search.aggregations.bucket.significant.InternalSignificantTerms",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantStringTerms$1",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantStringTerms$2",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantStringTerms",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantLongTerms$1",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantLongTerms$2",
      "org.elasticsearch.search.aggregations.bucket.significant.SignificantLongTerms",
      "org.elasticsearch.search.aggregations.bucket.significant.UnmappedSignificantTerms$1",
      "org.elasticsearch.search.aggregations.bucket.significant.UnmappedSignificantTerms",
      "org.elasticsearch.search.aggregations.bucket.geogrid.InternalGeoHashGrid$1",
      "org.elasticsearch.search.aggregations.bucket.geogrid.InternalGeoHashGrid$2",
      "org.elasticsearch.search.aggregations.bucket.geogrid.InternalGeoHashGrid",
      "org.elasticsearch.search.aggregations.bucket.terms.DoubleTerms$1",
      "org.elasticsearch.search.aggregations.bucket.terms.DoubleTerms$2",
      "org.elasticsearch.search.aggregations.bucket.terms.DoubleTerms",
      "org.elasticsearch.search.aggregations.bucket.terms.UnmappedTerms$1",
      "org.elasticsearch.search.aggregations.bucket.terms.UnmappedTerms",
      "org.elasticsearch.search.aggregations.bucket.range.InternalRange$Factory",
      "org.elasticsearch.search.aggregations.bucket.range.InternalRange$1",
      "org.elasticsearch.search.aggregations.bucket.range.InternalRange$2",
      "org.elasticsearch.search.aggregations.bucket.range.InternalRange",
      "org.elasticsearch.search.aggregations.bucket.range.date.InternalDateRange$1",
      "org.elasticsearch.search.aggregations.bucket.range.date.InternalDateRange$2",
      "org.elasticsearch.search.aggregations.bucket.range.date.InternalDateRange$Factory",
      "org.elasticsearch.search.aggregations.bucket.range.date.InternalDateRange",
      "org.elasticsearch.search.aggregations.bucket.range.InternalBinaryRange$1",
      "org.elasticsearch.search.aggregations.bucket.range.InternalBinaryRange$2",
      "org.elasticsearch.search.aggregations.bucket.range.InternalBinaryRange",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalHistogram$Factory",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalHistogram$1",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalHistogram$2",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalHistogram",
      "org.elasticsearch.search.aggregations.bucket.range.geodistance.InternalGeoDistance$1",
      "org.elasticsearch.search.aggregations.bucket.range.geodistance.InternalGeoDistance$2",
      "org.elasticsearch.search.aggregations.bucket.range.geodistance.InternalGeoDistance$Factory",
      "org.elasticsearch.search.aggregations.bucket.range.geodistance.InternalGeoDistance",
      "org.elasticsearch.search.aggregations.bucket.nested.InternalNested$1",
      "org.elasticsearch.search.aggregations.bucket.nested.InternalNested",
      "org.elasticsearch.search.aggregations.bucket.nested.InternalReverseNested$1",
      "org.elasticsearch.search.aggregations.bucket.nested.InternalReverseNested",
      "org.elasticsearch.search.aggregations.metrics.tophits.InternalTopHits$1",
      "org.elasticsearch.search.aggregations.metrics.tophits.InternalTopHits",
      "org.elasticsearch.search.aggregations.metrics.geobounds.InternalGeoBounds$1",
      "org.elasticsearch.search.aggregations.metrics.geobounds.InternalGeoBounds",
      "org.elasticsearch.search.aggregations.bucket.children.InternalChildren$1",
      "org.elasticsearch.search.aggregations.bucket.children.InternalChildren",
      "org.elasticsearch.search.aggregations.pipeline.derivative.DerivativePipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.derivative.DerivativePipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.PipelineAggregatorStreams",
      "org.elasticsearch.search.aggregations.pipeline.InternalSimpleValue$1",
      "org.elasticsearch.search.aggregations.pipeline.InternalSimpleValue",
      "org.elasticsearch.search.aggregations.pipeline.derivative.InternalDerivative$1",
      "org.elasticsearch.search.aggregations.pipeline.derivative.InternalDerivative",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.InternalBucketMetricValue$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.InternalBucketMetricValue",
      "org.elasticsearch.search.aggregations.pipeline.SiblingPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.BucketMetricsPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.max.MaxBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.max.MaxBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.min.MinBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.min.MinBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.avg.AvgBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.avg.AvgBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.sum.SumBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.sum.SumBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.StatsBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.StatsBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.InternalStatsBucket$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.InternalStatsBucket",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.extended.ExtendedStatsBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.extended.ExtendedStatsBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.extended.InternalExtendedStatsBucket$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.stats.extended.InternalExtendedStatsBucket",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.percentile.PercentilesBucketPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.percentile.PercentilesBucketPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.percentile.InternalPercentilesBucket$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.percentile.InternalPercentilesBucket",
      "org.elasticsearch.search.aggregations.pipeline.cumulativesum.CumulativeSumPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketscript.BucketScriptPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.bucketselector.BucketSelectorPipelineAggregator$1",
      "org.elasticsearch.search.aggregations.pipeline.bucketselector.BucketSelectorPipelineAggregator",
      "org.elasticsearch.search.aggregations.pipeline.serialdiff.SerialDiffPipelineAggregator",
      "org.elasticsearch.search.SearchModule",
      "org.elasticsearch.common.settings.ClusterSettings",
      "org.elasticsearch.indices.breaker.BreakerSettings",
      "org.elasticsearch.monitor.jvm.JvmInfo$Mem",
      "org.elasticsearch.monitor.jvm.JvmInfo",
      "org.elasticsearch.common.breaker.CircuitBreaker$Type",
      "org.elasticsearch.common.breaker.ChildMemoryCircuitBreaker",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.StreamEndEvent",
      "org.elasticsearch.common.recycler.AbstractRecyclerC",
      "org.elasticsearch.common.util.PageCacheRecycler$1",
      "org.elasticsearch.common.recycler.Recyclers",
      "org.elasticsearch.common.recycler.Recyclers$1",
      "org.elasticsearch.common.recycler.AbstractRecycler",
      "org.elasticsearch.common.recycler.DequeRecycler",
      "org.elasticsearch.common.recycler.FilterRecycler",
      "org.elasticsearch.common.recycler.Recyclers$3",
      "org.elasticsearch.common.util.PageCacheRecycler$2",
      "org.elasticsearch.common.util.PageCacheRecycler$3",
      "org.elasticsearch.common.util.PageCacheRecycler$4",
      "org.elasticsearch.common.util.MockBigArrays$AbstractArrayWrapper",
      "org.elasticsearch.common.util.MockBigArrays$ByteArrayWrapper",
      "org.apache.lucene.index.SegmentInfos",
      "org.joda.time.tz.ZoneInfoProvider",
      "org.joda.time.tz.ZoneInfoProvider$1",
      "org.joda.time.tz.DateTimeZoneBuilder",
      "org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone",
      "org.joda.time.tz.CachedDateTimeZone",
      "org.apache.lucene.mockfile.FilterFileSystemProvider",
      "org.apache.lucene.mockfile.DisableFsyncFS",
      "org.jboss.netty.handler.codec.http.HttpVersion",
      "org.jboss.netty.handler.codec.http.HttpMethod",
      "org.jboss.netty.handler.codec.http.DefaultHttpMessage",
      "org.jboss.netty.handler.codec.http.DefaultHttpRequest",
      "org.jboss.netty.handler.codec.http.HttpHeaders$1",
      "org.jboss.netty.handler.codec.http.HttpHeaders",
      "org.jboss.netty.handler.codec.http.DefaultHttpHeaders",
      "org.jboss.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry",
      "org.elasticsearch.http.netty.NettyHttpRequest",
      "org.elasticsearch.search.internal.SearchContext",
      "org.elasticsearch.Build",
      "org.elasticsearch.search.rescore.RescoreBuilder",
      "org.elasticsearch.search.rescore.QueryRescorerBuilder",
      "org.elasticsearch.cluster.metadata.IndexMetaData$IndexMetaDataDiff",
      "org.elasticsearch.cluster.DiffableUtils$IntKeySerializer",
      "org.elasticsearch.cluster.DiffableUtils$VIntKeySerializer",
      "org.elasticsearch.cluster.DiffableUtils$ImmutableOpenIntMapDiff",
      "com.carrotsearch.hppc.AbstractIntCollection",
      "com.carrotsearch.hppc.IntObjectHashMap$KeysContainer",
      "com.carrotsearch.hppc.IntObjectHashMap$KeysIterator",
      "com.carrotsearch.hppc.cursors.IntCursor",
      "org.elasticsearch.common.util.AbstractBigArray",
      "org.elasticsearch.common.util.BigByteArray",
      "org.elasticsearch.common.xcontent.XContentBuilder",
      "org.elasticsearch.common.transport.LocalTransportAddress",
      "org.elasticsearch.cluster.node.DiscoveryNode$Role",
      "org.elasticsearch.cluster.routing.ShardRoutingState",
      "org.elasticsearch.cluster.routing.allocation.RoutingAllocation",
      "org.elasticsearch.cluster.routing.allocation.AllocationExplanation",
      "org.elasticsearch.common.transport.DummyTransportAddress",
      "org.elasticsearch.common.recycler.DequeRecycler$DV",
      "org.elasticsearch.common.recycler.Recyclers$3$1",
      "org.elasticsearch.common.util.MockPageCacheRecycler$1",
      "org.elasticsearch.common.io.stream.ReleasableBytesStreamOutput",
      "org.elasticsearch.action.search.SearchRequest",
      "com.fasterxml.jackson.core.io.UTF32Reader",
      "org.elasticsearch.common.util.BigArrays$IntArrayWrapper",
      "org.elasticsearch.search.fetch.source.FetchSourceContext",
      "org.elasticsearch.common.xcontent.yaml.YamlXContentGenerator",
      "com.fasterxml.jackson.dataformat.yaml.UTF8Writer",
      "com.fasterxml.jackson.dataformat.yaml.YAMLGenerator",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions$ScalarStyle",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions$FlowStyle",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions$LineBreak",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectStreamStart",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectFirstDocumentStart",
      "org.elasticsearch.search.fetch.FetchSubPhase$HitContext",
      "com.fasterxml.jackson.core.util.ByteArrayBuilder",
      "org.apache.lucene.analysis.TokenFilter",
      "org.apache.lucene.util.automaton.SortedIntSet$FrozenIntSet",
      "org.apache.lucene.util.automaton.Operations$PointTransitionSet",
      "org.apache.lucene.util.automaton.SortedIntSet",
      "org.apache.lucene.util.automaton.Operations$PointTransitions",
      "org.apache.lucene.util.automaton.Operations$TransitionList",
      "org.apache.lucene.util.TimSorter",
      "org.apache.lucene.util.ArrayTimSorter",
      "org.apache.lucene.analysis.MockTokenFilter",
      "org.elasticsearch.repositories.RepositoryName",
      "org.elasticsearch.repositories.RepositorySettings",
      "org.elasticsearch.action.support.single.shard.SingleShardRequest",
      "org.elasticsearch.action.termvectors.TermVectorsRequest",
      "org.elasticsearch.action.termvectors.TermVectorsRequest$Flag",
      "org.apache.lucene.index.FieldInfo",
      "org.elasticsearch.action.explain.ExplainRequest",
      "org.apache.lucene.spatial3d.geom.LatLonBounds",
      "org.apache.lucene.spatial3d.geom.Vector",
      "org.apache.lucene.spatial3d.geom.GeoPoint",
      "org.apache.lucene.spatial3d.geom.PlanetModel",
      "org.apache.lucene.spatial3d.geom.Plane",
      "org.apache.lucene.spatial3d.geom.SidedPlane",
      "org.elasticsearch.action.ReplicationResponse$ShardInfo$Failure",
      "org.elasticsearch.search.sort.SortBuilder",
      "org.elasticsearch.search.sort.SortFieldAndFormat",
      "org.apache.lucene.search.SortField$Type",
      "org.apache.lucene.search.SortField$1",
      "org.apache.lucene.search.SortField$2",
      "org.apache.lucene.search.SortField",
      "org.elasticsearch.search.sort.FieldSortBuilder",
      "org.elasticsearch.action.support.replication.ReplicationRequest",
      "org.elasticsearch.action.index.IndexRequest",
      "org.elasticsearch.action.index.IndexRequest$OpType",
      "org.elasticsearch.search.highlight.AbstractHighlighterBuilder",
      "org.elasticsearch.search.highlight.SearchContextHighlight$FieldOptions$Builder",
      "org.elasticsearch.search.highlight.SearchContextHighlight$FieldOptions",
      "org.apache.lucene.search.vectorhighlight.SimpleBoundaryScanner",
      "org.elasticsearch.search.highlight.HighlightBuilder$Field",
      "org.elasticsearch.search.highlight.HighlightBuilder",
      "org.elasticsearch.index.query.SpanNotQueryBuilder",
      "org.elasticsearch.index.query.SpanNearQueryBuilder",
      "org.elasticsearch.search.aggregations.pipeline.movavg.models.LinearModel$LinearModelBuilder",
      "org.elasticsearch.search.aggregations.pipeline.movavg.models.LinearModel$1",
      "org.elasticsearch.search.aggregations.pipeline.movavg.models.LinearModel",
      "org.elasticsearch.common.io.Streams",
      "org.elasticsearch.action.get.GetRequest",
      "org.elasticsearch.common.util.concurrent.ThreadContext$ContextThreadLocal",
      "org.elasticsearch.threadpool.ThreadPool$ExecutorSettingsBuilder",
      "org.elasticsearch.threadpool.ThreadPool$ScalingExecutorSettingsBuilder",
      "org.elasticsearch.threadpool.ThreadPool$FixedExecutorSettingsBuilder",
      "org.elasticsearch.common.util.concurrent.EsExecutors$EsThreadFactory",
      "org.elasticsearch.common.util.concurrent.ConcurrentCollections",
      "org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor",
      "org.elasticsearch.common.util.concurrent.EsAbortPolicy",
      "org.elasticsearch.common.metrics.CounterMetric",
      "org.elasticsearch.threadpool.ThreadPool$ExecutorHolder",
      "org.elasticsearch.threadpool.ThreadPool$Info",
      "org.elasticsearch.common.util.concurrent.EsExecutors$ExecutorScalingQueue",
      "org.elasticsearch.common.util.concurrent.EsExecutors$ForceQueuePolicy",
      "org.elasticsearch.common.util.concurrent.SizeBlockingQueue",
      "org.elasticsearch.threadpool.ThreadPool$EstimatedTimeThread",
      "org.apache.lucene.util.Counter",
      "org.elasticsearch.threadpool.ThreadPool$EstimatedTimeThread$TimeCounter",
      "org.elasticsearch.action.support.master.MasterNodeRequest",
      "com.fasterxml.jackson.dataformat.smile.SmileGenerator$SharedStringNode",
      "com.fasterxml.jackson.core.JsonGenerationException",
      "org.jboss.netty.buffer.SlicedChannelBuffer",
      "org.elasticsearch.transport.TransportException",
      "com.vividsolutions.jts.geom.Geometry$1",
      "com.vividsolutions.jts.geom.Geometry",
      "com.vividsolutions.jts.geom.LineString",
      "com.vividsolutions.jts.geom.LinearRing",
      "com.vividsolutions.jts.geom.Polygon",
      "org.elasticsearch.common.geo.builders.ShapeBuilder$GeoShapeType",
      "org.elasticsearch.common.geo.builders.MultiLineStringBuilder",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.reader.ReaderException",
      "org.elasticsearch.search.aggregations.AggregatorFactories",
      "org.elasticsearch.search.aggregations.SearchContextAggregations",
      "org.elasticsearch.search.aggregations.AggregationBuilder",
      "org.elasticsearch.search.aggregations.AbstractAggregationBuilder",
      "org.elasticsearch.search.aggregations.support.ValuesSourceAggregationBuilder",
      "org.elasticsearch.search.aggregations.support.ValuesSourceAggregationBuilder$LeafOnly",
      "org.elasticsearch.search.aggregations.metrics.avg.AvgAggregationBuilder",
      "org.elasticsearch.action.delete.DeleteRequest",
      "org.elasticsearch.common.xcontent.ParseFieldRegistry",
      "org.elasticsearch.indices.query.IndicesQueriesRegistry",
      "org.apache.lucene.index.SegmentInfos$FindSegmentsFile",
      "org.apache.lucene.index.SegmentInfos$1",
      "org.elasticsearch.search.aggregations.AggregatorFactories$Builder",
      "org.elasticsearch.cluster.routing.allocation.decider.Decision",
      "org.elasticsearch.cluster.routing.allocation.decider.Decision$Single",
      "org.elasticsearch.threadpool.ThreadPool$LoggingRunnable",
      "org.elasticsearch.action.get.MultiGetRequest$Item",
      "org.apache.lucene.mockfile.FilterFileSystem",
      "org.elasticsearch.action.admin.indices.upgrade.post.UpgradeRequest",
      "org.elasticsearch.index.mapper.MetadataFieldMapper",
      "org.elasticsearch.index.mapper.internal.SeqNoFieldMapper",
      "org.apache.lucene.document.FieldType",
      "org.elasticsearch.index.mapper.MappedFieldType",
      "org.elasticsearch.index.mapper.internal.SeqNoFieldMapper$SeqNoFieldType",
      "org.elasticsearch.index.mapper.internal.SeqNoFieldMapper$Defaults",
      "org.elasticsearch.index.mapper.FieldMapper$MultiFields",
      "org.elasticsearch.search.sort.ScoreSortBuilder",
      "org.elasticsearch.search.sort.SortOrder",
      "org.elasticsearch.search.aggregations.bucket.missing.MissingAggregationBuilder",
      "org.elasticsearch.action.get.MultiGetShardRequest",
      "org.elasticsearch.common.xcontent.XContentLocation",
      "org.elasticsearch.common.ParsingException",
      "org.elasticsearch.search.aggregations.bucket.range.RangeAggregator$Range",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser$3",
      "org.jboss.netty.channel.DefaultChannelPipeline$DiscardingChannelSink",
      "org.jboss.netty.channel.DefaultChannelPipeline",
      "org.elasticsearch.common.xcontent.cbor.CborXContentGenerator",
      "com.fasterxml.jackson.dataformat.cbor.CBORGenerator",
      "com.fasterxml.jackson.core.util.JsonGeneratorDelegate",
      "com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate",
      "org.elasticsearch.common.xcontent.support.filtering.FilterPathBasedFilter$1",
      "org.elasticsearch.common.xcontent.support.filtering.FilterPathBasedFilter$2",
      "org.elasticsearch.common.xcontent.support.filtering.FilterPathBasedFilter",
      "org.elasticsearch.common.xcontent.support.filtering.FilterPath",
      "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
      "com.fasterxml.jackson.core.json.UTF8JsonGenerator",
      "org.elasticsearch.search.aggregations.support.AggregationContext",
      "org.elasticsearch.index.query.MoreLikeThisQueryBuilder$Item",
      "org.elasticsearch.common.compress.CompressedXContent",
      "org.elasticsearch.common.compress.deflate.DeflateCompressor",
      "org.elasticsearch.common.compress.CompressorFactory",
      "org.elasticsearch.common.compress.deflate.DeflateCompressor$2",
      "org.elasticsearch.common.compress.CompressedXContent$1",
      "org.elasticsearch.cluster.metadata.MappingMetaData",
      "org.jboss.netty.channel.local.DefaultLocalClientChannelFactory",
      "org.jboss.netty.channel.AbstractChannelSink",
      "org.jboss.netty.channel.local.LocalClientChannelSink",
      "org.jboss.netty.util.internal.ConcurrentHashMap",
      "org.jboss.netty.util.internal.ConcurrentHashMap$Segment",
      "org.jboss.netty.util.internal.ConcurrentHashMap$HashEntry",
      "org.jboss.netty.channel.AbstractChannel",
      "org.jboss.netty.channel.local.DefaultLocalChannel",
      "org.jboss.netty.channel.CompleteChannelFuture",
      "org.jboss.netty.channel.SucceededChannelFuture",
      "org.jboss.netty.channel.DefaultChannelFuture",
      "org.jboss.netty.channel.AbstractChannel$ChannelCloseFuture",
      "org.jboss.netty.util.internal.ThreadLocalBoolean",
      "org.jboss.netty.channel.DefaultChannelConfig",
      "org.jboss.netty.channel.local.DefaultLocalChannel$1",
      "org.jboss.netty.channel.Channels",
      "org.jboss.netty.channel.UpstreamChannelStateEvent",
      "org.jboss.netty.channel.ChannelState",
      "org.jboss.netty.channel.UpstreamChannelStateEvent$1",
      "org.apache.lucene.index.QueryTimeoutImpl",
      "org.elasticsearch.cluster.DiffableUtils$DiffablePrototypeValueReader",
      "org.elasticsearch.cluster.metadata.AliasMetaData",
      "org.elasticsearch.cluster.metadata.IndexMetaData$IndexMetaDataDiff$1",
      "org.apache.lucene.util.BitUtil",
      "com.carrotsearch.hppc.ObjectObjectScatterMap",
      "com.carrotsearch.hppc.HashOrderMixing$3",
      "com.carrotsearch.hppc.BufferAllocationException",
      "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBounds",
      "org.elasticsearch.common.geo.builders.GeometryCollectionBuilder",
      "org.elasticsearch.common.geo.builders.CoordinatesBuilder",
      "org.elasticsearch.common.geo.builders.PolygonBuilder",
      "org.elasticsearch.common.geo.builders.CoordinateCollection",
      "org.elasticsearch.common.geo.builders.LineStringBuilder",
      "org.elasticsearch.action.bulk.BulkShardRequest",
      "org.apache.lucene.analysis.AnalyzerWrapper",
      "org.apache.lucene.analysis.DelegatingAnalyzerWrapper",
      "org.elasticsearch.index.analysis.NamedAnalyzer$1",
      "org.elasticsearch.index.analysis.NamedAnalyzer",
      "org.apache.lucene.analysis.DelegatingAnalyzerWrapper$DelegatingReuseStrategy",
      "org.elasticsearch.search.aggregations.metrics.valuecount.ValueCountAggregationBuilder",
      "org.apache.lucene.util.InfoStream$NoOutput",
      "org.apache.lucene.util.InfoStream",
      "org.apache.lucene.util.FailOnNonBulkMergesInfoStream",
      "org.apache.lucene.mockfile.VerboseFS",
      "org.apache.lucene.mockfile.FilterPath",
      "org.elasticsearch.search.aggregations.bucket.children.ChildrenAggregationBuilder",
      "org.elasticsearch.search.internal.InternalSearchHit$InternalNestedIdentity",
      "org.elasticsearch.common.text.Text",
      "org.elasticsearch.action.GenericAction",
      "org.elasticsearch.action.Action",
      "org.elasticsearch.action.delete.DeleteAction",
      "org.elasticsearch.search.aggregations.metrics.max.MaxAggregationBuilder",
      "org.elasticsearch.transport.TransportResponse",
      "org.elasticsearch.action.ActionResponse",
      "org.elasticsearch.action.ReplicationResponse",
      "org.elasticsearch.cluster.routing.RestoreSource",
      "org.elasticsearch.snapshots.Snapshot",
      "org.elasticsearch.search.aggregations.metrics.stats.StatsAggregationBuilder",
      "org.elasticsearch.search.aggregations.bucket.significant.heuristics.SignificanceHeuristic",
      "org.elasticsearch.search.aggregations.bucket.significant.heuristics.NXYSignificanceHeuristic",
      "org.elasticsearch.search.aggregations.bucket.significant.heuristics.NXYSignificanceHeuristic$NXYParser",
      "org.elasticsearch.search.aggregations.bucket.significant.heuristics.MutualInformation$1",
      "org.elasticsearch.search.aggregations.bucket.significant.heuristics.MutualInformation",
      "org.elasticsearch.common.geo.builders.MultiPolygonBuilder",
      "org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude",
      "org.elasticsearch.index.query.RangeQueryBuilder",
      "org.elasticsearch.common.unit.Fuzziness",
      "org.elasticsearch.common.transport.InetSocketTransportAddress",
      "org.elasticsearch.search.aggregations.bucket.significant.heuristics.ScriptHeuristic",
      "org.elasticsearch.search.aggregations.bucket.significant.heuristics.ScriptHeuristic$LongAccessor",
      "org.elasticsearch.index.store.Store$MetadataSnapshot",
      "org.apache.lucene.store.IOContext$Context",
      "org.apache.lucene.store.IOContext",
      "org.elasticsearch.search.aggregations.bucket.significant.heuristics.PercentageScore",
      "org.elasticsearch.search.internal.InternalSearchHit",
      "org.elasticsearch.common.util.BigLongArray",
      "org.elasticsearch.action.update.UpdateAction",
      "org.elasticsearch.action.DocWriteResponse",
      "org.elasticsearch.action.update.UpdateResponse",
      "org.apache.log4j.spi.LoggingEvent",
      "org.elasticsearch.search.lookup.SearchLookup",
      "org.elasticsearch.search.lookup.DocLookup",
      "org.elasticsearch.search.lookup.SourceLookup",
      "org.elasticsearch.search.lookup.FieldsLookup",
      "org.apache.lucene.index.StoredFieldVisitor",
      "org.elasticsearch.index.fieldvisitor.FieldsVisitor",
      "org.elasticsearch.index.query.QueryParseContext",
      "org.elasticsearch.action.termvectors.MultiTermVectorsShardRequest",
      "org.elasticsearch.search.aggregations.bucket.significant.heuristics.ChiSquare$1",
      "org.elasticsearch.search.aggregations.bucket.significant.heuristics.ChiSquare",
      "com.vividsolutions.jts.geom.DefaultCoordinateSequenceFactory",
      "com.vividsolutions.jts.geom.impl.PackedCoordinateSequence",
      "com.vividsolutions.jts.geom.impl.PackedCoordinateSequence$Double",
      "com.vividsolutions.jts.geom.Point",
      "com.vividsolutions.jts.util.Assert",
      "com.vividsolutions.jts.util.AssertionFailedException",
      "org.elasticsearch.search.internal.ShardSearchTransportRequest",
      "org.elasticsearch.search.aggregations.BucketCollector$1",
      "org.elasticsearch.search.aggregations.BucketCollector",
      "org.elasticsearch.search.aggregations.Aggregator",
      "org.elasticsearch.search.aggregations.AggregatorBase",
      "org.elasticsearch.search.aggregations.bucket.BucketsAggregator",
      "org.elasticsearch.search.aggregations.bucket.histogram.HistogramAggregator",
      "org.elasticsearch.action.support.master.AcknowledgedRequest",
      "org.elasticsearch.action.admin.cluster.storedscripts.DeleteStoredScriptRequest",
      "org.elasticsearch.index.query.SimpleQueryStringFlag",
      "org.elasticsearch.index.query.SimpleQueryStringBuilder",
      "org.elasticsearch.index.query.SimpleQueryParser$Settings",
      "org.elasticsearch.common.util.MockBigArrays$FloatArrayWrapper",
      "org.elasticsearch.common.util.BigArrays$FloatArrayWrapper",
      "org.elasticsearch.index.query.GeoExecType",
      "org.elasticsearch.index.query.GeoBoundingBoxQueryBuilder",
      "org.elasticsearch.search.aggregations.bucket.significant.heuristics.GND$1",
      "org.elasticsearch.search.aggregations.bucket.significant.heuristics.GND",
      "org.elasticsearch.search.internal.FilteredSearchContext",
      "org.elasticsearch.search.internal.SubSearchContext",
      "org.elasticsearch.search.fetch.FetchSearchResult",
      "org.elasticsearch.search.query.QuerySearchResultProvider",
      "org.elasticsearch.search.query.QuerySearchResult",
      "org.elasticsearch.action.index.IndexAction",
      "org.elasticsearch.action.index.IndexResponse",
      "org.elasticsearch.common.io.Channels",
      "org.elasticsearch.cluster.AbstractDiffable$CompleteDiff",
      "org.elasticsearch.search.aggregations.pipeline.movavg.models.HoltWintersModel$1",
      "org.elasticsearch.search.aggregations.pipeline.movavg.models.HoltWintersModel",
      "com.fasterxml.jackson.core.io.JsonStringEncoder",
      "org.apache.lucene.mockfile.VirusCheckingFS",
      "org.elasticsearch.action.OriginalIndices",
      "org.elasticsearch.common.unit.TimeValue$1",
      "org.apache.lucene.mockfile.HandleTrackingFS",
      "org.apache.lucene.mockfile.HandleLimitFS",
      "org.apache.lucene.store.WindowsDirectory",
      "org.elasticsearch.cluster.routing.RoutingNodes$1",
      "org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilder",
      "org.elasticsearch.search.suggest.SuggestionBuilder",
      "org.elasticsearch.search.suggest.CustomSuggesterSearchIT$CustomSuggestionBuilder",
      "org.jboss.netty.channel.socket.nio.AbstractNioChannel",
      "org.jboss.netty.channel.socket.nio.NioSocketChannel",
      "org.jboss.netty.channel.socket.nio.AbstractNioChannel$WriteTask",
      "org.jboss.netty.channel.socket.nio.AbstractNioChannel$WriteRequestQueue",
      "org.jboss.netty.channel.socket.DefaultSocketChannelConfig",
      "org.jboss.netty.channel.AdaptiveReceiveBufferSizePredictorFactory",
      "org.jboss.netty.channel.socket.nio.DefaultNioSocketChannelConfig",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.CollectionStartEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.MappingStartEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot",
      "org.elasticsearch.ElasticsearchGenerationException",
      "org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository",
      "org.elasticsearch.search.SearchServiceTests$FailOnRewriteQueryBuilder",
      "org.elasticsearch.search.aggregations.InternalAggregations",
      "org.elasticsearch.index.query.BoostingQueryBuilder",
      "org.elasticsearch.cluster.metadata.MetaData$XContentContext"
    );
  }
}
