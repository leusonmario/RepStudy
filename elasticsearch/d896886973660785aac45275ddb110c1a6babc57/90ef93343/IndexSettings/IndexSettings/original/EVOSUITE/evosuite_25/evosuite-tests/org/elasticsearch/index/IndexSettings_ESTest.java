/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 05 11:46:22 GMT 2021
 */

package org.elasticsearch.index;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.nio.channels.FileChannel;
import java.nio.channels.GatheringByteChannel;
import java.nio.file.FileSystem;
import java.nio.file.OpenOption;
import java.nio.file.Path;
import java.nio.file.attribute.FileAttribute;
import java.util.LinkedHashSet;
import java.util.function.Predicate;
import org.apache.lucene.mockfile.DisableFsyncFS;
import org.apache.lucene.mockfile.FilterFileSystem;
import org.apache.lucene.mockfile.HandleLimitFS;
import org.apache.lucene.util.BytesRef;
import org.elasticsearch.cluster.metadata.IndexMetaData;
import org.elasticsearch.cluster.metadata.MetaData;
import org.elasticsearch.common.bytes.BytesArray;
import org.elasticsearch.common.io.stream.StreamInput;
import org.elasticsearch.common.joda.FormatDateTimeFormatter;
import org.elasticsearch.common.settings.IndexScopedSettings;
import org.elasticsearch.common.settings.Settings;
import org.elasticsearch.env.Environment;
import org.elasticsearch.index.IndexSettings;
import org.elasticsearch.search.DocValueFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeZone;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IndexSettings_ESTest extends IndexSettings_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test0()  throws Throwable  {
      Settings settings0 = null;
      IndexScopedSettings indexScopedSettings0 = null;
      IndexMetaData indexMetaData0 = null;
      Predicate<String> predicate0 = null;
      IndexSettings indexSettings0 = null;
      try {
        indexSettings0 = new IndexSettings(indexMetaData0, settings0, predicate0, indexScopedSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.IndexSettings", e);
      }
  }

  @Test(timeout = 11000)
  public void test1()  throws Throwable  {
      Settings settings0 = null;
      IndexMetaData indexMetaData0 = IndexMetaData.PROTO;
      assertEquals(0, indexMetaData0.getNumberOfReplicas());
      assertEquals(1L, indexMetaData0.getVersion());
      assertEquals(1, indexMetaData0.getTotalNumberOfShards());
      assertEquals(1, indexMetaData0.getNumberOfShards());
      assertEquals(IndexMetaData.State.OPEN, indexMetaData0.getState());
      assertEquals("_na_", indexMetaData0.getIndexUUID());
      assertNotNull(indexMetaData0);
      
      IndexSettings indexSettings0 = null;
      try {
        indexSettings0 = new IndexSettings(indexMetaData0, settings0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.elasticsearch.common.settings.IndexScopedSettings
         //
         verifyException("org.elasticsearch.index.IndexSettings", e);
      }
  }

  @Test(timeout = 11000)
  public void test2()  throws Throwable  {
      IndexMetaData indexMetaData0 = IndexMetaData.PROTO;
      assertEquals(1, indexMetaData0.getTotalNumberOfShards());
      assertEquals(1L, indexMetaData0.getVersion());
      assertEquals(1, indexMetaData0.getNumberOfShards());
      assertEquals("_na_", indexMetaData0.getIndexUUID());
      assertEquals(0, indexMetaData0.getNumberOfReplicas());
      assertEquals(IndexMetaData.State.OPEN, indexMetaData0.getState());
      assertNotNull(indexMetaData0);
      
      Settings settings0 = Settings.Builder.EMPTY_SETTINGS;
      assertNotNull(settings0);
      
      IndexSettings indexSettings0 = null;
      try {
        indexSettings0 = new IndexSettings(indexMetaData0, settings0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.elasticsearch.common.settings.IndexScopedSettings
         //
         verifyException("org.elasticsearch.index.IndexSettings", e);
      }
  }

  @Test(timeout = 11000)
  public void test3()  throws Throwable  {
      IndexMetaData indexMetaData0 = null;
      Settings settings0 = null;
      Predicate<String> predicate0 = null;
      IndexScopedSettings indexScopedSettings0 = null;
      IndexSettings indexSettings0 = null;
      try {
        indexSettings0 = new IndexSettings(indexMetaData0, settings0, predicate0, indexScopedSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.IndexSettings", e);
      }
  }

  @Test(timeout = 11000)
  public void test4()  throws Throwable  {
      IndexScopedSettings indexScopedSettings0 = null;
      IndexMetaData indexMetaData0 = null;
      Predicate<String> predicate0 = null;
      MetaData metaData0 = MetaData.EMPTY_META_DATA;
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0L, metaData0.version());
      assertEquals("_na_", metaData0.clusterUUID());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertNotNull(metaData0);
      
      Settings settings0 = metaData0.transientSettings();
      assertEquals(0, metaData0.getNumberOfShards());
      assertEquals(0L, metaData0.version());
      assertEquals("_na_", metaData0.clusterUUID());
      assertEquals(0, metaData0.getTotalNumberOfShards());
      assertNotNull(settings0);
      
      IndexSettings indexSettings0 = null;
      try {
        indexSettings0 = new IndexSettings(indexMetaData0, settings0, predicate0, indexScopedSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.IndexSettings", e);
      }
  }
}
