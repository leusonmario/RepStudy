/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 05 13:06:14 GMT 2021
 */

package org.elasticsearch.index;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.function.Predicate;
import org.apache.lucene.search.MaxNonCompetitiveBoostAttributeImpl;
import org.elasticsearch.cluster.metadata.IndexMetaData;
import org.elasticsearch.common.settings.IndexScopedSettings;
import org.elasticsearch.common.settings.Settings;
import org.elasticsearch.common.unit.TimeValue;
import org.elasticsearch.index.IndexSettings;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IndexSettings_ESTest extends IndexSettings_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test0()  throws Throwable  {
      IndexMetaData indexMetaData0 = IndexMetaData.PROTO;
      assertNotNull(indexMetaData0);
      assertEquals(0, indexMetaData0.getNumberOfReplicas());
      assertEquals(1, indexMetaData0.getRoutingFactor());
      assertEquals(1, indexMetaData0.getTotalNumberOfShards());
      assertEquals(IndexMetaData.State.OPEN, indexMetaData0.getState());
      assertEquals(1, indexMetaData0.getNumberOfShards());
      assertEquals(1L, indexMetaData0.getVersion());
      assertEquals(1, indexMetaData0.getRoutingNumShards());
      assertEquals("_na_", indexMetaData0.getIndexUUID());
      
      IndexScopedSettings indexScopedSettings0 = null;
      Settings settings0 = Settings.EMPTY;
      assertNotNull(settings0);
      
      Predicate<String> predicate0 = Predicate.isEqual((Object) indexMetaData0);
      assertNotNull(predicate0);
      assertEquals(0, indexMetaData0.getNumberOfReplicas());
      assertEquals(1, indexMetaData0.getRoutingFactor());
      assertEquals(1, indexMetaData0.getTotalNumberOfShards());
      assertEquals(IndexMetaData.State.OPEN, indexMetaData0.getState());
      assertEquals(1, indexMetaData0.getNumberOfShards());
      assertEquals(1L, indexMetaData0.getVersion());
      assertEquals(1, indexMetaData0.getRoutingNumShards());
      assertEquals("_na_", indexMetaData0.getIndexUUID());
      
      IndexSettings indexSettings0 = null;
      try {
        indexSettings0 = new IndexSettings(indexMetaData0, settings0, predicate0, indexScopedSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.IndexSettings", e);
      }
  }

  @Test(timeout = 11000)
  public void test1()  throws Throwable  {
      IndexMetaData indexMetaData0 = null;
      Settings settings0 = null;
      IndexSettings indexSettings0 = null;
      try {
        indexSettings0 = new IndexSettings(indexMetaData0, settings0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.elasticsearch.common.settings.IndexScopedSettings
         //
         verifyException("org.elasticsearch.index.IndexSettings", e);
      }
  }

  @Test(timeout = 11000)
  public void test2()  throws Throwable  {
      IndexMetaData indexMetaData0 = IndexMetaData.PROTO;
      assertNotNull(indexMetaData0);
      assertEquals(IndexMetaData.State.OPEN, indexMetaData0.getState());
      assertEquals(1L, indexMetaData0.getVersion());
      assertEquals("_na_", indexMetaData0.getIndexUUID());
      assertEquals(1, indexMetaData0.getNumberOfShards());
      assertEquals(1, indexMetaData0.getRoutingNumShards());
      assertEquals(0, indexMetaData0.getNumberOfReplicas());
      assertEquals(1, indexMetaData0.getTotalNumberOfShards());
      assertEquals(1, indexMetaData0.getRoutingFactor());
      
      Settings settings0 = Settings.EMPTY;
      assertNotNull(settings0);
      
      IndexSettings indexSettings0 = null;
      try {
        indexSettings0 = new IndexSettings(indexMetaData0, settings0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.elasticsearch.common.settings.IndexScopedSettings
         //
         verifyException("org.elasticsearch.index.IndexSettings", e);
      }
  }

  @Test(timeout = 11000)
  public void test3()  throws Throwable  {
      IndexMetaData indexMetaData0 = IndexMetaData.PROTO;
      assertNotNull(indexMetaData0);
      assertEquals(0, indexMetaData0.getNumberOfReplicas());
      assertEquals("_na_", indexMetaData0.getIndexUUID());
      assertEquals(1, indexMetaData0.getNumberOfShards());
      assertEquals(1, indexMetaData0.getRoutingNumShards());
      assertEquals(IndexMetaData.State.OPEN, indexMetaData0.getState());
      assertEquals(1L, indexMetaData0.getVersion());
      assertEquals(1, indexMetaData0.getTotalNumberOfShards());
      assertEquals(1, indexMetaData0.getRoutingFactor());
      
      Settings settings0 = null;
      MaxNonCompetitiveBoostAttributeImpl maxNonCompetitiveBoostAttributeImpl0 = new MaxNonCompetitiveBoostAttributeImpl();
      assertNotNull(maxNonCompetitiveBoostAttributeImpl0);
      assertEquals(Float.NEGATIVE_INFINITY, maxNonCompetitiveBoostAttributeImpl0.getMaxNonCompetitiveBoost(), 0.01F);
      
      Predicate<String> predicate0 = Predicate.isEqual((Object) maxNonCompetitiveBoostAttributeImpl0);
      assertNotNull(predicate0);
      assertEquals(Float.NEGATIVE_INFINITY, maxNonCompetitiveBoostAttributeImpl0.getMaxNonCompetitiveBoost(), 0.01F);
      
      IndexScopedSettings indexScopedSettings0 = null;
      Predicate<String> predicate1 = predicate0.negate();
      assertFalse(predicate1.equals((Object)predicate0));
      assertNotNull(predicate1);
      assertEquals(Float.NEGATIVE_INFINITY, maxNonCompetitiveBoostAttributeImpl0.getMaxNonCompetitiveBoost(), 0.01F);
      
      Object object0 = null;
      Predicate<Object> predicate2 = Predicate.isEqual(object0);
      assertNotNull(predicate2);
      
      Predicate<String> predicate3 = predicate0.or(predicate2);
      assertFalse(predicate0.equals((Object)predicate1));
      assertFalse(predicate3.equals((Object)predicate0));
      assertFalse(predicate3.equals((Object)predicate1));
      assertNotNull(predicate3);
      assertEquals(Float.NEGATIVE_INFINITY, maxNonCompetitiveBoostAttributeImpl0.getMaxNonCompetitiveBoost(), 0.01F);
      
      IndexSettings indexSettings0 = null;
      try {
        indexSettings0 = new IndexSettings(indexMetaData0, settings0, predicate0, indexScopedSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.IndexSettings", e);
      }
  }
}
