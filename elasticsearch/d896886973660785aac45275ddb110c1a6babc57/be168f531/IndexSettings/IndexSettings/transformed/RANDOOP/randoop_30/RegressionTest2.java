import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue19 = indexSettings13.flushThresholdSize;
        java.lang.String str20 = indexSettings13.customDataPath();
        boolean boolean21 = indexSettings13.warmerEnabled;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet24 = indexMetaData22.activeAllocationIds(0);
        int int25 = indexMetaData22.getRoutingNumShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters26 = indexMetaData22.requireFilters();
        indexSettings13.indexMetaData = indexMetaData22;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap28 = indexMetaData22.getAliases();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap29 = indexMetaData22.getAliases();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(byteSizeValue19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters26);
        org.junit.Assert.assertNotNull(strImmutableOpenMap28);
        org.junit.Assert.assertNotNull(strImmutableOpenMap29);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.maxRescoreWindow;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings16 = indexSettings13.scopedSettings;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig17 = indexSettings13.getMergeSchedulerConfig();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = indexSettings13.getIndexMetaData();
        org.elasticsearch.common.unit.TimeValue timeValue19 = indexSettings13.getDEFAULT_GC_DELETES();
        org.elasticsearch.common.settings.Settings settings20 = indexSettings13.getSettings();
        java.lang.String str22 = settings20.get("-1.0");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertNotNull(indexScopedSettings16);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig17);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate22 = indexSettings13.indexNameMatcher;
        org.elasticsearch.Version version23 = indexSettings13.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting24 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue25 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_BLOCKS_READ_SETTING;
        java.lang.Boolean boolean27 = indexSettings13.getValue(booleanSetting26);
        indexSettings13.TTLPurgeDisabled = true;
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue30 = indexSettings13.flushThresholdSize;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(strSetting24);
        org.junit.Assert.assertNotNull(byteSizeValue25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertNotNull(byteSizeValue30);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting16 = indexSettings13.getINDEX_TTL_DISABLE_PURGE_SETTING();
        java.lang.String str17 = indexSettings13.getNodeName();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting18 = indexSettings13.getINDEX_CHECK_ON_STARTUP();
        boolean boolean19 = indexSettings13.isShadowReplicaIndex;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(booleanSetting16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strSetting18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.metadata");
        java.lang.String str2 = builder1.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.creationDate(1L);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder4.removeAllAliases();
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "index.blocks.metadata" + "'", str2, "index.blocks.metadata");
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig15 = indexSettings13.getMergeSchedulerConfig();
        int int16 = indexSettings13.getNumberOfReplicas();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting17 = indexSettings13.getQUERY_STRING_LENIENT_SETTING();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.index.translog.Translog.Durability> durabilitySetting18 = indexSettings13.getINDEX_TRANSLOG_DURABILITY_SETTING();
        boolean boolean19 = indexSettings13.queryStringLenient;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(booleanSetting17);
        org.junit.Assert.assertNotNull(durabilitySetting18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap3 = indexMetaData0.getMappings();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData5 = indexMetaData0.mappingOrDefault("index.blocks.write");
        java.util.Set<java.lang.String> strSet7 = null; // flaky: indexMetaData0.activeAllocationIds((int) 'a');
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData0.getInitialRecoveryFilters();
        long long9 = indexMetaData0.getCreationDate();
        org.elasticsearch.common.io.stream.StreamInput streamInput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff11 = indexMetaData0.readDiffFrom(streamInput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strImmutableOpenMap3);
        org.junit.Assert.assertNull(mappingMetaData5);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings0 = org.elasticsearch.common.settings.IndexScopedSettings.DEFAULT_SCOPED_SETTINGS;
        org.elasticsearch.common.settings.Setting.Property property1 = indexScopedSettings0.getScope();
        java.util.function.Predicate<java.lang.String> strPredicate2 = indexScopedSettings0.getINDEX_SETTINGS_KEY_PREDICATE();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting3 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_NUMBER_OF_SHARDS_SETTING;
        indexScopedSettings0.validateSettingKey((org.elasticsearch.common.settings.Setting) intSetting3);
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting5 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_READ_ONLY_SETTING;
        java.util.function.Consumer<java.lang.Boolean> booleanConsumer6 = null;
        indexScopedSettings0.addSettingsUpdateConsumer(booleanSetting5, booleanConsumer6);
        boolean boolean9 = indexScopedSettings0.hasDynamicSetting("-1.0");
        org.junit.Assert.assertNotNull(indexScopedSettings0);
        org.junit.Assert.assertTrue("'" + property1 + "' != '" + org.elasticsearch.common.settings.Setting.Property.IndexScope + "'", property1.equals(org.elasticsearch.common.settings.Setting.Property.IndexScope));
        org.junit.Assert.assertNotNull(strPredicate2);
        org.junit.Assert.assertNotNull(intSetting3);
        org.junit.Assert.assertNotNull(booleanSetting5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings0 = org.elasticsearch.common.settings.IndexScopedSettings.DEFAULT_SCOPED_SETTINGS;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet3 = indexMetaData1.activeAllocationIds(0);
        int int4 = indexMetaData1.getRoutingNumShards();
        int int5 = indexMetaData1.getNumberOfReplicas();
        org.elasticsearch.Version version6 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.common.settings.Settings settings7 = indexMetaData1.getSettings();
        // The following exception was thrown during execution in test generation
        try {
            indexScopedSettings0.validate(settings7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unknown setting [index.version.created]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexScopedSettings0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(settings7);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.settings.Settings settings21 = indexSettings13.getSettings();
        int int22 = indexSettings13.getMaxRefreshListeners();
        boolean boolean23 = indexSettings13.isIndexUsingShadowReplicas();
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig24 = indexSettings13.mergePolicyConfig;
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue25 = indexSettings13.getFlushThresholdSize();
        int int26 = indexSettings13.getNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(settings21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1000 + "'", int22 == 1000);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(mergePolicyConfig24);
        org.junit.Assert.assertNotNull(byteSizeValue25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        int int16 = indexSettings13.getNumberOfShards();
        java.util.function.Predicate<java.lang.String> strPredicate17 = indexSettings13.getindexNameMatcher();
        boolean boolean18 = indexSettings13.defaultAllowUnmappedFields;
        boolean boolean19 = indexSettings13.queryStringLenient;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strPredicate17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData8 = builder6.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder6.numberOfShards((int) (short) -1);
        java.lang.String[] strArray28 = new java.lang.String[] { "index.version.created", "index.blocks.metadata", "active_allocations", "index.version.minimum_compatible", "index.uuid", "index.shadow_replicas", "index.version.created", "_all", "_all", "index.", "index.creation_date_string", "index.shared_filesystem.recover_on_any_node", "_all", "index.number_of_shards", "index.blocks.read", "index.version.upgraded_string" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder6.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet29);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder3.putActiveAllocationIds(10, (java.util.Set<java.lang.String>) strSet29);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = builder3.creationDate((-1L));
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = builder3.creationDate(1L);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder36.creationDate((long) 'a');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder36.numberOfShards((int) '4');
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(mappingMetaData8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.maxRescoreWindow;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings16 = indexSettings13.scopedSettings;
        boolean boolean17 = indexSettings13.getwarmerEnabled();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertNotNull(indexScopedSettings16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = indexSettings13.getIndexMetaData();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap21 = indexMetaData20.getAliases();
        int int22 = indexMetaData20.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet25 = indexMetaData23.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff26 = indexMetaData20.diff(indexMetaData23);
        long long27 = indexMetaData23.getCreationDate();
        org.elasticsearch.Version version28 = indexMetaData23.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings29 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap30 = settings29.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate31 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings32 = settings29.filter(strPredicate31);
        org.elasticsearch.index.IndexSettings indexSettings33 = new org.elasticsearch.index.IndexSettings(indexMetaData23, settings29);
        java.lang.String str34 = indexSettings33.getUUID();
        boolean boolean35 = indexSettings33.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability36 = indexSettings33.getTranslogDurability();
        indexSettings13.setdurability(durability36);
        org.elasticsearch.common.settings.Settings settings38 = indexSettings13.getSettings();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strImmutableOpenMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(indexMetaDataDiff26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strPredicate31);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_na_" + "'", str34, "_na_");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + durability36 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability36.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(settings38);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig15 = indexSettings13.getMergeSchedulerConfig();
        org.elasticsearch.common.settings.Settings settings16 = indexSettings13.settings;
        int int17 = indexSettings13.getMaxRefreshListeners();
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings18 = indexSettings13.getScopedSettings();
        org.elasticsearch.common.settings.Setting.Property property19 = indexScopedSettings18.getScope();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig15);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1000 + "'", int17 == 1000);
        org.junit.Assert.assertNotNull(indexScopedSettings18);
        org.junit.Assert.assertTrue("'" + property19 + "' != '" + org.elasticsearch.common.settings.Setting.Property.IndexScope + "'", property19.equals(org.elasticsearch.common.settings.Setting.Property.IndexScope));
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        org.elasticsearch.Version version16 = indexSettings13.getIndexVersionCreated();
        boolean boolean17 = indexSettings13.defaultAllowUnmappedFields;
        java.lang.String str18 = indexSettings13.customDataPath();
        boolean boolean19 = indexSettings13.getwarmerEnabled();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        int int16 = indexSettings13.numberOfShards;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.setRoutingNumShards((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = builder5.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: must specify numberOfShards for index [index.]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.getMaxRescoreWindow();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting16 = indexSettings13.getINDEX_CHECK_ON_STARTUP();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder17 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData18.getAliases();
        int int20 = indexMetaData18.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet23 = indexMetaData21.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff24 = indexMetaData18.diff(indexMetaData21);
        long long25 = indexMetaData21.getCreationDate();
        org.elasticsearch.Version version26 = indexMetaData21.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings27 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap28 = settings27.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate29 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings30 = settings27.filter(strPredicate29);
        org.elasticsearch.index.IndexSettings indexSettings31 = new org.elasticsearch.index.IndexSettings(indexMetaData21, settings27);
        java.lang.String str33 = settings27.get("index.version.created");
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = settings27.getAsStructuredMap();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder35 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params36 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder37 = settings27.toXContent(xContentBuilder35, params36);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder38 = strSetting16.toXContent(xContentBuilder17, params36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertNotNull(strSetting16);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(indexMetaDataDiff24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strPredicate29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(params36);
        org.junit.Assert.assertNull(xContentBuilder37);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate22 = indexSettings13.indexNameMatcher;
        org.elasticsearch.Version version23 = indexSettings13.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting24 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap26 = indexMetaData25.getAliases();
        int int27 = indexMetaData25.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData28 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet30 = indexMetaData28.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff31 = indexMetaData25.diff(indexMetaData28);
        long long32 = indexMetaData28.getCreationDate();
        org.elasticsearch.Version version33 = indexMetaData28.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings34 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap35 = settings34.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate36 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings37 = settings34.filter(strPredicate36);
        org.elasticsearch.index.IndexSettings indexSettings38 = new org.elasticsearch.index.IndexSettings(indexMetaData28, settings34);
        org.elasticsearch.common.logging.ESLogger eSLogger39 = indexSettings38.getlogger();
        boolean boolean40 = indexSettings38.isWarmerEnabled();
        indexSettings38.maxRescoreWindow = 1;
        boolean boolean43 = indexSettings38.hasCustomDataPath();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData44 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap45 = indexMetaData44.getAliases();
        int int46 = indexMetaData44.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData47 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet49 = indexMetaData47.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff50 = indexMetaData44.diff(indexMetaData47);
        long long51 = indexMetaData47.getCreationDate();
        org.elasticsearch.Version version52 = indexMetaData47.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings53 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap54 = settings53.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate55 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings56 = settings53.filter(strPredicate55);
        org.elasticsearch.index.IndexSettings indexSettings57 = new org.elasticsearch.index.IndexSettings(indexMetaData47, settings53);
        org.elasticsearch.common.logging.ESLogger eSLogger58 = indexSettings57.getlogger();
        boolean boolean59 = indexSettings57.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue60 = indexSettings57.syncInterval;
        indexSettings38.setRefreshInterval(timeValue60);
        indexSettings13.setGCDeletes(timeValue60);
        indexSettings13.setMaxRescoreWindow((int) (short) -1);
        boolean boolean65 = indexSettings13.isShadowReplicaIndex();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData66 = indexSettings13.getIndexMetaData();
        org.elasticsearch.common.io.stream.StreamInput streamInput67 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData68 = indexMetaData66.readFrom(streamInput67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(strSetting24);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strImmutableOpenMap26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(indexMetaData28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(indexMetaDataDiff31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strPredicate36);
        org.junit.Assert.assertNotNull(settings37);
        org.junit.Assert.assertNotNull(eSLogger39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(indexMetaData44);
        org.junit.Assert.assertNotNull(strImmutableOpenMap45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(indexMetaData47);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(indexMetaDataDiff50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(settings53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strPredicate55);
        org.junit.Assert.assertNotNull(settings56);
        org.junit.Assert.assertNotNull(eSLogger58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(indexMetaData66);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        int int4 = indexMetaData0.getNumberOfReplicas();
        int int5 = indexMetaData0.getNumberOfReplicas();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        int int16 = indexSettings13.getNumberOfShards();
        java.util.function.Predicate<java.lang.String> strPredicate17 = indexSettings13.getindexNameMatcher();
        boolean boolean18 = indexSettings13.defaultAllowUnmappedFields;
        int int19 = indexSettings13.maxRefreshListeners;
        long long20 = indexSettings13.gcDeletesInMillis;
        boolean boolean21 = indexSettings13.hasCustomDataPath();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strPredicate17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 60000L + "'", long20 == 60000L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        int int21 = indexSettings13.getNumberOfShards();
        org.elasticsearch.common.settings.Settings settings22 = indexSettings13.settings;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig23 = indexSettings13.getMergeSchedulerConfig();
        boolean boolean24 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting25 = indexSettings13.getMAX_REFRESH_LISTENERS_PER_SHARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = indexSettings13.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting27 = indexSettings13.getQUERY_STRING_LENIENT_SETTING();
        indexSettings13.maxRescoreWindow = 0;
        org.elasticsearch.common.unit.TimeValue timeValue30 = indexSettings13.getDEFAULT_GC_DELETES();
        java.util.function.Predicate<java.lang.String> strPredicate31 = indexSettings13.indexNameMatcher;
        indexSettings13.maxRefreshListeners = 10000;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(settings22);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intSetting25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertNotNull(booleanSetting27);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(strPredicate31);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = indexSettings13.getIndexMetaData();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        boolean boolean31 = indexSettings30.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig32 = indexSettings30.getMergeSchedulerConfig();
        boolean boolean33 = indexSettings30.queryStringAnalyzeWildcard;
        boolean boolean34 = indexSettings30.isIndexUsingShadowReplicas();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue35 = indexSettings30.flushThresholdSize;
        indexSettings13.setTranslogFlushThresholdSize(byteSizeValue35);
        org.elasticsearch.common.settings.Settings settings37 = indexSettings13.getNodeSettings();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig38 = indexSettings13.getMergeSchedulerConfig();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(byteSizeValue35);
        org.junit.Assert.assertNotNull(settings37);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig38);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate22 = indexSettings13.indexNameMatcher;
        org.elasticsearch.Version version23 = indexSettings13.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting24 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue25 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_BLOCKS_READ_SETTING;
        java.lang.Boolean boolean27 = indexSettings13.getValue(booleanSetting26);
        indexSettings13.maxResultWindow = (short) 100;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(strSetting24);
        org.junit.Assert.assertNotNull(byteSizeValue25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.numberOfShards((int) (short) -1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder5.removeAllAliases();
        org.elasticsearch.common.settings.Settings.Builder builder7 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder10 = builder7.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder13 = builder10.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData15 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap16 = indexMetaData15.getAliases();
        int int17 = indexMetaData15.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet20 = indexMetaData18.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff21 = indexMetaData15.diff(indexMetaData18);
        long long22 = indexMetaData18.getCreationDate();
        org.elasticsearch.Version version23 = indexMetaData18.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder24 = builder10.put("index.creation_date_string", version23);
        org.elasticsearch.common.settings.Settings.Builder builder27 = builder10.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder29 = builder27.normalizePrefix("index.blocks.read");
        org.elasticsearch.common.settings.Settings.Builder builder31 = builder27.loadFromSource("index.number_of_shards");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder6.settings(builder27);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData34 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap35 = indexMetaData34.getAliases();
        int int36 = indexMetaData34.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet39 = indexMetaData37.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff40 = indexMetaData34.diff(indexMetaData37);
        long long41 = indexMetaData37.getCreationDate();
        org.elasticsearch.Version version42 = indexMetaData37.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings43 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap44 = settings43.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate45 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings46 = settings43.filter(strPredicate45);
        org.elasticsearch.index.IndexSettings indexSettings47 = new org.elasticsearch.index.IndexSettings(indexMetaData37, settings43);
        org.elasticsearch.common.logging.ESLogger eSLogger48 = indexSettings47.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue49 = indexSettings47.getsyncInterval();
        indexSettings47.setEnableWarmer(false);
        java.lang.String str52 = indexSettings47.defaultField;
        org.elasticsearch.common.settings.Settings settings53 = indexSettings47.settings;
        org.elasticsearch.common.unit.TimeValue timeValue54 = indexSettings47.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue55 = indexSettings47.getFlushThresholdSize();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData56 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        int int57 = indexMetaData56.getTotalNumberOfShards();
        boolean boolean58 = indexSettings47.updateIndexMetaData(indexMetaData56);
        indexSettings47.warmerEnabled = true;
        org.elasticsearch.Version version61 = indexSettings47.getIndexVersionCreated();
        org.elasticsearch.common.settings.Settings.Builder builder62 = builder27.put("index.blocks.read_only", version61);
        org.elasticsearch.common.settings.Settings.Builder builder65 = builder27.put("index.number_of_shards", (-1L));
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(indexMetaData15);
        org.junit.Assert.assertNotNull(strImmutableOpenMap16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(indexMetaDataDiff21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(indexMetaData34);
        org.junit.Assert.assertNotNull(strImmutableOpenMap35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(indexMetaDataDiff40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(version42);
        org.junit.Assert.assertNotNull(settings43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strPredicate45);
        org.junit.Assert.assertNotNull(settings46);
        org.junit.Assert.assertNotNull(eSLogger48);
        org.junit.Assert.assertNotNull(timeValue49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "_all" + "'", str52, "_all");
        org.junit.Assert.assertNotNull(settings53);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(byteSizeValue55);
        org.junit.Assert.assertNotNull(indexMetaData56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(version61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder65);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        boolean boolean15 = indexSettings13.isTTLPurgeDisabled();
        org.elasticsearch.common.settings.Settings settings16 = indexSettings13.nodeSettings;
        boolean boolean17 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting18 = indexSettings13.getALLOW_UNMAPPED();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting19 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanSetting18);
        org.junit.Assert.assertNotNull(strSetting19);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom1 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.registerPrototype("index.auto_expand_replicas", custom1);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = indexSettings13.getIndexMetaData();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting17 = indexSettings13.getINDEX_WARMER_ENABLED_SETTING();
        org.elasticsearch.index.translog.Translog.Durability durability18 = indexSettings13.durability;
        boolean boolean20 = indexSettings13.matchesIndexName("state-");
        java.lang.String str21 = indexSettings13.nodeName;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(booleanSetting17);
        org.junit.Assert.assertTrue("'" + durability18 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability18.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getisShadowReplicaIndex();
        org.elasticsearch.index.translog.Translog.Durability durability16 = indexSettings13.getdurability();
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.nodeSettings;
        boolean boolean18 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting19 = indexSettings13.getALLOW_UNMAPPED();
        org.elasticsearch.Version version20 = indexSettings13.getversion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + durability16 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability16.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(booleanSetting19);
        org.junit.Assert.assertNotNull(version20);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = indexSettings13.getIndexMetaData();
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getNodeSettings();
        boolean boolean18 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings17);
        org.elasticsearch.common.settings.Settings settings20 = settings17.getAsSettings("index.blocks.read_only");
        org.elasticsearch.common.settings.Settings settings22 = settings20.getAsSettings("index.shadow_replicas");
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap24 = settings20.getAsGroups(true);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.unit.ByteSizeValue byteSizeValue27 = settings20.getAsMemory("false", "index.shared_filesystem.recover_on_any_node");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: failed to parse setting [false] with value [index.shared_filesystem.recover_on_any_node] as a size in bytes: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(settings22);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy16 = indexSettings13.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        boolean boolean31 = indexSettings30.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig32 = indexSettings30.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability33 = indexSettings30.getdurability();
        indexSettings13.setTranslogDurability(durability33);
        int int35 = indexSettings13.getNumberOfShards();
        org.elasticsearch.Version version36 = indexSettings13.getversion();
        boolean boolean37 = indexSettings13.getqueryStringAllowLeadingWildcard();
        boolean boolean38 = indexSettings13.isDefaultAllowUnmappedFields();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting39 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(mergePolicy16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig32);
        org.junit.Assert.assertTrue("'" + durability33 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability33.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strSetting39);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = indexSettings13.getIndexMetaData();
        org.elasticsearch.common.logging.ESLogger eSLogger20 = indexSettings13.logger;
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting21 = indexSettings13.getMAX_RESCORE_WINDOW_SETTING();
        int int22 = indexSettings13.getMaxResultWindow();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap24 = indexMetaData23.getAliases();
        int int25 = indexMetaData23.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData26 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet28 = indexMetaData26.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff29 = indexMetaData23.diff(indexMetaData26);
        long long30 = indexMetaData26.getCreationDate();
        org.elasticsearch.Version version31 = indexMetaData26.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings32 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap33 = settings32.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate34 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings35 = settings32.filter(strPredicate34);
        org.elasticsearch.index.IndexSettings indexSettings36 = new org.elasticsearch.index.IndexSettings(indexMetaData26, settings32);
        org.elasticsearch.common.logging.ESLogger eSLogger37 = indexSettings36.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue38 = indexSettings36.getsyncInterval();
        indexSettings36.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting41 = indexSettings36.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData42 = indexSettings36.getIndexMetaData();
        indexSettings36.setwarmerEnabled(false);
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher45 = indexSettings36.parseFieldMatcher;
        java.lang.String str46 = indexSettings36.customDataPath();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig47 = indexSettings36.mergeSchedulerConfig;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.index.translog.Translog.Durability> durabilitySetting48 = indexSettings36.getINDEX_TRANSLOG_DURABILITY_SETTING();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting49 = indexSettings36.getINDEX_GC_DELETES_SETTING();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting50 = indexSettings36.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData51 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap52 = indexMetaData51.getAliases();
        int int53 = indexMetaData51.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData54 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet56 = indexMetaData54.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff57 = indexMetaData51.diff(indexMetaData54);
        long long58 = indexMetaData54.getCreationDate();
        org.elasticsearch.Version version59 = indexMetaData54.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings60 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap61 = settings60.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate62 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings63 = settings60.filter(strPredicate62);
        org.elasticsearch.index.IndexSettings indexSettings64 = new org.elasticsearch.index.IndexSettings(indexMetaData54, settings60);
        org.elasticsearch.common.logging.ESLogger eSLogger65 = indexSettings64.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue66 = indexSettings64.getsyncInterval();
        indexSettings64.setEnableWarmer(false);
        java.lang.String str69 = indexSettings64.defaultField;
        org.elasticsearch.common.settings.Settings settings70 = indexSettings64.settings;
        org.elasticsearch.common.unit.TimeValue timeValue71 = indexSettings64.getTranslogSyncInterval();
        int int72 = indexSettings64.getNumberOfShards();
        org.elasticsearch.common.settings.Settings settings73 = indexSettings64.settings;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig74 = indexSettings64.getMergeSchedulerConfig();
        boolean boolean75 = indexSettings64.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting76 = indexSettings64.getMAX_REFRESH_LISTENERS_PER_SHARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting77 = indexSettings64.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting78 = indexSettings64.getQUERY_STRING_LENIENT_SETTING();
        indexSettings64.maxRescoreWindow = 0;
        int int81 = indexSettings64.getNumberOfShards();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.index.translog.Translog.Durability> durabilitySetting82 = indexSettings64.getINDEX_TRANSLOG_DURABILITY_SETTING();
        org.elasticsearch.common.settings.Settings settings83 = indexSettings64.getSettings();
        org.elasticsearch.index.translog.Translog.Durability durability84 = indexSettings64.getTranslogDurability();
        indexSettings36.setTranslogDurability(durability84);
        indexSettings13.setdurability(durability84);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(eSLogger20);
        org.junit.Assert.assertNotNull(intSetting21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10000 + "'", int22 == 10000);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(strImmutableOpenMap24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(indexMetaData26);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(indexMetaDataDiff29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strPredicate34);
        org.junit.Assert.assertNotNull(settings35);
        org.junit.Assert.assertNotNull(eSLogger37);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(intSetting41);
        org.junit.Assert.assertNotNull(indexMetaData42);
        org.junit.Assert.assertNotNull(parseFieldMatcher45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig47);
        org.junit.Assert.assertNotNull(durabilitySetting48);
        org.junit.Assert.assertNotNull(timeValueSetting49);
        org.junit.Assert.assertNotNull(booleanSetting50);
        org.junit.Assert.assertNotNull(indexMetaData51);
        org.junit.Assert.assertNotNull(strImmutableOpenMap52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(indexMetaData54);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNotNull(indexMetaDataDiff57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(version59);
        org.junit.Assert.assertNotNull(settings60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strPredicate62);
        org.junit.Assert.assertNotNull(settings63);
        org.junit.Assert.assertNotNull(eSLogger65);
        org.junit.Assert.assertNotNull(timeValue66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "_all" + "'", str69, "_all");
        org.junit.Assert.assertNotNull(settings70);
        org.junit.Assert.assertNotNull(timeValue71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(settings73);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(intSetting76);
        org.junit.Assert.assertNotNull(booleanSetting77);
        org.junit.Assert.assertNotNull(booleanSetting78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNotNull(durabilitySetting82);
        org.junit.Assert.assertNotNull(settings83);
        org.junit.Assert.assertTrue("'" + durability84 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability84.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = indexSettings13.getIndexMetaData();
        boolean boolean18 = indexSettings13.hasCustomDataPath();
        boolean boolean19 = indexSettings13.isIndexUsingShadowReplicas();
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getRefreshInterval();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(timeValue20);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = indexSettings13.getIndexMetaData();
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getNodeSettings();
        int int18 = indexSettings13.getNumberOfReplicas();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting19 = indexSettings13.getINDEX_CHECK_ON_STARTUP();
        org.elasticsearch.common.settings.Settings settings20 = indexSettings13.getSettings();
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings21 = indexSettings13.getScopedSettings();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strSetting19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(indexScopedSettings21);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue19 = indexSettings13.flushThresholdSize;
        java.lang.String str20 = indexSettings13.customDataPath();
        boolean boolean21 = indexSettings13.warmerEnabled;
        org.elasticsearch.common.settings.Settings settings22 = indexSettings13.getSettings();
        indexSettings13.maxRescoreWindow = (short) 0;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(byteSizeValue19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(settings22);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        int int4 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData8 = builder6.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder6.removeAllAliases();
        boolean boolean10 = indexMetaData0.equals((java.lang.Object) builder6);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData12 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap13 = indexMetaData12.getAliases();
        int int14 = indexMetaData12.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData15 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet17 = indexMetaData15.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff18 = indexMetaData12.diff(indexMetaData15);
        long long19 = indexMetaData15.getCreationDate();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff20 = indexMetaData11.diff(indexMetaData15);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff21 = indexMetaData0.diff(indexMetaData11);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData0.writeTo(streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(mappingMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(indexMetaData12);
        org.junit.Assert.assertNotNull(strImmutableOpenMap13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(indexMetaData15);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(indexMetaDataDiff18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaDataDiff20);
        org.junit.Assert.assertNotNull(indexMetaDataDiff21);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.version.created", "index.version.created_string");
        java.lang.String[] strArray22 = new java.lang.String[] {};
        org.elasticsearch.common.settings.Settings.Builder builder23 = builder3.extendArray("archived.", strArray22);
        org.elasticsearch.common.settings.Settings.Builder builder26 = builder23.put("index.uuid", (double) (short) 10);
        org.elasticsearch.common.settings.Settings.Builder builder28 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder31 = builder28.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder34 = builder31.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.common.settings.Settings.Builder builder37 = builder31.put("index.blocks.read", (int) '#');
        org.elasticsearch.common.settings.Settings.Builder builder40 = builder37.put("index.version.created_string", "index.version.created_string");
        org.elasticsearch.common.settings.Settings.Builder builder42 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder45 = builder42.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder48 = builder45.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData50 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap51 = indexMetaData50.getAliases();
        int int52 = indexMetaData50.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData53 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet55 = indexMetaData53.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff56 = indexMetaData50.diff(indexMetaData53);
        long long57 = indexMetaData53.getCreationDate();
        org.elasticsearch.Version version58 = indexMetaData53.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder59 = builder45.put("index.creation_date_string", version58);
        org.elasticsearch.common.settings.Settings.Builder builder62 = builder45.put("index.version.created", "index.version.created_string");
        java.lang.String[] strArray64 = new java.lang.String[] {};
        org.elasticsearch.common.settings.Settings.Builder builder65 = builder45.extendArray("archived.", strArray64);
        org.elasticsearch.common.settings.Settings.Builder builder66 = builder37.putArray("index.version.minimum_compatible", strArray64);
        org.elasticsearch.common.settings.Settings.Builder builder67 = builder23.extendArray("index.version.upgraded", strArray64);
        org.elasticsearch.common.settings.Settings.Builder builder70 = builder67.put("index.creation_date", (long) 1000);
        org.elasticsearch.common.settings.Settings.Builder builder73 = builder67.put("index.priority", (long) (short) 10);
        org.elasticsearch.common.settings.Settings.Builder builder76 = builder73.put("index.version.created_string", (int) (short) 1);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(indexMetaData50);
        org.junit.Assert.assertNotNull(strImmutableOpenMap51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(indexMetaData53);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(indexMetaDataDiff56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(version58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue16 = indexSettings13.flushThresholdSize;
        boolean boolean17 = indexSettings13.TTLPurgeDisabled;
        boolean boolean18 = indexSettings13.isQueryStringAllowLeadingWildcard();
        java.lang.String str19 = indexSettings13.nodeName;
        indexSettings13.setMaxRefreshListeners(1);
        indexSettings13.warmerEnabled = false;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteSizeValue16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy16 = indexSettings13.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        boolean boolean31 = indexSettings30.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig32 = indexSettings30.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability33 = indexSettings30.getdurability();
        indexSettings13.setTranslogDurability(durability33);
        int int35 = indexSettings13.getNumberOfShards();
        org.elasticsearch.Version version36 = indexSettings13.getversion();
        indexSettings13.setwarmerEnabled(false);
        boolean boolean39 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(mergePolicy16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig32);
        org.junit.Assert.assertTrue("'" + durability33 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability33.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        indexSettings13.maxRescoreWindow = 1;
        boolean boolean18 = indexSettings13.hasCustomDataPath();
        java.lang.String str19 = indexSettings13.getNodeName();
        boolean boolean20 = indexSettings13.isOnSharedFilesystem();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.warmerEnabled;
        boolean boolean15 = indexSettings13.isQueryStringAnalyzeWildcard();
        boolean boolean16 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        org.elasticsearch.common.logging.ESLogger eSLogger31 = indexSettings30.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue32 = indexSettings30.getsyncInterval();
        indexSettings30.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting35 = indexSettings30.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue36 = indexSettings30.flushThresholdSize;
        indexSettings13.flushThresholdSize = byteSizeValue36;
        boolean boolean38 = indexSettings13.isTTLPurgeDisabled();
        java.lang.String str39 = indexSettings13.customDataPath();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(eSLogger31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(intSetting35);
        org.junit.Assert.assertNotNull(byteSizeValue36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        int int16 = indexSettings13.getMaxResultWindow();
        boolean boolean17 = indexSettings13.isShadowReplicaIndex;
        boolean boolean19 = indexSettings13.matchesIndexName("index.version.created");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap21 = indexMetaData20.getAliases();
        int int22 = indexMetaData20.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet25 = indexMetaData23.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff26 = indexMetaData20.diff(indexMetaData23);
        long long27 = indexMetaData23.getCreationDate();
        org.elasticsearch.Version version28 = indexMetaData23.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings29 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap30 = settings29.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate31 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings32 = settings29.filter(strPredicate31);
        org.elasticsearch.index.IndexSettings indexSettings33 = new org.elasticsearch.index.IndexSettings(indexMetaData23, settings29);
        java.lang.String str34 = indexSettings33.getUUID();
        int int35 = indexSettings33.maxRefreshListeners;
        java.lang.String str36 = indexSettings33.getDefaultField();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap38 = indexMetaData37.getAliases();
        int int39 = indexMetaData37.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData40 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet42 = indexMetaData40.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff43 = indexMetaData37.diff(indexMetaData40);
        long long44 = indexMetaData40.getCreationDate();
        org.elasticsearch.Version version45 = indexMetaData40.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings46 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap47 = settings46.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate48 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings49 = settings46.filter(strPredicate48);
        org.elasticsearch.index.IndexSettings indexSettings50 = new org.elasticsearch.index.IndexSettings(indexMetaData40, settings46);
        org.elasticsearch.common.logging.ESLogger eSLogger51 = indexSettings50.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue52 = indexSettings50.getsyncInterval();
        indexSettings50.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting55 = indexSettings50.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData56 = indexSettings50.getIndexMetaData();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData57 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap58 = indexMetaData57.getAliases();
        int int59 = indexMetaData57.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData60 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet62 = indexMetaData60.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff63 = indexMetaData57.diff(indexMetaData60);
        long long64 = indexMetaData60.getCreationDate();
        org.elasticsearch.Version version65 = indexMetaData60.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings66 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap67 = settings66.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate68 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings69 = settings66.filter(strPredicate68);
        org.elasticsearch.index.IndexSettings indexSettings70 = new org.elasticsearch.index.IndexSettings(indexMetaData60, settings66);
        java.lang.String str71 = indexSettings70.getUUID();
        boolean boolean72 = indexSettings70.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability73 = indexSettings70.getTranslogDurability();
        indexSettings50.setdurability(durability73);
        indexSettings33.setdurability(durability73);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData76 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap77 = indexMetaData76.getAliases();
        int int78 = indexMetaData76.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData79 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet81 = indexMetaData79.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff82 = indexMetaData76.diff(indexMetaData79);
        long long83 = indexMetaData79.getCreationDate();
        org.elasticsearch.Version version84 = indexMetaData79.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings85 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap86 = settings85.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate87 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings88 = settings85.filter(strPredicate87);
        org.elasticsearch.index.IndexSettings indexSettings89 = new org.elasticsearch.index.IndexSettings(indexMetaData79, settings85);
        org.elasticsearch.common.logging.ESLogger eSLogger90 = indexSettings89.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue91 = indexSettings89.getsyncInterval();
        indexSettings33.setRefreshInterval(timeValue91);
        indexSettings13.setGCDeletes(timeValue91);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData94 = indexSettings13.indexMetaData;
        org.apache.lucene.util.Version version95 = indexMetaData94.getMinimumCompatibleVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strImmutableOpenMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(indexMetaDataDiff26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strPredicate31);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_na_" + "'", str34, "_na_");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1000 + "'", int35 == 1000);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "_all" + "'", str36, "_all");
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(strImmutableOpenMap38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(indexMetaData40);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(indexMetaDataDiff43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(version45);
        org.junit.Assert.assertNotNull(settings46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strPredicate48);
        org.junit.Assert.assertNotNull(settings49);
        org.junit.Assert.assertNotNull(eSLogger51);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(intSetting55);
        org.junit.Assert.assertNotNull(indexMetaData56);
        org.junit.Assert.assertNotNull(indexMetaData57);
        org.junit.Assert.assertNotNull(strImmutableOpenMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(indexMetaData60);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(indexMetaDataDiff63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(version65);
        org.junit.Assert.assertNotNull(settings66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strPredicate68);
        org.junit.Assert.assertNotNull(settings69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "_na_" + "'", str71, "_na_");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + durability73 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability73.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(indexMetaData76);
        org.junit.Assert.assertNotNull(strImmutableOpenMap77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(indexMetaData79);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNotNull(indexMetaDataDiff82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertNotNull(version84);
        org.junit.Assert.assertNotNull(settings85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strPredicate87);
        org.junit.Assert.assertNotNull(settings88);
        org.junit.Assert.assertNotNull(eSLogger90);
        org.junit.Assert.assertNotNull(timeValue91);
        org.junit.Assert.assertNotNull(indexMetaData94);
        org.junit.Assert.assertNull(version95);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        java.lang.String str16 = indexSettings13.getDefaultField();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        org.elasticsearch.common.logging.ESLogger eSLogger31 = indexSettings30.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue32 = indexSettings30.getsyncInterval();
        indexSettings30.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting35 = indexSettings30.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = indexSettings30.getIndexMetaData();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap38 = indexMetaData37.getAliases();
        int int39 = indexMetaData37.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData40 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet42 = indexMetaData40.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff43 = indexMetaData37.diff(indexMetaData40);
        long long44 = indexMetaData40.getCreationDate();
        org.elasticsearch.Version version45 = indexMetaData40.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings46 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap47 = settings46.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate48 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings49 = settings46.filter(strPredicate48);
        org.elasticsearch.index.IndexSettings indexSettings50 = new org.elasticsearch.index.IndexSettings(indexMetaData40, settings46);
        java.lang.String str51 = indexSettings50.getUUID();
        boolean boolean52 = indexSettings50.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability53 = indexSettings50.getTranslogDurability();
        indexSettings30.setdurability(durability53);
        indexSettings13.setdurability(durability53);
        boolean boolean56 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher57 = indexSettings13.getParseFieldMatcher();
        boolean boolean58 = indexSettings13.getisShadowReplicaIndex();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting59 = indexSettings13.getINDEX_WARMER_ENABLED_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_all" + "'", str16, "_all");
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(eSLogger31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(intSetting35);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(strImmutableOpenMap38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(indexMetaData40);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(indexMetaDataDiff43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(version45);
        org.junit.Assert.assertNotNull(settings46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strPredicate48);
        org.junit.Assert.assertNotNull(settings49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "_na_" + "'", str51, "_na_");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + durability53 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability53.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(parseFieldMatcher57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(booleanSetting59);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        int int23 = indexMetaData22.getTotalNumberOfShards();
        boolean boolean24 = indexSettings13.updateIndexMetaData(indexMetaData22);
        org.elasticsearch.index.translog.Translog.Durability durability25 = indexSettings13.getTranslogDurability();
        boolean boolean26 = indexSettings13.isWarmerEnabled();
        int int27 = indexSettings13.getNumberOfReplicas();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + durability25 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability25.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder2 = builder0.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder5 = builder2.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder8 = builder5.put("", (double) 1000);
        org.elasticsearch.common.settings.Settings.Builder builder11 = builder8.put("", 60000L);
        org.elasticsearch.common.settings.Settings.Builder builder13 = builder11.putNull("index.uuid");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.version.created", "index.version.created_string");
        java.lang.String[] strArray22 = new java.lang.String[] {};
        org.elasticsearch.common.settings.Settings.Builder builder23 = builder3.extendArray("archived.", strArray22);
        org.elasticsearch.common.settings.Settings.Builder builder26 = builder23.put("index.uuid", (double) (short) 10);
        org.elasticsearch.common.settings.Settings.Builder builder28 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder31 = builder28.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder34 = builder31.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.common.settings.Settings.Builder builder37 = builder31.put("index.blocks.read", (int) '#');
        org.elasticsearch.common.settings.Settings.Builder builder40 = builder37.put("index.version.created_string", "index.version.created_string");
        org.elasticsearch.common.settings.Settings.Builder builder42 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder45 = builder42.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder48 = builder45.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData50 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap51 = indexMetaData50.getAliases();
        int int52 = indexMetaData50.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData53 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet55 = indexMetaData53.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff56 = indexMetaData50.diff(indexMetaData53);
        long long57 = indexMetaData53.getCreationDate();
        org.elasticsearch.Version version58 = indexMetaData53.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder59 = builder45.put("index.creation_date_string", version58);
        org.elasticsearch.common.settings.Settings.Builder builder62 = builder45.put("index.version.created", "index.version.created_string");
        java.lang.String[] strArray64 = new java.lang.String[] {};
        org.elasticsearch.common.settings.Settings.Builder builder65 = builder45.extendArray("archived.", strArray64);
        org.elasticsearch.common.settings.Settings.Builder builder66 = builder37.putArray("index.version.minimum_compatible", strArray64);
        org.elasticsearch.common.settings.Settings.Builder builder67 = builder23.extendArray("index.version.upgraded", strArray64);
        org.elasticsearch.common.settings.Settings.Builder builder69 = builder67.loadFromSource("");
        java.lang.String str71 = builder69.remove("index.priority");
        java.lang.String str73 = builder69.get("index.priority");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(indexMetaData50);
        org.junit.Assert.assertNotNull(strImmutableOpenMap51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(indexMetaData53);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(indexMetaDataDiff56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(version58);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.removeAlias("index.creation_date_string");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.numberOfShards(10000);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.metadata");
        java.lang.String str9 = builder8.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder8.creationDate(1L);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder8.numberOfShards(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData18 = builder16.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder16.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder19.numberOfShards((int) (byte) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder21.setRoutingNumShards((int) (short) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder23.version((long) (byte) 100);
        org.elasticsearch.common.settings.Settings settings27 = org.elasticsearch.common.settings.Settings.EMPTY;
        boolean boolean28 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings27);
        java.util.Set<java.lang.String> strSet29 = settings27.names();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder23.putActiveAllocationIds((int) (short) 0, strSet29);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder13.putActiveAllocationIds((int) '#', strSet29);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder5.putActiveAllocationIds((int) (byte) 0, strSet29);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "index.blocks.metadata" + "'", str9, "index.blocks.metadata");
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNull(mappingMetaData18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        java.lang.String str16 = indexSettings13.getDefaultField();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        org.elasticsearch.common.logging.ESLogger eSLogger31 = indexSettings30.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue32 = indexSettings30.getsyncInterval();
        indexSettings30.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting35 = indexSettings30.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = indexSettings30.getIndexMetaData();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap38 = indexMetaData37.getAliases();
        int int39 = indexMetaData37.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData40 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet42 = indexMetaData40.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff43 = indexMetaData37.diff(indexMetaData40);
        long long44 = indexMetaData40.getCreationDate();
        org.elasticsearch.Version version45 = indexMetaData40.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings46 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap47 = settings46.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate48 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings49 = settings46.filter(strPredicate48);
        org.elasticsearch.index.IndexSettings indexSettings50 = new org.elasticsearch.index.IndexSettings(indexMetaData40, settings46);
        java.lang.String str51 = indexSettings50.getUUID();
        boolean boolean52 = indexSettings50.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability53 = indexSettings50.getTranslogDurability();
        indexSettings30.setdurability(durability53);
        indexSettings13.setdurability(durability53);
        org.elasticsearch.common.unit.TimeValue timeValue56 = indexSettings13.getRefreshInterval();
        org.elasticsearch.Version version57 = indexSettings13.getversion();
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig58 = indexSettings13.mergePolicyConfig;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_all" + "'", str16, "_all");
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(eSLogger31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(intSetting35);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(strImmutableOpenMap38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(indexMetaData40);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(indexMetaDataDiff43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(version45);
        org.junit.Assert.assertNotNull(settings46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strPredicate48);
        org.junit.Assert.assertNotNull(settings49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "_na_" + "'", str51, "_na_");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + durability53 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability53.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(timeValue56);
        org.junit.Assert.assertNotNull(version57);
        org.junit.Assert.assertNotNull(mergePolicyConfig58);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        boolean boolean16 = indexSettings13.isShadowReplicaIndex();
        int int17 = indexSettings13.getMaxResultWindow();
        int int18 = indexSettings13.getMaxResultWindow();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000 + "'", int17 == 10000);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000 + "'", int18 == 10000);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData8 = indexMetaData3.mapping("index.shared_filesystem");
        org.elasticsearch.common.settings.Settings settings9 = indexMetaData3.getSettings();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertNull(mappingMetaData8);
        org.junit.Assert.assertNotNull(settings9);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean15 = indexSettings13.matchesIndexName("_all");
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.getRefreshInterval();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(timeValue16);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig15 = indexSettings13.getMergeSchedulerConfig();
        org.elasticsearch.common.settings.Settings settings16 = indexSettings13.settings;
        long long17 = indexSettings13.gcDeletesInMillis;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting18 = indexSettings13.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        boolean boolean19 = indexSettings13.warmerEnabled;
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig20 = indexSettings13.getmergePolicyConfig();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig15);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 60000L + "'", long17 == 60000L);
        org.junit.Assert.assertNotNull(booleanSetting18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(mergePolicyConfig20);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder22 = builder20.putNull("index.version.upgraded");
        java.nio.file.Path path23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder24 = builder20.loadFromPath(path23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getisShadowReplicaIndex();
        org.elasticsearch.index.translog.Translog.Durability durability16 = indexSettings13.getdurability();
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher17 = indexSettings13.getParseFieldMatcher();
        boolean boolean18 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.getNodeSettings();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting20 = indexSettings13.getQUERY_STRING_LENIENT_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        boolean boolean22 = indexSettings13.getwarmerEnabled();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + durability16 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability16.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(parseFieldMatcher17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(booleanSetting20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.common.settings.Settings.Builder builder9 = builder3.put("index.blocks.read", (int) '#');
        org.elasticsearch.common.settings.Settings settings10 = builder3.build();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.writeSettingsToStream(settings10, streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(settings10);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.Version version19 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData21.getAliases();
        int int23 = indexMetaData21.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData24 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet26 = indexMetaData24.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff27 = indexMetaData21.diff(indexMetaData24);
        long long28 = indexMetaData24.getCreationDate();
        org.elasticsearch.Version version29 = indexMetaData24.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings30 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap31 = settings30.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate32 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings33 = settings30.filter(strPredicate32);
        org.elasticsearch.index.IndexSettings indexSettings34 = new org.elasticsearch.index.IndexSettings(indexMetaData24, settings30);
        java.lang.String str35 = indexSettings34.getUUID();
        boolean boolean36 = indexSettings34.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy37 = indexSettings34.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap39 = indexMetaData38.getAliases();
        int int40 = indexMetaData38.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData41 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet43 = indexMetaData41.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff44 = indexMetaData38.diff(indexMetaData41);
        long long45 = indexMetaData41.getCreationDate();
        org.elasticsearch.Version version46 = indexMetaData41.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings47 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap48 = settings47.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate49 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings50 = settings47.filter(strPredicate49);
        org.elasticsearch.index.IndexSettings indexSettings51 = new org.elasticsearch.index.IndexSettings(indexMetaData41, settings47);
        boolean boolean52 = indexSettings51.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig53 = indexSettings51.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability54 = indexSettings51.getdurability();
        indexSettings34.setTranslogDurability(durability54);
        indexSettings13.durability = durability54;
        boolean boolean57 = indexSettings13.queryStringAnalyzeWildcard;
        boolean boolean58 = indexSettings13.isQueryStringAnalyzeWildcard();
        boolean boolean59 = indexSettings13.isTTLPurgeDisabled();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(indexMetaData24);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(indexMetaDataDiff27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strPredicate32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_na_" + "'", str35, "_na_");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(mergePolicy37);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(strImmutableOpenMap39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(indexMetaData41);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(indexMetaDataDiff44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(version46);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strPredicate49);
        org.junit.Assert.assertNotNull(settings50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig53);
        org.junit.Assert.assertTrue("'" + durability54 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability54.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        indexSettings13.warmerEnabled = true;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        boolean boolean18 = indexSettings13.isShadowReplicaIndex;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        boolean boolean20 = indexSettings13.isQueryStringAllowLeadingWildcard();
        boolean boolean21 = indexSettings13.isQueryStringAnalyzeWildcard();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str15 = settings9.get("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder17 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder17.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder23 = builder20.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap26 = indexMetaData25.getAliases();
        int int27 = indexMetaData25.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData28 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet30 = indexMetaData28.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff31 = indexMetaData25.diff(indexMetaData28);
        long long32 = indexMetaData28.getCreationDate();
        org.elasticsearch.Version version33 = indexMetaData28.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder34 = builder20.put("index.creation_date_string", version33);
        org.elasticsearch.Version version35 = settings9.getAsVersion("index.creation_date", version33);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap37 = indexMetaData36.getAliases();
        int int38 = indexMetaData36.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData39 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet41 = indexMetaData39.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff42 = indexMetaData36.diff(indexMetaData39);
        long long43 = indexMetaData39.getCreationDate();
        org.elasticsearch.Version version44 = indexMetaData39.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings45 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap46 = settings45.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate47 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings48 = settings45.filter(strPredicate47);
        org.elasticsearch.index.IndexSettings indexSettings49 = new org.elasticsearch.index.IndexSettings(indexMetaData39, settings45);
        java.lang.String str50 = indexSettings49.getUUID();
        boolean boolean51 = indexSettings49.getisShadowReplicaIndex();
        boolean boolean52 = indexSettings49.isShadowReplicaIndex();
        java.util.function.Predicate<java.lang.String> strPredicate53 = indexSettings49.getindexNameMatcher();
        org.elasticsearch.common.settings.Settings settings54 = settings9.filter(strPredicate53);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder55 = null;
        org.elasticsearch.common.settings.Settings settings56 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap57 = settings56.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate58 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings59 = settings56.filter(strPredicate58);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder60 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params61 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder62 = settings56.toXContent(xContentBuilder60, params61);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder63 = settings54.toXContent(xContentBuilder55, params61);
        java.lang.String[] strArray65 = settings54.getAsArray("");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strImmutableOpenMap26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(indexMetaData28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(indexMetaDataDiff31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(strImmutableOpenMap37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(indexMetaData39);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(indexMetaDataDiff42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(settings45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strPredicate47);
        org.junit.Assert.assertNotNull(settings48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "_na_" + "'", str50, "_na_");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strPredicate53);
        org.junit.Assert.assertNotNull(settings54);
        org.junit.Assert.assertNotNull(settings56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strPredicate58);
        org.junit.Assert.assertNotNull(settings59);
        org.junit.Assert.assertNotNull(params61);
        org.junit.Assert.assertNull(xContentBuilder62);
        org.junit.Assert.assertNull(xContentBuilder63);
        org.junit.Assert.assertNotNull(strArray65);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.version.created", "index.version.created_string");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap23 = indexMetaData22.getAliases();
        int int24 = indexMetaData22.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet27 = indexMetaData25.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff28 = indexMetaData22.diff(indexMetaData25);
        long long29 = indexMetaData25.getCreationDate();
        org.elasticsearch.Version version30 = indexMetaData25.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings31 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap32 = settings31.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate33 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings34 = settings31.filter(strPredicate33);
        org.elasticsearch.index.IndexSettings indexSettings35 = new org.elasticsearch.index.IndexSettings(indexMetaData25, settings31);
        org.elasticsearch.common.logging.ESLogger eSLogger36 = indexSettings35.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue37 = indexSettings35.getsyncInterval();
        indexSettings35.setEnableWarmer(false);
        java.lang.String str40 = indexSettings35.defaultField;
        org.elasticsearch.common.settings.Settings settings41 = indexSettings35.settings;
        org.elasticsearch.common.unit.TimeValue timeValue42 = indexSettings35.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue43 = indexSettings35.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate44 = indexSettings35.indexNameMatcher;
        org.elasticsearch.Version version45 = indexSettings35.version;
        org.elasticsearch.common.settings.Settings.Builder builder46 = builder20.put("index.blocks.read", version45);
        org.elasticsearch.common.settings.Settings.Builder builder47 = builder46.replacePropertyPlaceholders();
        org.elasticsearch.common.settings.Settings.Builder builder50 = builder46.put("index.number_of_replicas=0aindex.number_of_shards=1aindex.version.created=5000099a", true);
        java.nio.file.Path path51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder52 = builder46.loadFromPath(path51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(strImmutableOpenMap23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(indexMetaDataDiff28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(settings31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strPredicate33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(eSLogger36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "_all" + "'", str40, "_all");
        org.junit.Assert.assertNotNull(settings41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(byteSizeValue43);
        org.junit.Assert.assertNotNull(strPredicate44);
        org.junit.Assert.assertNotNull(version45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder50);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        boolean boolean17 = indexSettings13.updateIndexMetaData(indexMetaData16);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap18 = indexMetaData16.getMappings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData16);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder20 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData21.getAliases();
        int int23 = indexMetaData21.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData24 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet26 = indexMetaData24.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff27 = indexMetaData21.diff(indexMetaData24);
        long long28 = indexMetaData24.getCreationDate();
        org.elasticsearch.Version version29 = indexMetaData24.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings30 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap31 = settings30.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate32 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings33 = settings30.filter(strPredicate32);
        org.elasticsearch.index.IndexSettings indexSettings34 = new org.elasticsearch.index.IndexSettings(indexMetaData24, settings30);
        java.lang.String str36 = settings30.get("index.version.created");
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = settings30.getAsStructuredMap();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder38 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params39 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder40 = settings30.toXContent(xContentBuilder38, params39);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder41 = indexMetaData16.toXContent(xContentBuilder20, params39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(indexMetaData24);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(indexMetaDataDiff27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strPredicate32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(params39);
        org.junit.Assert.assertNull(xContentBuilder40);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData8 = builder6.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder6.numberOfShards((int) (short) -1);
        java.lang.String[] strArray28 = new java.lang.String[] { "index.version.created", "index.blocks.metadata", "active_allocations", "index.version.minimum_compatible", "index.uuid", "index.shadow_replicas", "index.version.created", "_all", "_all", "index.", "index.creation_date_string", "index.shared_filesystem.recover_on_any_node", "_all", "index.number_of_shards", "index.blocks.read", "index.version.upgraded_string" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder6.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet29);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder3.putActiveAllocationIds(10, (java.util.Set<java.lang.String>) strSet29);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = builder32.version((long) (short) 100);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(mappingMetaData8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        org.elasticsearch.common.unit.TimeValue timeValue18 = indexSettings13.refreshInterval;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings19 = indexSettings13.scopedSettings;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(indexScopedSettings19);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        int int4 = builder1.getRoutingNumShards();
        org.elasticsearch.common.settings.Settings.Builder builder5 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder8 = builder5.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder11 = builder8.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData13 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap14 = indexMetaData13.getAliases();
        int int15 = indexMetaData13.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet18 = indexMetaData16.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff19 = indexMetaData13.diff(indexMetaData16);
        long long20 = indexMetaData16.getCreationDate();
        org.elasticsearch.Version version21 = indexMetaData16.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder22 = builder8.put("index.creation_date_string", version21);
        org.elasticsearch.common.settings.Settings.Builder builder25 = builder8.put("index.version.created", "index.version.created_string");
        java.util.Map<java.lang.String, java.lang.String> strMap26 = builder25.internalMap();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = builder1.settings(builder25);
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder1.putAlias(aliasMetaData28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(indexMetaData13);
        org.junit.Assert.assertNotNull(strImmutableOpenMap14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(indexMetaDataDiff19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(builder27);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = indexSettings13.getIndexMetaData();
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getNodeSettings();
        int int18 = indexSettings13.getNumberOfReplicas();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting19 = indexSettings13.getINDEX_CHECK_ON_STARTUP();
        boolean boolean20 = indexSettings13.getwarmerEnabled();
        java.lang.String str21 = indexSettings13.defaultField;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strSetting19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_all" + "'", str21, "_all");
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        int int16 = indexSettings13.getMaxResultWindow();
        boolean boolean17 = indexSettings13.isShadowReplicaIndex;
        boolean boolean19 = indexSettings13.matchesIndexName("index.version.created");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap21 = indexMetaData20.getAliases();
        int int22 = indexMetaData20.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet25 = indexMetaData23.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff26 = indexMetaData20.diff(indexMetaData23);
        long long27 = indexMetaData23.getCreationDate();
        org.elasticsearch.Version version28 = indexMetaData23.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings29 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap30 = settings29.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate31 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings32 = settings29.filter(strPredicate31);
        org.elasticsearch.index.IndexSettings indexSettings33 = new org.elasticsearch.index.IndexSettings(indexMetaData23, settings29);
        java.lang.String str34 = indexSettings33.getUUID();
        int int35 = indexSettings33.maxRefreshListeners;
        java.lang.String str36 = indexSettings33.getDefaultField();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap38 = indexMetaData37.getAliases();
        int int39 = indexMetaData37.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData40 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet42 = indexMetaData40.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff43 = indexMetaData37.diff(indexMetaData40);
        long long44 = indexMetaData40.getCreationDate();
        org.elasticsearch.Version version45 = indexMetaData40.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings46 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap47 = settings46.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate48 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings49 = settings46.filter(strPredicate48);
        org.elasticsearch.index.IndexSettings indexSettings50 = new org.elasticsearch.index.IndexSettings(indexMetaData40, settings46);
        org.elasticsearch.common.logging.ESLogger eSLogger51 = indexSettings50.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue52 = indexSettings50.getsyncInterval();
        indexSettings50.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting55 = indexSettings50.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData56 = indexSettings50.getIndexMetaData();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData57 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap58 = indexMetaData57.getAliases();
        int int59 = indexMetaData57.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData60 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet62 = indexMetaData60.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff63 = indexMetaData57.diff(indexMetaData60);
        long long64 = indexMetaData60.getCreationDate();
        org.elasticsearch.Version version65 = indexMetaData60.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings66 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap67 = settings66.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate68 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings69 = settings66.filter(strPredicate68);
        org.elasticsearch.index.IndexSettings indexSettings70 = new org.elasticsearch.index.IndexSettings(indexMetaData60, settings66);
        java.lang.String str71 = indexSettings70.getUUID();
        boolean boolean72 = indexSettings70.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability73 = indexSettings70.getTranslogDurability();
        indexSettings50.setdurability(durability73);
        indexSettings33.setdurability(durability73);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData76 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap77 = indexMetaData76.getAliases();
        int int78 = indexMetaData76.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData79 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet81 = indexMetaData79.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff82 = indexMetaData76.diff(indexMetaData79);
        long long83 = indexMetaData79.getCreationDate();
        org.elasticsearch.Version version84 = indexMetaData79.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings85 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap86 = settings85.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate87 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings88 = settings85.filter(strPredicate87);
        org.elasticsearch.index.IndexSettings indexSettings89 = new org.elasticsearch.index.IndexSettings(indexMetaData79, settings85);
        org.elasticsearch.common.logging.ESLogger eSLogger90 = indexSettings89.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue91 = indexSettings89.getsyncInterval();
        indexSettings33.setRefreshInterval(timeValue91);
        indexSettings13.setGCDeletes(timeValue91);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData94 = indexSettings13.indexMetaData;
        org.elasticsearch.Version version95 = indexSettings13.version;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strImmutableOpenMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(indexMetaDataDiff26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strPredicate31);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_na_" + "'", str34, "_na_");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1000 + "'", int35 == 1000);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "_all" + "'", str36, "_all");
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(strImmutableOpenMap38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(indexMetaData40);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(indexMetaDataDiff43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(version45);
        org.junit.Assert.assertNotNull(settings46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strPredicate48);
        org.junit.Assert.assertNotNull(settings49);
        org.junit.Assert.assertNotNull(eSLogger51);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(intSetting55);
        org.junit.Assert.assertNotNull(indexMetaData56);
        org.junit.Assert.assertNotNull(indexMetaData57);
        org.junit.Assert.assertNotNull(strImmutableOpenMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(indexMetaData60);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(indexMetaDataDiff63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(version65);
        org.junit.Assert.assertNotNull(settings66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strPredicate68);
        org.junit.Assert.assertNotNull(settings69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "_na_" + "'", str71, "_na_");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + durability73 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability73.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(indexMetaData76);
        org.junit.Assert.assertNotNull(strImmutableOpenMap77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(indexMetaData79);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNotNull(indexMetaDataDiff82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertNotNull(version84);
        org.junit.Assert.assertNotNull(settings85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strPredicate87);
        org.junit.Assert.assertNotNull(settings88);
        org.junit.Assert.assertNotNull(eSLogger90);
        org.junit.Assert.assertNotNull(timeValue91);
        org.junit.Assert.assertNotNull(indexMetaData94);
        org.junit.Assert.assertNotNull(version95);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate22 = indexSettings13.indexNameMatcher;
        org.elasticsearch.Version version23 = indexSettings13.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting24 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap26 = indexMetaData25.getAliases();
        int int27 = indexMetaData25.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData28 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet30 = indexMetaData28.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff31 = indexMetaData25.diff(indexMetaData28);
        long long32 = indexMetaData28.getCreationDate();
        org.elasticsearch.Version version33 = indexMetaData28.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings34 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap35 = settings34.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate36 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings37 = settings34.filter(strPredicate36);
        org.elasticsearch.index.IndexSettings indexSettings38 = new org.elasticsearch.index.IndexSettings(indexMetaData28, settings34);
        org.elasticsearch.common.logging.ESLogger eSLogger39 = indexSettings38.getlogger();
        boolean boolean40 = indexSettings38.isWarmerEnabled();
        indexSettings38.maxRescoreWindow = 1;
        boolean boolean43 = indexSettings38.hasCustomDataPath();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData44 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap45 = indexMetaData44.getAliases();
        int int46 = indexMetaData44.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData47 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet49 = indexMetaData47.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff50 = indexMetaData44.diff(indexMetaData47);
        long long51 = indexMetaData47.getCreationDate();
        org.elasticsearch.Version version52 = indexMetaData47.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings53 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap54 = settings53.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate55 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings56 = settings53.filter(strPredicate55);
        org.elasticsearch.index.IndexSettings indexSettings57 = new org.elasticsearch.index.IndexSettings(indexMetaData47, settings53);
        org.elasticsearch.common.logging.ESLogger eSLogger58 = indexSettings57.getlogger();
        boolean boolean59 = indexSettings57.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue60 = indexSettings57.syncInterval;
        indexSettings38.setRefreshInterval(timeValue60);
        indexSettings13.setGCDeletes(timeValue60);
        indexSettings13.setMaxRescoreWindow((int) (short) -1);
        boolean boolean65 = indexSettings13.isShadowReplicaIndex();
        org.elasticsearch.common.logging.ESLogger eSLogger66 = indexSettings13.getlogger();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(strSetting24);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strImmutableOpenMap26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(indexMetaData28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(indexMetaDataDiff31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strPredicate36);
        org.junit.Assert.assertNotNull(settings37);
        org.junit.Assert.assertNotNull(eSLogger39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(indexMetaData44);
        org.junit.Assert.assertNotNull(strImmutableOpenMap45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(indexMetaData47);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(indexMetaDataDiff50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(settings53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strPredicate55);
        org.junit.Assert.assertNotNull(settings56);
        org.junit.Assert.assertNotNull(eSLogger58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(eSLogger66);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        int int16 = indexSettings13.getMaxResultWindow();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        org.elasticsearch.common.logging.ESLogger eSLogger31 = indexSettings30.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue32 = indexSettings30.getsyncInterval();
        indexSettings30.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting35 = indexSettings30.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue36 = indexSettings30.flushThresholdSize;
        indexSettings13.flushThresholdSize = byteSizeValue36;
        int int38 = indexSettings13.maxResultWindow;
        java.util.function.Predicate<java.lang.String> strPredicate39 = indexSettings13.indexNameMatcher;
        int int40 = indexSettings13.getNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(eSLogger31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(intSetting35);
        org.junit.Assert.assertNotNull(byteSizeValue36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10000 + "'", int38 == 10000);
        org.junit.Assert.assertNotNull(strPredicate39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.maxRescoreWindow;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap17 = indexMetaData16.getAliases();
        int int18 = indexMetaData16.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet21 = indexMetaData19.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff22 = indexMetaData16.diff(indexMetaData19);
        long long23 = indexMetaData19.getCreationDate();
        org.elasticsearch.Version version24 = indexMetaData19.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings25 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap26 = settings25.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate27 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings28 = settings25.filter(strPredicate27);
        org.elasticsearch.index.IndexSettings indexSettings29 = new org.elasticsearch.index.IndexSettings(indexMetaData19, settings25);
        org.elasticsearch.common.logging.ESLogger eSLogger30 = indexSettings29.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue31 = indexSettings29.getsyncInterval();
        indexSettings29.setEnableWarmer(false);
        java.lang.String str34 = indexSettings29.defaultField;
        org.elasticsearch.common.settings.Settings settings35 = indexSettings29.settings;
        org.elasticsearch.common.unit.TimeValue timeValue36 = indexSettings29.getTranslogSyncInterval();
        int int37 = indexSettings29.getNumberOfShards();
        org.elasticsearch.common.settings.Settings settings38 = indexSettings29.settings;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig39 = indexSettings29.getMergeSchedulerConfig();
        boolean boolean40 = indexSettings29.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting41 = indexSettings29.getMAX_REFRESH_LISTENERS_PER_SHARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting42 = indexSettings29.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting43 = indexSettings29.getQUERY_STRING_LENIENT_SETTING();
        indexSettings29.maxRescoreWindow = 0;
        org.elasticsearch.common.unit.TimeValue timeValue46 = indexSettings29.getDEFAULT_GC_DELETES();
        indexSettings13.refreshInterval = timeValue46;
        boolean boolean48 = indexSettings13.isShadowReplicaIndex;
        indexSettings13.warmerEnabled = false;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(strImmutableOpenMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(indexMetaDataDiff22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(settings25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strPredicate27);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertNotNull(eSLogger30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_all" + "'", str34, "_all");
        org.junit.Assert.assertNotNull(settings35);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(settings38);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(intSetting41);
        org.junit.Assert.assertNotNull(booleanSetting42);
        org.junit.Assert.assertNotNull(booleanSetting43);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.creationDate((long) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = builder3.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: must specify numberOfShards for index [index.]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting15 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        java.lang.String str16 = indexSettings13.defaultField;
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig17 = indexSettings13.getmergePolicyConfig();
        java.lang.String str18 = indexSettings13.nodeName;
        org.elasticsearch.Version version19 = indexSettings13.getIndexVersionCreated();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(timeValueSetting15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_all" + "'", str16, "_all");
        org.junit.Assert.assertNotNull(mergePolicyConfig17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(version19);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom1 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.registerPrototype("index.version.upgraded_string", custom1);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = indexSettings13.getIndexMetaData();
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getNodeSettings();
        boolean boolean18 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings17);
        org.elasticsearch.common.settings.Settings settings20 = settings17.getAsSettings("index.blocks.read_only");
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = settings20.getAsStructuredMap();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        org.elasticsearch.common.unit.TimeValue timeValue18 = indexSettings13.refreshInterval;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.getSettings();
        boolean boolean20 = indexSettings13.getisShadowReplicaIndex();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.ByteSizeValue> byteSizeValueSetting21 = indexSettings13.getINDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteSizeValueSetting21);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder9.removeAllAliases();
        // The following exception was thrown during execution in test generation
        try {
            long long12 = builder10.primaryTerm(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        java.lang.String str16 = indexSettings13.getDefaultField();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        org.elasticsearch.common.logging.ESLogger eSLogger31 = indexSettings30.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue32 = indexSettings30.getsyncInterval();
        indexSettings30.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting35 = indexSettings30.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = indexSettings30.getIndexMetaData();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap38 = indexMetaData37.getAliases();
        int int39 = indexMetaData37.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData40 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet42 = indexMetaData40.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff43 = indexMetaData37.diff(indexMetaData40);
        long long44 = indexMetaData40.getCreationDate();
        org.elasticsearch.Version version45 = indexMetaData40.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings46 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap47 = settings46.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate48 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings49 = settings46.filter(strPredicate48);
        org.elasticsearch.index.IndexSettings indexSettings50 = new org.elasticsearch.index.IndexSettings(indexMetaData40, settings46);
        java.lang.String str51 = indexSettings50.getUUID();
        boolean boolean52 = indexSettings50.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability53 = indexSettings50.getTranslogDurability();
        indexSettings30.setdurability(durability53);
        indexSettings13.setdurability(durability53);
        boolean boolean56 = indexSettings13.getqueryStringLenient();
        int int57 = indexSettings13.getMaxRescoreWindow();
        boolean boolean58 = indexSettings13.TTLPurgeDisabled;
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher59 = indexSettings13.getParseFieldMatcher();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData60 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap61 = indexMetaData60.getAliases();
        int int62 = indexMetaData60.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData63 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet65 = indexMetaData63.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff66 = indexMetaData60.diff(indexMetaData63);
        long long67 = indexMetaData63.getCreationDate();
        org.elasticsearch.Version version68 = indexMetaData63.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings69 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap70 = settings69.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate71 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings72 = settings69.filter(strPredicate71);
        org.elasticsearch.index.IndexSettings indexSettings73 = new org.elasticsearch.index.IndexSettings(indexMetaData63, settings69);
        org.elasticsearch.common.logging.ESLogger eSLogger74 = indexSettings73.getlogger();
        boolean boolean75 = indexSettings73.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue76 = indexSettings73.syncInterval;
        org.elasticsearch.common.settings.Settings settings77 = indexSettings73.getSettings();
        java.lang.String str78 = indexSettings73.defaultField;
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue79 = indexSettings73.flushThresholdSize;
        indexSettings13.setTranslogFlushThresholdSize(byteSizeValue79);
        boolean boolean82 = indexSettings13.matchesIndexName("false");
        int int83 = indexSettings13.getMaxRefreshListeners();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_all" + "'", str16, "_all");
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(eSLogger31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(intSetting35);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(strImmutableOpenMap38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(indexMetaData40);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(indexMetaDataDiff43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(version45);
        org.junit.Assert.assertNotNull(settings46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strPredicate48);
        org.junit.Assert.assertNotNull(settings49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "_na_" + "'", str51, "_na_");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + durability53 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability53.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10000 + "'", int57 == 10000);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(parseFieldMatcher59);
        org.junit.Assert.assertNotNull(indexMetaData60);
        org.junit.Assert.assertNotNull(strImmutableOpenMap61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(indexMetaData63);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNotNull(indexMetaDataDiff66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(version68);
        org.junit.Assert.assertNotNull(settings69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strPredicate71);
        org.junit.Assert.assertNotNull(settings72);
        org.junit.Assert.assertNotNull(eSLogger74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(timeValue76);
        org.junit.Assert.assertNotNull(settings77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "_all" + "'", str78, "_all");
        org.junit.Assert.assertNotNull(byteSizeValue79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1000 + "'", int83 == 1000);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.numberOfShards((int) (byte) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap8 = indexMetaData7.getAliases();
        int int9 = indexMetaData7.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet12 = indexMetaData10.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData7.diff(indexMetaData10);
        long long14 = indexMetaData10.getCreationDate();
        org.elasticsearch.Version version15 = indexMetaData10.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings16 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap17 = settings16.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate18 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings19 = settings16.filter(strPredicate18);
        org.elasticsearch.index.IndexSettings indexSettings20 = new org.elasticsearch.index.IndexSettings(indexMetaData10, settings16);
        org.elasticsearch.common.logging.ESLogger eSLogger21 = indexSettings20.getlogger();
        boolean boolean22 = indexSettings20.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue23 = indexSettings20.syncInterval;
        org.elasticsearch.common.settings.Settings settings24 = indexSettings20.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap26 = indexMetaData25.getAliases();
        int int27 = indexMetaData25.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData28 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet30 = indexMetaData28.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff31 = indexMetaData25.diff(indexMetaData28);
        long long32 = indexMetaData28.getCreationDate();
        org.apache.lucene.util.Version version33 = indexMetaData28.getMinimumCompatibleVersion();
        indexSettings20.indexMetaData = indexMetaData28;
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData36 = indexMetaData28.mapping("index.uuid");
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap37 = indexMetaData28.getActiveAllocationIds();
        long long38 = indexMetaData28.getVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state39 = indexMetaData28.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder6.state(state39);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = builder40.removeAlias("index.version.upgraded");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder44 = builder42.index("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = builder44.putMapping("index.number_of_replicas=0#index.number_of_shards=1#index.version.created=5000099#", "index.number_of_replicas=0#index.number_of_shards=1#index.version.created=5000099#");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strPredicate18);
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(eSLogger21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(settings24);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strImmutableOpenMap26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(indexMetaData28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(indexMetaDataDiff31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNull(version33);
        org.junit.Assert.assertNull(mappingMetaData36);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertTrue("'" + state39 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state39.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue19 = indexSettings13.flushThresholdSize;
        boolean boolean20 = indexSettings13.queryStringAnalyzeWildcard;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(byteSizeValue19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.settings.Settings settings21 = indexSettings13.getSettings();
        org.elasticsearch.common.unit.TimeValue timeValue22 = indexSettings13.refreshInterval;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting23 = indexSettings13.getQUERY_STRING_ANALYZE_WILDCARD();
        boolean boolean24 = indexSettings13.isTTLPurgeDisabled();
        indexSettings13.setTTLPurgeDisabled(false);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(settings21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(booleanSetting23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting16 = indexSettings13.getINDEX_REFRESH_INTERVAL_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        org.elasticsearch.common.logging.ESLogger eSLogger31 = indexSettings30.getlogger();
        boolean boolean32 = indexSettings30.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue33 = indexSettings30.syncInterval;
        org.elasticsearch.common.settings.Settings settings34 = indexSettings30.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData35 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap36 = indexMetaData35.getAliases();
        int int37 = indexMetaData35.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet40 = indexMetaData38.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff41 = indexMetaData35.diff(indexMetaData38);
        long long42 = indexMetaData38.getCreationDate();
        org.apache.lucene.util.Version version43 = indexMetaData38.getMinimumCompatibleVersion();
        indexSettings30.indexMetaData = indexMetaData38;
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData46 = indexMetaData38.mapping("index.uuid");
        boolean boolean47 = indexSettings13.updateIndexMetaData(indexMetaData38);
        org.elasticsearch.common.logging.ESLogger eSLogger48 = indexSettings13.logger;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(timeValueSetting16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(eSLogger31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(indexMetaData35);
        org.junit.Assert.assertNotNull(strImmutableOpenMap36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(indexMetaDataDiff41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNull(version43);
        org.junit.Assert.assertNull(mappingMetaData46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(eSLogger48);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder9.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state11 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder10.state(state11);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom14 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder10.putCustom("index.uuid", custom14);
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder10.putAlias(aliasMetaData16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings0 = org.elasticsearch.common.settings.IndexScopedSettings.DEFAULT_SCOPED_SETTINGS;
        org.elasticsearch.common.settings.Setting.Property property1 = indexScopedSettings0.getScope();
        java.util.function.Predicate<java.lang.String> strPredicate2 = indexScopedSettings0.getINDEX_SETTINGS_KEY_PREDICATE();
        org.elasticsearch.common.settings.Settings settings3 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, java.lang.String> strMap4 = settings3.getAsMap();
        java.util.Set<java.lang.String> strSet5 = settings3.names();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap7 = indexMetaData6.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state8 = indexMetaData6.getState();
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings9 = indexScopedSettings0.copy(settings3, indexMetaData6);
        boolean boolean10 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings3);
        boolean boolean11 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings3);
        org.junit.Assert.assertNotNull(indexScopedSettings0);
        org.junit.Assert.assertTrue("'" + property1 + "' != '" + org.elasticsearch.common.settings.Setting.Property.IndexScope + "'", property1.equals(org.elasticsearch.common.settings.Setting.Property.IndexScope));
        org.junit.Assert.assertNotNull(strPredicate2);
        org.junit.Assert.assertNotNull(settings3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(strImmutableOpenMap7);
        org.junit.Assert.assertTrue("'" + state8 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state8.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(indexScopedSettings9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings9);
        boolean boolean15 = settings9.isEmpty();
        org.elasticsearch.common.settings.Settings settings16 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings9);
        org.elasticsearch.common.settings.Settings settings18 = settings16.getByPrefix("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = settings16.getAsMemory("index.priority", "index.priority");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: failed to parse setting [index.priority] with value [index.priority] as a size in bytes: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertNotNull(settings18);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings0 = org.elasticsearch.common.settings.IndexScopedSettings.DEFAULT_SCOPED_SETTINGS;
        org.elasticsearch.common.settings.Setting.Property property1 = indexScopedSettings0.getScope();
        java.util.function.Predicate<java.lang.String> strPredicate2 = indexScopedSettings0.getINDEX_SETTINGS_KEY_PREDICATE();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting3 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_NUMBER_OF_SHARDS_SETTING;
        indexScopedSettings0.validateSettingKey((org.elasticsearch.common.settings.Setting) intSetting3);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData5 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap6 = indexMetaData5.getAliases();
        int int7 = indexMetaData5.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet10 = indexMetaData8.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff11 = indexMetaData5.diff(indexMetaData8);
        long long12 = indexMetaData8.getCreationDate();
        org.elasticsearch.Version version13 = indexMetaData8.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings14 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap15 = settings14.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate16 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings17 = settings14.filter(strPredicate16);
        org.elasticsearch.index.IndexSettings indexSettings18 = new org.elasticsearch.index.IndexSettings(indexMetaData8, settings14);
        boolean boolean19 = indexSettings18.warmerEnabled;
        indexSettings18.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue22 = indexSettings18.getTranslogSyncInterval();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap24 = indexMetaData23.getAliases();
        int int25 = indexMetaData23.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData26 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet28 = indexMetaData26.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff29 = indexMetaData23.diff(indexMetaData26);
        long long30 = indexMetaData26.getCreationDate();
        org.elasticsearch.Version version31 = indexMetaData26.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings32 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap33 = settings32.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate34 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings35 = settings32.filter(strPredicate34);
        org.elasticsearch.index.IndexSettings indexSettings36 = new org.elasticsearch.index.IndexSettings(indexMetaData26, settings32);
        java.lang.String str37 = indexSettings36.getUUID();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting38 = indexSettings36.getINDEX_WARMER_ENABLED_SETTING();
        java.lang.Boolean boolean39 = indexSettings18.getValue(booleanSetting38);
        java.lang.Boolean boolean40 = indexScopedSettings0.get(booleanSetting38);
        org.elasticsearch.common.settings.Setting<?> wildcardSetting42 = indexScopedSettings0.get("index.version.upgraded_string");
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings43 = indexScopedSettings0.getDEFAULT_SCOPED_SETTINGS();
        org.junit.Assert.assertNotNull(indexScopedSettings0);
        org.junit.Assert.assertTrue("'" + property1 + "' != '" + org.elasticsearch.common.settings.Setting.Property.IndexScope + "'", property1.equals(org.elasticsearch.common.settings.Setting.Property.IndexScope));
        org.junit.Assert.assertNotNull(strPredicate2);
        org.junit.Assert.assertNotNull(intSetting3);
        org.junit.Assert.assertNotNull(indexMetaData5);
        org.junit.Assert.assertNotNull(strImmutableOpenMap6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(indexMetaDataDiff11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(version13);
        org.junit.Assert.assertNotNull(settings14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strPredicate16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(strImmutableOpenMap24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(indexMetaData26);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(indexMetaDataDiff29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strPredicate34);
        org.junit.Assert.assertNotNull(settings35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "_na_" + "'", str37, "_na_");
        org.junit.Assert.assertNotNull(booleanSetting38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + true + "'", boolean39, true);
        org.junit.Assert.assertEquals("'" + boolean40 + "' != '" + true + "'", boolean40, true);
        org.junit.Assert.assertNull(wildcardSetting42);
        org.junit.Assert.assertNotNull(indexScopedSettings43);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.maxRescoreWindow;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings16 = indexSettings13.scopedSettings;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig17 = indexSettings13.getMergeSchedulerConfig();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = indexSettings13.getIndexMetaData();
        java.lang.String str19 = indexSettings13.nodeName;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertNotNull(indexScopedSettings16);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig17);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.Version version19 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData21.getAliases();
        int int23 = indexMetaData21.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData24 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet26 = indexMetaData24.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff27 = indexMetaData21.diff(indexMetaData24);
        long long28 = indexMetaData24.getCreationDate();
        org.elasticsearch.Version version29 = indexMetaData24.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings30 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap31 = settings30.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate32 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings33 = settings30.filter(strPredicate32);
        org.elasticsearch.index.IndexSettings indexSettings34 = new org.elasticsearch.index.IndexSettings(indexMetaData24, settings30);
        java.lang.String str35 = indexSettings34.getUUID();
        boolean boolean36 = indexSettings34.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy37 = indexSettings34.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap39 = indexMetaData38.getAliases();
        int int40 = indexMetaData38.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData41 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet43 = indexMetaData41.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff44 = indexMetaData38.diff(indexMetaData41);
        long long45 = indexMetaData41.getCreationDate();
        org.elasticsearch.Version version46 = indexMetaData41.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings47 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap48 = settings47.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate49 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings50 = settings47.filter(strPredicate49);
        org.elasticsearch.index.IndexSettings indexSettings51 = new org.elasticsearch.index.IndexSettings(indexMetaData41, settings47);
        boolean boolean52 = indexSettings51.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig53 = indexSettings51.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability54 = indexSettings51.getdurability();
        indexSettings34.setTranslogDurability(durability54);
        indexSettings13.durability = durability54;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData57 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap58 = indexMetaData57.getAliases();
        int int59 = indexMetaData57.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData60 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet62 = indexMetaData60.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff63 = indexMetaData57.diff(indexMetaData60);
        long long64 = indexMetaData60.getCreationDate();
        org.elasticsearch.Version version65 = indexMetaData60.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings66 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap67 = settings66.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate68 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings69 = settings66.filter(strPredicate68);
        org.elasticsearch.index.IndexSettings indexSettings70 = new org.elasticsearch.index.IndexSettings(indexMetaData60, settings66);
        boolean boolean71 = indexSettings70.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig72 = indexSettings70.getMergeSchedulerConfig();
        boolean boolean73 = indexSettings70.queryStringAnalyzeWildcard;
        boolean boolean74 = indexSettings70.isDefaultAllowUnmappedFields();
        org.elasticsearch.common.unit.TimeValue timeValue75 = indexSettings70.refreshInterval;
        indexSettings13.setGCDeletes(timeValue75);
        org.elasticsearch.common.unit.TimeValue timeValue77 = indexSettings13.getRefreshInterval();
        org.elasticsearch.common.unit.TimeValue timeValue78 = indexSettings13.getTranslogSyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(indexMetaData24);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(indexMetaDataDiff27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strPredicate32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_na_" + "'", str35, "_na_");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(mergePolicy37);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(strImmutableOpenMap39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(indexMetaData41);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(indexMetaDataDiff44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(version46);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strPredicate49);
        org.junit.Assert.assertNotNull(settings50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig53);
        org.junit.Assert.assertTrue("'" + durability54 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability54.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(indexMetaData57);
        org.junit.Assert.assertNotNull(strImmutableOpenMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(indexMetaData60);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(indexMetaDataDiff63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(version65);
        org.junit.Assert.assertNotNull(settings66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strPredicate68);
        org.junit.Assert.assertNotNull(settings69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(timeValue75);
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertNotNull(timeValue78);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings0 = org.elasticsearch.common.settings.IndexScopedSettings.DEFAULT_SCOPED_SETTINGS;
        org.elasticsearch.common.settings.Settings settings1 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap2 = settings1.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate3 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings4 = settings1.filter(strPredicate3);
        indexScopedSettings0.validate(settings4);
        boolean boolean7 = indexScopedSettings0.isPrivateSetting("index.blocks.read");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings17 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap18 = settings17.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate19 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings20 = settings17.filter(strPredicate19);
        org.elasticsearch.index.IndexSettings indexSettings21 = new org.elasticsearch.index.IndexSettings(indexMetaData11, settings17);
        org.elasticsearch.common.logging.ESLogger eSLogger22 = indexSettings21.getlogger();
        boolean boolean23 = indexSettings21.isWarmerEnabled();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting24 = indexSettings21.getINDEX_TTL_DISABLE_PURGE_SETTING();
        indexScopedSettings0.validateSettingKey((org.elasticsearch.common.settings.Setting) booleanSetting24);
        org.elasticsearch.common.settings.Setting.Property property26 = indexScopedSettings0.getScope();
        org.elasticsearch.common.settings.Setting<?> wildcardSetting28 = indexScopedSettings0.get("index.blocks.read_only");
        org.junit.Assert.assertNotNull(indexScopedSettings0);
        org.junit.Assert.assertNotNull(settings1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strPredicate3);
        org.junit.Assert.assertNotNull(settings4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strPredicate19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(eSLogger22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(booleanSetting24);
        org.junit.Assert.assertTrue("'" + property26 + "' != '" + org.elasticsearch.common.settings.Setting.Property.IndexScope + "'", property26.equals(org.elasticsearch.common.settings.Setting.Property.IndexScope));
        org.junit.Assert.assertNotNull(wildcardSetting28);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        int int16 = indexSettings13.getNumberOfShards();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting17 = indexSettings13.getQUERY_STRING_LENIENT_SETTING();
        org.elasticsearch.common.unit.TimeValue timeValue18 = indexSettings13.getTranslogSyncInterval();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(booleanSetting17);
        org.junit.Assert.assertNotNull(timeValue18);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        boolean boolean15 = indexSettings13.isTTLPurgeDisabled();
        org.elasticsearch.common.settings.Settings settings16 = indexSettings13.nodeSettings;
        java.lang.Boolean boolean19 = settings16.getAsBoolean("index.blocks.read_only", (java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.common.settings.Settings.Builder builder9 = builder3.put("index.blocks.read", (int) '#');
        org.elasticsearch.common.settings.Settings.Builder builder12 = builder9.put("index.version.created_string", "index.version.created_string");
        org.elasticsearch.common.settings.Settings.Builder builder14 = builder12.putNull("index.data_path");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue19 = indexSettings13.flushThresholdSize;
        java.lang.String str20 = indexSettings13.customDataPath();
        boolean boolean21 = indexSettings13.warmerEnabled;
        boolean boolean22 = indexSettings13.isQueryStringAnalyzeWildcard();
        int int23 = indexSettings13.getMaxRescoreWindow();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(byteSizeValue19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10000 + "'", int23 == 10000);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        int int4 = builder1.getRoutingNumShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder1.removeAlias("index.blocks.metadata");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder6.removeAlias("hi!");
        int int9 = builder8.numberOfShards();
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.excludeFilters();
        int int6 = indexMetaData0.getNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.warmerEnabled;
        boolean boolean15 = indexSettings13.isQueryStringAnalyzeWildcard();
        boolean boolean16 = indexSettings13.getqueryStringAllowLeadingWildcard();
        boolean boolean17 = indexSettings13.getisShadowReplicaIndex();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.index.translog.Translog.Durability> durabilitySetting18 = indexSettings13.getINDEX_TRANSLOG_DURABILITY_SETTING();
        long long19 = indexSettings13.getGcDeletesInMillis();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(durabilitySetting18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 60000L + "'", long19 == 60000L);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue16 = null;
        indexSettings13.flushThresholdSize = byteSizeValue16;
        boolean boolean18 = indexSettings13.getisShadowReplicaIndex();
        indexSettings13.maxRescoreWindow = 1;
        org.elasticsearch.Version version21 = indexSettings13.getIndexVersionCreated();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(version21);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate22 = indexSettings13.indexNameMatcher;
        org.elasticsearch.Version version23 = indexSettings13.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting24 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue25 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_BLOCKS_READ_SETTING;
        java.lang.Boolean boolean27 = indexSettings13.getValue(booleanSetting26);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData28 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap29 = indexMetaData28.getAliases();
        int int30 = indexMetaData28.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData31 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet33 = indexMetaData31.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff34 = indexMetaData28.diff(indexMetaData31);
        long long35 = indexMetaData31.getCreationDate();
        org.elasticsearch.Version version36 = indexMetaData31.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings37 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap38 = settings37.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate39 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings40 = settings37.filter(strPredicate39);
        org.elasticsearch.index.IndexSettings indexSettings41 = new org.elasticsearch.index.IndexSettings(indexMetaData31, settings37);
        boolean boolean42 = indexSettings41.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig43 = indexSettings41.getMergeSchedulerConfig();
        boolean boolean44 = indexSettings41.queryStringAnalyzeWildcard;
        boolean boolean45 = indexSettings41.isIndexUsingShadowReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData46 = indexSettings41.indexMetaData;
        indexSettings13.indexMetaData = indexMetaData46;
        org.elasticsearch.common.unit.TimeValue timeValue48 = indexSettings13.getsyncInterval();
        boolean boolean49 = indexSettings13.isQueryStringAllowLeadingWildcard();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting50 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(strSetting24);
        org.junit.Assert.assertNotNull(byteSizeValue25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertNotNull(indexMetaData28);
        org.junit.Assert.assertNotNull(strImmutableOpenMap29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(indexMetaData31);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(indexMetaDataDiff34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(settings37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strPredicate39);
        org.junit.Assert.assertNotNull(settings40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(indexMetaData46);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(timeValueSetting50);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate22 = indexSettings13.indexNameMatcher;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting23 = indexSettings13.getINDEX_TRANSLOG_SYNC_INTERVAL_SETTING();
        indexSettings13.setEnableWarmer(true);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(timeValueSetting23);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting15 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        java.lang.String str16 = indexSettings13.defaultField;
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig17 = indexSettings13.getmergePolicyConfig();
        java.lang.String str18 = indexSettings13.nodeName;
        java.lang.String str19 = indexSettings13.customDataPath();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(timeValueSetting15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_all" + "'", str16, "_all");
        org.junit.Assert.assertNotNull(mergePolicyConfig17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap22 = settings19.getGroups("index.blocks.read_only", false);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap24 = indexMetaData23.getAliases();
        int int25 = indexMetaData23.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData26 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet28 = indexMetaData26.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff29 = indexMetaData23.diff(indexMetaData26);
        long long30 = indexMetaData26.getCreationDate();
        org.elasticsearch.Version version31 = indexMetaData26.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings32 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap33 = settings32.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate34 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings35 = settings32.filter(strPredicate34);
        org.elasticsearch.index.IndexSettings indexSettings36 = new org.elasticsearch.index.IndexSettings(indexMetaData26, settings32);
        org.elasticsearch.common.logging.ESLogger eSLogger37 = indexSettings36.getlogger();
        boolean boolean38 = indexSettings36.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue39 = indexSettings36.syncInterval;
        org.elasticsearch.common.settings.Settings settings40 = indexSettings36.getSettings();
        org.elasticsearch.common.unit.TimeValue timeValue41 = indexSettings36.syncInterval;
        java.util.function.Predicate<java.lang.String> strPredicate42 = indexSettings36.indexNameMatcher;
        org.elasticsearch.common.settings.Settings settings43 = settings19.filter(strPredicate42);
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap45 = settings43.getGroups("index.version.created");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(strImmutableOpenMap24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(indexMetaData26);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(indexMetaDataDiff29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strPredicate34);
        org.junit.Assert.assertNotNull(settings35);
        org.junit.Assert.assertNotNull(eSLogger37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(settings40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(strPredicate42);
        org.junit.Assert.assertNotNull(settings43);
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate22 = indexSettings13.indexNameMatcher;
        org.elasticsearch.Version version23 = indexSettings13.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting24 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue25 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_BLOCKS_READ_SETTING;
        java.lang.Boolean boolean27 = indexSettings13.getValue(booleanSetting26);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting28 = indexSettings13.getMAX_RESCORE_WINDOW_SETTING();
        long long29 = indexSettings13.gcDeletesInMillis;
        boolean boolean30 = indexSettings13.isIndexUsingShadowReplicas();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(strSetting24);
        org.junit.Assert.assertNotNull(byteSizeValue25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertNotNull(intSetting28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 60000L + "'", long29 == 60000L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        boolean boolean16 = indexSettings13.isQueryStringLenient();
        java.util.function.Predicate<java.lang.String> strPredicate17 = indexSettings13.getindexNameMatcher();
        org.elasticsearch.common.logging.ESLogger eSLogger18 = indexSettings13.logger;
        boolean boolean19 = indexSettings13.defaultAllowUnmappedFields;
        boolean boolean20 = indexSettings13.isQueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting21 = indexSettings13.getINDEX_CHECK_ON_STARTUP();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue22 = indexSettings13.flushThresholdSize;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strPredicate17);
        org.junit.Assert.assertNotNull(eSLogger18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSetting21);
        org.junit.Assert.assertNotNull(byteSizeValue22);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.auto_expand_replicas", (long) 1000);
        java.nio.file.Path path21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder22 = builder3.loadFromPath(path21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.numberOfShards((int) (byte) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder6.version(0L);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData9 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap10 = indexMetaData9.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state11 = indexMetaData9.getState();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters12 = indexMetaData9.includeFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData14 = indexMetaData9.mappingOrDefault("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.State state15 = indexMetaData9.getState();
        byte byte16 = state15.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder8.state(state15);
        int int18 = builder17.getRoutingNumShards();
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(indexMetaData9);
        org.junit.Assert.assertNotNull(strImmutableOpenMap10);
        org.junit.Assert.assertTrue("'" + state11 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state11.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNull(discoveryNodeFilters12);
        org.junit.Assert.assertNull(mappingMetaData14);
        org.junit.Assert.assertTrue("'" + state15 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state15.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) 0 + "'", byte16 == (byte) 0);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = indexSettings13.getIndexMetaData();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        boolean boolean31 = indexSettings30.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig32 = indexSettings30.getMergeSchedulerConfig();
        boolean boolean33 = indexSettings30.queryStringAnalyzeWildcard;
        boolean boolean34 = indexSettings30.isIndexUsingShadowReplicas();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue35 = indexSettings30.flushThresholdSize;
        indexSettings13.setTranslogFlushThresholdSize(byteSizeValue35);
        org.elasticsearch.common.settings.Settings settings37 = indexSettings13.getNodeSettings();
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap39 = settings37.getGroups("index.auto_expand_replicas");
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap42 = settings37.getGroups("index.priority", false);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(byteSizeValue35);
        org.junit.Assert.assertNotNull(settings37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap42);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        boolean boolean15 = indexSettings13.isTTLPurgeDisabled();
        org.elasticsearch.common.settings.Settings settings16 = indexSettings13.nodeSettings;
        boolean boolean17 = indexSettings13.getdefaultAllowUnmappedFields();
        org.elasticsearch.Version version18 = indexSettings13.getIndexVersionCreated();
        int int19 = indexSettings13.getNumberOfReplicas();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.common.settings.Settings.Builder builder9 = builder3.put("index.blocks.read", (int) '#');
        org.elasticsearch.common.settings.Settings.Builder builder12 = builder3.put("index.priority", true);
        org.elasticsearch.common.settings.Settings.Builder builder13 = builder12.replacePropertyPlaceholders();
        java.util.Dictionary<java.lang.Object, java.lang.Object> objDictionary14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder15 = builder12.put(objDictionary14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder5 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder8 = builder5.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder11 = builder8.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData13 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap14 = indexMetaData13.getAliases();
        int int15 = indexMetaData13.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet18 = indexMetaData16.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff19 = indexMetaData13.diff(indexMetaData16);
        long long20 = indexMetaData16.getCreationDate();
        org.elasticsearch.Version version21 = indexMetaData16.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder22 = builder8.put("index.creation_date_string", version21);
        org.elasticsearch.common.settings.Settings.Builder builder25 = builder8.put("index.version.created", "index.version.created_string");
        java.lang.String[] strArray27 = new java.lang.String[] {};
        org.elasticsearch.common.settings.Settings.Builder builder28 = builder8.extendArray("archived.", strArray27);
        org.elasticsearch.common.settings.Settings.Builder builder29 = builder0.extendArray("index.auto_expand_replicas", strArray27);
        org.elasticsearch.common.settings.Settings.Builder builder32 = builder0.put("archived.", "");
        java.nio.file.Path path33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder34 = builder0.loadFromPath(path33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(indexMetaData13);
        org.junit.Assert.assertNotNull(strImmutableOpenMap14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(indexMetaDataDiff19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.numberOfShards((int) (byte) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap8 = indexMetaData7.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state9 = indexMetaData7.getState();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters10 = indexMetaData7.includeFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData12 = indexMetaData7.mappingOrDefault("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.State state13 = indexMetaData7.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder6.state(state13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder6.removeAlias("index.shadow_replicas");
        int int17 = builder6.numberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder6.index("5000099");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder6.removeAlias("index.blocks.read_only");
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
        org.junit.Assert.assertTrue("'" + state9 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state9.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNull(discoveryNodeFilters10);
        org.junit.Assert.assertNull(mappingMetaData12);
        org.junit.Assert.assertTrue("'" + state13 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state13.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig15 = indexSettings13.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability16 = indexSettings13.getdurability();
        indexSettings13.setEnableWarmer(false);
        indexSettings13.setEnableWarmer(true);
        int int21 = indexSettings13.getMaxRescoreWindow();
        org.elasticsearch.Version version22 = indexSettings13.version;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig15);
        org.junit.Assert.assertTrue("'" + durability16 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability16.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10000 + "'", int21 == 10000);
        org.junit.Assert.assertNotNull(version22);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        boolean boolean17 = indexSettings13.updateIndexMetaData(indexMetaData16);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap18 = indexMetaData16.getMappings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData16);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder19.putMapping("1000.0", "-1.0");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate22 = indexSettings13.indexNameMatcher;
        org.elasticsearch.Version version23 = indexSettings13.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting24 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue25 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_BLOCKS_READ_SETTING;
        java.lang.Boolean boolean27 = indexSettings13.getValue(booleanSetting26);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting28 = indexSettings13.getMAX_RESCORE_WINDOW_SETTING();
        boolean boolean29 = indexSettings13.isIndexUsingShadowReplicas();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(strSetting24);
        org.junit.Assert.assertNotNull(byteSizeValue25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertNotNull(intSetting28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting15 = indexSettings13.getINDEX_WARMER_ENABLED_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap17 = indexMetaData16.getAliases();
        int int18 = indexMetaData16.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet21 = indexMetaData19.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff22 = indexMetaData16.diff(indexMetaData19);
        long long23 = indexMetaData19.getCreationDate();
        org.elasticsearch.Version version24 = indexMetaData19.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings25 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap26 = settings25.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate27 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings28 = settings25.filter(strPredicate27);
        org.elasticsearch.index.IndexSettings indexSettings29 = new org.elasticsearch.index.IndexSettings(indexMetaData19, settings25);
        boolean boolean30 = indexSettings29.getqueryStringLenient();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting31 = indexSettings29.getINDEX_GC_DELETES_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData32 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap33 = indexMetaData32.getAliases();
        int int34 = indexMetaData32.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData35 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet37 = indexMetaData35.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff38 = indexMetaData32.diff(indexMetaData35);
        long long39 = indexMetaData35.getCreationDate();
        org.elasticsearch.Version version40 = indexMetaData35.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings41 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap42 = settings41.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate43 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings44 = settings41.filter(strPredicate43);
        org.elasticsearch.index.IndexSettings indexSettings45 = new org.elasticsearch.index.IndexSettings(indexMetaData35, settings41);
        java.lang.String str46 = indexSettings45.getUUID();
        boolean boolean47 = indexSettings45.getqueryStringAnalyzeWildcard();
        java.lang.String str48 = indexSettings45.customDataPath();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData49 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap50 = indexMetaData49.getAliases();
        int int51 = indexMetaData49.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData52 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet54 = indexMetaData52.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff55 = indexMetaData49.diff(indexMetaData52);
        long long56 = indexMetaData52.getCreationDate();
        org.elasticsearch.Version version57 = indexMetaData52.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings58 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap59 = settings58.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate60 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings61 = settings58.filter(strPredicate60);
        org.elasticsearch.index.IndexSettings indexSettings62 = new org.elasticsearch.index.IndexSettings(indexMetaData52, settings58);
        java.lang.String str63 = indexSettings62.getUUID();
        boolean boolean64 = indexSettings62.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability65 = indexSettings62.getTranslogDurability();
        indexSettings45.durability = durability65;
        indexSettings29.durability = durability65;
        indexSettings13.durability = durability65;
        org.elasticsearch.common.settings.Settings settings69 = indexSettings13.settings;
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher70 = indexSettings13.parseFieldMatcher;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData71 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap72 = indexMetaData71.getAliases();
        int int73 = indexMetaData71.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData74 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet76 = indexMetaData74.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff77 = indexMetaData71.diff(indexMetaData74);
        long long78 = indexMetaData74.getCreationDate();
        org.elasticsearch.Version version79 = indexMetaData74.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings80 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap81 = settings80.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate82 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings83 = settings80.filter(strPredicate82);
        org.elasticsearch.index.IndexSettings indexSettings84 = new org.elasticsearch.index.IndexSettings(indexMetaData74, settings80);
        java.lang.String str85 = indexSettings84.getUUID();
        boolean boolean86 = indexSettings84.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting87 = indexSettings84.getQUERY_STRING_ANALYZE_WILDCARD();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean88 = indexSettings13.getValue(booleanSetting87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: settings scope doesn't match the setting scope [IndexScope] not in [[NodeScope]]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertNotNull(booleanSetting15);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(strImmutableOpenMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(indexMetaDataDiff22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(settings25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strPredicate27);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(timeValueSetting31);
        org.junit.Assert.assertNotNull(indexMetaData32);
        org.junit.Assert.assertNotNull(strImmutableOpenMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(indexMetaData35);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(indexMetaDataDiff38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(version40);
        org.junit.Assert.assertNotNull(settings41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strPredicate43);
        org.junit.Assert.assertNotNull(settings44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "_na_" + "'", str46, "_na_");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(indexMetaData49);
        org.junit.Assert.assertNotNull(strImmutableOpenMap50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNotNull(indexMetaData52);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(indexMetaDataDiff55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(version57);
        org.junit.Assert.assertNotNull(settings58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strPredicate60);
        org.junit.Assert.assertNotNull(settings61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "_na_" + "'", str63, "_na_");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + durability65 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability65.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(settings69);
        org.junit.Assert.assertNotNull(parseFieldMatcher70);
        org.junit.Assert.assertNotNull(indexMetaData71);
        org.junit.Assert.assertNotNull(strImmutableOpenMap72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(indexMetaData74);
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertNotNull(indexMetaDataDiff77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-1L) + "'", long78 == (-1L));
        org.junit.Assert.assertNotNull(version79);
        org.junit.Assert.assertNotNull(settings80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strPredicate82);
        org.junit.Assert.assertNotNull(settings83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "_na_" + "'", str85, "_na_");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(booleanSetting87);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy16 = indexSettings13.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        boolean boolean31 = indexSettings30.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig32 = indexSettings30.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability33 = indexSettings30.getdurability();
        indexSettings13.setTranslogDurability(durability33);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData35 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap36 = indexMetaData35.getAliases();
        int int37 = indexMetaData35.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet40 = indexMetaData38.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff41 = indexMetaData35.diff(indexMetaData38);
        long long42 = indexMetaData38.getCreationDate();
        org.elasticsearch.Version version43 = indexMetaData38.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings44 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap45 = settings44.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate46 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings47 = settings44.filter(strPredicate46);
        org.elasticsearch.index.IndexSettings indexSettings48 = new org.elasticsearch.index.IndexSettings(indexMetaData38, settings44);
        org.elasticsearch.common.logging.ESLogger eSLogger49 = indexSettings48.getlogger();
        boolean boolean50 = indexSettings48.isWarmerEnabled();
        boolean boolean51 = indexSettings48.isTTLPurgeDisabled();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData52 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap53 = indexMetaData52.getAliases();
        int int54 = indexMetaData52.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData55 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet57 = indexMetaData55.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff58 = indexMetaData52.diff(indexMetaData55);
        long long59 = indexMetaData55.getCreationDate();
        org.elasticsearch.Version version60 = indexMetaData55.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings61 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap62 = settings61.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate63 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings64 = settings61.filter(strPredicate63);
        org.elasticsearch.index.IndexSettings indexSettings65 = new org.elasticsearch.index.IndexSettings(indexMetaData55, settings61);
        org.elasticsearch.common.logging.ESLogger eSLogger66 = indexSettings65.getlogger();
        boolean boolean67 = indexSettings65.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue68 = indexSettings65.syncInterval;
        org.elasticsearch.common.settings.Settings settings69 = indexSettings65.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData70 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap71 = indexMetaData70.getAliases();
        int int72 = indexMetaData70.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData73 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet75 = indexMetaData73.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff76 = indexMetaData70.diff(indexMetaData73);
        long long77 = indexMetaData73.getCreationDate();
        org.apache.lucene.util.Version version78 = indexMetaData73.getMinimumCompatibleVersion();
        indexSettings65.indexMetaData = indexMetaData73;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting80 = indexSettings65.getINDEX_GC_DELETES_SETTING();
        org.elasticsearch.index.translog.Translog.Durability durability81 = indexSettings65.getTranslogDurability();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue82 = indexSettings65.flushThresholdSize;
        indexSettings48.setTranslogFlushThresholdSize(byteSizeValue82);
        indexSettings13.flushThresholdSize = byteSizeValue82;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig85 = indexSettings13.getMergeSchedulerConfig();
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings86 = indexSettings13.scopedSettings;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(mergePolicy16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig32);
        org.junit.Assert.assertTrue("'" + durability33 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability33.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(indexMetaData35);
        org.junit.Assert.assertNotNull(strImmutableOpenMap36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(indexMetaDataDiff41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(settings44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strPredicate46);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(eSLogger49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(indexMetaData52);
        org.junit.Assert.assertNotNull(strImmutableOpenMap53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(indexMetaData55);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(indexMetaDataDiff58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(settings61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strPredicate63);
        org.junit.Assert.assertNotNull(settings64);
        org.junit.Assert.assertNotNull(eSLogger66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(settings69);
        org.junit.Assert.assertNotNull(indexMetaData70);
        org.junit.Assert.assertNotNull(strImmutableOpenMap71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(indexMetaData73);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(indexMetaDataDiff76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNull(version78);
        org.junit.Assert.assertNotNull(timeValueSetting80);
        org.junit.Assert.assertTrue("'" + durability81 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability81.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(byteSizeValue82);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig85);
        org.junit.Assert.assertNotNull(indexScopedSettings86);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap2 = indexMetaData1.getAliases();
        int int3 = indexMetaData1.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet6 = indexMetaData4.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff7 = indexMetaData1.diff(indexMetaData4);
        long long8 = indexMetaData4.getCreationDate();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff9 = indexMetaData0.diff(indexMetaData4);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData4);
        int int11 = builder10.numberOfReplicas();
        org.elasticsearch.common.settings.Settings.Builder builder12 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder15 = builder12.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder18 = builder15.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap21 = indexMetaData20.getAliases();
        int int22 = indexMetaData20.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet25 = indexMetaData23.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff26 = indexMetaData20.diff(indexMetaData23);
        long long27 = indexMetaData23.getCreationDate();
        org.elasticsearch.Version version28 = indexMetaData23.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder29 = builder15.put("index.creation_date_string", version28);
        org.elasticsearch.common.settings.Settings.Builder builder32 = builder15.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder34 = builder32.normalizePrefix("index.blocks.read");
        org.elasticsearch.common.settings.Settings.Builder builder36 = builder32.loadFromSource("index.number_of_shards");
        org.elasticsearch.common.settings.Settings.Builder builder39 = builder32.put("index.creation_date_string", (long) (byte) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder10.settings(builder39);
        java.util.Dictionary<java.lang.Object, java.lang.Object> objDictionary41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder42 = builder39.put(objDictionary41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(indexMetaDataDiff7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaDataDiff9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strImmutableOpenMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(indexMetaDataDiff26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig15 = indexSettings13.getMergeSchedulerConfig();
        org.elasticsearch.common.settings.Settings settings16 = indexSettings13.settings;
        long long17 = indexSettings13.gcDeletesInMillis;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.index.translog.Translog.Durability> durabilitySetting18 = indexSettings13.getINDEX_TRANSLOG_DURABILITY_SETTING();
        indexSettings13.maxRescoreWindow = 0;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig15);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 60000L + "'", long17 == 60000L);
        org.junit.Assert.assertNotNull(durabilitySetting18);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getisShadowReplicaIndex();
        java.lang.String str16 = indexSettings13.customDataPath();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = indexSettings13.getIndexMetaData();
        boolean boolean19 = indexMetaData17.isSameUUID("active_allocations");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        boolean boolean15 = indexSettings13.isTTLPurgeDisabled();
        org.elasticsearch.common.settings.Settings settings16 = indexSettings13.nodeSettings;
        boolean boolean17 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting18 = indexSettings13.getALLOW_UNMAPPED();
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig19 = indexSettings13.getmergePolicyConfig();
        int int20 = indexSettings13.maxRefreshListeners;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting21 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig22 = indexSettings13.mergePolicyConfig;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanSetting18);
        org.junit.Assert.assertNotNull(mergePolicyConfig19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1000 + "'", int20 == 1000);
        org.junit.Assert.assertNotNull(strSetting21);
        org.junit.Assert.assertNotNull(mergePolicyConfig22);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.getMaxRescoreWindow();
        boolean boolean16 = indexSettings13.getwarmerEnabled();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        org.elasticsearch.common.logging.ESLogger eSLogger31 = indexSettings30.getlogger();
        int int32 = indexSettings30.maxRescoreWindow;
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher33 = indexSettings30.getParseFieldMatcher();
        org.elasticsearch.index.translog.Translog.Durability durability34 = indexSettings30.getTranslogDurability();
        indexSettings13.setTranslogDurability(durability34);
        indexSettings13.gcDeletesInMillis = 10L;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(eSLogger31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10000 + "'", int32 == 10000);
        org.junit.Assert.assertNotNull(parseFieldMatcher33);
        org.junit.Assert.assertTrue("'" + durability34 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability34.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        org.apache.lucene.util.Version version4 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.requireFilters();
        org.apache.lucene.util.Version version6 = indexMetaData0.getMinimumCompatibleVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(version4);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNull(version6);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.metadata");
        java.lang.String str2 = builder1.index();
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.putAlias(aliasMetaData3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "index.blocks.metadata" + "'", str2, "index.blocks.metadata");
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder22 = builder20.normalizePrefix("index.blocks.read");
        org.elasticsearch.common.settings.Settings.Builder builder24 = builder20.loadFromSource("index.number_of_shards");
        org.elasticsearch.common.settings.Settings.Builder builder27 = builder24.put("index.number_of_shards", (int) '4');
        java.lang.String str29 = builder24.get("index.data_path");
        java.util.Map<java.lang.String, java.lang.String> strMap30 = builder24.internalMap();
        java.lang.String[] strArray33 = new java.lang.String[] { "5000099" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.elasticsearch.common.settings.Settings.Builder builder36 = builder24.putArray("index.blocks.metadata", (java.util.List<java.lang.String>) strList34);
        org.elasticsearch.common.settings.Settings.Builder builder37 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder40 = builder37.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder43 = builder40.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData45 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap46 = indexMetaData45.getAliases();
        int int47 = indexMetaData45.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData48 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet50 = indexMetaData48.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff51 = indexMetaData45.diff(indexMetaData48);
        long long52 = indexMetaData48.getCreationDate();
        org.elasticsearch.Version version53 = indexMetaData48.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder54 = builder40.put("index.creation_date_string", version53);
        org.elasticsearch.common.settings.Settings.Builder builder57 = builder40.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder59 = builder57.putNull("index.version.upgraded");
        org.elasticsearch.common.settings.Settings settings60 = builder57.build();
        org.elasticsearch.common.settings.Settings settings62 = settings60.getByPrefix("index.auto_expand_replicas");
        org.elasticsearch.common.settings.Settings.Builder builder63 = builder36.put(settings62);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(indexMetaData45);
        org.junit.Assert.assertNotNull(strImmutableOpenMap46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(indexMetaData48);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(indexMetaDataDiff51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(version53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(settings60);
        org.junit.Assert.assertNotNull(settings62);
        org.junit.Assert.assertNotNull(builder63);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        int int4 = builder1.getRoutingNumShards();
        org.elasticsearch.common.settings.Settings.Builder builder5 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder8 = builder5.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder11 = builder8.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData13 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap14 = indexMetaData13.getAliases();
        int int15 = indexMetaData13.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet18 = indexMetaData16.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff19 = indexMetaData13.diff(indexMetaData16);
        long long20 = indexMetaData16.getCreationDate();
        org.elasticsearch.Version version21 = indexMetaData16.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder22 = builder8.put("index.creation_date_string", version21);
        org.elasticsearch.common.settings.Settings.Builder builder25 = builder8.put("index.version.created", "index.version.created_string");
        java.util.Map<java.lang.String, java.lang.String> strMap26 = builder25.internalMap();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = builder1.settings(builder25);
        long long28 = builder1.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder1.creationDate((long) ' ');
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(indexMetaData13);
        org.junit.Assert.assertNotNull(strImmutableOpenMap14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(indexMetaDataDiff19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getisShadowReplicaIndex();
        java.lang.String str16 = indexSettings13.customDataPath();
        indexSettings13.maxResultWindow = 1000;
        org.elasticsearch.common.unit.TimeValue timeValue19 = indexSettings13.refreshInterval;
        java.lang.String str20 = indexSettings13.getDefaultField();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig21 = indexSettings13.mergeSchedulerConfig;
        java.lang.String str22 = indexSettings13.getUUID();
        indexSettings13.setwarmerEnabled(false);
        indexSettings13.setMaxRefreshListeners(1);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_all" + "'", str20, "_all");
        org.junit.Assert.assertNotNull(mergeSchedulerConfig21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_na_" + "'", str22, "_na_");
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str15 = settings9.get("index.version.created");
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = settings9.getAsStructuredMap();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder17 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params18 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder19 = settings9.toXContent(xContentBuilder17, params18);
        java.util.Set<java.lang.String> strSet20 = settings9.names();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(params18);
        org.junit.Assert.assertNull(xContentBuilder19);
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        int int16 = indexSettings13.getNumberOfShards();
        java.util.function.Predicate<java.lang.String> strPredicate17 = indexSettings13.getindexNameMatcher();
        boolean boolean18 = indexSettings13.defaultAllowUnmappedFields;
        int int19 = indexSettings13.maxRefreshListeners;
        long long20 = indexSettings13.gcDeletesInMillis;
        org.elasticsearch.common.unit.TimeValue timeValue21 = indexSettings13.refreshInterval;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting22 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strPredicate17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 60000L + "'", long20 == 60000L);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(timeValueSetting22);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.queryStringAllowLeadingWildcard;
        indexSettings13.setwarmerEnabled(true);
        org.elasticsearch.common.settings.Settings settings18 = indexSettings13.nodeSettings;
        java.lang.String[] strArray20 = settings18.getAsArray("1");
        java.lang.Boolean boolean23 = settings18.getAsBoolean("", (java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(settings18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.creationDate((long) ' ');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfShards(1000);
        org.elasticsearch.common.settings.Settings.Builder builder6 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder8 = builder6.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder11 = builder8.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder14 = builder8.put("index.creation_date", (double) (-1.0f));
        org.elasticsearch.common.settings.Settings.Builder builder15 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder18 = builder15.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder21 = builder18.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap24 = indexMetaData23.getAliases();
        int int25 = indexMetaData23.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData26 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet28 = indexMetaData26.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff29 = indexMetaData23.diff(indexMetaData26);
        long long30 = indexMetaData26.getCreationDate();
        org.elasticsearch.Version version31 = indexMetaData26.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder32 = builder18.put("index.creation_date_string", version31);
        org.elasticsearch.common.settings.Settings.Builder builder35 = builder18.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder37 = builder35.normalizePrefix("index.blocks.read");
        java.util.Map<java.lang.String, java.lang.String> strMap38 = builder37.internalMap();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData39 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap40 = indexMetaData39.getAliases();
        int int41 = indexMetaData39.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData42 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet44 = indexMetaData42.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff45 = indexMetaData39.diff(indexMetaData42);
        long long46 = indexMetaData42.getCreationDate();
        org.elasticsearch.Version version47 = indexMetaData42.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings48 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap49 = settings48.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate50 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings51 = settings48.filter(strPredicate50);
        org.elasticsearch.index.IndexSettings indexSettings52 = new org.elasticsearch.index.IndexSettings(indexMetaData42, settings48);
        boolean boolean53 = indexSettings52.getqueryStringLenient();
        int int54 = indexSettings52.getNumberOfShards();
        boolean boolean55 = indexSettings52.isQueryStringLenient();
        java.util.function.Predicate<java.lang.String> strPredicate56 = indexSettings52.getindexNameMatcher();
        java.util.function.Function<java.lang.String, java.lang.String> strFunction57 = null;
        org.elasticsearch.common.settings.Settings.Builder builder58 = builder14.putProperties(strMap38, strPredicate56, strFunction57);
        org.elasticsearch.common.settings.Settings.Builder builder60 = builder58.normalizePrefix("");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder61 = builder5.settings(builder60);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder63 = builder5.creationDate((long) 5);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData64 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap65 = indexMetaData64.getAliases();
        int int66 = indexMetaData64.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData67 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet69 = indexMetaData67.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff70 = indexMetaData64.diff(indexMetaData67);
        long long71 = indexMetaData67.getCreationDate();
        org.elasticsearch.Version version72 = indexMetaData67.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings73 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap74 = settings73.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate75 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings76 = settings73.filter(strPredicate75);
        org.elasticsearch.index.IndexSettings indexSettings77 = new org.elasticsearch.index.IndexSettings(indexMetaData67, settings73);
        org.elasticsearch.common.logging.ESLogger eSLogger78 = indexSettings77.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue79 = indexSettings77.getsyncInterval();
        indexSettings77.setEnableWarmer(false);
        java.lang.String str82 = indexSettings77.defaultField;
        org.elasticsearch.common.settings.Settings settings83 = indexSettings77.settings;
        org.elasticsearch.common.unit.TimeValue timeValue84 = indexSettings77.getTranslogSyncInterval();
        int int85 = indexSettings77.getNumberOfShards();
        org.elasticsearch.common.settings.Settings settings86 = indexSettings77.settings;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig87 = indexSettings77.getMergeSchedulerConfig();
        boolean boolean88 = indexSettings77.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting89 = indexSettings77.getMAX_REFRESH_LISTENERS_PER_SHARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting90 = indexSettings77.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting91 = indexSettings77.getQUERY_STRING_LENIENT_SETTING();
        indexSettings77.maxRescoreWindow = 0;
        int int94 = indexSettings77.getNumberOfShards();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.index.translog.Translog.Durability> durabilitySetting95 = indexSettings77.getINDEX_TRANSLOG_DURABILITY_SETTING();
        org.elasticsearch.common.settings.Settings settings96 = indexSettings77.getSettings();
        boolean boolean97 = settings96.isEmpty();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder98 = builder5.settings(settings96);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(strImmutableOpenMap24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(indexMetaData26);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(indexMetaDataDiff29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(indexMetaData39);
        org.junit.Assert.assertNotNull(strImmutableOpenMap40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(indexMetaData42);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(indexMetaDataDiff45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(version47);
        org.junit.Assert.assertNotNull(settings48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strPredicate50);
        org.junit.Assert.assertNotNull(settings51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strPredicate56);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(indexMetaData64);
        org.junit.Assert.assertNotNull(strImmutableOpenMap65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(indexMetaData67);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertNotNull(indexMetaDataDiff70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(version72);
        org.junit.Assert.assertNotNull(settings73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strPredicate75);
        org.junit.Assert.assertNotNull(settings76);
        org.junit.Assert.assertNotNull(eSLogger78);
        org.junit.Assert.assertNotNull(timeValue79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "_all" + "'", str82, "_all");
        org.junit.Assert.assertNotNull(settings83);
        org.junit.Assert.assertNotNull(timeValue84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(settings86);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(intSetting89);
        org.junit.Assert.assertNotNull(booleanSetting90);
        org.junit.Assert.assertNotNull(booleanSetting91);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertNotNull(durabilitySetting95);
        org.junit.Assert.assertNotNull(settings96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(builder98);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData15 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap16 = indexMetaData15.getAliases();
        int int17 = indexMetaData15.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet20 = indexMetaData18.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff21 = indexMetaData15.diff(indexMetaData18);
        long long22 = indexMetaData18.getCreationDate();
        org.elasticsearch.Version version23 = indexMetaData18.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings24 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap25 = settings24.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate26 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings27 = settings24.filter(strPredicate26);
        org.elasticsearch.index.IndexSettings indexSettings28 = new org.elasticsearch.index.IndexSettings(indexMetaData18, settings24);
        boolean boolean29 = indexSettings28.getqueryStringLenient();
        int int30 = indexSettings28.getNumberOfShards();
        int int31 = indexSettings28.getMaxResultWindow();
        boolean boolean32 = indexSettings28.isShadowReplicaIndex;
        java.util.function.Predicate<java.lang.String> strPredicate33 = indexSettings28.indexNameMatcher;
        int int34 = indexSettings28.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData35 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap36 = indexMetaData35.getAliases();
        int int37 = indexMetaData35.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet40 = indexMetaData38.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff41 = indexMetaData35.diff(indexMetaData38);
        long long42 = indexMetaData38.getCreationDate();
        org.elasticsearch.Version version43 = indexMetaData38.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings44 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap45 = settings44.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate46 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings47 = settings44.filter(strPredicate46);
        org.elasticsearch.index.IndexSettings indexSettings48 = new org.elasticsearch.index.IndexSettings(indexMetaData38, settings44);
        org.elasticsearch.common.logging.ESLogger eSLogger49 = indexSettings48.getlogger();
        boolean boolean50 = indexSettings48.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue51 = indexSettings48.syncInterval;
        org.elasticsearch.common.settings.Settings settings52 = indexSettings48.getSettings();
        java.lang.String str53 = indexSettings48.defaultField;
        org.elasticsearch.Version version54 = indexSettings48.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue55 = indexSettings48.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData56 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap57 = indexMetaData56.getAliases();
        int int58 = indexMetaData56.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData59 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet61 = indexMetaData59.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff62 = indexMetaData56.diff(indexMetaData59);
        long long63 = indexMetaData59.getCreationDate();
        org.elasticsearch.Version version64 = indexMetaData59.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings65 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap66 = settings65.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate67 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings68 = settings65.filter(strPredicate67);
        org.elasticsearch.index.IndexSettings indexSettings69 = new org.elasticsearch.index.IndexSettings(indexMetaData59, settings65);
        java.lang.String str70 = indexSettings69.getUUID();
        boolean boolean71 = indexSettings69.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy72 = indexSettings69.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData73 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap74 = indexMetaData73.getAliases();
        int int75 = indexMetaData73.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData76 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet78 = indexMetaData76.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff79 = indexMetaData73.diff(indexMetaData76);
        long long80 = indexMetaData76.getCreationDate();
        org.elasticsearch.Version version81 = indexMetaData76.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings82 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap83 = settings82.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate84 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings85 = settings82.filter(strPredicate84);
        org.elasticsearch.index.IndexSettings indexSettings86 = new org.elasticsearch.index.IndexSettings(indexMetaData76, settings82);
        boolean boolean87 = indexSettings86.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig88 = indexSettings86.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability89 = indexSettings86.getdurability();
        indexSettings69.setTranslogDurability(durability89);
        indexSettings48.durability = durability89;
        indexSettings28.durability = durability89;
        indexSettings13.durability = durability89;
        org.apache.lucene.index.MergePolicy mergePolicy94 = indexSettings13.getMergePolicy();
        boolean boolean95 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher96 = indexSettings13.parseFieldMatcher;
        org.elasticsearch.common.unit.TimeValue timeValue97 = indexSettings13.getsyncInterval();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(indexMetaData15);
        org.junit.Assert.assertNotNull(strImmutableOpenMap16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(indexMetaDataDiff21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(settings24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strPredicate26);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10000 + "'", int31 == 10000);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strPredicate33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(indexMetaData35);
        org.junit.Assert.assertNotNull(strImmutableOpenMap36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(indexMetaDataDiff41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(settings44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strPredicate46);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(eSLogger49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertNotNull(settings52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "_all" + "'", str53, "_all");
        org.junit.Assert.assertNotNull(version54);
        org.junit.Assert.assertNotNull(timeValue55);
        org.junit.Assert.assertNotNull(indexMetaData56);
        org.junit.Assert.assertNotNull(strImmutableOpenMap57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(indexMetaData59);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNotNull(indexMetaDataDiff62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(version64);
        org.junit.Assert.assertNotNull(settings65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strPredicate67);
        org.junit.Assert.assertNotNull(settings68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "_na_" + "'", str70, "_na_");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(mergePolicy72);
        org.junit.Assert.assertNotNull(indexMetaData73);
        org.junit.Assert.assertNotNull(strImmutableOpenMap74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(indexMetaData76);
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertNotNull(indexMetaDataDiff79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + (-1L) + "'", long80 == (-1L));
        org.junit.Assert.assertNotNull(version81);
        org.junit.Assert.assertNotNull(settings82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strPredicate84);
        org.junit.Assert.assertNotNull(settings85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig88);
        org.junit.Assert.assertTrue("'" + durability89 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability89.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(mergePolicy94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(parseFieldMatcher96);
        org.junit.Assert.assertNotNull(timeValue97);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap5 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap6 = indexMetaData0.getActiveAllocationIds();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap5);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap6);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting16 = indexSettings13.getINDEX_TTL_DISABLE_PURGE_SETTING();
        java.lang.String str17 = indexSettings13.getNodeName();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting18 = indexSettings13.getINDEX_CHECK_ON_STARTUP();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig19 = indexSettings13.mergeSchedulerConfig;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap21 = indexMetaData20.getAliases();
        int int22 = indexMetaData20.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet25 = indexMetaData23.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff26 = indexMetaData20.diff(indexMetaData23);
        long long27 = indexMetaData23.getCreationDate();
        org.elasticsearch.Version version28 = indexMetaData23.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings29 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap30 = settings29.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate31 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings32 = settings29.filter(strPredicate31);
        org.elasticsearch.index.IndexSettings indexSettings33 = new org.elasticsearch.index.IndexSettings(indexMetaData23, settings29);
        org.elasticsearch.common.logging.ESLogger eSLogger34 = indexSettings33.getlogger();
        int int35 = indexSettings33.maxRescoreWindow;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings36 = indexSettings33.scopedSettings;
        org.elasticsearch.index.translog.Translog.Durability durability37 = indexSettings33.getdurability();
        indexSettings13.durability = durability37;
        int int39 = indexSettings13.numberOfShards;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(booleanSetting16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strSetting18);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig19);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strImmutableOpenMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(indexMetaDataDiff26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strPredicate31);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertNotNull(eSLogger34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10000 + "'", int35 == 10000);
        org.junit.Assert.assertNotNull(indexScopedSettings36);
        org.junit.Assert.assertTrue("'" + durability37 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability37.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings0 = org.elasticsearch.common.settings.IndexScopedSettings.DEFAULT_SCOPED_SETTINGS;
        org.elasticsearch.common.settings.Setting.Property property1 = indexScopedSettings0.getScope();
        java.util.function.Predicate<java.lang.String> strPredicate2 = indexScopedSettings0.getINDEX_SETTINGS_KEY_PREDICATE();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting3 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_NUMBER_OF_SHARDS_SETTING;
        indexScopedSettings0.validateSettingKey((org.elasticsearch.common.settings.Setting) intSetting3);
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting5 = org.elasticsearch.index.IndexSettings.INDEX_TRANSLOG_SYNC_INTERVAL_SETTING;
        indexScopedSettings0.validateSettingKey((org.elasticsearch.common.settings.Setting) timeValueSetting5);
        boolean boolean8 = indexScopedSettings0.isPrivateSetting("index.blocks.metadata");
        boolean boolean10 = indexScopedSettings0.isPrivateSetting("index.blocks.read_only");
        boolean boolean12 = indexScopedSettings0.hasDynamicSetting("5000099");
        org.junit.Assert.assertNotNull(indexScopedSettings0);
        org.junit.Assert.assertTrue("'" + property1 + "' != '" + org.elasticsearch.common.settings.Setting.Property.IndexScope + "'", property1.equals(org.elasticsearch.common.settings.Setting.Property.IndexScope));
        org.junit.Assert.assertNotNull(strPredicate2);
        org.junit.Assert.assertNotNull(intSetting3);
        org.junit.Assert.assertNotNull(timeValueSetting5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        int int23 = indexMetaData22.getTotalNumberOfShards();
        boolean boolean24 = indexSettings13.updateIndexMetaData(indexMetaData22);
        indexSettings13.warmerEnabled = true;
        boolean boolean27 = indexSettings13.defaultAllowUnmappedFields;
        java.util.function.Predicate<java.lang.String> strPredicate28 = indexSettings13.getindexNameMatcher();
        indexSettings13.setwarmerEnabled(true);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strPredicate28);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting15 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings16 = indexSettings13.getScopedSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        java.lang.String str31 = indexSettings30.getUUID();
        boolean boolean32 = indexSettings30.getisShadowReplicaIndex();
        java.lang.String str33 = indexSettings30.customDataPath();
        indexSettings30.maxResultWindow = 1000;
        org.elasticsearch.common.unit.TimeValue timeValue36 = indexSettings30.refreshInterval;
        indexSettings13.setRefreshInterval(timeValue36);
        indexSettings13.setwarmerEnabled(false);
        org.apache.lucene.index.MergePolicy mergePolicy40 = indexSettings13.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData41 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap42 = indexMetaData41.getAliases();
        int int43 = indexMetaData41.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData44 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet46 = indexMetaData44.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff47 = indexMetaData41.diff(indexMetaData44);
        long long48 = indexMetaData44.getCreationDate();
        org.elasticsearch.Version version49 = indexMetaData44.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings50 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap51 = settings50.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate52 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings53 = settings50.filter(strPredicate52);
        org.elasticsearch.index.IndexSettings indexSettings54 = new org.elasticsearch.index.IndexSettings(indexMetaData44, settings50);
        org.elasticsearch.common.logging.ESLogger eSLogger55 = indexSettings54.getlogger();
        boolean boolean56 = indexSettings54.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue57 = indexSettings54.syncInterval;
        org.elasticsearch.common.settings.Settings settings58 = indexSettings54.getSettings();
        java.lang.String str59 = indexSettings54.defaultField;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings60 = indexSettings54.scopedSettings;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.index.translog.Translog.Durability> durabilitySetting61 = indexSettings54.getINDEX_TRANSLOG_DURABILITY_SETTING();
        org.elasticsearch.index.translog.Translog.Durability durability62 = indexSettings54.getdurability();
        indexSettings13.setTranslogDurability(durability62);
        java.lang.String str64 = indexSettings13.nodeName;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(timeValueSetting15);
        org.junit.Assert.assertNotNull(indexScopedSettings16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "_na_" + "'", str31, "_na_");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(mergePolicy40);
        org.junit.Assert.assertNotNull(indexMetaData41);
        org.junit.Assert.assertNotNull(strImmutableOpenMap42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(indexMetaData44);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(indexMetaDataDiff47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(version49);
        org.junit.Assert.assertNotNull(settings50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strPredicate52);
        org.junit.Assert.assertNotNull(settings53);
        org.junit.Assert.assertNotNull(eSLogger55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(settings58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "_all" + "'", str59, "_all");
        org.junit.Assert.assertNotNull(indexScopedSettings60);
        org.junit.Assert.assertNotNull(durabilitySetting61);
        org.junit.Assert.assertTrue("'" + durability62 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability62.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        int int21 = indexSettings13.getNumberOfShards();
        org.elasticsearch.common.settings.Settings settings22 = indexSettings13.settings;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig23 = indexSettings13.getMergeSchedulerConfig();
        boolean boolean24 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting25 = indexSettings13.getMAX_REFRESH_LISTENERS_PER_SHARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = indexSettings13.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        indexSettings13.TTLPurgeDisabled = false;
        boolean boolean29 = indexSettings13.queryStringAllowLeadingWildcard;
        boolean boolean30 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability31 = indexSettings13.getdurability();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(settings22);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intSetting25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + durability31 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability31.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state2 = indexMetaData0.getState();
        int int3 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap5 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap6 = indexMetaData0.getActiveAllocationIds();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + state2 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state2.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap5);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap6);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.maxRescoreWindow;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings16 = indexSettings13.scopedSettings;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig17 = indexSettings13.getMergeSchedulerConfig();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = indexSettings13.getIndexMetaData();
        org.elasticsearch.common.unit.TimeValue timeValue19 = indexSettings13.getDEFAULT_GC_DELETES();
        org.elasticsearch.common.settings.Settings settings20 = indexSettings13.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap23 = indexMetaData22.getAliases();
        int int24 = indexMetaData22.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet27 = indexMetaData25.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff28 = indexMetaData22.diff(indexMetaData25);
        long long29 = indexMetaData25.getCreationDate();
        org.elasticsearch.Version version30 = indexMetaData25.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings31 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap32 = settings31.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate33 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings34 = settings31.filter(strPredicate33);
        org.elasticsearch.index.IndexSettings indexSettings35 = new org.elasticsearch.index.IndexSettings(indexMetaData25, settings31);
        org.elasticsearch.common.logging.ESLogger eSLogger36 = indexSettings35.getlogger();
        boolean boolean37 = indexSettings35.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue38 = indexSettings35.syncInterval;
        int int39 = indexSettings35.getMaxResultWindow();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData40 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap41 = indexMetaData40.getAliases();
        int int42 = indexMetaData40.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData43 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet45 = indexMetaData43.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff46 = indexMetaData40.diff(indexMetaData43);
        long long47 = indexMetaData43.getCreationDate();
        org.elasticsearch.Version version48 = indexMetaData43.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings49 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap50 = settings49.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate51 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings52 = settings49.filter(strPredicate51);
        org.elasticsearch.index.IndexSettings indexSettings53 = new org.elasticsearch.index.IndexSettings(indexMetaData43, settings49);
        boolean boolean54 = indexSettings53.warmerEnabled;
        indexSettings53.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue57 = indexSettings53.getTranslogSyncInterval();
        indexSettings35.refreshInterval = timeValue57;
        org.elasticsearch.common.unit.TimeValue timeValue59 = indexSettings35.getsyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue60 = indexSettings35.getFlushThresholdSize();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue61 = settings20.getAsBytesSize("_all", byteSizeValue60);
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap64 = settings20.getGroups("_na_", true);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertNotNull(indexScopedSettings16);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig17);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(strImmutableOpenMap23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(indexMetaDataDiff28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(settings31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strPredicate33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(eSLogger36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10000 + "'", int39 == 10000);
        org.junit.Assert.assertNotNull(indexMetaData40);
        org.junit.Assert.assertNotNull(strImmutableOpenMap41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(indexMetaData43);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(indexMetaDataDiff46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(settings49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strPredicate51);
        org.junit.Assert.assertNotNull(settings52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertNotNull(byteSizeValue60);
        org.junit.Assert.assertNotNull(byteSizeValue61);
        org.junit.Assert.assertNotNull(strMap64);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue19 = indexSettings13.flushThresholdSize;
        int int20 = indexSettings13.getNumberOfReplicas();
        boolean boolean21 = indexSettings13.isOnSharedFilesystem();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting22 = indexSettings13.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        indexSettings13.TTLPurgeDisabled = true;
        org.elasticsearch.common.unit.TimeValue timeValue25 = indexSettings13.getDEFAULT_GC_DELETES();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(byteSizeValue19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(booleanSetting22);
        org.junit.Assert.assertNotNull(timeValue25);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.Version version19 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting21 = indexSettings13.getQUERY_STRING_ANALYZE_WILDCARD();
        org.apache.lucene.index.MergePolicy mergePolicy22 = indexSettings13.getMergePolicy();
        boolean boolean23 = indexSettings13.isShadowReplicaIndex();
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher24 = indexSettings13.getParseFieldMatcher();
        org.elasticsearch.Version version25 = indexSettings13.getversion();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = indexSettings13.getQUERY_STRING_ANALYZE_WILDCARD();
        boolean boolean27 = indexSettings13.isQueryStringAnalyzeWildcard();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(booleanSetting21);
        org.junit.Assert.assertNotNull(mergePolicy22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(parseFieldMatcher24);
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = indexSettings13.getIndexMetaData();
        boolean boolean20 = indexSettings13.warmerEnabled;
        indexSettings13.setEnableWarmer(false);
        boolean boolean23 = indexSettings13.isOnSharedFilesystem();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.index.translog.Translog.Durability> durabilitySetting24 = indexSettings13.getINDEX_TRANSLOG_DURABILITY_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(durabilitySetting24);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        int int21 = indexSettings13.getNumberOfShards();
        org.elasticsearch.common.settings.Settings settings22 = indexSettings13.settings;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig23 = indexSettings13.getMergeSchedulerConfig();
        boolean boolean24 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting25 = indexSettings13.getMAX_REFRESH_LISTENERS_PER_SHARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = indexSettings13.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting27 = indexSettings13.getQUERY_STRING_LENIENT_SETTING();
        indexSettings13.maxRescoreWindow = 0;
        int int30 = indexSettings13.getNumberOfShards();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.index.translog.Translog.Durability> durabilitySetting31 = indexSettings13.getINDEX_TRANSLOG_DURABILITY_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData32 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap33 = indexMetaData32.getAliases();
        int int34 = indexMetaData32.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData35 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet37 = indexMetaData35.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff38 = indexMetaData32.diff(indexMetaData35);
        long long39 = indexMetaData35.getCreationDate();
        org.elasticsearch.Version version40 = indexMetaData35.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings41 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap42 = settings41.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate43 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings44 = settings41.filter(strPredicate43);
        org.elasticsearch.index.IndexSettings indexSettings45 = new org.elasticsearch.index.IndexSettings(indexMetaData35, settings41);
        boolean boolean46 = indexSettings45.warmerEnabled;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData47 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap48 = indexMetaData47.getAliases();
        int int49 = indexMetaData47.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData50 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet52 = indexMetaData50.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff53 = indexMetaData47.diff(indexMetaData50);
        long long54 = indexMetaData50.getCreationDate();
        org.elasticsearch.Version version55 = indexMetaData50.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings56 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap57 = settings56.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate58 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings59 = settings56.filter(strPredicate58);
        org.elasticsearch.index.IndexSettings indexSettings60 = new org.elasticsearch.index.IndexSettings(indexMetaData50, settings56);
        org.elasticsearch.common.logging.ESLogger eSLogger61 = indexSettings60.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue62 = indexSettings60.getsyncInterval();
        indexSettings60.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting65 = indexSettings60.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData66 = indexSettings60.getIndexMetaData();
        indexSettings60.setwarmerEnabled(false);
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue69 = indexSettings60.flushThresholdSize;
        indexSettings45.flushThresholdSize = byteSizeValue69;
        indexSettings13.flushThresholdSize = byteSizeValue69;
        boolean boolean72 = indexSettings13.getisShadowReplicaIndex();
        int int73 = indexSettings13.maxRescoreWindow;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData74 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap75 = indexMetaData74.getAliases();
        int int76 = indexMetaData74.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData77 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet79 = indexMetaData77.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff80 = indexMetaData74.diff(indexMetaData77);
        long long81 = indexMetaData77.getCreationDate();
        org.elasticsearch.Version version82 = indexMetaData77.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings83 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap84 = settings83.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate85 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings86 = settings83.filter(strPredicate85);
        org.elasticsearch.index.IndexSettings indexSettings87 = new org.elasticsearch.index.IndexSettings(indexMetaData77, settings83);
        boolean boolean88 = indexSettings87.warmerEnabled;
        indexSettings87.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue91 = indexSettings87.getTranslogSyncInterval();
        int int92 = indexSettings87.maxRefreshListeners;
        boolean boolean93 = indexSettings87.defaultAllowUnmappedFields;
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig94 = indexSettings87.mergePolicyConfig;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData95 = indexSettings87.getIndexMetaData();
        indexSettings13.indexMetaData = indexMetaData95;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(settings22);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intSetting25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertNotNull(booleanSetting27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(durabilitySetting31);
        org.junit.Assert.assertNotNull(indexMetaData32);
        org.junit.Assert.assertNotNull(strImmutableOpenMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(indexMetaData35);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(indexMetaDataDiff38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(version40);
        org.junit.Assert.assertNotNull(settings41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strPredicate43);
        org.junit.Assert.assertNotNull(settings44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(indexMetaData47);
        org.junit.Assert.assertNotNull(strImmutableOpenMap48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(indexMetaData50);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(indexMetaDataDiff53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(version55);
        org.junit.Assert.assertNotNull(settings56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strPredicate58);
        org.junit.Assert.assertNotNull(settings59);
        org.junit.Assert.assertNotNull(eSLogger61);
        org.junit.Assert.assertNotNull(timeValue62);
        org.junit.Assert.assertNotNull(intSetting65);
        org.junit.Assert.assertNotNull(indexMetaData66);
        org.junit.Assert.assertNotNull(byteSizeValue69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(indexMetaData74);
        org.junit.Assert.assertNotNull(strImmutableOpenMap75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(indexMetaData77);
        org.junit.Assert.assertNotNull(strSet79);
        org.junit.Assert.assertNotNull(indexMetaDataDiff80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + (-1L) + "'", long81 == (-1L));
        org.junit.Assert.assertNotNull(version82);
        org.junit.Assert.assertNotNull(settings83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strPredicate85);
        org.junit.Assert.assertNotNull(settings86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(timeValue91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1000 + "'", int92 == 1000);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(mergePolicyConfig94);
        org.junit.Assert.assertNotNull(indexMetaData95);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder2 = builder0.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder5 = builder2.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder8 = builder5.put("archived.", (double) 'a');
        java.io.InputStream inputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder11 = builder5.loadFromStream("index.version.created", inputStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("_all");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData2 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap3 = indexMetaData2.getAliases();
        int int4 = indexMetaData2.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData5 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet7 = indexMetaData5.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff8 = indexMetaData2.diff(indexMetaData5);
        long long9 = indexMetaData5.getCreationDate();
        org.elasticsearch.Version version10 = indexMetaData5.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings11 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap12 = settings11.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate13 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings14 = settings11.filter(strPredicate13);
        org.elasticsearch.index.IndexSettings indexSettings15 = new org.elasticsearch.index.IndexSettings(indexMetaData5, settings11);
        java.lang.String str17 = settings11.get("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder19 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder22 = builder19.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder25 = builder22.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData27 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap28 = indexMetaData27.getAliases();
        int int29 = indexMetaData27.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData30 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet32 = indexMetaData30.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff33 = indexMetaData27.diff(indexMetaData30);
        long long34 = indexMetaData30.getCreationDate();
        org.elasticsearch.Version version35 = indexMetaData30.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder36 = builder22.put("index.creation_date_string", version35);
        org.elasticsearch.Version version37 = settings11.getAsVersion("index.creation_date", version35);
        java.lang.String str39 = settings11.toDelimitedString('a');
        org.elasticsearch.common.settings.Settings settings41 = settings11.getAsSettings("");
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap42 = settings41.getAsGroups();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder1.settings(settings41);
        int int44 = builder43.getRoutingNumShards();
        org.junit.Assert.assertNotNull(indexMetaData2);
        org.junit.Assert.assertNotNull(strImmutableOpenMap3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(indexMetaData5);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(indexMetaDataDiff8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(version10);
        org.junit.Assert.assertNotNull(settings11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strPredicate13);
        org.junit.Assert.assertNotNull(settings14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(indexMetaData27);
        org.junit.Assert.assertNotNull(strImmutableOpenMap28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(indexMetaData30);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(indexMetaDataDiff33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(settings41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = indexSettings13.getIndexMetaData();
        indexSettings13.setwarmerEnabled(false);
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher22 = indexSettings13.parseFieldMatcher;
        java.lang.String str23 = indexSettings13.customDataPath();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig24 = indexSettings13.mergeSchedulerConfig;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.index.translog.Translog.Durability> durabilitySetting25 = indexSettings13.getINDEX_TRANSLOG_DURABILITY_SETTING();
        org.elasticsearch.index.translog.Translog.Durability durability26 = indexSettings13.getTranslogDurability();
        int int27 = indexSettings13.getMaxRefreshListeners();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(parseFieldMatcher22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig24);
        org.junit.Assert.assertNotNull(durabilitySetting25);
        org.junit.Assert.assertTrue("'" + durability26 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability26.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1000 + "'", int27 == 1000);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getRefreshInterval();
        boolean boolean21 = indexSettings13.isQueryStringLenient();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.common.xcontent.XContentParser xContentParser3 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap5 = indexMetaData4.getAliases();
        int int6 = indexMetaData4.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet9 = indexMetaData7.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff10 = indexMetaData4.diff(indexMetaData7);
        long long11 = indexMetaData7.getCreationDate();
        org.elasticsearch.Version version12 = indexMetaData7.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings13 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap14 = settings13.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate15 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings16 = settings13.filter(strPredicate15);
        org.elasticsearch.index.IndexSettings indexSettings17 = new org.elasticsearch.index.IndexSettings(indexMetaData7, settings13);
        org.elasticsearch.common.logging.ESLogger eSLogger18 = indexSettings17.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue19 = indexSettings17.getsyncInterval();
        indexSettings17.setEnableWarmer(false);
        java.lang.String str22 = indexSettings17.defaultField;
        org.elasticsearch.common.settings.Settings settings23 = indexSettings17.settings;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting24 = indexSettings17.getINDEX_TRANSLOG_SYNC_INTERVAL_SETTING();
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher25 = indexSettings17.getParseFieldMatcher();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData26 = indexMetaData0.fromXContent(xContentParser3, parseFieldMatcher25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(strImmutableOpenMap5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(indexMetaDataDiff10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertNotNull(settings13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strPredicate15);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertNotNull(eSLogger18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_all" + "'", str22, "_all");
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertNotNull(timeValueSetting24);
        org.junit.Assert.assertNotNull(parseFieldMatcher25);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.getMaxRescoreWindow();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting16 = indexSettings13.getINDEX_CHECK_ON_STARTUP();
        indexSettings13.setTTLPurgeDisabled(true);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting19 = indexSettings13.getMAX_RESCORE_WINDOW_SETTING();
        long long20 = indexSettings13.gcDeletesInMillis;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertNotNull(strSetting16);
        org.junit.Assert.assertNotNull(intSetting19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 60000L + "'", long20 == 60000L);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder2 = builder0.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder5 = builder2.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder8 = builder2.put("index.creation_date", (double) (-1.0f));
        org.elasticsearch.common.settings.Settings.Builder builder9 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder12 = builder9.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder15 = builder12.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder26 = builder12.put("index.creation_date_string", version25);
        org.elasticsearch.common.settings.Settings.Builder builder29 = builder12.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder31 = builder29.normalizePrefix("index.blocks.read");
        java.util.Map<java.lang.String, java.lang.String> strMap32 = builder31.internalMap();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData33 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap34 = indexMetaData33.getAliases();
        int int35 = indexMetaData33.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet38 = indexMetaData36.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff39 = indexMetaData33.diff(indexMetaData36);
        long long40 = indexMetaData36.getCreationDate();
        org.elasticsearch.Version version41 = indexMetaData36.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings42 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap43 = settings42.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate44 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings45 = settings42.filter(strPredicate44);
        org.elasticsearch.index.IndexSettings indexSettings46 = new org.elasticsearch.index.IndexSettings(indexMetaData36, settings42);
        boolean boolean47 = indexSettings46.getqueryStringLenient();
        int int48 = indexSettings46.getNumberOfShards();
        boolean boolean49 = indexSettings46.isQueryStringLenient();
        java.util.function.Predicate<java.lang.String> strPredicate50 = indexSettings46.getindexNameMatcher();
        java.util.function.Function<java.lang.String, java.lang.String> strFunction51 = null;
        org.elasticsearch.common.settings.Settings.Builder builder52 = builder8.putProperties(strMap32, strPredicate50, strFunction51);
        org.elasticsearch.common.settings.Settings.Builder builder54 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder57 = builder54.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder60 = builder57.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData62 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap63 = indexMetaData62.getAliases();
        int int64 = indexMetaData62.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData65 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet67 = indexMetaData65.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff68 = indexMetaData62.diff(indexMetaData65);
        long long69 = indexMetaData65.getCreationDate();
        org.elasticsearch.Version version70 = indexMetaData65.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder71 = builder57.put("index.creation_date_string", version70);
        org.elasticsearch.common.settings.Settings.Builder builder74 = builder57.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder76 = builder74.normalizePrefix("index.blocks.read");
        org.elasticsearch.common.settings.Settings.Builder builder78 = builder74.loadFromSource("index.number_of_shards");
        org.elasticsearch.common.settings.Settings.Builder builder81 = builder78.put("index.number_of_shards", (int) '4');
        java.lang.String str83 = builder78.get("index.data_path");
        java.util.Map<java.lang.String, java.lang.String> strMap84 = builder78.internalMap();
        java.lang.String[] strArray87 = new java.lang.String[] { "5000099" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        org.elasticsearch.common.settings.Settings.Builder builder90 = builder78.putArray("index.blocks.metadata", (java.util.List<java.lang.String>) strList88);
        org.elasticsearch.common.settings.Settings.Builder builder91 = builder8.putArray("hi!", (java.util.List<java.lang.String>) strList88);
        org.elasticsearch.common.unit.ByteSizeUnit byteSizeUnit94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder95 = builder91.put("index.uuid", (long) (short) -1, byteSizeUnit94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(indexMetaData33);
        org.junit.Assert.assertNotNull(strImmutableOpenMap34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(indexMetaDataDiff39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(settings42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strPredicate44);
        org.junit.Assert.assertNotNull(settings45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strPredicate50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(indexMetaData62);
        org.junit.Assert.assertNotNull(strImmutableOpenMap63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(indexMetaData65);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNotNull(indexMetaDataDiff68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(version70);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder81);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.Version version19 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData21.getAliases();
        int int23 = indexMetaData21.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData24 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet26 = indexMetaData24.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff27 = indexMetaData21.diff(indexMetaData24);
        long long28 = indexMetaData24.getCreationDate();
        org.elasticsearch.Version version29 = indexMetaData24.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings30 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap31 = settings30.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate32 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings33 = settings30.filter(strPredicate32);
        org.elasticsearch.index.IndexSettings indexSettings34 = new org.elasticsearch.index.IndexSettings(indexMetaData24, settings30);
        java.lang.String str35 = indexSettings34.getUUID();
        boolean boolean36 = indexSettings34.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy37 = indexSettings34.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap39 = indexMetaData38.getAliases();
        int int40 = indexMetaData38.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData41 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet43 = indexMetaData41.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff44 = indexMetaData38.diff(indexMetaData41);
        long long45 = indexMetaData41.getCreationDate();
        org.elasticsearch.Version version46 = indexMetaData41.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings47 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap48 = settings47.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate49 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings50 = settings47.filter(strPredicate49);
        org.elasticsearch.index.IndexSettings indexSettings51 = new org.elasticsearch.index.IndexSettings(indexMetaData41, settings47);
        boolean boolean52 = indexSettings51.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig53 = indexSettings51.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability54 = indexSettings51.getdurability();
        indexSettings34.setTranslogDurability(durability54);
        indexSettings13.durability = durability54;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData57 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap58 = indexMetaData57.getAliases();
        int int59 = indexMetaData57.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData60 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet62 = indexMetaData60.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff63 = indexMetaData57.diff(indexMetaData60);
        long long64 = indexMetaData60.getCreationDate();
        org.elasticsearch.Version version65 = indexMetaData60.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings66 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap67 = settings66.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate68 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings69 = settings66.filter(strPredicate68);
        org.elasticsearch.index.IndexSettings indexSettings70 = new org.elasticsearch.index.IndexSettings(indexMetaData60, settings66);
        boolean boolean71 = indexSettings70.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig72 = indexSettings70.getMergeSchedulerConfig();
        boolean boolean73 = indexSettings70.queryStringAnalyzeWildcard;
        boolean boolean74 = indexSettings70.isDefaultAllowUnmappedFields();
        org.elasticsearch.common.unit.TimeValue timeValue75 = indexSettings70.refreshInterval;
        indexSettings13.setGCDeletes(timeValue75);
        org.elasticsearch.common.unit.TimeValue timeValue77 = indexSettings13.getRefreshInterval();
        indexSettings13.maxRefreshListeners = 10;
        boolean boolean80 = indexSettings13.isTTLPurgeDisabled();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(indexMetaData24);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(indexMetaDataDiff27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strPredicate32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_na_" + "'", str35, "_na_");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(mergePolicy37);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(strImmutableOpenMap39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(indexMetaData41);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(indexMetaDataDiff44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(version46);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strPredicate49);
        org.junit.Assert.assertNotNull(settings50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig53);
        org.junit.Assert.assertTrue("'" + durability54 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability54.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(indexMetaData57);
        org.junit.Assert.assertNotNull(strImmutableOpenMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(indexMetaData60);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(indexMetaDataDiff63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(version65);
        org.junit.Assert.assertNotNull(settings66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strPredicate68);
        org.junit.Assert.assertNotNull(settings69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(timeValue75);
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap2 = indexMetaData1.getAliases();
        int int3 = indexMetaData1.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet6 = indexMetaData4.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff7 = indexMetaData1.diff(indexMetaData4);
        long long8 = indexMetaData4.getCreationDate();
        org.elasticsearch.Version version9 = indexMetaData4.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings10 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap11 = settings10.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate12 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings13 = settings10.filter(strPredicate12);
        org.elasticsearch.index.IndexSettings indexSettings14 = new org.elasticsearch.index.IndexSettings(indexMetaData4, settings10);
        java.lang.String str15 = indexSettings14.getUUID();
        boolean boolean16 = indexSettings14.getqueryStringAnalyzeWildcard();
        java.lang.String str17 = indexSettings14.customDataPath();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData18.getAliases();
        int int20 = indexMetaData18.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet23 = indexMetaData21.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff24 = indexMetaData18.diff(indexMetaData21);
        long long25 = indexMetaData21.getCreationDate();
        org.elasticsearch.Version version26 = indexMetaData21.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings27 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap28 = settings27.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate29 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings30 = settings27.filter(strPredicate29);
        org.elasticsearch.index.IndexSettings indexSettings31 = new org.elasticsearch.index.IndexSettings(indexMetaData21, settings27);
        java.lang.String str32 = indexSettings31.getUUID();
        boolean boolean33 = indexSettings31.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability34 = indexSettings31.getTranslogDurability();
        indexSettings14.durability = durability34;
        java.lang.String str36 = indexSettings14.getDefaultField();
        java.util.function.Predicate<java.lang.String> strPredicate37 = indexSettings14.indexNameMatcher;
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting38 = indexSettings14.getMAX_RESCORE_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData39 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap40 = indexMetaData39.getAliases();
        int int41 = indexMetaData39.getRoutingFactor();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters42 = indexMetaData39.excludeFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData44 = indexMetaData39.mapping("archived.");
        indexSettings14.indexMetaData = indexMetaData39;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<org.elasticsearch.index.shard.ShardId> shardIdSet47 = org.elasticsearch.cluster.metadata.IndexMetaData.selectShrinkShards((int) (byte) 0, indexMetaData39, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: the number of target shards must be less that the number of source shards");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(indexMetaDataDiff7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(version9);
        org.junit.Assert.assertNotNull(settings10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strPredicate12);
        org.junit.Assert.assertNotNull(settings13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_na_" + "'", str15, "_na_");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(indexMetaDataDiff24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strPredicate29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_na_" + "'", str32, "_na_");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + durability34 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability34.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "_all" + "'", str36, "_all");
        org.junit.Assert.assertNotNull(strPredicate37);
        org.junit.Assert.assertNotNull(intSetting38);
        org.junit.Assert.assertNotNull(indexMetaData39);
        org.junit.Assert.assertNotNull(strImmutableOpenMap40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters42);
        org.junit.Assert.assertNull(mappingMetaData44);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue16 = null;
        indexSettings13.flushThresholdSize = byteSizeValue16;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting18 = org.elasticsearch.index.IndexSettings.QUERY_STRING_LENIENT_SETTING;
        java.lang.Boolean boolean19 = indexSettings13.getValue(booleanSetting18);
        int int20 = indexSettings13.getNumberOfShards();
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig21 = indexSettings13.getmergePolicyConfig();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = indexSettings13.indexMetaData;
        org.elasticsearch.common.io.stream.StreamOutput streamOutput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData22.writeTo(streamOutput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(booleanSetting18);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(mergePolicyConfig21);
        org.junit.Assert.assertNotNull(indexMetaData22);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        org.elasticsearch.common.unit.TimeValue timeValue18 = indexSettings13.syncInterval;
        java.util.function.Predicate<java.lang.String> strPredicate19 = indexSettings13.indexNameMatcher;
        int int20 = indexSettings13.maxRefreshListeners;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(strPredicate19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1000 + "'", int20 == 1000);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.metadata");
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.putAlias(aliasMetaData2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder22 = builder20.putNull("index.version.upgraded");
        org.elasticsearch.common.settings.Settings.Builder builder23 = builder22.replacePropertyPlaceholders();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap26 = indexMetaData25.getAliases();
        int int27 = indexMetaData25.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData28 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet30 = indexMetaData28.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff31 = indexMetaData25.diff(indexMetaData28);
        long long32 = indexMetaData28.getCreationDate();
        org.elasticsearch.Version version33 = indexMetaData28.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings34 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap35 = settings34.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate36 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings37 = settings34.filter(strPredicate36);
        org.elasticsearch.index.IndexSettings indexSettings38 = new org.elasticsearch.index.IndexSettings(indexMetaData28, settings34);
        java.lang.String str39 = indexSettings38.getUUID();
        boolean boolean40 = indexSettings38.getisShadowReplicaIndex();
        java.lang.String str41 = indexSettings38.customDataPath();
        indexSettings38.maxResultWindow = 1000;
        org.elasticsearch.common.unit.TimeValue timeValue44 = indexSettings38.refreshInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData45 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap46 = indexMetaData45.getAliases();
        int int47 = indexMetaData45.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData48 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet50 = indexMetaData48.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff51 = indexMetaData45.diff(indexMetaData48);
        long long52 = indexMetaData48.getCreationDate();
        org.elasticsearch.Version version53 = indexMetaData48.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings54 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap55 = settings54.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate56 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings57 = settings54.filter(strPredicate56);
        org.elasticsearch.index.IndexSettings indexSettings58 = new org.elasticsearch.index.IndexSettings(indexMetaData48, settings54);
        boolean boolean59 = indexSettings58.warmerEnabled;
        indexSettings58.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue62 = indexSettings58.getTranslogSyncInterval();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData63 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap64 = indexMetaData63.getAliases();
        int int65 = indexMetaData63.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData66 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet68 = indexMetaData66.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff69 = indexMetaData63.diff(indexMetaData66);
        long long70 = indexMetaData66.getCreationDate();
        org.elasticsearch.Version version71 = indexMetaData66.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings72 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap73 = settings72.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate74 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings75 = settings72.filter(strPredicate74);
        org.elasticsearch.index.IndexSettings indexSettings76 = new org.elasticsearch.index.IndexSettings(indexMetaData66, settings72);
        java.lang.String str77 = indexSettings76.getUUID();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting78 = indexSettings76.getINDEX_WARMER_ENABLED_SETTING();
        java.lang.Boolean boolean79 = indexSettings58.getValue(booleanSetting78);
        java.lang.Boolean boolean80 = indexSettings38.getValue(booleanSetting78);
        org.elasticsearch.Version version81 = indexSettings38.getIndexVersionCreated();
        org.elasticsearch.common.settings.Settings.Builder builder82 = builder22.put("index.version.upgraded", version81);
        org.elasticsearch.common.settings.Settings.Builder builder84 = builder82.loadFromSource("index.shared_filesystem.recover_on_any_node");
        java.nio.file.Path path85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder86 = builder82.loadFromPath(path85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strImmutableOpenMap26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(indexMetaData28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(indexMetaDataDiff31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strPredicate36);
        org.junit.Assert.assertNotNull(settings37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_na_" + "'", str39, "_na_");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(indexMetaData45);
        org.junit.Assert.assertNotNull(strImmutableOpenMap46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(indexMetaData48);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(indexMetaDataDiff51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(version53);
        org.junit.Assert.assertNotNull(settings54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strPredicate56);
        org.junit.Assert.assertNotNull(settings57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(timeValue62);
        org.junit.Assert.assertNotNull(indexMetaData63);
        org.junit.Assert.assertNotNull(strImmutableOpenMap64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(indexMetaData66);
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertNotNull(indexMetaDataDiff69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertNotNull(version71);
        org.junit.Assert.assertNotNull(settings72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strPredicate74);
        org.junit.Assert.assertNotNull(settings75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "_na_" + "'", str77, "_na_");
        org.junit.Assert.assertNotNull(booleanSetting78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + true + "'", boolean79, true);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + true + "'", boolean80, true);
        org.junit.Assert.assertNotNull(version81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder84);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.numberOfShards((int) (short) -1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.numberOfShards(1);
        org.elasticsearch.common.settings.Settings.Builder builder8 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder11 = builder8.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder14 = builder11.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.common.settings.Settings.Builder builder16 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder19 = builder16.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder21 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder24 = builder21.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder27 = builder24.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData29 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap30 = indexMetaData29.getAliases();
        int int31 = indexMetaData29.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData32 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet34 = indexMetaData32.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff35 = indexMetaData29.diff(indexMetaData32);
        long long36 = indexMetaData32.getCreationDate();
        org.elasticsearch.Version version37 = indexMetaData32.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder38 = builder24.put("index.creation_date_string", version37);
        org.elasticsearch.common.settings.Settings.Builder builder41 = builder24.put("index.version.created", "index.version.created_string");
        java.lang.String[] strArray43 = new java.lang.String[] {};
        org.elasticsearch.common.settings.Settings.Builder builder44 = builder24.extendArray("archived.", strArray43);
        org.elasticsearch.common.settings.Settings.Builder builder45 = builder16.extendArray("index.auto_expand_replicas", strArray43);
        org.elasticsearch.common.settings.Settings.Builder builder46 = builder11.putArray("archived.", strArray43);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = builder46.internalMap();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder48 = builder5.settings(builder46);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = builder46.internalMap();
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(indexMetaData29);
        org.junit.Assert.assertNotNull(strImmutableOpenMap30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(indexMetaData32);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(indexMetaDataDiff35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(strMap49);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder22 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder24 = builder22.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder27 = builder24.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder30 = builder27.put("", (double) 1000);
        java.lang.Class<?> wildcardClass31 = builder27.getClass();
        org.elasticsearch.common.settings.Settings.Builder builder32 = builder3.put("_all", (java.lang.Class) wildcardClass31);
        org.elasticsearch.common.settings.Settings.Builder builder35 = builder3.put("active_allocations", true);
        org.elasticsearch.common.settings.Settings settings36 = builder35.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(settings36);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder23 = builder3.put("index.blocks.read_only", false);
        org.elasticsearch.common.settings.Settings.Builder builder26 = builder23.put("index.blocks.read_only", "index.shadow_replicas");
        java.nio.file.Path path27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder28 = builder23.loadFromPath(path27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting19 = indexSettings13.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        boolean boolean20 = indexSettings13.getdefaultAllowUnmappedFields();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(booleanSetting19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap3 = indexMetaData0.getMappings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap5 = indexMetaData4.getAliases();
        int int6 = indexMetaData4.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet9 = indexMetaData7.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff10 = indexMetaData4.diff(indexMetaData7);
        long long11 = indexMetaData7.getCreationDate();
        org.elasticsearch.Version version12 = indexMetaData7.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings13 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap14 = settings13.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate15 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings16 = settings13.filter(strPredicate15);
        org.elasticsearch.index.IndexSettings indexSettings17 = new org.elasticsearch.index.IndexSettings(indexMetaData7, settings13);
        org.elasticsearch.common.logging.ESLogger eSLogger18 = indexSettings17.getlogger();
        boolean boolean19 = indexSettings17.isWarmerEnabled();
        indexSettings17.maxRescoreWindow = 1;
        boolean boolean22 = indexSettings17.hasCustomDataPath();
        boolean boolean23 = indexMetaData0.equals((java.lang.Object) boolean22);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters24 = indexMetaData0.includeFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strImmutableOpenMap3);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(strImmutableOpenMap5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(indexMetaDataDiff10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertNotNull(settings13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strPredicate15);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertNotNull(eSLogger18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters24);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue16 = null;
        indexSettings13.flushThresholdSize = byteSizeValue16;
        boolean boolean18 = indexSettings13.isDefaultAllowUnmappedFields();
        boolean boolean19 = indexSettings13.isQueryStringLenient();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting20 = indexSettings13.getALLOW_UNMAPPED();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(booleanSetting20);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        boolean boolean15 = indexSettings13.isTTLPurgeDisabled();
        org.elasticsearch.common.settings.Settings settings16 = indexSettings13.nodeSettings;
        indexSettings13.setMaxResultWindow(1000);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(settings16);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder22 = builder20.normalizePrefix("index.blocks.read");
        org.elasticsearch.common.settings.Settings.Builder builder24 = builder20.loadFromSource("index.number_of_shards");
        org.elasticsearch.common.settings.Settings.Builder builder27 = builder24.put("index.number_of_shards", (int) '4');
        org.elasticsearch.common.settings.Settings.Builder builder30 = builder27.put("index.priority", 5);
        org.elasticsearch.common.settings.Settings.Builder builder32 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder34 = builder32.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder37 = builder34.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder40 = builder34.put("index.creation_date", (double) (-1.0f));
        java.lang.String str42 = builder34.get("index.shared_filesystem.recover_on_any_node");
        org.elasticsearch.common.settings.Settings.Builder builder44 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder46 = builder44.normalizePrefix("index.version.created");
        java.lang.String[] strArray53 = new java.lang.String[] { "index.number_of_shards", "index.version.upgraded", "index.creation_date_string", "index.version.created", "index.version.upgraded_string" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        org.elasticsearch.common.settings.Settings.Builder builder56 = builder46.putArray("index.blocks.write", (java.util.List<java.lang.String>) strList54);
        org.elasticsearch.common.settings.Settings.Builder builder57 = builder34.putArray("index.blocks.read_only", (java.util.List<java.lang.String>) strList54);
        org.elasticsearch.common.settings.Settings.Builder builder58 = builder30.putArray("index.creation_date", (java.util.List<java.lang.String>) strList54);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        int int21 = indexSettings13.getNumberOfShards();
        org.elasticsearch.common.settings.Settings settings22 = indexSettings13.settings;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig23 = indexSettings13.getMergeSchedulerConfig();
        boolean boolean24 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting25 = indexSettings13.getMAX_REFRESH_LISTENERS_PER_SHARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = indexSettings13.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting27 = indexSettings13.getQUERY_STRING_LENIENT_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData28 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap29 = indexMetaData28.getAliases();
        int int30 = indexMetaData28.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData31 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet33 = indexMetaData31.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff34 = indexMetaData28.diff(indexMetaData31);
        long long35 = indexMetaData31.getCreationDate();
        org.elasticsearch.Version version36 = indexMetaData31.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings37 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap38 = settings37.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate39 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings40 = settings37.filter(strPredicate39);
        org.elasticsearch.index.IndexSettings indexSettings41 = new org.elasticsearch.index.IndexSettings(indexMetaData31, settings37);
        java.lang.String str42 = indexSettings41.getUUID();
        boolean boolean43 = indexSettings41.getisShadowReplicaIndex();
        java.lang.String str44 = indexSettings41.customDataPath();
        indexSettings41.maxResultWindow = 1000;
        org.elasticsearch.common.unit.TimeValue timeValue47 = indexSettings41.refreshInterval;
        java.lang.String str48 = indexSettings41.getDefaultField();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig49 = indexSettings41.mergeSchedulerConfig;
        java.lang.String str50 = indexSettings41.getUUID();
        org.elasticsearch.common.unit.TimeValue timeValue51 = indexSettings41.getRefreshInterval();
        indexSettings13.setRefreshInterval(timeValue51);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(settings22);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intSetting25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertNotNull(booleanSetting27);
        org.junit.Assert.assertNotNull(indexMetaData28);
        org.junit.Assert.assertNotNull(strImmutableOpenMap29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(indexMetaData31);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(indexMetaDataDiff34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertNotNull(settings37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strPredicate39);
        org.junit.Assert.assertNotNull(settings40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_na_" + "'", str42, "_na_");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "_all" + "'", str48, "_all");
        org.junit.Assert.assertNotNull(mergeSchedulerConfig49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "_na_" + "'", str50, "_na_");
        org.junit.Assert.assertNotNull(timeValue51);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.warmerEnabled;
        boolean boolean15 = indexSettings13.isQueryStringAnalyzeWildcard();
        boolean boolean16 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        org.elasticsearch.common.logging.ESLogger eSLogger31 = indexSettings30.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue32 = indexSettings30.getsyncInterval();
        indexSettings30.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting35 = indexSettings30.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue36 = indexSettings30.flushThresholdSize;
        indexSettings13.flushThresholdSize = byteSizeValue36;
        org.elasticsearch.Version version38 = indexSettings13.getversion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData39 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap40 = indexMetaData39.getAliases();
        int int41 = indexMetaData39.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData42 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet44 = indexMetaData42.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff45 = indexMetaData39.diff(indexMetaData42);
        long long46 = indexMetaData42.getCreationDate();
        org.elasticsearch.Version version47 = indexMetaData42.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings48 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap49 = settings48.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate50 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings51 = settings48.filter(strPredicate50);
        org.elasticsearch.index.IndexSettings indexSettings52 = new org.elasticsearch.index.IndexSettings(indexMetaData42, settings48);
        org.elasticsearch.common.logging.ESLogger eSLogger53 = indexSettings52.getlogger();
        boolean boolean54 = indexSettings52.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue55 = indexSettings52.syncInterval;
        org.elasticsearch.common.settings.Settings settings56 = indexSettings52.getSettings();
        java.lang.String str57 = indexSettings52.defaultField;
        org.elasticsearch.Version version58 = indexSettings52.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue59 = indexSettings52.syncInterval;
        indexSettings13.setGCDeletes(timeValue59);
        boolean boolean61 = indexSettings13.isShadowReplicaIndex();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(eSLogger31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(intSetting35);
        org.junit.Assert.assertNotNull(byteSizeValue36);
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(indexMetaData39);
        org.junit.Assert.assertNotNull(strImmutableOpenMap40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(indexMetaData42);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(indexMetaDataDiff45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(version47);
        org.junit.Assert.assertNotNull(settings48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strPredicate50);
        org.junit.Assert.assertNotNull(settings51);
        org.junit.Assert.assertNotNull(eSLogger53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(timeValue55);
        org.junit.Assert.assertNotNull(settings56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "_all" + "'", str57, "_all");
        org.junit.Assert.assertNotNull(version58);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap3 = indexMetaData0.getMappings();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData5 = indexMetaData0.mappingOrDefault("index.blocks.write");
        java.util.Set<java.lang.String> strSet7 = null; // flaky: indexMetaData0.activeAllocationIds((int) 'a');
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData0.getInitialRecoveryFilters();
        long long9 = indexMetaData0.getCreationDate();
        // The following exception was thrown during execution in test generation
        try {
            long long11 = indexMetaData0.primaryTerm((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strImmutableOpenMap3);
        org.junit.Assert.assertNull(mappingMetaData5);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap3 = indexMetaData0.getMappings();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData5 = indexMetaData0.mappingOrDefault("index.blocks.write");
        java.util.Set<java.lang.String> strSet7 = null; // flaky: indexMetaData0.activeAllocationIds((int) 'a');
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData9 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet11 = indexMetaData9.activeAllocationIds(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData9);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData13 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet15 = indexMetaData13.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap16 = indexMetaData13.getMappings();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData18 = indexMetaData13.mappingOrDefault("index.blocks.write");
        java.util.Set<java.lang.String> strSet20 = null; // flaky: indexMetaData13.activeAllocationIds((int) (byte) -1);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff21 = indexMetaData9.diff(indexMetaData13);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff22 = indexMetaData0.diff(indexMetaData13);
        org.elasticsearch.index.Index index23 = indexMetaData0.getMergeSourceIndex();
        long long24 = indexMetaData0.getCreationDate();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strImmutableOpenMap3);
        org.junit.Assert.assertNull(mappingMetaData5);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertNotNull(indexMetaData9);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(indexMetaData13);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strImmutableOpenMap16);
        org.junit.Assert.assertNull(mappingMetaData18);
        org.junit.Assert.assertNull(strSet20);
        org.junit.Assert.assertNotNull(indexMetaDataDiff21);
        org.junit.Assert.assertNotNull(indexMetaDataDiff22);
        org.junit.Assert.assertNull(index23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.warmerEnabled;
        indexSettings13.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue17 = indexSettings13.getTranslogSyncInterval();
        int int18 = indexSettings13.maxRefreshListeners;
        indexSettings13.gcDeletesInMillis = (byte) 0;
        java.lang.String str21 = indexSettings13.defaultField;
        org.elasticsearch.common.unit.TimeValue timeValue22 = indexSettings13.getRefreshInterval();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1000 + "'", int18 == 1000);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_all" + "'", str21, "_all");
        org.junit.Assert.assertNotNull(timeValue22);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        boolean boolean1 = org.elasticsearch.common.settings.AbstractScopedSettings.isValidKey("index.priority");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.numberOfShards((int) (short) -1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder5.removeAllAliases();
        org.elasticsearch.common.settings.Settings.Builder builder7 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder10 = builder7.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder13 = builder10.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData15 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap16 = indexMetaData15.getAliases();
        int int17 = indexMetaData15.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet20 = indexMetaData18.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff21 = indexMetaData15.diff(indexMetaData18);
        long long22 = indexMetaData18.getCreationDate();
        org.elasticsearch.Version version23 = indexMetaData18.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder24 = builder10.put("index.creation_date_string", version23);
        org.elasticsearch.common.settings.Settings.Builder builder27 = builder10.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder29 = builder27.normalizePrefix("index.blocks.read");
        org.elasticsearch.common.settings.Settings.Builder builder31 = builder27.loadFromSource("index.number_of_shards");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder6.settings(builder27);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData34 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap35 = indexMetaData34.getAliases();
        int int36 = indexMetaData34.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet39 = indexMetaData37.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff40 = indexMetaData34.diff(indexMetaData37);
        long long41 = indexMetaData37.getCreationDate();
        org.elasticsearch.Version version42 = indexMetaData37.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings43 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap44 = settings43.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate45 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings46 = settings43.filter(strPredicate45);
        org.elasticsearch.index.IndexSettings indexSettings47 = new org.elasticsearch.index.IndexSettings(indexMetaData37, settings43);
        org.elasticsearch.common.logging.ESLogger eSLogger48 = indexSettings47.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue49 = indexSettings47.getsyncInterval();
        indexSettings47.setEnableWarmer(false);
        java.lang.String str52 = indexSettings47.defaultField;
        org.elasticsearch.common.settings.Settings settings53 = indexSettings47.settings;
        org.elasticsearch.common.unit.TimeValue timeValue54 = indexSettings47.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue55 = indexSettings47.getFlushThresholdSize();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData56 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        int int57 = indexMetaData56.getTotalNumberOfShards();
        boolean boolean58 = indexSettings47.updateIndexMetaData(indexMetaData56);
        indexSettings47.warmerEnabled = true;
        org.elasticsearch.Version version61 = indexSettings47.getIndexVersionCreated();
        org.elasticsearch.common.settings.Settings.Builder builder62 = builder27.put("index.blocks.read_only", version61);
        org.elasticsearch.common.settings.Settings.Builder builder64 = builder27.loadFromSource("index.blocks.write");
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(indexMetaData15);
        org.junit.Assert.assertNotNull(strImmutableOpenMap16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(indexMetaDataDiff21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(indexMetaData34);
        org.junit.Assert.assertNotNull(strImmutableOpenMap35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(indexMetaDataDiff40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(version42);
        org.junit.Assert.assertNotNull(settings43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strPredicate45);
        org.junit.Assert.assertNotNull(settings46);
        org.junit.Assert.assertNotNull(eSLogger48);
        org.junit.Assert.assertNotNull(timeValue49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "_all" + "'", str52, "_all");
        org.junit.Assert.assertNotNull(settings53);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(byteSizeValue55);
        org.junit.Assert.assertNotNull(indexMetaData56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(version61);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder64);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate22 = indexSettings13.indexNameMatcher;
        org.elasticsearch.Version version23 = indexSettings13.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting24 = indexSettings13.getDEFAULT_FIELD_SETTING();
        boolean boolean25 = indexSettings13.queryStringAllowLeadingWildcard;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData26 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap27 = indexMetaData26.getAliases();
        int int28 = indexMetaData26.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData29 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet31 = indexMetaData29.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff32 = indexMetaData26.diff(indexMetaData29);
        long long33 = indexMetaData29.getCreationDate();
        org.elasticsearch.Version version34 = indexMetaData29.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings35 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap36 = settings35.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate37 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings38 = settings35.filter(strPredicate37);
        org.elasticsearch.index.IndexSettings indexSettings39 = new org.elasticsearch.index.IndexSettings(indexMetaData29, settings35);
        org.elasticsearch.common.logging.ESLogger eSLogger40 = indexSettings39.getlogger();
        int int41 = indexSettings39.maxRescoreWindow;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings42 = indexSettings39.scopedSettings;
        org.elasticsearch.index.translog.Translog.Durability durability43 = indexSettings39.getdurability();
        indexSettings13.setTranslogDurability(durability43);
        indexSettings13.setEnableWarmer(true);
        int int47 = indexSettings13.getNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(strSetting24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(indexMetaData26);
        org.junit.Assert.assertNotNull(strImmutableOpenMap27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(indexMetaData29);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(indexMetaDataDiff32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(version34);
        org.junit.Assert.assertNotNull(settings35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strPredicate37);
        org.junit.Assert.assertNotNull(settings38);
        org.junit.Assert.assertNotNull(eSLogger40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10000 + "'", int41 == 10000);
        org.junit.Assert.assertNotNull(indexScopedSettings42);
        org.junit.Assert.assertTrue("'" + durability43 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability43.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        int int21 = indexSettings13.getNumberOfShards();
        org.elasticsearch.common.settings.Settings settings22 = indexSettings13.settings;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig23 = indexSettings13.getMergeSchedulerConfig();
        int int24 = indexSettings13.getNumberOfReplicas();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting25 = indexSettings13.getINDEX_REFRESH_INTERVAL_SETTING();
        boolean boolean26 = indexSettings13.isOnSharedFilesystem();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(settings22);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(timeValueSetting25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.warmerEnabled;
        boolean boolean15 = indexSettings13.isQueryStringAnalyzeWildcard();
        boolean boolean16 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        org.elasticsearch.common.logging.ESLogger eSLogger31 = indexSettings30.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue32 = indexSettings30.getsyncInterval();
        indexSettings30.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting35 = indexSettings30.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue36 = indexSettings30.flushThresholdSize;
        indexSettings13.flushThresholdSize = byteSizeValue36;
        org.elasticsearch.Version version38 = indexSettings13.getversion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData39 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap40 = indexMetaData39.getAliases();
        int int41 = indexMetaData39.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData42 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet44 = indexMetaData42.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff45 = indexMetaData39.diff(indexMetaData42);
        long long46 = indexMetaData42.getCreationDate();
        org.elasticsearch.Version version47 = indexMetaData42.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings48 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap49 = settings48.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate50 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings51 = settings48.filter(strPredicate50);
        org.elasticsearch.index.IndexSettings indexSettings52 = new org.elasticsearch.index.IndexSettings(indexMetaData42, settings48);
        org.elasticsearch.common.logging.ESLogger eSLogger53 = indexSettings52.getlogger();
        boolean boolean54 = indexSettings52.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue55 = indexSettings52.syncInterval;
        org.elasticsearch.common.settings.Settings settings56 = indexSettings52.getSettings();
        java.lang.String str57 = indexSettings52.defaultField;
        org.elasticsearch.Version version58 = indexSettings52.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue59 = indexSettings52.syncInterval;
        indexSettings13.setGCDeletes(timeValue59);
        org.elasticsearch.Version version61 = indexSettings13.getversion();
        indexSettings13.setMaxRefreshListeners((int) (short) 10);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(eSLogger31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(intSetting35);
        org.junit.Assert.assertNotNull(byteSizeValue36);
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(indexMetaData39);
        org.junit.Assert.assertNotNull(strImmutableOpenMap40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(indexMetaData42);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(indexMetaDataDiff45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(version47);
        org.junit.Assert.assertNotNull(settings48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strPredicate50);
        org.junit.Assert.assertNotNull(settings51);
        org.junit.Assert.assertNotNull(eSLogger53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(timeValue55);
        org.junit.Assert.assertNotNull(settings56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "_all" + "'", str57, "_all");
        org.junit.Assert.assertNotNull(version58);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertNotNull(version61);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder2 = builder0.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder5 = builder2.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder8 = builder2.put("index.creation_date", (double) (-1.0f));
        org.elasticsearch.common.settings.Settings.Builder builder11 = builder8.put("index.blocks.write", (float) 1L);
        java.nio.file.Path path12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder13 = builder11.loadFromPath(path12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData18.getAliases();
        int int20 = indexMetaData18.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet23 = indexMetaData21.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff24 = indexMetaData18.diff(indexMetaData21);
        long long25 = indexMetaData21.getCreationDate();
        org.apache.lucene.util.Version version26 = indexMetaData21.getMinimumCompatibleVersion();
        indexSettings13.indexMetaData = indexMetaData21;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting28 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        org.elasticsearch.index.translog.Translog.Durability durability29 = indexSettings13.getTranslogDurability();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig30 = indexSettings13.mergeSchedulerConfig;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(indexMetaDataDiff24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNull(version26);
        org.junit.Assert.assertNotNull(timeValueSetting28);
        org.junit.Assert.assertTrue("'" + durability29 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability29.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(mergeSchedulerConfig30);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        boolean boolean15 = indexSettings13.isTTLPurgeDisabled();
        boolean boolean16 = indexSettings13.warmerEnabled;
        boolean boolean17 = indexSettings13.queryStringAnalyzeWildcard;
        org.elasticsearch.common.unit.TimeValue timeValue18 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig19 = indexSettings13.mergeSchedulerConfig;
        boolean boolean20 = indexSettings13.isIndexUsingShadowReplicas();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig21 = indexSettings13.getMergeSchedulerConfig();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig21);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap15 = indexMetaData14.getAliases();
        int int16 = indexMetaData14.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet19 = indexMetaData17.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff20 = indexMetaData14.diff(indexMetaData17);
        long long21 = indexMetaData17.getCreationDate();
        org.elasticsearch.Version version22 = indexMetaData17.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings23 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap24 = settings23.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate25 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings26 = settings23.filter(strPredicate25);
        org.elasticsearch.index.IndexSettings indexSettings27 = new org.elasticsearch.index.IndexSettings(indexMetaData17, settings23);
        boolean boolean28 = indexSettings27.getqueryStringLenient();
        int int29 = indexSettings27.getNumberOfShards();
        int int30 = indexSettings27.getMaxResultWindow();
        boolean boolean31 = indexSettings27.isShadowReplicaIndex;
        java.util.function.Predicate<java.lang.String> strPredicate32 = indexSettings27.indexNameMatcher;
        int int33 = indexSettings27.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData34 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap35 = indexMetaData34.getAliases();
        int int36 = indexMetaData34.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet39 = indexMetaData37.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff40 = indexMetaData34.diff(indexMetaData37);
        long long41 = indexMetaData37.getCreationDate();
        org.elasticsearch.Version version42 = indexMetaData37.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings43 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap44 = settings43.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate45 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings46 = settings43.filter(strPredicate45);
        org.elasticsearch.index.IndexSettings indexSettings47 = new org.elasticsearch.index.IndexSettings(indexMetaData37, settings43);
        org.elasticsearch.common.logging.ESLogger eSLogger48 = indexSettings47.getlogger();
        boolean boolean49 = indexSettings47.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue50 = indexSettings47.syncInterval;
        org.elasticsearch.common.settings.Settings settings51 = indexSettings47.getSettings();
        java.lang.String str52 = indexSettings47.defaultField;
        org.elasticsearch.Version version53 = indexSettings47.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue54 = indexSettings47.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData55 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap56 = indexMetaData55.getAliases();
        int int57 = indexMetaData55.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData58 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet60 = indexMetaData58.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff61 = indexMetaData55.diff(indexMetaData58);
        long long62 = indexMetaData58.getCreationDate();
        org.elasticsearch.Version version63 = indexMetaData58.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings64 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap65 = settings64.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate66 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings67 = settings64.filter(strPredicate66);
        org.elasticsearch.index.IndexSettings indexSettings68 = new org.elasticsearch.index.IndexSettings(indexMetaData58, settings64);
        java.lang.String str69 = indexSettings68.getUUID();
        boolean boolean70 = indexSettings68.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy71 = indexSettings68.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData72 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap73 = indexMetaData72.getAliases();
        int int74 = indexMetaData72.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData75 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet77 = indexMetaData75.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff78 = indexMetaData72.diff(indexMetaData75);
        long long79 = indexMetaData75.getCreationDate();
        org.elasticsearch.Version version80 = indexMetaData75.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings81 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap82 = settings81.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate83 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings84 = settings81.filter(strPredicate83);
        org.elasticsearch.index.IndexSettings indexSettings85 = new org.elasticsearch.index.IndexSettings(indexMetaData75, settings81);
        boolean boolean86 = indexSettings85.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig87 = indexSettings85.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability88 = indexSettings85.getdurability();
        indexSettings68.setTranslogDurability(durability88);
        indexSettings47.durability = durability88;
        indexSettings27.durability = durability88;
        org.elasticsearch.Version version92 = indexSettings27.version;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData93 = indexSettings27.getIndexMetaData();
        boolean boolean94 = settings9.equals((java.lang.Object) indexMetaData93);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(strImmutableOpenMap15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(indexMetaDataDiff20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strPredicate25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10000 + "'", int30 == 10000);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strPredicate32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(indexMetaData34);
        org.junit.Assert.assertNotNull(strImmutableOpenMap35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(indexMetaDataDiff40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(version42);
        org.junit.Assert.assertNotNull(settings43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strPredicate45);
        org.junit.Assert.assertNotNull(settings46);
        org.junit.Assert.assertNotNull(eSLogger48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(settings51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "_all" + "'", str52, "_all");
        org.junit.Assert.assertNotNull(version53);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(indexMetaData55);
        org.junit.Assert.assertNotNull(strImmutableOpenMap56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(indexMetaData58);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNotNull(indexMetaDataDiff61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(version63);
        org.junit.Assert.assertNotNull(settings64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strPredicate66);
        org.junit.Assert.assertNotNull(settings67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "_na_" + "'", str69, "_na_");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(mergePolicy71);
        org.junit.Assert.assertNotNull(indexMetaData72);
        org.junit.Assert.assertNotNull(strImmutableOpenMap73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(indexMetaData75);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertNotNull(indexMetaDataDiff78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-1L) + "'", long79 == (-1L));
        org.junit.Assert.assertNotNull(version80);
        org.junit.Assert.assertNotNull(settings81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strPredicate83);
        org.junit.Assert.assertNotNull(settings84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig87);
        org.junit.Assert.assertTrue("'" + durability88 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability88.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(version92);
        org.junit.Assert.assertNotNull(indexMetaData93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder2 = builder0.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder5 = builder2.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder8 = builder2.put("index.creation_date", (double) (-1.0f));
        org.elasticsearch.common.settings.Settings.Builder builder11 = builder8.put("index.blocks.write", (float) 1L);
        org.elasticsearch.common.settings.Settings.Builder builder13 = builder8.normalizePrefix("index.");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData18.getAliases();
        int int20 = indexMetaData18.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet23 = indexMetaData21.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff24 = indexMetaData18.diff(indexMetaData21);
        long long25 = indexMetaData21.getCreationDate();
        org.apache.lucene.util.Version version26 = indexMetaData21.getMinimumCompatibleVersion();
        indexSettings13.indexMetaData = indexMetaData21;
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData29 = indexMetaData21.mapping("index.uuid");
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap30 = indexMetaData21.getActiveAllocationIds();
        long long31 = indexMetaData21.getVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state32 = indexMetaData21.getState();
        int int33 = indexMetaData21.getRoutingNumShards();
        org.elasticsearch.Version version34 = indexMetaData21.getCreationVersion();
        int int35 = indexMetaData21.getTotalNumberOfShards();
        int int36 = indexMetaData21.getNumberOfReplicas();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(indexMetaDataDiff24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNull(version26);
        org.junit.Assert.assertNull(mappingMetaData29);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 1L + "'", long31 == 1L);
        org.junit.Assert.assertTrue("'" + state32 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state32.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(version34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = indexSettings13.getIndexMetaData();
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getNodeSettings();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.unit.RatioValue ratioValue20 = settings17.getAsRatio("index.creation_date", "index.creation_date");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Invalid ratio or percentage [index.creation_date]");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(settings17);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue16 = indexSettings13.flushThresholdSize;
        boolean boolean17 = indexSettings13.TTLPurgeDisabled;
        boolean boolean18 = indexSettings13.isQueryStringAllowLeadingWildcard();
        java.lang.String str19 = indexSettings13.nodeName;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getsyncInterval();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteSizeValue16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(timeValue20);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        int int17 = indexSettings13.getMaxResultWindow();
        org.elasticsearch.common.logging.ESLogger eSLogger18 = indexSettings13.getlogger();
        long long19 = indexSettings13.getGcDeletesInMillis();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000 + "'", int17 == 10000);
        org.junit.Assert.assertNotNull(eSLogger18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 60000L + "'", long19 == 60000L);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom1 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.registerPrototype("index.creation_date_string", custom1);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap2 = indexMetaData1.getAliases();
        int int3 = indexMetaData1.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet6 = indexMetaData4.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff7 = indexMetaData1.diff(indexMetaData4);
        long long8 = indexMetaData4.getCreationDate();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff9 = indexMetaData0.diff(indexMetaData4);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap14 = indexMetaData11.getMappings();
        int int15 = indexMetaData11.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state16 = indexMetaData11.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder10.state(state16);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder17.numberOfShards(10000);
        org.elasticsearch.cluster.metadata.AliasMetaData.Builder builder20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder17.putAlias(builder20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(indexMetaDataDiff7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaDataDiff9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strImmutableOpenMap14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + state16 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state16.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        boolean boolean16 = indexSettings13.isQueryStringLenient();
        java.util.function.Predicate<java.lang.String> strPredicate17 = indexSettings13.getindexNameMatcher();
        org.elasticsearch.common.logging.ESLogger eSLogger18 = indexSettings13.logger;
        indexSettings13.maxRefreshListeners = (-1);
        org.elasticsearch.common.logging.ESLogger eSLogger21 = indexSettings13.getlogger();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strPredicate17);
        org.junit.Assert.assertNotNull(eSLogger18);
        org.junit.Assert.assertNotNull(eSLogger21);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.Version version19 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting21 = indexSettings13.getQUERY_STRING_ANALYZE_WILDCARD();
        org.apache.lucene.index.MergePolicy mergePolicy22 = indexSettings13.getMergePolicy();
        boolean boolean23 = indexSettings13.isQueryStringAllowLeadingWildcard();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting24 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        boolean boolean25 = indexSettings13.isDefaultAllowUnmappedFields();
        boolean boolean26 = indexSettings13.isOnSharedFilesystem();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(booleanSetting21);
        org.junit.Assert.assertNotNull(mergePolicy22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(timeValueSetting24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        int int16 = indexSettings13.getMaxResultWindow();
        boolean boolean17 = indexSettings13.isShadowReplicaIndex;
        boolean boolean18 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.logging.ESLogger eSLogger20 = indexSettings13.getlogger();
        java.lang.String str21 = indexSettings13.getDefaultField();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(eSLogger20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_all" + "'", str21, "_all");
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.maxRescoreWindow;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings16 = indexSettings13.scopedSettings;
        java.util.Set<org.elasticsearch.common.settings.Setting<?>> wildcardSettingSet17 = indexScopedSettings16.getBUILT_IN_INDEX_SETTINGS();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData18.getAliases();
        int int20 = indexMetaData18.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet23 = indexMetaData21.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff24 = indexMetaData18.diff(indexMetaData21);
        long long25 = indexMetaData21.getCreationDate();
        org.elasticsearch.Version version26 = indexMetaData21.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings27 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap28 = settings27.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate29 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings30 = settings27.filter(strPredicate29);
        org.elasticsearch.index.IndexSettings indexSettings31 = new org.elasticsearch.index.IndexSettings(indexMetaData21, settings27);
        org.elasticsearch.common.logging.ESLogger eSLogger32 = indexSettings31.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue33 = indexSettings31.getsyncInterval();
        indexSettings31.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting36 = indexSettings31.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting37 = indexSettings31.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        java.util.function.Consumer<java.lang.Boolean> booleanConsumer38 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexScopedSettings16.addSettingsUpdateConsumer(booleanSetting37, booleanConsumer38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Setting is not registered for key [indices.query.query_string.allowLeadingWildcard]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertNotNull(indexScopedSettings16);
        org.junit.Assert.assertNotNull(wildcardSettingSet17);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(indexMetaDataDiff24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strPredicate29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertNotNull(eSLogger32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(intSetting36);
        org.junit.Assert.assertNotNull(booleanSetting37);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings0 = org.elasticsearch.common.settings.IndexScopedSettings.DEFAULT_SCOPED_SETTINGS;
        org.elasticsearch.common.settings.Setting.Property property1 = indexScopedSettings0.getScope();
        java.util.function.Predicate<java.lang.String> strPredicate2 = indexScopedSettings0.getINDEX_SETTINGS_KEY_PREDICATE();
        boolean boolean4 = indexScopedSettings0.hasDynamicSetting("index.uuid");
        boolean boolean6 = indexScopedSettings0.hasDynamicSetting("index.blocks.read_only");
        org.junit.Assert.assertNotNull(indexScopedSettings0);
        org.junit.Assert.assertTrue("'" + property1 + "' != '" + org.elasticsearch.common.settings.Setting.Property.IndexScope + "'", property1.equals(org.elasticsearch.common.settings.Setting.Property.IndexScope));
        org.junit.Assert.assertNotNull(strPredicate2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.Version version19 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData21.getAliases();
        int int23 = indexMetaData21.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData24 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet26 = indexMetaData24.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff27 = indexMetaData21.diff(indexMetaData24);
        long long28 = indexMetaData24.getCreationDate();
        org.elasticsearch.Version version29 = indexMetaData24.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings30 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap31 = settings30.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate32 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings33 = settings30.filter(strPredicate32);
        org.elasticsearch.index.IndexSettings indexSettings34 = new org.elasticsearch.index.IndexSettings(indexMetaData24, settings30);
        java.lang.String str35 = indexSettings34.getUUID();
        boolean boolean36 = indexSettings34.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy37 = indexSettings34.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap39 = indexMetaData38.getAliases();
        int int40 = indexMetaData38.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData41 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet43 = indexMetaData41.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff44 = indexMetaData38.diff(indexMetaData41);
        long long45 = indexMetaData41.getCreationDate();
        org.elasticsearch.Version version46 = indexMetaData41.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings47 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap48 = settings47.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate49 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings50 = settings47.filter(strPredicate49);
        org.elasticsearch.index.IndexSettings indexSettings51 = new org.elasticsearch.index.IndexSettings(indexMetaData41, settings47);
        boolean boolean52 = indexSettings51.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig53 = indexSettings51.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability54 = indexSettings51.getdurability();
        indexSettings34.setTranslogDurability(durability54);
        indexSettings13.durability = durability54;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData57 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap58 = indexMetaData57.getAliases();
        int int59 = indexMetaData57.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData60 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet62 = indexMetaData60.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff63 = indexMetaData57.diff(indexMetaData60);
        long long64 = indexMetaData60.getCreationDate();
        org.elasticsearch.Version version65 = indexMetaData60.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings66 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap67 = settings66.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate68 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings69 = settings66.filter(strPredicate68);
        org.elasticsearch.index.IndexSettings indexSettings70 = new org.elasticsearch.index.IndexSettings(indexMetaData60, settings66);
        boolean boolean71 = indexSettings70.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig72 = indexSettings70.getMergeSchedulerConfig();
        boolean boolean73 = indexSettings70.queryStringAnalyzeWildcard;
        boolean boolean74 = indexSettings70.isDefaultAllowUnmappedFields();
        org.elasticsearch.common.unit.TimeValue timeValue75 = indexSettings70.refreshInterval;
        indexSettings13.setGCDeletes(timeValue75);
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig77 = indexSettings13.getmergePolicyConfig();
        org.elasticsearch.common.unit.TimeValue timeValue78 = indexSettings13.refreshInterval;
        boolean boolean79 = indexSettings13.isShadowReplicaIndex();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(indexMetaData24);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(indexMetaDataDiff27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strPredicate32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_na_" + "'", str35, "_na_");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(mergePolicy37);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(strImmutableOpenMap39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(indexMetaData41);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(indexMetaDataDiff44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(version46);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strPredicate49);
        org.junit.Assert.assertNotNull(settings50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig53);
        org.junit.Assert.assertTrue("'" + durability54 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability54.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(indexMetaData57);
        org.junit.Assert.assertNotNull(strImmutableOpenMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(indexMetaData60);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(indexMetaDataDiff63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(version65);
        org.junit.Assert.assertNotNull(settings66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strPredicate68);
        org.junit.Assert.assertNotNull(settings69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(timeValue75);
        org.junit.Assert.assertNotNull(mergePolicyConfig77);
        org.junit.Assert.assertNotNull(timeValue78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getisShadowReplicaIndex();
        java.lang.String str16 = indexSettings13.customDataPath();
        indexSettings13.maxResultWindow = 1000;
        org.elasticsearch.common.unit.TimeValue timeValue19 = indexSettings13.refreshInterval;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getRefreshInterval();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.index.translog.Translog.Durability> durabilitySetting21 = indexSettings13.getINDEX_TRANSLOG_DURABILITY_SETTING();
        boolean boolean22 = indexSettings13.isWarmerEnabled();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(durabilitySetting21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData18.getAliases();
        int int20 = indexMetaData18.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet23 = indexMetaData21.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff24 = indexMetaData18.diff(indexMetaData21);
        long long25 = indexMetaData21.getCreationDate();
        org.apache.lucene.util.Version version26 = indexMetaData21.getMinimumCompatibleVersion();
        indexSettings13.indexMetaData = indexMetaData21;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting28 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData29 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap30 = indexMetaData29.getAliases();
        int int31 = indexMetaData29.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData32 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet34 = indexMetaData32.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff35 = indexMetaData29.diff(indexMetaData32);
        long long36 = indexMetaData32.getCreationDate();
        org.elasticsearch.Version version37 = indexMetaData32.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings38 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap39 = settings38.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate40 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings41 = settings38.filter(strPredicate40);
        org.elasticsearch.index.IndexSettings indexSettings42 = new org.elasticsearch.index.IndexSettings(indexMetaData32, settings38);
        java.lang.String str43 = indexSettings42.getUUID();
        boolean boolean44 = indexSettings42.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting45 = indexSettings42.getINDEX_REFRESH_INTERVAL_SETTING();
        org.elasticsearch.Version version46 = indexSettings42.getversion();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue47 = indexSettings42.getFlushThresholdSize();
        indexSettings13.flushThresholdSize = byteSizeValue47;
        java.lang.String str49 = indexSettings13.getNodeName();
        boolean boolean50 = indexSettings13.getisShadowReplicaIndex();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(indexMetaDataDiff24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNull(version26);
        org.junit.Assert.assertNotNull(timeValueSetting28);
        org.junit.Assert.assertNotNull(indexMetaData29);
        org.junit.Assert.assertNotNull(strImmutableOpenMap30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(indexMetaData32);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(indexMetaDataDiff35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertNotNull(settings38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strPredicate40);
        org.junit.Assert.assertNotNull(settings41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "_na_" + "'", str43, "_na_");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(timeValueSetting45);
        org.junit.Assert.assertNotNull(version46);
        org.junit.Assert.assertNotNull(byteSizeValue47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig15 = indexSettings13.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability16 = indexSettings13.getdurability();
        indexSettings13.setEnableWarmer(false);
        indexSettings13.setEnableWarmer(true);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData21.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state23 = indexMetaData21.getState();
        int int24 = indexMetaData21.getRoutingFactor();
        indexSettings13.indexMetaData = indexMetaData21;
        org.elasticsearch.Version version26 = indexMetaData21.getUpgradedVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig15);
        org.junit.Assert.assertTrue("'" + durability16 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability16.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertTrue("'" + state23 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state23.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(version26);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        int int4 = builder1.getRoutingNumShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder1.removeAlias("index.blocks.metadata");
        java.lang.String str7 = builder1.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.version(0L);
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "index." + "'", str7, "index.");
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.common.settings.Settings.Builder builder4 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder7 = builder4.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder10 = builder7.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData12 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap13 = indexMetaData12.getAliases();
        int int14 = indexMetaData12.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData15 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet17 = indexMetaData15.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff18 = indexMetaData12.diff(indexMetaData15);
        long long19 = indexMetaData15.getCreationDate();
        org.elasticsearch.Version version20 = indexMetaData15.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder21 = builder7.put("index.creation_date_string", version20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder1.settings(builder21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder22.removeAlias("index.uuid");
        org.elasticsearch.cluster.metadata.IndexMetaData.State state25 = org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder24.state(state25);
        int int27 = builder26.numberOfShards();
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(indexMetaData12);
        org.junit.Assert.assertNotNull(strImmutableOpenMap13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(indexMetaData15);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(indexMetaDataDiff18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + state25 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE + "'", state25.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        java.lang.String str16 = indexSettings13.customDataPath();
        boolean boolean17 = indexSettings13.getqueryStringAllowLeadingWildcard();
        boolean boolean18 = indexSettings13.isWarmerEnabled();
        boolean boolean19 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting20 = indexSettings13.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        indexSettings13.maxResultWindow = ' ';
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(booleanSetting20);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("_all");
        org.elasticsearch.cluster.metadata.IndexMetaData.State state3 = org.elasticsearch.cluster.metadata.IndexMetaData.State.fromId((byte) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.state(state3);
        // The following exception was thrown during execution in test generation
        try {
            long long6 = builder1.primaryTerm((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: you must set the number of shards before setting/reading primary terms");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + state3 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE + "'", state3.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings0 = org.elasticsearch.common.settings.IndexScopedSettings.DEFAULT_SCOPED_SETTINGS;
        org.elasticsearch.common.settings.Setting.Property property1 = indexScopedSettings0.getScope();
        java.lang.String str2 = indexScopedSettings0.nodeName();
        boolean boolean4 = indexScopedSettings0.isPrivateSetting("_all");
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting5 = org.elasticsearch.index.IndexSettings.INDEX_WARMER_ENABLED_SETTING;
        java.lang.Boolean boolean6 = indexScopedSettings0.get(booleanSetting5);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap8 = indexMetaData7.getAliases();
        int int9 = indexMetaData7.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet12 = indexMetaData10.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData7.diff(indexMetaData10);
        long long14 = indexMetaData10.getCreationDate();
        org.elasticsearch.Version version15 = indexMetaData10.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings16 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap17 = settings16.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate18 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings19 = settings16.filter(strPredicate18);
        org.elasticsearch.index.IndexSettings indexSettings20 = new org.elasticsearch.index.IndexSettings(indexMetaData10, settings16);
        org.elasticsearch.common.logging.ESLogger eSLogger21 = indexSettings20.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue22 = indexSettings20.getsyncInterval();
        indexSettings20.setEnableWarmer(false);
        java.lang.String str25 = indexSettings20.defaultField;
        org.elasticsearch.common.settings.Settings settings26 = indexSettings20.settings;
        org.elasticsearch.common.unit.TimeValue timeValue27 = indexSettings20.getTranslogSyncInterval();
        int int28 = indexSettings20.getNumberOfShards();
        org.elasticsearch.common.settings.Settings settings29 = indexSettings20.settings;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig30 = indexSettings20.getMergeSchedulerConfig();
        boolean boolean31 = indexSettings20.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting32 = indexSettings20.getMAX_REFRESH_LISTENERS_PER_SHARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting33 = indexSettings20.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean34 = indexScopedSettings0.get(booleanSetting33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: settings scope doesn't match the setting scope [IndexScope] not in [[NodeScope]]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexScopedSettings0);
        org.junit.Assert.assertTrue("'" + property1 + "' != '" + org.elasticsearch.common.settings.Setting.Property.IndexScope + "'", property1.equals(org.elasticsearch.common.settings.Setting.Property.IndexScope));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(booleanSetting5);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + true + "'", boolean6, true);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strPredicate18);
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(eSLogger21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "_all" + "'", str25, "_all");
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(intSetting32);
        org.junit.Assert.assertNotNull(booleanSetting33);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap3 = indexMetaData0.getMappings();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData5 = indexMetaData0.mappingOrDefault("index.blocks.write");
        java.util.Set<java.lang.String> strSet7 = null; // flaky: indexMetaData0.activeAllocationIds((int) 'a');
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData9 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet11 = indexMetaData9.activeAllocationIds(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData9);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData13 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet15 = indexMetaData13.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap16 = indexMetaData13.getMappings();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData18 = indexMetaData13.mappingOrDefault("index.blocks.write");
        java.util.Set<java.lang.String> strSet20 = null; // flaky: indexMetaData13.activeAllocationIds((int) (byte) -1);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff21 = indexMetaData9.diff(indexMetaData13);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff22 = indexMetaData0.diff(indexMetaData13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        // The following exception was thrown during execution in test generation
        try {
            int int25 = org.elasticsearch.cluster.metadata.IndexMetaData.getRoutingFactor(indexMetaData0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: the number of source shards [1] must be a must be a multiple of [-1]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strImmutableOpenMap3);
        org.junit.Assert.assertNull(mappingMetaData5);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertNotNull(indexMetaData9);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(indexMetaData13);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strImmutableOpenMap16);
        org.junit.Assert.assertNull(mappingMetaData18);
        org.junit.Assert.assertNull(strSet20);
        org.junit.Assert.assertNotNull(indexMetaDataDiff21);
        org.junit.Assert.assertNotNull(indexMetaDataDiff22);
        org.junit.Assert.assertNotNull(builder23);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder22 = builder20.normalizePrefix("index.blocks.read");
        org.elasticsearch.common.settings.Settings.Builder builder24 = builder20.loadFromSource("index.number_of_shards");
        java.io.InputStream inputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder27 = builder24.loadFromStream("index.shadow_replicas", inputStream26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.metadata");
        java.lang.String str2 = builder1.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.creationDate(1L);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder1.numberOfShards(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder1.removeAllAliases();
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "index.blocks.metadata" + "'", str2, "index.blocks.metadata");
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.common.settings.Settings.Builder builder9 = builder6.put("index.blocks.write", "index.version.upgraded_string");
        org.elasticsearch.common.settings.Settings.Builder builder11 = builder6.loadFromSource("hi!");
        org.elasticsearch.common.settings.Settings.Builder builder14 = builder11.put("primary_terms", "");
        java.util.Map<java.lang.String, java.lang.String> strMap15 = builder14.internalMap();
        java.util.concurrent.TimeUnit timeUnit18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder19 = builder14.put("false", (long) 10000, timeUnit18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData8 = builder6.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder6.numberOfShards((int) (short) -1);
        java.lang.String[] strArray28 = new java.lang.String[] { "index.version.created", "index.blocks.metadata", "active_allocations", "index.version.minimum_compatible", "index.uuid", "index.shadow_replicas", "index.version.created", "_all", "_all", "index.", "index.creation_date_string", "index.shared_filesystem.recover_on_any_node", "_all", "index.number_of_shards", "index.blocks.read", "index.version.upgraded_string" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder6.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet29);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder3.putActiveAllocationIds(10, (java.util.Set<java.lang.String>) strSet29);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = builder3.creationDate((-1L));
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = builder3.creationDate(1L);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder36.creationDate((long) 'a');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = builder36.removeAllAliases();
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = builder36.putAlias(aliasMetaData40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(mappingMetaData8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder39);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = indexSettings13.getIndexMetaData();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters20 = indexMetaData19.getInitialRecoveryFilters();
        org.apache.lucene.util.Version version21 = indexMetaData19.getMinimumCompatibleVersion();
        org.elasticsearch.common.settings.Settings.Builder builder22 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder25 = builder22.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder28 = builder25.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData30 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap31 = indexMetaData30.getAliases();
        int int32 = indexMetaData30.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData33 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet35 = indexMetaData33.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff36 = indexMetaData30.diff(indexMetaData33);
        long long37 = indexMetaData33.getCreationDate();
        org.elasticsearch.Version version38 = indexMetaData33.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder39 = builder25.put("index.creation_date_string", version38);
        org.elasticsearch.common.settings.Settings.Builder builder42 = builder25.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder44 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder46 = builder44.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder49 = builder46.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder52 = builder49.put("", (double) 1000);
        java.lang.Class<?> wildcardClass53 = builder49.getClass();
        org.elasticsearch.common.settings.Settings.Builder builder54 = builder25.put("_all", (java.lang.Class) wildcardClass53);
        org.elasticsearch.common.settings.Settings.Builder builder57 = builder25.put("active_allocations", true);
        boolean boolean58 = indexMetaData19.equals((java.lang.Object) builder25);
        org.elasticsearch.common.settings.Settings.Builder builder61 = builder25.put("active_allocations", 60000L);
        org.elasticsearch.common.settings.Settings.Builder builder64 = builder25.put("index.shared_filesystem.recover_on_any_node", 10000);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNull(discoveryNodeFilters20);
        org.junit.Assert.assertNull(version21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(indexMetaData30);
        org.junit.Assert.assertNotNull(strImmutableOpenMap31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(indexMetaData33);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(indexMetaDataDiff36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder64);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        int int5 = indexMetaData0.getNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getisShadowReplicaIndex();
        java.lang.String str16 = indexSettings13.customDataPath();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting17 = indexSettings13.getMAX_RESCORE_WINDOW_SETTING();
        org.elasticsearch.common.settings.Settings settings18 = indexSettings13.nodeSettings;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(intSetting17);
        org.junit.Assert.assertNotNull(settings18);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate22 = indexSettings13.indexNameMatcher;
        org.elasticsearch.Version version23 = indexSettings13.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting24 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue25 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_BLOCKS_READ_SETTING;
        java.lang.Boolean boolean27 = indexSettings13.getValue(booleanSetting26);
        indexSettings13.TTLPurgeDisabled = true;
        int int30 = indexSettings13.maxRescoreWindow;
        org.elasticsearch.index.translog.Translog.Durability durability31 = null;
        indexSettings13.setTranslogDurability(durability31);
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting33 = indexSettings13.getINDEX_TRANSLOG_SYNC_INTERVAL_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(strSetting24);
        org.junit.Assert.assertNotNull(byteSizeValue25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10000 + "'", int30 == 10000);
        org.junit.Assert.assertNotNull(timeValueSetting33);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getisShadowReplicaIndex();
        java.lang.String str16 = indexSettings13.customDataPath();
        indexSettings13.maxResultWindow = 1000;
        org.elasticsearch.common.unit.TimeValue timeValue19 = indexSettings13.refreshInterval;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getRefreshInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.flushThresholdSize;
        boolean boolean22 = indexSettings13.isDefaultAllowUnmappedFields();
        indexSettings13.TTLPurgeDisabled = true;
        boolean boolean26 = indexSettings13.matchesIndexName("index.blocks.write");
        org.elasticsearch.common.unit.TimeValue timeValue27 = indexSettings13.getDEFAULT_GC_DELETES();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(timeValue27);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy16 = indexSettings13.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        boolean boolean31 = indexSettings30.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig32 = indexSettings30.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability33 = indexSettings30.getdurability();
        indexSettings13.setTranslogDurability(durability33);
        int int35 = indexSettings13.getNumberOfShards();
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher36 = indexSettings13.getParseFieldMatcher();
        org.elasticsearch.common.unit.TimeValue timeValue37 = indexSettings13.getDEFAULT_GC_DELETES();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(mergePolicy16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig32);
        org.junit.Assert.assertTrue("'" + durability33 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability33.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(parseFieldMatcher36);
        org.junit.Assert.assertNotNull(timeValue37);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.common.settings.Settings.Builder builder9 = builder3.put("index.blocks.read", (int) '#');
        org.elasticsearch.common.settings.Settings.Builder builder12 = builder3.put("index.priority", true);
        org.elasticsearch.common.settings.Settings.Builder builder14 = builder3.normalizePrefix("index.shared_filesystem");
        java.util.concurrent.TimeUnit timeUnit17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder18 = builder14.put("index.number_of_replicas=0#index.number_of_shards=1#index.version.created=5000099#", (long) (short) 1, timeUnit17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.excludeFilters();
        long long6 = indexMetaData0.getVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings0 = org.elasticsearch.common.settings.IndexScopedSettings.DEFAULT_SCOPED_SETTINGS;
        org.elasticsearch.common.settings.Setting.Property property1 = indexScopedSettings0.getScope();
        java.lang.String str2 = indexScopedSettings0.nodeName();
        java.util.Set<org.elasticsearch.common.settings.Setting<?>> wildcardSettingSet3 = indexScopedSettings0.getBUILT_IN_INDEX_SETTINGS();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap5 = indexMetaData4.getAliases();
        int int6 = indexMetaData4.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet9 = indexMetaData7.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff10 = indexMetaData4.diff(indexMetaData7);
        long long11 = indexMetaData7.getCreationDate();
        org.elasticsearch.Version version12 = indexMetaData7.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings13 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap14 = settings13.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate15 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings16 = settings13.filter(strPredicate15);
        org.elasticsearch.index.IndexSettings indexSettings17 = new org.elasticsearch.index.IndexSettings(indexMetaData7, settings13);
        org.elasticsearch.common.logging.ESLogger eSLogger18 = indexSettings17.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue19 = indexSettings17.getsyncInterval();
        indexSettings17.setEnableWarmer(false);
        java.lang.String str22 = indexSettings17.defaultField;
        org.elasticsearch.common.settings.Settings settings23 = indexSettings17.settings;
        org.elasticsearch.common.unit.TimeValue timeValue24 = indexSettings17.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue25 = indexSettings17.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate26 = indexSettings17.indexNameMatcher;
        org.elasticsearch.Version version27 = indexSettings17.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting28 = indexSettings17.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue29 = indexSettings17.getFlushThresholdSize();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting30 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_BLOCKS_READ_SETTING;
        java.lang.Boolean boolean31 = indexSettings17.getValue(booleanSetting30);
        java.util.function.Consumer<java.lang.Boolean> booleanConsumer32 = null;
        java.util.function.Consumer<java.lang.Boolean> booleanConsumer33 = null;
        indexScopedSettings0.addSettingsUpdateConsumer(booleanSetting30, booleanConsumer32, booleanConsumer33);
        org.elasticsearch.common.settings.Setting.Property property35 = indexScopedSettings0.getScope();
        org.junit.Assert.assertNotNull(indexScopedSettings0);
        org.junit.Assert.assertTrue("'" + property1 + "' != '" + org.elasticsearch.common.settings.Setting.Property.IndexScope + "'", property1.equals(org.elasticsearch.common.settings.Setting.Property.IndexScope));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(wildcardSettingSet3);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(strImmutableOpenMap5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(indexMetaDataDiff10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertNotNull(settings13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strPredicate15);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertNotNull(eSLogger18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_all" + "'", str22, "_all");
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(byteSizeValue25);
        org.junit.Assert.assertNotNull(strPredicate26);
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(strSetting28);
        org.junit.Assert.assertNotNull(byteSizeValue29);
        org.junit.Assert.assertNotNull(booleanSetting30);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertTrue("'" + property35 + "' != '" + org.elasticsearch.common.settings.Setting.Property.IndexScope + "'", property35.equals(org.elasticsearch.common.settings.Setting.Property.IndexScope));
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        int int16 = indexSettings13.maxRescoreWindow;
        boolean boolean17 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting18 = indexSettings13.getQUERY_STRING_LENIENT_SETTING();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.ByteSizeValue> byteSizeValueSetting19 = indexSettings13.getINDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE_SETTING();
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher20 = indexSettings13.parseFieldMatcher;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting21 = indexSettings13.getALLOW_UNMAPPED();
        int int22 = indexSettings13.maxRescoreWindow;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(booleanSetting18);
        org.junit.Assert.assertNotNull(byteSizeValueSetting19);
        org.junit.Assert.assertNotNull(parseFieldMatcher20);
        org.junit.Assert.assertNotNull(booleanSetting21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10000 + "'", int22 == 10000);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        indexSettings13.maxRescoreWindow = 1;
        org.elasticsearch.common.unit.TimeValue timeValue18 = indexSettings13.getRefreshInterval();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting19 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(strSetting19);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.getMaxRescoreWindow();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting16 = indexSettings13.getINDEX_CHECK_ON_STARTUP();
        org.elasticsearch.common.unit.TimeValue timeValue17 = indexSettings13.getDEFAULT_REFRESH_INTERVAL();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.index.translog.Translog.Durability> durabilitySetting18 = indexSettings13.getINDEX_TRANSLOG_DURABILITY_SETTING();
        java.lang.String str19 = indexSettings13.nodeName;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertNotNull(strSetting16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(durabilitySetting18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.creationDate((long) ' ');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder3.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.version((long) (short) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder4.removeAlias("index.creation_date");
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAllAliases();
        int int5 = builder1.getRoutingNumShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap8 = indexMetaData7.getAliases();
        int int9 = indexMetaData7.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet12 = indexMetaData10.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData7.diff(indexMetaData10);
        long long14 = indexMetaData10.getCreationDate();
        org.elasticsearch.Version version15 = indexMetaData10.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings16 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap17 = settings16.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate18 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings19 = settings16.filter(strPredicate18);
        org.elasticsearch.index.IndexSettings indexSettings20 = new org.elasticsearch.index.IndexSettings(indexMetaData10, settings16);
        java.lang.String str22 = settings16.get("index.version.created");
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = settings16.getAsStructuredMap();
        java.lang.String str25 = settings16.get("index.version.upgraded");
        java.util.Set<java.lang.String> strSet26 = settings16.names();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = builder1.putActiveAllocationIds((int) (short) 100, strSet26);
        long long28 = builder1.version();
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strPredicate18);
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 1L + "'", long28 == 1L);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.excludeFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData5 = indexMetaData0.mapping("archived.");
        int int6 = indexMetaData0.getRoutingFactor();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(mappingMetaData5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig15 = indexSettings13.getMergeSchedulerConfig();
        org.elasticsearch.common.settings.Settings settings16 = indexSettings13.settings;
        int int17 = indexSettings13.getMaxRefreshListeners();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData18.getAliases();
        int int20 = indexMetaData18.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet23 = indexMetaData21.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff24 = indexMetaData18.diff(indexMetaData21);
        long long25 = indexMetaData21.getCreationDate();
        org.elasticsearch.Version version26 = indexMetaData21.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings27 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap28 = settings27.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate29 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings30 = settings27.filter(strPredicate29);
        org.elasticsearch.index.IndexSettings indexSettings31 = new org.elasticsearch.index.IndexSettings(indexMetaData21, settings27);
        boolean boolean32 = indexSettings31.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig33 = indexSettings31.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability34 = indexSettings31.getdurability();
        indexSettings13.setTranslogDurability(durability34);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap37 = indexMetaData36.getAliases();
        int int38 = indexMetaData36.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData39 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet41 = indexMetaData39.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff42 = indexMetaData36.diff(indexMetaData39);
        long long43 = indexMetaData39.getCreationDate();
        org.elasticsearch.Version version44 = indexMetaData39.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings45 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap46 = settings45.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate47 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings48 = settings45.filter(strPredicate47);
        org.elasticsearch.index.IndexSettings indexSettings49 = new org.elasticsearch.index.IndexSettings(indexMetaData39, settings45);
        boolean boolean50 = indexSettings49.warmerEnabled;
        indexSettings49.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue53 = indexSettings49.getTranslogSyncInterval();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData54 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap55 = indexMetaData54.getAliases();
        int int56 = indexMetaData54.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData57 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet59 = indexMetaData57.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff60 = indexMetaData54.diff(indexMetaData57);
        long long61 = indexMetaData57.getCreationDate();
        org.elasticsearch.Version version62 = indexMetaData57.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings63 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap64 = settings63.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate65 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings66 = settings63.filter(strPredicate65);
        org.elasticsearch.index.IndexSettings indexSettings67 = new org.elasticsearch.index.IndexSettings(indexMetaData57, settings63);
        java.lang.String str68 = indexSettings67.getUUID();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting69 = indexSettings67.getINDEX_WARMER_ENABLED_SETTING();
        java.lang.Boolean boolean70 = indexSettings49.getValue(booleanSetting69);
        org.elasticsearch.index.translog.Translog.Durability durability71 = indexSettings49.getdurability();
        indexSettings13.setTranslogDurability(durability71);
        long long73 = indexSettings13.getGcDeletesInMillis();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig15);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1000 + "'", int17 == 1000);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(indexMetaDataDiff24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strPredicate29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig33);
        org.junit.Assert.assertTrue("'" + durability34 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability34.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(strImmutableOpenMap37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(indexMetaData39);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(indexMetaDataDiff42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(settings45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strPredicate47);
        org.junit.Assert.assertNotNull(settings48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(timeValue53);
        org.junit.Assert.assertNotNull(indexMetaData54);
        org.junit.Assert.assertNotNull(strImmutableOpenMap55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(indexMetaData57);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNotNull(indexMetaDataDiff60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertNotNull(version62);
        org.junit.Assert.assertNotNull(settings63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strPredicate65);
        org.junit.Assert.assertNotNull(settings66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "_na_" + "'", str68, "_na_");
        org.junit.Assert.assertNotNull(booleanSetting69);
        org.junit.Assert.assertEquals("'" + boolean70 + "' != '" + true + "'", boolean70, true);
        org.junit.Assert.assertTrue("'" + durability71 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability71.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 60000L + "'", long73 == 60000L);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        org.apache.lucene.util.Version version4 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state5 = indexMetaData0.getState();
        org.elasticsearch.common.io.stream.StreamInput streamInput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = indexMetaData0.readFrom(streamInput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(version4);
        org.junit.Assert.assertTrue("'" + state5 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state5.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.getdefaultAllowUnmappedFields();
        boolean boolean16 = indexSettings13.getqueryStringLenient();
        boolean boolean17 = indexSettings13.queryStringAllowLeadingWildcard;
        int int18 = indexSettings13.maxRefreshListeners;
        boolean boolean19 = indexSettings13.hasCustomDataPath();
        boolean boolean20 = indexSettings13.isDefaultAllowUnmappedFields();
        indexSettings13.setMaxRefreshListeners((int) (short) 10);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1000 + "'", int18 == 1000);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.removeAlias("index.creation_date_string");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.numberOfShards(10000);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.removeAlias("index.blocks.metadata");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder5.version(0L);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap2 = indexMetaData1.getAliases();
        int int3 = indexMetaData1.getRoutingFactor();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap5 = indexMetaData1.getCustoms();
        org.apache.lucene.util.Version version6 = indexMetaData1.getMinimumCompatibleVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<org.elasticsearch.index.shard.ShardId> shardIdSet8 = org.elasticsearch.cluster.metadata.IndexMetaData.selectShrinkShards((int) (byte) 10, indexMetaData1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: the number of target shards (-1) must be greater than the shard id: 10");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(strImmutableOpenMap5);
        org.junit.Assert.assertNull(version6);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getisShadowReplicaIndex();
        java.lang.String str16 = indexSettings13.customDataPath();
        indexSettings13.maxResultWindow = 1000;
        org.elasticsearch.common.unit.TimeValue timeValue19 = indexSettings13.refreshInterval;
        java.lang.String str20 = indexSettings13.getDefaultField();
        int int21 = indexSettings13.getMaxRefreshListeners();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap23 = indexMetaData22.getAliases();
        int int24 = indexMetaData22.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet27 = indexMetaData25.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff28 = indexMetaData22.diff(indexMetaData25);
        long long29 = indexMetaData25.getCreationDate();
        org.elasticsearch.Version version30 = indexMetaData25.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings31 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap32 = settings31.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate33 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings34 = settings31.filter(strPredicate33);
        org.elasticsearch.index.IndexSettings indexSettings35 = new org.elasticsearch.index.IndexSettings(indexMetaData25, settings31);
        org.elasticsearch.common.logging.ESLogger eSLogger36 = indexSettings35.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue37 = indexSettings35.getsyncInterval();
        indexSettings13.setRefreshInterval(timeValue37);
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig39 = indexSettings13.mergePolicyConfig;
        indexSettings13.setTTLPurgeDisabled(true);
        boolean boolean42 = indexSettings13.warmerEnabled;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_all" + "'", str20, "_all");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1000 + "'", int21 == 1000);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(strImmutableOpenMap23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(indexMetaDataDiff28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(settings31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strPredicate33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(eSLogger36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(mergePolicyConfig39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAllAliases();
        org.elasticsearch.common.settings.Settings settings5 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap6 = settings5.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate7 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings8 = settings5.filter(strPredicate7);
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue10 = null;
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue11 = settings5.getAsBytesSize("hi!", byteSizeValue10);
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap13 = settings5.getAsGroups(false);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder4.settings(settings5);
        long long15 = builder14.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder14.creationDate(100L);
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(settings5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strPredicate7);
        org.junit.Assert.assertNotNull(settings8);
        org.junit.Assert.assertNull(byteSizeValue11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        long long1 = indexMetaData0.getCreationDate();
        int int2 = indexMetaData0.getRoutingNumShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.requireFilters();
        // The following exception was thrown during execution in test generation
        try {
            long long5 = indexMetaData0.primaryTerm((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + (-1L) + "'", long1 == (-1L));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData18.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state20 = indexMetaData18.getState();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters21 = indexMetaData18.includeFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData23 = indexMetaData18.mappingOrDefault("index.creation_date");
        indexSettings13.indexMetaData = indexMetaData18;
        org.elasticsearch.cluster.metadata.IndexMetaData.State state25 = indexMetaData18.getState();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput26 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData18.writeTo(streamOutput26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + state20 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state20.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNull(discoveryNodeFilters21);
        org.junit.Assert.assertNull(mappingMetaData23);
        org.junit.Assert.assertTrue("'" + state25 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state25.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData18.getAliases();
        int int20 = indexMetaData18.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet23 = indexMetaData21.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff24 = indexMetaData18.diff(indexMetaData21);
        long long25 = indexMetaData21.getCreationDate();
        org.apache.lucene.util.Version version26 = indexMetaData21.getMinimumCompatibleVersion();
        indexSettings13.indexMetaData = indexMetaData21;
        org.elasticsearch.common.settings.Settings settings28 = indexSettings13.nodeSettings;
        boolean boolean29 = indexSettings13.isDefaultAllowUnmappedFields();
        org.elasticsearch.common.unit.TimeValue timeValue30 = indexSettings13.getsyncInterval();
        org.elasticsearch.common.settings.Settings settings31 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue32 = indexSettings13.getDEFAULT_GC_DELETES();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting33 = indexSettings13.getINDEX_TRANSLOG_SYNC_INTERVAL_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(indexMetaDataDiff24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNull(version26);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(settings31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(timeValueSetting33);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder2 = builder0.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder5 = builder2.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder8 = builder2.put("index.creation_date", (double) (-1.0f));
        java.lang.String str10 = builder2.get("index.shared_filesystem.recover_on_any_node");
        org.elasticsearch.common.settings.Settings.Builder builder12 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder14 = builder12.normalizePrefix("index.version.created");
        java.lang.String[] strArray21 = new java.lang.String[] { "index.number_of_shards", "index.version.upgraded", "index.creation_date_string", "index.version.created", "index.version.upgraded_string" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.elasticsearch.common.settings.Settings.Builder builder24 = builder14.putArray("index.blocks.write", (java.util.List<java.lang.String>) strList22);
        org.elasticsearch.common.settings.Settings.Builder builder25 = builder2.putArray("index.blocks.read_only", (java.util.List<java.lang.String>) strList22);
        org.elasticsearch.common.settings.Settings.Builder builder27 = builder25.putNull("_all");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap15 = settings9.getGroups("index.version.created");
        org.elasticsearch.common.settings.Settings settings17 = settings9.getAsSettings("index.");
        boolean boolean18 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings9);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.Version version19 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData21.getAliases();
        int int23 = indexMetaData21.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData24 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet26 = indexMetaData24.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff27 = indexMetaData21.diff(indexMetaData24);
        long long28 = indexMetaData24.getCreationDate();
        org.elasticsearch.Version version29 = indexMetaData24.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings30 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap31 = settings30.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate32 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings33 = settings30.filter(strPredicate32);
        org.elasticsearch.index.IndexSettings indexSettings34 = new org.elasticsearch.index.IndexSettings(indexMetaData24, settings30);
        java.lang.String str35 = indexSettings34.getUUID();
        boolean boolean36 = indexSettings34.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy37 = indexSettings34.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap39 = indexMetaData38.getAliases();
        int int40 = indexMetaData38.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData41 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet43 = indexMetaData41.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff44 = indexMetaData38.diff(indexMetaData41);
        long long45 = indexMetaData41.getCreationDate();
        org.elasticsearch.Version version46 = indexMetaData41.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings47 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap48 = settings47.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate49 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings50 = settings47.filter(strPredicate49);
        org.elasticsearch.index.IndexSettings indexSettings51 = new org.elasticsearch.index.IndexSettings(indexMetaData41, settings47);
        boolean boolean52 = indexSettings51.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig53 = indexSettings51.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability54 = indexSettings51.getdurability();
        indexSettings34.setTranslogDurability(durability54);
        indexSettings13.durability = durability54;
        indexSettings13.setMaxRescoreWindow((int) (byte) -1);
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig59 = indexSettings13.mergeSchedulerConfig;
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting60 = indexSettings13.getMAX_RESCORE_WINDOW_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(indexMetaData24);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(indexMetaDataDiff27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strPredicate32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_na_" + "'", str35, "_na_");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(mergePolicy37);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(strImmutableOpenMap39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(indexMetaData41);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(indexMetaDataDiff44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(version46);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strPredicate49);
        org.junit.Assert.assertNotNull(settings50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig53);
        org.junit.Assert.assertTrue("'" + durability54 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability54.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(mergeSchedulerConfig59);
        org.junit.Assert.assertNotNull(intSetting60);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getisShadowReplicaIndex();
        java.lang.String str16 = indexSettings13.customDataPath();
        indexSettings13.maxResultWindow = 1000;
        org.elasticsearch.common.unit.TimeValue timeValue19 = indexSettings13.refreshInterval;
        java.lang.String str20 = indexSettings13.getDefaultField();
        int int21 = indexSettings13.getMaxRefreshListeners();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap23 = indexMetaData22.getAliases();
        int int24 = indexMetaData22.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet27 = indexMetaData25.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff28 = indexMetaData22.diff(indexMetaData25);
        long long29 = indexMetaData25.getCreationDate();
        org.elasticsearch.Version version30 = indexMetaData25.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings31 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap32 = settings31.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate33 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings34 = settings31.filter(strPredicate33);
        org.elasticsearch.index.IndexSettings indexSettings35 = new org.elasticsearch.index.IndexSettings(indexMetaData25, settings31);
        org.elasticsearch.common.logging.ESLogger eSLogger36 = indexSettings35.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue37 = indexSettings35.getsyncInterval();
        indexSettings13.setRefreshInterval(timeValue37);
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig39 = indexSettings13.mergePolicyConfig;
        indexSettings13.setTTLPurgeDisabled(true);
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting42 = indexSettings13.getINDEX_REFRESH_INTERVAL_SETTING();
        org.elasticsearch.common.settings.Settings settings43 = indexSettings13.getSettings();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_all" + "'", str20, "_all");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1000 + "'", int21 == 1000);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(strImmutableOpenMap23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(indexMetaDataDiff28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(settings31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strPredicate33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(eSLogger36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(mergePolicyConfig39);
        org.junit.Assert.assertNotNull(timeValueSetting42);
        org.junit.Assert.assertNotNull(settings43);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = indexSettings13.getIndexMetaData();
        org.elasticsearch.common.logging.ESLogger eSLogger20 = indexSettings13.logger;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting21 = indexSettings13.getINDEX_TTL_DISABLE_PURGE_SETTING();
        long long22 = indexSettings13.gcDeletesInMillis;
        boolean boolean23 = indexSettings13.getisShadowReplicaIndex();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData24 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap25 = indexMetaData24.getAliases();
        int int26 = indexMetaData24.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData27 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet29 = indexMetaData27.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff30 = indexMetaData24.diff(indexMetaData27);
        long long31 = indexMetaData27.getCreationDate();
        org.elasticsearch.Version version32 = indexMetaData27.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings33 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap34 = settings33.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate35 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings36 = settings33.filter(strPredicate35);
        org.elasticsearch.index.IndexSettings indexSettings37 = new org.elasticsearch.index.IndexSettings(indexMetaData27, settings33);
        org.elasticsearch.common.logging.ESLogger eSLogger38 = indexSettings37.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue39 = indexSettings37.getsyncInterval();
        indexSettings37.setEnableWarmer(false);
        java.lang.String str42 = indexSettings37.defaultField;
        org.elasticsearch.common.settings.Settings settings43 = indexSettings37.settings;
        org.elasticsearch.common.unit.TimeValue timeValue44 = indexSettings37.getTranslogSyncInterval();
        org.elasticsearch.common.settings.Settings settings45 = indexSettings37.getSettings();
        org.elasticsearch.common.unit.TimeValue timeValue46 = indexSettings37.getDEFAULT_GC_DELETES();
        indexSettings13.refreshInterval = timeValue46;
        org.elasticsearch.index.translog.Translog.Durability durability48 = indexSettings13.getdurability();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(eSLogger20);
        org.junit.Assert.assertNotNull(booleanSetting21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 60000L + "'", long22 == 60000L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(indexMetaData24);
        org.junit.Assert.assertNotNull(strImmutableOpenMap25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(indexMetaData27);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(indexMetaDataDiff30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(version32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strPredicate35);
        org.junit.Assert.assertNotNull(settings36);
        org.junit.Assert.assertNotNull(eSLogger38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_all" + "'", str42, "_all");
        org.junit.Assert.assertNotNull(settings43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(settings45);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertTrue("'" + durability48 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability48.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        int int23 = indexMetaData22.getTotalNumberOfShards();
        boolean boolean24 = indexSettings13.updateIndexMetaData(indexMetaData22);
        indexSettings13.warmerEnabled = true;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData27 = indexSettings13.getIndexMetaData();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData27);
        int int29 = builder28.getRoutingNumShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(indexMetaData27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        int int16 = indexSettings13.getMaxResultWindow();
        boolean boolean17 = indexSettings13.isShadowReplicaIndex;
        boolean boolean18 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.logging.ESLogger eSLogger20 = indexSettings13.getlogger();
        boolean boolean21 = indexSettings13.queryStringAnalyzeWildcard;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(eSLogger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.Version version19 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData21.getAliases();
        int int23 = indexMetaData21.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData24 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet26 = indexMetaData24.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff27 = indexMetaData21.diff(indexMetaData24);
        long long28 = indexMetaData24.getCreationDate();
        org.elasticsearch.Version version29 = indexMetaData24.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings30 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap31 = settings30.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate32 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings33 = settings30.filter(strPredicate32);
        org.elasticsearch.index.IndexSettings indexSettings34 = new org.elasticsearch.index.IndexSettings(indexMetaData24, settings30);
        java.lang.String str35 = indexSettings34.getUUID();
        boolean boolean36 = indexSettings34.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy37 = indexSettings34.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap39 = indexMetaData38.getAliases();
        int int40 = indexMetaData38.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData41 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet43 = indexMetaData41.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff44 = indexMetaData38.diff(indexMetaData41);
        long long45 = indexMetaData41.getCreationDate();
        org.elasticsearch.Version version46 = indexMetaData41.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings47 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap48 = settings47.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate49 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings50 = settings47.filter(strPredicate49);
        org.elasticsearch.index.IndexSettings indexSettings51 = new org.elasticsearch.index.IndexSettings(indexMetaData41, settings47);
        boolean boolean52 = indexSettings51.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig53 = indexSettings51.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability54 = indexSettings51.getdurability();
        indexSettings34.setTranslogDurability(durability54);
        indexSettings13.durability = durability54;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData57 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap58 = indexMetaData57.getAliases();
        int int59 = indexMetaData57.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData60 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet62 = indexMetaData60.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff63 = indexMetaData57.diff(indexMetaData60);
        long long64 = indexMetaData60.getCreationDate();
        org.elasticsearch.Version version65 = indexMetaData60.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings66 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap67 = settings66.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate68 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings69 = settings66.filter(strPredicate68);
        org.elasticsearch.index.IndexSettings indexSettings70 = new org.elasticsearch.index.IndexSettings(indexMetaData60, settings66);
        boolean boolean71 = indexSettings70.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig72 = indexSettings70.getMergeSchedulerConfig();
        boolean boolean73 = indexSettings70.queryStringAnalyzeWildcard;
        boolean boolean74 = indexSettings70.isDefaultAllowUnmappedFields();
        org.elasticsearch.common.unit.TimeValue timeValue75 = indexSettings70.refreshInterval;
        indexSettings13.setGCDeletes(timeValue75);
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig77 = indexSettings13.getmergePolicyConfig();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting78 = indexSettings13.getQUERY_STRING_ANALYZE_WILDCARD();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(indexMetaData24);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(indexMetaDataDiff27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strPredicate32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_na_" + "'", str35, "_na_");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(mergePolicy37);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(strImmutableOpenMap39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(indexMetaData41);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(indexMetaDataDiff44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(version46);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strPredicate49);
        org.junit.Assert.assertNotNull(settings50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig53);
        org.junit.Assert.assertTrue("'" + durability54 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability54.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(indexMetaData57);
        org.junit.Assert.assertNotNull(strImmutableOpenMap58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(indexMetaData60);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(indexMetaDataDiff63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(version65);
        org.junit.Assert.assertNotNull(settings66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strPredicate68);
        org.junit.Assert.assertNotNull(settings69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(timeValue75);
        org.junit.Assert.assertNotNull(mergePolicyConfig77);
        org.junit.Assert.assertNotNull(booleanSetting78);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy16 = indexSettings13.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        boolean boolean31 = indexSettings30.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig32 = indexSettings30.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability33 = indexSettings30.getdurability();
        indexSettings13.setTranslogDurability(durability33);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData35 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap36 = indexMetaData35.getAliases();
        int int37 = indexMetaData35.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet40 = indexMetaData38.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff41 = indexMetaData35.diff(indexMetaData38);
        long long42 = indexMetaData38.getCreationDate();
        org.elasticsearch.Version version43 = indexMetaData38.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings44 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap45 = settings44.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate46 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings47 = settings44.filter(strPredicate46);
        org.elasticsearch.index.IndexSettings indexSettings48 = new org.elasticsearch.index.IndexSettings(indexMetaData38, settings44);
        org.elasticsearch.common.logging.ESLogger eSLogger49 = indexSettings48.getlogger();
        boolean boolean50 = indexSettings48.isWarmerEnabled();
        boolean boolean51 = indexSettings48.isTTLPurgeDisabled();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData52 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap53 = indexMetaData52.getAliases();
        int int54 = indexMetaData52.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData55 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet57 = indexMetaData55.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff58 = indexMetaData52.diff(indexMetaData55);
        long long59 = indexMetaData55.getCreationDate();
        org.elasticsearch.Version version60 = indexMetaData55.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings61 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap62 = settings61.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate63 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings64 = settings61.filter(strPredicate63);
        org.elasticsearch.index.IndexSettings indexSettings65 = new org.elasticsearch.index.IndexSettings(indexMetaData55, settings61);
        org.elasticsearch.common.logging.ESLogger eSLogger66 = indexSettings65.getlogger();
        boolean boolean67 = indexSettings65.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue68 = indexSettings65.syncInterval;
        org.elasticsearch.common.settings.Settings settings69 = indexSettings65.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData70 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap71 = indexMetaData70.getAliases();
        int int72 = indexMetaData70.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData73 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet75 = indexMetaData73.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff76 = indexMetaData70.diff(indexMetaData73);
        long long77 = indexMetaData73.getCreationDate();
        org.apache.lucene.util.Version version78 = indexMetaData73.getMinimumCompatibleVersion();
        indexSettings65.indexMetaData = indexMetaData73;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting80 = indexSettings65.getINDEX_GC_DELETES_SETTING();
        org.elasticsearch.index.translog.Translog.Durability durability81 = indexSettings65.getTranslogDurability();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue82 = indexSettings65.flushThresholdSize;
        indexSettings48.setTranslogFlushThresholdSize(byteSizeValue82);
        indexSettings13.flushThresholdSize = byteSizeValue82;
        long long85 = indexSettings13.gcDeletesInMillis;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting86 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(mergePolicy16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig32);
        org.junit.Assert.assertTrue("'" + durability33 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability33.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(indexMetaData35);
        org.junit.Assert.assertNotNull(strImmutableOpenMap36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(indexMetaDataDiff41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(settings44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strPredicate46);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(eSLogger49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(indexMetaData52);
        org.junit.Assert.assertNotNull(strImmutableOpenMap53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(indexMetaData55);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(indexMetaDataDiff58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(settings61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strPredicate63);
        org.junit.Assert.assertNotNull(settings64);
        org.junit.Assert.assertNotNull(eSLogger66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(settings69);
        org.junit.Assert.assertNotNull(indexMetaData70);
        org.junit.Assert.assertNotNull(strImmutableOpenMap71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(indexMetaData73);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(indexMetaDataDiff76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNull(version78);
        org.junit.Assert.assertNotNull(timeValueSetting80);
        org.junit.Assert.assertTrue("'" + durability81 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability81.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(byteSizeValue82);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 60000L + "'", long85 == 60000L);
        org.junit.Assert.assertNotNull(strSetting86);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.getMaxRescoreWindow();
        boolean boolean16 = indexSettings13.getwarmerEnabled();
        org.elasticsearch.common.logging.ESLogger eSLogger17 = indexSettings13.logger;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting18 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.common.logging.ESLogger eSLogger19 = indexSettings13.logger;
        long long20 = indexSettings13.getGcDeletesInMillis();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData21.getAliases();
        int int23 = indexMetaData21.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData24 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet26 = indexMetaData24.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff27 = indexMetaData21.diff(indexMetaData24);
        long long28 = indexMetaData24.getCreationDate();
        org.elasticsearch.Version version29 = indexMetaData24.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings30 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap31 = settings30.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate32 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings33 = settings30.filter(strPredicate32);
        org.elasticsearch.index.IndexSettings indexSettings34 = new org.elasticsearch.index.IndexSettings(indexMetaData24, settings30);
        org.elasticsearch.common.logging.ESLogger eSLogger35 = indexSettings34.getlogger();
        int int36 = indexSettings34.getMaxRescoreWindow();
        indexSettings34.warmerEnabled = false;
        org.elasticsearch.common.unit.TimeValue timeValue39 = indexSettings34.getDEFAULT_GC_DELETES();
        indexSettings13.setRefreshInterval(timeValue39);
        boolean boolean41 = indexSettings13.isDefaultAllowUnmappedFields();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(eSLogger17);
        org.junit.Assert.assertNotNull(strSetting18);
        org.junit.Assert.assertNotNull(eSLogger19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 60000L + "'", long20 == 60000L);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(indexMetaData24);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(indexMetaDataDiff27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strPredicate32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertNotNull(eSLogger35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10000 + "'", int36 == 10000);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue16 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings17 = indexSettings13.getScopedSettings();
        org.elasticsearch.common.settings.Setting.Property property18 = indexScopedSettings17.getScope();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap20 = indexMetaData19.getAliases();
        int int21 = indexMetaData19.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet24 = indexMetaData22.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff25 = indexMetaData19.diff(indexMetaData22);
        long long26 = indexMetaData22.getCreationDate();
        org.elasticsearch.Version version27 = indexMetaData22.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings28 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap29 = settings28.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate30 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings31 = settings28.filter(strPredicate30);
        org.elasticsearch.index.IndexSettings indexSettings32 = new org.elasticsearch.index.IndexSettings(indexMetaData22, settings28);
        org.elasticsearch.common.logging.ESLogger eSLogger33 = indexSettings32.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue34 = indexSettings32.getsyncInterval();
        indexSettings32.setEnableWarmer(false);
        boolean boolean37 = indexSettings32.isShadowReplicaIndex;
        boolean boolean38 = indexSettings32.isIndexUsingShadowReplicas();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting39 = indexSettings32.getINDEX_WARMER_ENABLED_SETTING();
        java.util.function.Consumer<java.lang.Boolean> booleanConsumer40 = null;
        indexScopedSettings17.addSettingsUpdateConsumer(booleanSetting39, booleanConsumer40);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertNotNull(byteSizeValue16);
        org.junit.Assert.assertNotNull(indexScopedSettings17);
        org.junit.Assert.assertTrue("'" + property18 + "' != '" + org.elasticsearch.common.settings.Setting.Property.IndexScope + "'", property18.equals(org.elasticsearch.common.settings.Setting.Property.IndexScope));
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(strImmutableOpenMap20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(indexMetaDataDiff25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strPredicate30);
        org.junit.Assert.assertNotNull(settings31);
        org.junit.Assert.assertNotNull(eSLogger33);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(booleanSetting39);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting16 = indexSettings13.getINDEX_REFRESH_INTERVAL_SETTING();
        org.elasticsearch.Version version17 = indexSettings13.getversion();
        indexSettings13.setwarmerEnabled(false);
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting20 = indexSettings13.getQUERY_STRING_ANALYZE_WILDCARD();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(timeValueSetting16);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(booleanSetting20);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        java.lang.String str16 = indexSettings13.customDataPath();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        java.lang.String str31 = indexSettings30.getUUID();
        boolean boolean32 = indexSettings30.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability33 = indexSettings30.getTranslogDurability();
        indexSettings13.durability = durability33;
        java.lang.String str35 = indexSettings13.getDefaultField();
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig36 = indexSettings13.mergePolicyConfig;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap38 = indexMetaData37.getAliases();
        int int39 = indexMetaData37.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData40 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet42 = indexMetaData40.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff43 = indexMetaData37.diff(indexMetaData40);
        long long44 = indexMetaData40.getCreationDate();
        org.elasticsearch.Version version45 = indexMetaData40.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings46 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap47 = settings46.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate48 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings49 = settings46.filter(strPredicate48);
        org.elasticsearch.index.IndexSettings indexSettings50 = new org.elasticsearch.index.IndexSettings(indexMetaData40, settings46);
        java.lang.String str51 = indexSettings50.getUUID();
        boolean boolean52 = indexSettings50.getqueryStringAnalyzeWildcard();
        indexSettings50.maxRescoreWindow = 1;
        org.elasticsearch.index.translog.Translog.Durability durability55 = indexSettings50.durability;
        indexSettings13.setTranslogDurability(durability55);
        java.lang.String str57 = indexSettings13.defaultField;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "_na_" + "'", str31, "_na_");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + durability33 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability33.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_all" + "'", str35, "_all");
        org.junit.Assert.assertNotNull(mergePolicyConfig36);
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(strImmutableOpenMap38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(indexMetaData40);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(indexMetaDataDiff43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(version45);
        org.junit.Assert.assertNotNull(settings46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strPredicate48);
        org.junit.Assert.assertNotNull(settings49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "_na_" + "'", str51, "_na_");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + durability55 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability55.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "_all" + "'", str57, "_all");
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        int int16 = indexSettings13.maxRescoreWindow;
        boolean boolean17 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting18 = indexSettings13.getQUERY_STRING_LENIENT_SETTING();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.ByteSizeValue> byteSizeValueSetting19 = indexSettings13.getINDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE_SETTING();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting20 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(booleanSetting18);
        org.junit.Assert.assertNotNull(byteSizeValueSetting19);
        org.junit.Assert.assertNotNull(intSetting20);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.settings.Settings settings21 = indexSettings13.getSettings();
        int int22 = indexSettings13.getMaxRefreshListeners();
        boolean boolean23 = indexSettings13.isIndexUsingShadowReplicas();
        boolean boolean24 = indexSettings13.queryStringAnalyzeWildcard;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(settings21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1000 + "'", int22 == 1000);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        java.lang.String str2 = builder1.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.index("");
        int int5 = builder4.numberOfShards();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "index." + "'", str2, "index.");
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.numberOfShards((int) (byte) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap8 = indexMetaData7.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state9 = indexMetaData7.getState();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters10 = indexMetaData7.includeFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData12 = indexMetaData7.mappingOrDefault("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.State state13 = indexMetaData7.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder6.state(state13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder6.removeAlias("index.shadow_replicas");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder6.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom19 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder17.putCustom("hi!", custom19);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder17.primaryTerm((-1), (long) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
        org.junit.Assert.assertTrue("'" + state9 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state9.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNull(discoveryNodeFilters10);
        org.junit.Assert.assertNull(mappingMetaData12);
        org.junit.Assert.assertTrue("'" + state13 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state13.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.shared_filesystem.recover_on_any_node");
        int int2 = builder1.numberOfShards();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate22 = indexSettings13.indexNameMatcher;
        org.elasticsearch.Version version23 = indexSettings13.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting24 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue25 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_BLOCKS_READ_SETTING;
        java.lang.Boolean boolean27 = indexSettings13.getValue(booleanSetting26);
        indexSettings13.TTLPurgeDisabled = true;
        java.lang.String str30 = indexSettings13.nodeName;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(strSetting24);
        org.junit.Assert.assertNotNull(byteSizeValue25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.warmerEnabled;
        indexSettings13.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue17 = indexSettings13.getTranslogSyncInterval();
        int int18 = indexSettings13.maxRefreshListeners;
        indexSettings13.gcDeletesInMillis = (byte) 0;
        boolean boolean21 = indexSettings13.isTTLPurgeDisabled();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1000 + "'", int18 == 1000);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        int int16 = indexSettings13.maxRescoreWindow;
        boolean boolean17 = indexSettings13.isOnSharedFilesystem();
        org.elasticsearch.Version version18 = indexSettings13.getversion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(version18);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.creationDate((long) ' ');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfShards(1000);
        int int6 = builder3.getRoutingNumShards();
        int int7 = builder3.numberOfReplicas();
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1000 + "'", int6 == 1000);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap3 = indexMetaData0.getMappings();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap4 = indexMetaData0.getMappings();
        int int5 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData0.writeTo(streamOutput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strImmutableOpenMap3);
        org.junit.Assert.assertNotNull(strImmutableOpenMap4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.maxRescoreWindow;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap17 = indexMetaData16.getAliases();
        int int18 = indexMetaData16.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet21 = indexMetaData19.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff22 = indexMetaData16.diff(indexMetaData19);
        long long23 = indexMetaData19.getCreationDate();
        org.elasticsearch.Version version24 = indexMetaData19.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings25 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap26 = settings25.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate27 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings28 = settings25.filter(strPredicate27);
        org.elasticsearch.index.IndexSettings indexSettings29 = new org.elasticsearch.index.IndexSettings(indexMetaData19, settings25);
        org.elasticsearch.common.logging.ESLogger eSLogger30 = indexSettings29.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue31 = indexSettings29.getsyncInterval();
        indexSettings29.setEnableWarmer(false);
        java.lang.String str34 = indexSettings29.defaultField;
        org.elasticsearch.common.settings.Settings settings35 = indexSettings29.settings;
        org.elasticsearch.common.unit.TimeValue timeValue36 = indexSettings29.getTranslogSyncInterval();
        int int37 = indexSettings29.getNumberOfShards();
        org.elasticsearch.common.settings.Settings settings38 = indexSettings29.settings;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig39 = indexSettings29.getMergeSchedulerConfig();
        boolean boolean40 = indexSettings29.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting41 = indexSettings29.getMAX_REFRESH_LISTENERS_PER_SHARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting42 = indexSettings29.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting43 = indexSettings29.getQUERY_STRING_LENIENT_SETTING();
        indexSettings29.maxRescoreWindow = 0;
        org.elasticsearch.common.unit.TimeValue timeValue46 = indexSettings29.getDEFAULT_GC_DELETES();
        indexSettings13.refreshInterval = timeValue46;
        boolean boolean48 = indexSettings13.isWarmerEnabled();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(strImmutableOpenMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(indexMetaDataDiff22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(settings25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strPredicate27);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertNotNull(eSLogger30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_all" + "'", str34, "_all");
        org.junit.Assert.assertNotNull(settings35);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(settings38);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(intSetting41);
        org.junit.Assert.assertNotNull(booleanSetting42);
        org.junit.Assert.assertNotNull(booleanSetting43);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = indexSettings13.getIndexMetaData();
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getNodeSettings();
        boolean boolean18 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings17);
        org.elasticsearch.common.settings.Settings settings20 = settings17.getAsSettings("index.blocks.read_only");
        org.elasticsearch.common.settings.Settings settings22 = settings20.getAsSettings("index.shadow_replicas");
        org.elasticsearch.common.settings.Settings settings23 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings22);
        java.lang.String[] strArray25 = settings22.getAsArray("index.number_of_shards");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(settings22);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertNotNull(strArray25);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        int int4 = builder1.getRoutingNumShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder1.removeAlias("index.blocks.metadata");
        long long7 = builder1.version();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings17 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap18 = settings17.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate19 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings20 = settings17.filter(strPredicate19);
        org.elasticsearch.index.IndexSettings indexSettings21 = new org.elasticsearch.index.IndexSettings(indexMetaData11, settings17);
        org.elasticsearch.common.logging.ESLogger eSLogger22 = indexSettings21.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue23 = indexSettings21.getsyncInterval();
        indexSettings21.setEnableWarmer(false);
        java.lang.String str26 = indexSettings21.defaultField;
        org.elasticsearch.common.settings.Settings settings27 = indexSettings21.settings;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap30 = settings27.getGroups("index.blocks.read_only", false);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder1.settings(settings27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder31.index("index.blocks.read_only");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder33.putMapping(mappingMetaData34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strPredicate19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(eSLogger22);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_all" + "'", str26, "_all");
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig15 = indexSettings13.getMergeSchedulerConfig();
        org.elasticsearch.common.settings.Settings settings16 = indexSettings13.settings;
        int int17 = indexSettings13.getMaxRefreshListeners();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData18.getAliases();
        int int20 = indexMetaData18.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet23 = indexMetaData21.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff24 = indexMetaData18.diff(indexMetaData21);
        long long25 = indexMetaData21.getCreationDate();
        org.elasticsearch.Version version26 = indexMetaData21.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings27 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap28 = settings27.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate29 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings30 = settings27.filter(strPredicate29);
        org.elasticsearch.index.IndexSettings indexSettings31 = new org.elasticsearch.index.IndexSettings(indexMetaData21, settings27);
        boolean boolean32 = indexSettings31.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig33 = indexSettings31.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability34 = indexSettings31.getdurability();
        indexSettings13.setTranslogDurability(durability34);
        boolean boolean36 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig15);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1000 + "'", int17 == 1000);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(indexMetaDataDiff24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strPredicate29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig33);
        org.junit.Assert.assertTrue("'" + durability34 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability34.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.maxRescoreWindow;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings16 = indexSettings13.scopedSettings;
        org.elasticsearch.index.translog.Translog.Durability durability17 = indexSettings13.getdurability();
        org.elasticsearch.common.unit.TimeValue timeValue18 = indexSettings13.getDEFAULT_GC_DELETES();
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig19 = indexSettings13.mergePolicyConfig;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertNotNull(indexScopedSettings16);
        org.junit.Assert.assertTrue("'" + durability17 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability17.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(mergePolicyConfig19);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        int int4 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.Version version5 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.common.settings.Settings settings6 = indexMetaData0.getSettings();
        int int7 = indexMetaData0.getRoutingFactor();
        int int8 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData9 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet11 = indexMetaData9.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap12 = indexMetaData9.getMappings();
        int int13 = indexMetaData9.getNumberOfReplicas();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData0.diff(indexMetaData9);
        org.elasticsearch.index.Index index15 = indexMetaData9.getMergeSourceIndex();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(version5);
        org.junit.Assert.assertNotNull(settings6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(indexMetaData9);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strImmutableOpenMap12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertNull(index15);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        boolean boolean18 = indexSettings13.isShadowReplicaIndex;
        boolean boolean19 = indexSettings13.isIndexUsingShadowReplicas();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting20 = indexSettings13.getINDEX_WARMER_ENABLED_SETTING();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.ByteSizeValue> byteSizeValueSetting21 = indexSettings13.getINDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(booleanSetting20);
        org.junit.Assert.assertNotNull(byteSizeValueSetting21);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        int int16 = indexSettings13.maxRescoreWindow;
        boolean boolean17 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability18 = indexSettings13.durability;
        boolean boolean19 = indexSettings13.isWarmerEnabled();
        boolean boolean20 = indexSettings13.hasCustomDataPath();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting21 = indexSettings13.getINDEX_REFRESH_INTERVAL_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + durability18 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability18.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(timeValueSetting21);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAllAliases();
        org.elasticsearch.common.settings.Settings settings5 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap6 = settings5.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate7 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings8 = settings5.filter(strPredicate7);
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue10 = null;
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue11 = settings5.getAsBytesSize("hi!", byteSizeValue10);
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap13 = settings5.getAsGroups(false);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder4.settings(settings5);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder15 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder17 = settings5.toXContent(xContentBuilder15, params16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(settings5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strPredicate7);
        org.junit.Assert.assertNotNull(settings8);
        org.junit.Assert.assertNull(byteSizeValue11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom1 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.registerPrototype("index.version.created", custom1);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.numberOfShards((int) (byte) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap8 = indexMetaData7.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state9 = indexMetaData7.getState();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters10 = indexMetaData7.includeFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData12 = indexMetaData7.mappingOrDefault("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.State state13 = indexMetaData7.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder6.state(state13);
        byte byte15 = state13.id();
        byte byte16 = state13.id();
        byte byte17 = state13.id();
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
        org.junit.Assert.assertTrue("'" + state9 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state9.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNull(discoveryNodeFilters10);
        org.junit.Assert.assertNull(mappingMetaData12);
        org.junit.Assert.assertTrue("'" + state13 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state13.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) 0 + "'", byte15 == (byte) 0);
        org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) 0 + "'", byte16 == (byte) 0);
        org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 0 + "'", byte17 == (byte) 0);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom1 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.registerPrototype("index.shared_filesystem.recover_on_any_node", custom1);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.Version version19 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData21.getAliases();
        int int23 = indexMetaData21.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData24 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet26 = indexMetaData24.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff27 = indexMetaData21.diff(indexMetaData24);
        long long28 = indexMetaData24.getCreationDate();
        org.elasticsearch.Version version29 = indexMetaData24.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings30 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap31 = settings30.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate32 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings33 = settings30.filter(strPredicate32);
        org.elasticsearch.index.IndexSettings indexSettings34 = new org.elasticsearch.index.IndexSettings(indexMetaData24, settings30);
        java.lang.String str35 = indexSettings34.getUUID();
        boolean boolean36 = indexSettings34.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy37 = indexSettings34.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap39 = indexMetaData38.getAliases();
        int int40 = indexMetaData38.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData41 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet43 = indexMetaData41.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff44 = indexMetaData38.diff(indexMetaData41);
        long long45 = indexMetaData41.getCreationDate();
        org.elasticsearch.Version version46 = indexMetaData41.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings47 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap48 = settings47.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate49 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings50 = settings47.filter(strPredicate49);
        org.elasticsearch.index.IndexSettings indexSettings51 = new org.elasticsearch.index.IndexSettings(indexMetaData41, settings47);
        boolean boolean52 = indexSettings51.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig53 = indexSettings51.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability54 = indexSettings51.getdurability();
        indexSettings34.setTranslogDurability(durability54);
        indexSettings13.durability = durability54;
        boolean boolean57 = indexSettings13.isQueryStringLenient();
        boolean boolean58 = indexSettings13.warmerEnabled;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(indexMetaData24);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(indexMetaDataDiff27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strPredicate32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_na_" + "'", str35, "_na_");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(mergePolicy37);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(strImmutableOpenMap39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(indexMetaData41);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(indexMetaDataDiff44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(version46);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strPredicate49);
        org.junit.Assert.assertNotNull(settings50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig53);
        org.junit.Assert.assertTrue("'" + durability54 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability54.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.Version version19 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData21.getAliases();
        int int23 = indexMetaData21.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData24 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet26 = indexMetaData24.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff27 = indexMetaData21.diff(indexMetaData24);
        long long28 = indexMetaData24.getCreationDate();
        org.elasticsearch.Version version29 = indexMetaData24.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings30 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap31 = settings30.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate32 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings33 = settings30.filter(strPredicate32);
        org.elasticsearch.index.IndexSettings indexSettings34 = new org.elasticsearch.index.IndexSettings(indexMetaData24, settings30);
        java.lang.String str35 = indexSettings34.getUUID();
        boolean boolean36 = indexSettings34.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy37 = indexSettings34.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap39 = indexMetaData38.getAliases();
        int int40 = indexMetaData38.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData41 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet43 = indexMetaData41.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff44 = indexMetaData38.diff(indexMetaData41);
        long long45 = indexMetaData41.getCreationDate();
        org.elasticsearch.Version version46 = indexMetaData41.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings47 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap48 = settings47.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate49 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings50 = settings47.filter(strPredicate49);
        org.elasticsearch.index.IndexSettings indexSettings51 = new org.elasticsearch.index.IndexSettings(indexMetaData41, settings47);
        boolean boolean52 = indexSettings51.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig53 = indexSettings51.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability54 = indexSettings51.getdurability();
        indexSettings34.setTranslogDurability(durability54);
        indexSettings13.durability = durability54;
        boolean boolean57 = indexSettings13.isQueryStringLenient();
        org.elasticsearch.common.unit.TimeValue timeValue58 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting59 = indexSettings13.getINDEX_TRANSLOG_SYNC_INTERVAL_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(indexMetaData24);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(indexMetaDataDiff27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strPredicate32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_na_" + "'", str35, "_na_");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(mergePolicy37);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(strImmutableOpenMap39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(indexMetaData41);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(indexMetaDataDiff44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(version46);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strPredicate49);
        org.junit.Assert.assertNotNull(settings50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig53);
        org.junit.Assert.assertTrue("'" + durability54 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability54.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertNotNull(timeValueSetting59);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = indexSettings13.getIndexMetaData();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters20 = indexMetaData19.getInitialRecoveryFilters();
        org.apache.lucene.util.Version version21 = indexMetaData19.getMinimumCompatibleVersion();
        org.elasticsearch.common.settings.Settings.Builder builder22 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder25 = builder22.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder28 = builder25.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData30 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap31 = indexMetaData30.getAliases();
        int int32 = indexMetaData30.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData33 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet35 = indexMetaData33.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff36 = indexMetaData30.diff(indexMetaData33);
        long long37 = indexMetaData33.getCreationDate();
        org.elasticsearch.Version version38 = indexMetaData33.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder39 = builder25.put("index.creation_date_string", version38);
        org.elasticsearch.common.settings.Settings.Builder builder42 = builder25.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder44 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder46 = builder44.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder49 = builder46.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder52 = builder49.put("", (double) 1000);
        java.lang.Class<?> wildcardClass53 = builder49.getClass();
        org.elasticsearch.common.settings.Settings.Builder builder54 = builder25.put("_all", (java.lang.Class) wildcardClass53);
        org.elasticsearch.common.settings.Settings.Builder builder57 = builder25.put("active_allocations", true);
        boolean boolean58 = indexMetaData19.equals((java.lang.Object) builder25);
        java.util.Set<java.lang.String> strSet60 = null; // flaky: indexMetaData19.activeAllocationIds((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            long long62 = indexMetaData19.primaryTerm((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNull(discoveryNodeFilters20);
        org.junit.Assert.assertNull(version21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(indexMetaData30);
        org.junit.Assert.assertNotNull(strImmutableOpenMap31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(indexMetaData33);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(indexMetaDataDiff36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(strSet60);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getisShadowReplicaIndex();
        java.lang.String str16 = indexSettings13.customDataPath();
        indexSettings13.maxResultWindow = 1000;
        org.elasticsearch.common.unit.TimeValue timeValue19 = indexSettings13.refreshInterval;
        java.lang.String str20 = indexSettings13.getDefaultField();
        boolean boolean21 = indexSettings13.TTLPurgeDisabled;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet24 = indexMetaData22.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap25 = indexMetaData22.getMappings();
        java.util.Set<java.lang.String> strSet27 = indexMetaData22.activeAllocationIds((int) (byte) 0);
        java.lang.String str28 = indexMetaData22.getIndexUUID();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap29 = indexMetaData22.getAliases();
        indexSettings13.indexMetaData = indexMetaData22;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_all" + "'", str20, "_all");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strImmutableOpenMap25);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_na_" + "'", str28, "_na_");
        org.junit.Assert.assertNotNull(strImmutableOpenMap29);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = indexSettings13.getIndexMetaData();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData16.writeTo(streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(indexMetaData16);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.common.settings.Settings.Builder builder9 = builder3.put("index.blocks.read", (int) '#');
        org.elasticsearch.common.settings.Settings settings10 = builder3.build();
        org.elasticsearch.common.settings.Settings.Builder builder13 = builder3.put("index.number_of_shards", (double) (byte) 100);
        org.elasticsearch.common.settings.Settings.Builder builder16 = builder13.put("index.data_path", (double) (short) 1);
        org.elasticsearch.common.settings.Settings settings17 = builder13.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(settings10);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(settings17);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData18.getAliases();
        int int20 = indexMetaData18.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet23 = indexMetaData21.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff24 = indexMetaData18.diff(indexMetaData21);
        long long25 = indexMetaData21.getCreationDate();
        org.apache.lucene.util.Version version26 = indexMetaData21.getMinimumCompatibleVersion();
        indexSettings13.indexMetaData = indexMetaData21;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting28 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        int int29 = indexSettings13.getNumberOfReplicas();
        indexSettings13.warmerEnabled = true;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(indexMetaDataDiff24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNull(version26);
        org.junit.Assert.assertNotNull(timeValueSetting28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap3 = indexMetaData0.getMappings();
        java.util.Set<java.lang.String> strSet5 = indexMetaData0.activeAllocationIds((int) (byte) 0);
        java.lang.String str6 = indexMetaData0.getIndexUUID();
        org.elasticsearch.Version version7 = indexMetaData0.getUpgradedVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strImmutableOpenMap3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_na_" + "'", str6, "_na_");
        org.junit.Assert.assertNotNull(version7);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy16 = indexSettings13.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        boolean boolean31 = indexSettings30.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig32 = indexSettings30.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability33 = indexSettings30.getdurability();
        indexSettings13.setTranslogDurability(durability33);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData35 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap36 = indexMetaData35.getAliases();
        int int37 = indexMetaData35.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet40 = indexMetaData38.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff41 = indexMetaData35.diff(indexMetaData38);
        long long42 = indexMetaData38.getCreationDate();
        org.elasticsearch.Version version43 = indexMetaData38.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings44 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap45 = settings44.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate46 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings47 = settings44.filter(strPredicate46);
        org.elasticsearch.index.IndexSettings indexSettings48 = new org.elasticsearch.index.IndexSettings(indexMetaData38, settings44);
        org.elasticsearch.common.logging.ESLogger eSLogger49 = indexSettings48.getlogger();
        boolean boolean50 = indexSettings48.isWarmerEnabled();
        boolean boolean51 = indexSettings48.isTTLPurgeDisabled();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData52 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap53 = indexMetaData52.getAliases();
        int int54 = indexMetaData52.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData55 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet57 = indexMetaData55.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff58 = indexMetaData52.diff(indexMetaData55);
        long long59 = indexMetaData55.getCreationDate();
        org.elasticsearch.Version version60 = indexMetaData55.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings61 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap62 = settings61.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate63 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings64 = settings61.filter(strPredicate63);
        org.elasticsearch.index.IndexSettings indexSettings65 = new org.elasticsearch.index.IndexSettings(indexMetaData55, settings61);
        org.elasticsearch.common.logging.ESLogger eSLogger66 = indexSettings65.getlogger();
        boolean boolean67 = indexSettings65.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue68 = indexSettings65.syncInterval;
        org.elasticsearch.common.settings.Settings settings69 = indexSettings65.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData70 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap71 = indexMetaData70.getAliases();
        int int72 = indexMetaData70.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData73 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet75 = indexMetaData73.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff76 = indexMetaData70.diff(indexMetaData73);
        long long77 = indexMetaData73.getCreationDate();
        org.apache.lucene.util.Version version78 = indexMetaData73.getMinimumCompatibleVersion();
        indexSettings65.indexMetaData = indexMetaData73;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting80 = indexSettings65.getINDEX_GC_DELETES_SETTING();
        org.elasticsearch.index.translog.Translog.Durability durability81 = indexSettings65.getTranslogDurability();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue82 = indexSettings65.flushThresholdSize;
        indexSettings48.setTranslogFlushThresholdSize(byteSizeValue82);
        indexSettings13.flushThresholdSize = byteSizeValue82;
        long long85 = indexSettings13.gcDeletesInMillis;
        org.elasticsearch.common.settings.Settings settings86 = indexSettings13.getNodeSettings();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(mergePolicy16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig32);
        org.junit.Assert.assertTrue("'" + durability33 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability33.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(indexMetaData35);
        org.junit.Assert.assertNotNull(strImmutableOpenMap36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(indexMetaDataDiff41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(settings44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strPredicate46);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(eSLogger49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(indexMetaData52);
        org.junit.Assert.assertNotNull(strImmutableOpenMap53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(indexMetaData55);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(indexMetaDataDiff58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(settings61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strPredicate63);
        org.junit.Assert.assertNotNull(settings64);
        org.junit.Assert.assertNotNull(eSLogger66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(settings69);
        org.junit.Assert.assertNotNull(indexMetaData70);
        org.junit.Assert.assertNotNull(strImmutableOpenMap71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(indexMetaData73);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(indexMetaDataDiff76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNull(version78);
        org.junit.Assert.assertNotNull(timeValueSetting80);
        org.junit.Assert.assertTrue("'" + durability81 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability81.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(byteSizeValue82);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 60000L + "'", long85 == 60000L);
        org.junit.Assert.assertNotNull(settings86);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        int int16 = indexSettings13.getMaxResultWindow();
        boolean boolean17 = indexSettings13.isShadowReplicaIndex;
        java.util.function.Predicate<java.lang.String> strPredicate18 = indexSettings13.indexNameMatcher;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = indexSettings13.indexMetaData;
        java.lang.String str20 = indexMetaData19.getIndexUUID();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strPredicate18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_na_" + "'", str20, "_na_");
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate22 = indexSettings13.indexNameMatcher;
        org.elasticsearch.Version version23 = indexSettings13.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting24 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting25 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        boolean boolean26 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting27 = indexSettings13.getALLOW_UNMAPPED();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(strSetting24);
        org.junit.Assert.assertNotNull(timeValueSetting25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(booleanSetting27);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        java.lang.String str16 = indexSettings13.customDataPath();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        java.lang.String str31 = indexSettings30.getUUID();
        int int32 = indexSettings30.maxRefreshListeners;
        int int33 = indexSettings30.maxRescoreWindow;
        boolean boolean34 = indexSettings30.getqueryStringAnalyzeWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData35 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap37 = indexMetaData36.getAliases();
        int int38 = indexMetaData36.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData39 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet41 = indexMetaData39.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff42 = indexMetaData36.diff(indexMetaData39);
        long long43 = indexMetaData39.getCreationDate();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff44 = indexMetaData35.diff(indexMetaData39);
        boolean boolean45 = indexSettings30.updateIndexMetaData(indexMetaData39);
        boolean boolean46 = indexSettings13.updateIndexMetaData(indexMetaData39);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state47 = indexMetaData39.getState();
        java.util.Set<java.lang.String> strSet49 = null; // flaky: indexMetaData39.activeAllocationIds((int) 'a');
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "_na_" + "'", str31, "_na_");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1000 + "'", int32 == 1000);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10000 + "'", int33 == 10000);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(indexMetaData35);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(strImmutableOpenMap37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(indexMetaData39);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(indexMetaDataDiff42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaDataDiff44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + state47 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state47.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNull(strSet49);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getisShadowReplicaIndex();
        java.lang.String str16 = indexSettings13.customDataPath();
        indexSettings13.maxResultWindow = 1000;
        org.elasticsearch.common.unit.TimeValue timeValue19 = indexSettings13.refreshInterval;
        java.lang.String str20 = indexSettings13.getDefaultField();
        int int21 = indexSettings13.getMaxRefreshListeners();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap23 = indexMetaData22.getAliases();
        int int24 = indexMetaData22.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet27 = indexMetaData25.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff28 = indexMetaData22.diff(indexMetaData25);
        long long29 = indexMetaData25.getCreationDate();
        org.elasticsearch.Version version30 = indexMetaData25.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings31 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap32 = settings31.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate33 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings34 = settings31.filter(strPredicate33);
        org.elasticsearch.index.IndexSettings indexSettings35 = new org.elasticsearch.index.IndexSettings(indexMetaData25, settings31);
        org.elasticsearch.common.logging.ESLogger eSLogger36 = indexSettings35.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue37 = indexSettings35.getsyncInterval();
        indexSettings13.setRefreshInterval(timeValue37);
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting39 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_all" + "'", str20, "_all");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1000 + "'", int21 == 1000);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(strImmutableOpenMap23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(indexMetaDataDiff28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(settings31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strPredicate33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(eSLogger36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(strSetting39);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap3 = indexMetaData0.getMappings();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData5 = indexMetaData0.mappingOrDefault("index.blocks.write");
        java.util.Set<java.lang.String> strSet7 = null; // flaky: indexMetaData0.activeAllocationIds((int) 'a');
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData9 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet11 = indexMetaData9.activeAllocationIds(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData9);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData13 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet15 = indexMetaData13.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap16 = indexMetaData13.getMappings();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData18 = indexMetaData13.mappingOrDefault("index.blocks.write");
        java.util.Set<java.lang.String> strSet20 = null; // flaky: indexMetaData13.activeAllocationIds((int) (byte) -1);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff21 = indexMetaData9.diff(indexMetaData13);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff22 = indexMetaData0.diff(indexMetaData13);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters23 = indexMetaData13.requireFilters();
        // The following exception was thrown during execution in test generation
        try {
            int int25 = org.elasticsearch.cluster.metadata.IndexMetaData.getRoutingFactor(indexMetaData13, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: the number of source shards [1] must be a must be a multiple of [1]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strImmutableOpenMap3);
        org.junit.Assert.assertNull(mappingMetaData5);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertNotNull(indexMetaData9);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(indexMetaData13);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strImmutableOpenMap16);
        org.junit.Assert.assertNull(mappingMetaData18);
        org.junit.Assert.assertNull(strSet20);
        org.junit.Assert.assertNotNull(indexMetaDataDiff21);
        org.junit.Assert.assertNotNull(indexMetaDataDiff22);
        org.junit.Assert.assertNull(discoveryNodeFilters23);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        org.elasticsearch.Version version16 = indexSettings13.getIndexVersionCreated();
        boolean boolean17 = indexSettings13.defaultAllowUnmappedFields;
        java.lang.String str18 = indexSettings13.customDataPath();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.ByteSizeValue> byteSizeValueSetting19 = indexSettings13.getINDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE_SETTING();
        int int20 = indexSettings13.getMaxRescoreWindow();
        int int21 = indexSettings13.maxResultWindow;
        org.elasticsearch.common.settings.Settings settings22 = indexSettings13.getSettings();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(byteSizeValueSetting19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000 + "'", int20 == 10000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10000 + "'", int21 == 10000);
        org.junit.Assert.assertNotNull(settings22);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        int int23 = indexMetaData22.getTotalNumberOfShards();
        boolean boolean24 = indexSettings13.updateIndexMetaData(indexMetaData22);
        indexSettings13.warmerEnabled = true;
        org.elasticsearch.common.settings.Settings settings27 = indexSettings13.settings;
        java.util.function.Predicate<java.lang.String> strPredicate28 = indexSettings13.getindexNameMatcher();
        indexSettings13.setEnableWarmer(false);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertNotNull(strPredicate28);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        indexSettings13.gcDeletesInMillis = (byte) 1;
        long long21 = indexSettings13.getGcDeletesInMillis();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting22 = indexSettings13.getQUERY_STRING_ANALYZE_WILDCARD();
        java.lang.String str23 = indexSettings13.defaultField;
        java.util.function.Predicate<java.lang.String> strPredicate24 = indexSettings13.getindexNameMatcher();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting25 = indexSettings13.getMAX_RESCORE_WINDOW_SETTING();
        boolean boolean26 = indexSettings13.defaultAllowUnmappedFields;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertNotNull(booleanSetting22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_all" + "'", str23, "_all");
        org.junit.Assert.assertNotNull(strPredicate24);
        org.junit.Assert.assertNotNull(intSetting25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state4 = indexMetaData0.getState();
        long long5 = indexMetaData0.getCreationDate();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertTrue("'" + state4 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state4.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        boolean boolean16 = indexSettings13.isQueryStringLenient();
        org.elasticsearch.index.translog.Translog.Durability durability17 = indexSettings13.getdurability();
        indexSettings13.setTTLPurgeDisabled(false);
        boolean boolean20 = indexSettings13.queryStringLenient;
        org.elasticsearch.index.translog.Translog.Durability durability21 = indexSettings13.getTranslogDurability();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + durability17 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability17.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + durability21 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability21.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.Version version19 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting21 = indexSettings13.getQUERY_STRING_ANALYZE_WILDCARD();
        org.apache.lucene.index.MergePolicy mergePolicy22 = indexSettings13.getMergePolicy();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting23 = indexSettings13.getINDEX_WARMER_ENABLED_SETTING();
        org.elasticsearch.common.unit.TimeValue timeValue24 = indexSettings13.getRefreshInterval();
        indexSettings13.setTTLPurgeDisabled(false);
        int int27 = indexSettings13.maxRescoreWindow;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(booleanSetting21);
        org.junit.Assert.assertNotNull(mergePolicy22);
        org.junit.Assert.assertNotNull(booleanSetting23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10000 + "'", int27 == 10000);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig15 = indexSettings13.getMergeSchedulerConfig();
        boolean boolean16 = indexSettings13.queryStringAnalyzeWildcard;
        boolean boolean17 = indexSettings13.isIndexUsingShadowReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = indexSettings13.indexMetaData;
        org.elasticsearch.common.unit.TimeValue timeValue19 = indexSettings13.syncInterval;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(timeValue19);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        int int16 = indexSettings13.getMaxResultWindow();
        boolean boolean17 = indexSettings13.isShadowReplicaIndex;
        java.util.function.Predicate<java.lang.String> strPredicate18 = indexSettings13.indexNameMatcher;
        int int19 = indexSettings13.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap21 = indexMetaData20.getAliases();
        int int22 = indexMetaData20.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet25 = indexMetaData23.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff26 = indexMetaData20.diff(indexMetaData23);
        long long27 = indexMetaData23.getCreationDate();
        org.elasticsearch.Version version28 = indexMetaData23.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings29 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap30 = settings29.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate31 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings32 = settings29.filter(strPredicate31);
        org.elasticsearch.index.IndexSettings indexSettings33 = new org.elasticsearch.index.IndexSettings(indexMetaData23, settings29);
        org.elasticsearch.common.logging.ESLogger eSLogger34 = indexSettings33.getlogger();
        boolean boolean35 = indexSettings33.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue36 = indexSettings33.syncInterval;
        org.elasticsearch.common.settings.Settings settings37 = indexSettings33.getSettings();
        java.lang.String str38 = indexSettings33.defaultField;
        org.elasticsearch.Version version39 = indexSettings33.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue40 = indexSettings33.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData41 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap42 = indexMetaData41.getAliases();
        int int43 = indexMetaData41.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData44 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet46 = indexMetaData44.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff47 = indexMetaData41.diff(indexMetaData44);
        long long48 = indexMetaData44.getCreationDate();
        org.elasticsearch.Version version49 = indexMetaData44.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings50 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap51 = settings50.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate52 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings53 = settings50.filter(strPredicate52);
        org.elasticsearch.index.IndexSettings indexSettings54 = new org.elasticsearch.index.IndexSettings(indexMetaData44, settings50);
        java.lang.String str55 = indexSettings54.getUUID();
        boolean boolean56 = indexSettings54.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy57 = indexSettings54.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData58 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap59 = indexMetaData58.getAliases();
        int int60 = indexMetaData58.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData61 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet63 = indexMetaData61.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff64 = indexMetaData58.diff(indexMetaData61);
        long long65 = indexMetaData61.getCreationDate();
        org.elasticsearch.Version version66 = indexMetaData61.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings67 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap68 = settings67.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate69 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings70 = settings67.filter(strPredicate69);
        org.elasticsearch.index.IndexSettings indexSettings71 = new org.elasticsearch.index.IndexSettings(indexMetaData61, settings67);
        boolean boolean72 = indexSettings71.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig73 = indexSettings71.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability74 = indexSettings71.getdurability();
        indexSettings54.setTranslogDurability(durability74);
        indexSettings33.durability = durability74;
        indexSettings13.durability = durability74;
        org.elasticsearch.Version version78 = indexSettings13.version;
        int int79 = indexSettings13.maxRescoreWindow;
        int int80 = indexSettings13.getNumberOfReplicas();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strPredicate18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strImmutableOpenMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(indexMetaDataDiff26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strPredicate31);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertNotNull(eSLogger34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(settings37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "_all" + "'", str38, "_all");
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(indexMetaData41);
        org.junit.Assert.assertNotNull(strImmutableOpenMap42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(indexMetaData44);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(indexMetaDataDiff47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(version49);
        org.junit.Assert.assertNotNull(settings50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strPredicate52);
        org.junit.Assert.assertNotNull(settings53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "_na_" + "'", str55, "_na_");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(mergePolicy57);
        org.junit.Assert.assertNotNull(indexMetaData58);
        org.junit.Assert.assertNotNull(strImmutableOpenMap59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(indexMetaData61);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(indexMetaDataDiff64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(version66);
        org.junit.Assert.assertNotNull(settings67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strPredicate69);
        org.junit.Assert.assertNotNull(settings70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig73);
        org.junit.Assert.assertTrue("'" + durability74 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability74.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(version78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10000 + "'", int79 == 10000);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        int int4 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.Version version5 = indexMetaData0.getUpgradedVersion();
        long long6 = indexMetaData0.getVersion();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap7 = indexMetaData0.getAliases();
        org.elasticsearch.common.io.stream.StreamInput streamInput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData9 = indexMetaData0.readFrom(streamInput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(version5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNotNull(strImmutableOpenMap7);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting16 = indexSettings13.getINDEX_REFRESH_INTERVAL_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        org.elasticsearch.common.logging.ESLogger eSLogger31 = indexSettings30.getlogger();
        boolean boolean32 = indexSettings30.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue33 = indexSettings30.syncInterval;
        org.elasticsearch.common.settings.Settings settings34 = indexSettings30.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData35 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap36 = indexMetaData35.getAliases();
        int int37 = indexMetaData35.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet40 = indexMetaData38.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff41 = indexMetaData35.diff(indexMetaData38);
        long long42 = indexMetaData38.getCreationDate();
        org.apache.lucene.util.Version version43 = indexMetaData38.getMinimumCompatibleVersion();
        indexSettings30.indexMetaData = indexMetaData38;
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData46 = indexMetaData38.mapping("index.uuid");
        boolean boolean47 = indexSettings13.updateIndexMetaData(indexMetaData38);
        java.lang.String str48 = indexSettings13.getDefaultField();
        org.elasticsearch.common.unit.TimeValue timeValue49 = indexSettings13.getsyncInterval();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(timeValueSetting16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(eSLogger31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(indexMetaData35);
        org.junit.Assert.assertNotNull(strImmutableOpenMap36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(indexMetaDataDiff41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNull(version43);
        org.junit.Assert.assertNull(mappingMetaData46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "_all" + "'", str48, "_all");
        org.junit.Assert.assertNotNull(timeValue49);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder2 = builder0.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder5 = builder2.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder8 = builder2.put("index.creation_date", (double) (-1.0f));
        org.elasticsearch.common.settings.Settings.Builder builder9 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder12 = builder9.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder15 = builder12.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder26 = builder12.put("index.creation_date_string", version25);
        org.elasticsearch.common.settings.Settings.Builder builder29 = builder12.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder31 = builder29.normalizePrefix("index.blocks.read");
        java.util.Map<java.lang.String, java.lang.String> strMap32 = builder31.internalMap();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData33 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap34 = indexMetaData33.getAliases();
        int int35 = indexMetaData33.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet38 = indexMetaData36.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff39 = indexMetaData33.diff(indexMetaData36);
        long long40 = indexMetaData36.getCreationDate();
        org.elasticsearch.Version version41 = indexMetaData36.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings42 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap43 = settings42.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate44 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings45 = settings42.filter(strPredicate44);
        org.elasticsearch.index.IndexSettings indexSettings46 = new org.elasticsearch.index.IndexSettings(indexMetaData36, settings42);
        boolean boolean47 = indexSettings46.getqueryStringLenient();
        int int48 = indexSettings46.getNumberOfShards();
        boolean boolean49 = indexSettings46.isQueryStringLenient();
        java.util.function.Predicate<java.lang.String> strPredicate50 = indexSettings46.getindexNameMatcher();
        java.util.function.Function<java.lang.String, java.lang.String> strFunction51 = null;
        org.elasticsearch.common.settings.Settings.Builder builder52 = builder8.putProperties(strMap32, strPredicate50, strFunction51);
        org.elasticsearch.common.settings.Settings.Builder builder54 = builder52.normalizePrefix("");
        org.elasticsearch.common.settings.Settings.Builder builder57 = builder54.put("active_allocations", (float) (byte) -1);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData59 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap60 = indexMetaData59.getAliases();
        int int61 = indexMetaData59.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData62 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet64 = indexMetaData62.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff65 = indexMetaData59.diff(indexMetaData62);
        long long66 = indexMetaData62.getCreationDate();
        org.elasticsearch.Version version67 = indexMetaData62.getCreationVersion();
        org.elasticsearch.Version version68 = indexMetaData62.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder69 = builder54.put("index.shared_filesystem", version68);
        org.elasticsearch.common.settings.Settings.Builder builder72 = builder69.put("primary_terms", 0);
        java.nio.file.Path path73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder74 = builder72.loadFromPath(path73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(indexMetaData33);
        org.junit.Assert.assertNotNull(strImmutableOpenMap34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(indexMetaDataDiff39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(settings42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strPredicate44);
        org.junit.Assert.assertNotNull(settings45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strPredicate50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(indexMetaData59);
        org.junit.Assert.assertNotNull(strImmutableOpenMap60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(indexMetaData62);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNotNull(indexMetaDataDiff65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(version67);
        org.junit.Assert.assertNotNull(version68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(builder72);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.getMaxRescoreWindow();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.index.translog.Translog.Durability> durabilitySetting16 = indexSettings13.getINDEX_TRANSLOG_DURABILITY_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.apache.lucene.util.Version version25 = indexMetaData20.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData20);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData27 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap28 = indexMetaData27.getAliases();
        int int29 = indexMetaData27.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData30 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet32 = indexMetaData30.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff33 = indexMetaData27.diff(indexMetaData30);
        long long34 = indexMetaData30.getCreationDate();
        org.elasticsearch.Version version35 = indexMetaData30.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings36 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap37 = settings36.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate38 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings39 = settings36.filter(strPredicate38);
        org.elasticsearch.index.IndexSettings indexSettings40 = new org.elasticsearch.index.IndexSettings(indexMetaData30, settings36);
        org.elasticsearch.common.logging.ESLogger eSLogger41 = indexSettings40.getlogger();
        boolean boolean42 = indexSettings40.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue43 = indexSettings40.syncInterval;
        org.elasticsearch.common.settings.Settings settings44 = indexSettings40.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData45 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap46 = indexMetaData45.getAliases();
        int int47 = indexMetaData45.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData48 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet50 = indexMetaData48.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff51 = indexMetaData45.diff(indexMetaData48);
        long long52 = indexMetaData48.getCreationDate();
        org.apache.lucene.util.Version version53 = indexMetaData48.getMinimumCompatibleVersion();
        indexSettings40.indexMetaData = indexMetaData48;
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData56 = indexMetaData48.mapping("index.uuid");
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff57 = indexMetaData20.diff(indexMetaData48);
        indexSettings13.indexMetaData = indexMetaData48;
        boolean boolean59 = indexSettings13.isQueryStringAllowLeadingWildcard();
        boolean boolean60 = indexSettings13.getisShadowReplicaIndex();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertNotNull(durabilitySetting16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNull(version25);
        org.junit.Assert.assertNotNull(indexMetaData27);
        org.junit.Assert.assertNotNull(strImmutableOpenMap28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(indexMetaData30);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(indexMetaDataDiff33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(settings36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strPredicate38);
        org.junit.Assert.assertNotNull(settings39);
        org.junit.Assert.assertNotNull(eSLogger41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(settings44);
        org.junit.Assert.assertNotNull(indexMetaData45);
        org.junit.Assert.assertNotNull(strImmutableOpenMap46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(indexMetaData48);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(indexMetaDataDiff51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNull(version53);
        org.junit.Assert.assertNull(mappingMetaData56);
        org.junit.Assert.assertNotNull(indexMetaDataDiff57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        boolean boolean31 = indexSettings30.warmerEnabled;
        indexSettings30.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue34 = indexSettings30.getTranslogSyncInterval();
        indexSettings13.refreshInterval = timeValue34;
        long long36 = indexSettings13.gcDeletesInMillis;
        org.elasticsearch.Version version37 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting38 = indexSettings13.getALLOW_UNMAPPED();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData39 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap40 = indexMetaData39.getAliases();
        int int41 = indexMetaData39.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData42 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet44 = indexMetaData42.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff45 = indexMetaData39.diff(indexMetaData42);
        long long46 = indexMetaData42.getCreationDate();
        org.elasticsearch.Version version47 = indexMetaData42.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings48 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap49 = settings48.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate50 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings51 = settings48.filter(strPredicate50);
        org.elasticsearch.index.IndexSettings indexSettings52 = new org.elasticsearch.index.IndexSettings(indexMetaData42, settings48);
        boolean boolean53 = indexSettings52.warmerEnabled;
        indexSettings52.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue56 = indexSettings52.getTranslogSyncInterval();
        int int57 = indexSettings52.maxRefreshListeners;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting58 = indexSettings52.getQUERY_STRING_ANALYZE_WILDCARD();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean59 = indexSettings13.getValue(booleanSetting58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: settings scope doesn't match the setting scope [IndexScope] not in [[NodeScope]]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 60000L + "'", long36 == 60000L);
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertNotNull(booleanSetting38);
        org.junit.Assert.assertNotNull(indexMetaData39);
        org.junit.Assert.assertNotNull(strImmutableOpenMap40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(indexMetaData42);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(indexMetaDataDiff45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(version47);
        org.junit.Assert.assertNotNull(settings48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strPredicate50);
        org.junit.Assert.assertNotNull(settings51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(timeValue56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1000 + "'", int57 == 1000);
        org.junit.Assert.assertNotNull(booleanSetting58);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate22 = indexSettings13.indexNameMatcher;
        org.elasticsearch.Version version23 = indexSettings13.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting24 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue25 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_BLOCKS_READ_SETTING;
        java.lang.Boolean boolean27 = indexSettings13.getValue(booleanSetting26);
        indexSettings13.TTLPurgeDisabled = true;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting30 = indexSettings13.getQUERY_STRING_ANALYZE_WILDCARD();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData31 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap32 = indexMetaData31.getAliases();
        int int33 = indexMetaData31.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData34 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet36 = indexMetaData34.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff37 = indexMetaData31.diff(indexMetaData34);
        long long38 = indexMetaData34.getCreationDate();
        org.elasticsearch.Version version39 = indexMetaData34.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings40 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap41 = settings40.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate42 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings43 = settings40.filter(strPredicate42);
        org.elasticsearch.index.IndexSettings indexSettings44 = new org.elasticsearch.index.IndexSettings(indexMetaData34, settings40);
        boolean boolean45 = indexSettings44.getqueryStringLenient();
        boolean boolean46 = indexSettings44.queryStringAllowLeadingWildcard;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting47 = indexSettings44.getINDEX_REFRESH_INTERVAL_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData48 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap49 = indexMetaData48.getAliases();
        int int50 = indexMetaData48.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData51 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet53 = indexMetaData51.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff54 = indexMetaData48.diff(indexMetaData51);
        long long55 = indexMetaData51.getCreationDate();
        org.elasticsearch.Version version56 = indexMetaData51.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings57 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap58 = settings57.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate59 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings60 = settings57.filter(strPredicate59);
        org.elasticsearch.index.IndexSettings indexSettings61 = new org.elasticsearch.index.IndexSettings(indexMetaData51, settings57);
        java.lang.String str62 = indexSettings61.getUUID();
        boolean boolean63 = indexSettings61.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy64 = indexSettings61.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData65 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap66 = indexMetaData65.getAliases();
        int int67 = indexMetaData65.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData68 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet70 = indexMetaData68.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff71 = indexMetaData65.diff(indexMetaData68);
        long long72 = indexMetaData68.getCreationDate();
        org.elasticsearch.Version version73 = indexMetaData68.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings74 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap75 = settings74.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate76 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings77 = settings74.filter(strPredicate76);
        org.elasticsearch.index.IndexSettings indexSettings78 = new org.elasticsearch.index.IndexSettings(indexMetaData68, settings74);
        boolean boolean79 = indexSettings78.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig80 = indexSettings78.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability81 = indexSettings78.getdurability();
        indexSettings61.setTranslogDurability(durability81);
        indexSettings44.setdurability(durability81);
        indexSettings13.setdurability(durability81);
        int int85 = indexSettings13.maxResultWindow;
        int int86 = indexSettings13.getMaxRefreshListeners();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(strSetting24);
        org.junit.Assert.assertNotNull(byteSizeValue25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertNotNull(booleanSetting30);
        org.junit.Assert.assertNotNull(indexMetaData31);
        org.junit.Assert.assertNotNull(strImmutableOpenMap32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(indexMetaData34);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(indexMetaDataDiff37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(settings40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strPredicate42);
        org.junit.Assert.assertNotNull(settings43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(timeValueSetting47);
        org.junit.Assert.assertNotNull(indexMetaData48);
        org.junit.Assert.assertNotNull(strImmutableOpenMap49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(indexMetaData51);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNotNull(indexMetaDataDiff54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(version56);
        org.junit.Assert.assertNotNull(settings57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strPredicate59);
        org.junit.Assert.assertNotNull(settings60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "_na_" + "'", str62, "_na_");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(mergePolicy64);
        org.junit.Assert.assertNotNull(indexMetaData65);
        org.junit.Assert.assertNotNull(strImmutableOpenMap66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(indexMetaData68);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertNotNull(indexMetaDataDiff71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(version73);
        org.junit.Assert.assertNotNull(settings74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strPredicate76);
        org.junit.Assert.assertNotNull(settings77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig80);
        org.junit.Assert.assertTrue("'" + durability81 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability81.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10000 + "'", int85 == 10000);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1000 + "'", int86 == 1000);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.numberOfShards((int) (byte) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap8 = indexMetaData7.getAliases();
        int int9 = indexMetaData7.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet12 = indexMetaData10.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData7.diff(indexMetaData10);
        long long14 = indexMetaData10.getCreationDate();
        org.elasticsearch.Version version15 = indexMetaData10.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings16 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap17 = settings16.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate18 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings19 = settings16.filter(strPredicate18);
        org.elasticsearch.index.IndexSettings indexSettings20 = new org.elasticsearch.index.IndexSettings(indexMetaData10, settings16);
        org.elasticsearch.common.logging.ESLogger eSLogger21 = indexSettings20.getlogger();
        boolean boolean22 = indexSettings20.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue23 = indexSettings20.syncInterval;
        org.elasticsearch.common.settings.Settings settings24 = indexSettings20.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap26 = indexMetaData25.getAliases();
        int int27 = indexMetaData25.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData28 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet30 = indexMetaData28.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff31 = indexMetaData25.diff(indexMetaData28);
        long long32 = indexMetaData28.getCreationDate();
        org.apache.lucene.util.Version version33 = indexMetaData28.getMinimumCompatibleVersion();
        indexSettings20.indexMetaData = indexMetaData28;
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData36 = indexMetaData28.mapping("index.uuid");
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap37 = indexMetaData28.getActiveAllocationIds();
        long long38 = indexMetaData28.getVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state39 = indexMetaData28.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder6.state(state39);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = builder6.version((long) ' ');
        int int43 = builder6.getRoutingNumShards();
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strPredicate18);
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(eSLogger21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(settings24);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strImmutableOpenMap26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(indexMetaData28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(indexMetaDataDiff31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNull(version33);
        org.junit.Assert.assertNull(mappingMetaData36);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertTrue("'" + state39 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state39.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap4 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap6 = indexMetaData0.getCustoms();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters7 = indexMetaData0.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.xcontent.XContentParser xContentParser9 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap11 = indexMetaData10.getAliases();
        int int12 = indexMetaData10.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData13 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet15 = indexMetaData13.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff16 = indexMetaData10.diff(indexMetaData13);
        long long17 = indexMetaData13.getCreationDate();
        org.elasticsearch.Version version18 = indexMetaData13.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings19 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap20 = settings19.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate21 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings22 = settings19.filter(strPredicate21);
        org.elasticsearch.index.IndexSettings indexSettings23 = new org.elasticsearch.index.IndexSettings(indexMetaData13, settings19);
        org.elasticsearch.common.logging.ESLogger eSLogger24 = indexSettings23.getlogger();
        int int25 = indexSettings23.maxRescoreWindow;
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher26 = indexSettings23.getParseFieldMatcher();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData27 = indexMetaData0.fromXContent(xContentParser9, parseFieldMatcher26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap4);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(strImmutableOpenMap6);
        org.junit.Assert.assertNull(discoveryNodeFilters7);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(strImmutableOpenMap11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(indexMetaData13);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(indexMetaDataDiff16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strPredicate21);
        org.junit.Assert.assertNotNull(settings22);
        org.junit.Assert.assertNotNull(eSLogger24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10000 + "'", int25 == 10000);
        org.junit.Assert.assertNotNull(parseFieldMatcher26);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = indexSettings13.getIndexMetaData();
        boolean boolean20 = indexSettings13.getisShadowReplicaIndex();
        org.elasticsearch.common.logging.ESLogger eSLogger21 = indexSettings13.getlogger();
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings22 = org.elasticsearch.common.settings.IndexScopedSettings.DEFAULT_SCOPED_SETTINGS;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap24 = indexMetaData23.getAliases();
        int int25 = indexMetaData23.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData26 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet28 = indexMetaData26.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff29 = indexMetaData23.diff(indexMetaData26);
        long long30 = indexMetaData26.getCreationDate();
        org.elasticsearch.Version version31 = indexMetaData26.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings32 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap33 = settings32.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate34 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings35 = settings32.filter(strPredicate34);
        org.elasticsearch.index.IndexSettings indexSettings36 = new org.elasticsearch.index.IndexSettings(indexMetaData26, settings32);
        org.elasticsearch.common.logging.ESLogger eSLogger37 = indexSettings36.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue38 = indexSettings36.getsyncInterval();
        indexSettings36.setEnableWarmer(false);
        java.lang.String str41 = indexSettings36.defaultField;
        org.elasticsearch.common.settings.Settings settings42 = indexSettings36.settings;
        org.elasticsearch.common.unit.TimeValue timeValue43 = indexSettings36.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue44 = indexSettings36.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate45 = indexSettings36.indexNameMatcher;
        org.elasticsearch.Version version46 = indexSettings36.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting47 = indexSettings36.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue48 = indexSettings36.getFlushThresholdSize();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting49 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_BLOCKS_READ_SETTING;
        java.lang.Boolean boolean50 = indexSettings36.getValue(booleanSetting49);
        java.lang.Boolean boolean51 = indexScopedSettings22.get(booleanSetting49);
        java.lang.Boolean boolean52 = indexSettings13.getValue(booleanSetting49);
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting53 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(eSLogger21);
        org.junit.Assert.assertNotNull(indexScopedSettings22);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(strImmutableOpenMap24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(indexMetaData26);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(indexMetaDataDiff29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(version31);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strPredicate34);
        org.junit.Assert.assertNotNull(settings35);
        org.junit.Assert.assertNotNull(eSLogger37);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "_all" + "'", str41, "_all");
        org.junit.Assert.assertNotNull(settings42);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(byteSizeValue44);
        org.junit.Assert.assertNotNull(strPredicate45);
        org.junit.Assert.assertNotNull(version46);
        org.junit.Assert.assertNotNull(strSetting47);
        org.junit.Assert.assertNotNull(byteSizeValue48);
        org.junit.Assert.assertNotNull(booleanSetting49);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
        org.junit.Assert.assertEquals("'" + boolean52 + "' != '" + false + "'", boolean52, false);
        org.junit.Assert.assertNotNull(strSetting53);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.elasticsearch.common.settings.Settings settings0 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap1 = settings0.getAsGroups();
        org.elasticsearch.Version version3 = null;
        org.elasticsearch.Version version4 = settings0.getAsVersion("index.number_of_replicas", version3);
        java.lang.String str6 = settings0.toDelimitedString('a');
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings17 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap18 = settings17.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate19 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings20 = settings17.filter(strPredicate19);
        org.elasticsearch.index.IndexSettings indexSettings21 = new org.elasticsearch.index.IndexSettings(indexMetaData11, settings17);
        org.elasticsearch.common.logging.ESLogger eSLogger22 = indexSettings21.getlogger();
        boolean boolean23 = indexSettings21.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue24 = indexSettings21.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap26 = indexMetaData25.getAliases();
        int int27 = indexMetaData25.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData28 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet30 = indexMetaData28.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff31 = indexMetaData25.diff(indexMetaData28);
        long long32 = indexMetaData28.getCreationDate();
        org.elasticsearch.Version version33 = indexMetaData28.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings34 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap35 = settings34.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate36 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings37 = settings34.filter(strPredicate36);
        org.elasticsearch.index.IndexSettings indexSettings38 = new org.elasticsearch.index.IndexSettings(indexMetaData28, settings34);
        boolean boolean39 = indexSettings38.warmerEnabled;
        indexSettings38.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue42 = indexSettings38.getTranslogSyncInterval();
        indexSettings21.refreshInterval = timeValue42;
        org.elasticsearch.common.unit.TimeValue timeValue44 = settings0.getAsTime("index.blocks.read", timeValue42);
        org.junit.Assert.assertNotNull(settings0);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(version4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strPredicate19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(eSLogger22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strImmutableOpenMap26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(indexMetaData28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(indexMetaDataDiff31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strPredicate36);
        org.junit.Assert.assertNotNull(settings37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(timeValue44);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap3 = indexMetaData0.getMappings();
        java.util.Set<java.lang.String> strSet5 = indexMetaData0.activeAllocationIds((int) (byte) 0);
        long long6 = indexMetaData0.getVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters7 = indexMetaData0.excludeFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strImmutableOpenMap3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNull(discoveryNodeFilters7);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state2 = indexMetaData0.getState();
        int int3 = indexMetaData0.getRoutingFactor();
        long long4 = indexMetaData0.getVersion();
        boolean boolean6 = indexMetaData0.isSameUUID("index.version.minimum_compatible");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + state2 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state2.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 1L + "'", long4 == 1L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = indexSettings13.getIndexMetaData();
        boolean boolean20 = indexSettings13.getisShadowReplicaIndex();
        indexSettings13.TTLPurgeDisabled = true;
        boolean boolean23 = indexSettings13.isTTLPurgeDisabled();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy16 = indexSettings13.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        boolean boolean31 = indexSettings30.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig32 = indexSettings30.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability33 = indexSettings30.getdurability();
        indexSettings13.setTranslogDurability(durability33);
        boolean boolean35 = indexSettings13.queryStringLenient;
        boolean boolean36 = indexSettings13.queryStringAllowLeadingWildcard;
        indexSettings13.setMaxRefreshListeners((int) (short) -1);
        indexSettings13.setTTLPurgeDisabled(true);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(mergePolicy16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig32);
        org.junit.Assert.assertTrue("'" + durability33 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability33.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder2 = builder0.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder5 = builder2.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder8 = builder5.put("", (double) 1000);
        org.elasticsearch.common.settings.Settings.Builder builder11 = builder8.put("", 60000L);
        java.lang.Class<?> wildcardClass12 = builder11.getClass();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap3 = indexMetaData0.getMappings();
        int int4 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap5 = indexMetaData0.getActiveAllocationIds();
        java.lang.String str6 = indexMetaData0.getIndexUUID();
        int int7 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.Version version8 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap9 = indexMetaData0.getCustoms();
        org.elasticsearch.common.xcontent.XContentParser xContentParser10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap12 = indexMetaData11.getAliases();
        int int13 = indexMetaData11.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet16 = indexMetaData14.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff17 = indexMetaData11.diff(indexMetaData14);
        long long18 = indexMetaData14.getCreationDate();
        org.elasticsearch.Version version19 = indexMetaData14.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings20 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap21 = settings20.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate22 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings23 = settings20.filter(strPredicate22);
        org.elasticsearch.index.IndexSettings indexSettings24 = new org.elasticsearch.index.IndexSettings(indexMetaData14, settings20);
        org.elasticsearch.common.logging.ESLogger eSLogger25 = indexSettings24.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue26 = indexSettings24.getsyncInterval();
        indexSettings24.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting29 = indexSettings24.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData30 = indexSettings24.getIndexMetaData();
        indexSettings24.setwarmerEnabled(false);
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher33 = indexSettings24.parseFieldMatcher;
        java.lang.String str34 = indexSettings24.customDataPath();
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher35 = indexSettings24.getParseFieldMatcher();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = indexMetaData0.fromXContent(xContentParser10, parseFieldMatcher35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strImmutableOpenMap3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_na_" + "'", str6, "_na_");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strImmutableOpenMap12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(indexMetaDataDiff17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertNotNull(eSLogger25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(intSetting29);
        org.junit.Assert.assertNotNull(indexMetaData30);
        org.junit.Assert.assertNotNull(parseFieldMatcher33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(parseFieldMatcher35);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        boolean boolean15 = indexSettings13.queryStringAllowLeadingWildcard;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting16 = indexSettings13.getINDEX_REFRESH_INTERVAL_SETTING();
        boolean boolean17 = indexSettings13.getisShadowReplicaIndex();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig19 = indexSettings13.mergePolicyConfig;
        boolean boolean20 = indexSettings13.isQueryStringLenient();
        indexSettings13.setMaxRefreshListeners(1000);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValueSetting16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(mergePolicyConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData0.writeTo(streamOutput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = indexSettings13.getIndexMetaData();
        indexSettings13.setwarmerEnabled(false);
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher22 = indexSettings13.parseFieldMatcher;
        org.elasticsearch.common.settings.Settings settings23 = indexSettings13.getSettings();
        java.lang.String str26 = settings23.get("1", "_all");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(parseFieldMatcher22);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_all" + "'", str26, "_all");
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting15 = indexSettings13.getQUERY_STRING_LENIENT_SETTING();
        boolean boolean16 = indexSettings13.hasCustomDataPath();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(booleanSetting15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        int int21 = indexSettings13.getNumberOfShards();
        org.elasticsearch.common.settings.Settings settings22 = indexSettings13.settings;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig23 = indexSettings13.getMergeSchedulerConfig();
        boolean boolean24 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting25 = indexSettings13.getMAX_REFRESH_LISTENERS_PER_SHARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = indexSettings13.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting27 = indexSettings13.getQUERY_STRING_LENIENT_SETTING();
        indexSettings13.maxRescoreWindow = 0;
        int int30 = indexSettings13.getNumberOfShards();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.index.translog.Translog.Durability> durabilitySetting31 = indexSettings13.getINDEX_TRANSLOG_DURABILITY_SETTING();
        org.elasticsearch.common.settings.Settings settings32 = indexSettings13.getSettings();
        java.lang.String str33 = indexSettings13.getUUID();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting34 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(settings22);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intSetting25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertNotNull(booleanSetting27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(durabilitySetting31);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_na_" + "'", str33, "_na_");
        org.junit.Assert.assertNotNull(intSetting34);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        int int16 = indexSettings13.getNumberOfShards();
        java.util.function.Predicate<java.lang.String> strPredicate17 = indexSettings13.getindexNameMatcher();
        boolean boolean18 = indexSettings13.defaultAllowUnmappedFields;
        int int19 = indexSettings13.maxRefreshListeners;
        long long20 = indexSettings13.gcDeletesInMillis;
        org.elasticsearch.common.unit.TimeValue timeValue21 = indexSettings13.refreshInterval;
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig22 = indexSettings13.mergePolicyConfig;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strPredicate17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 60000L + "'", long20 == 60000L);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(mergePolicyConfig22);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        java.util.Map<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strMap0 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes = strMap0;
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.common.settings.Settings.Builder builder9 = builder3.put("index.blocks.read", (int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap12 = indexMetaData11.getAliases();
        int int13 = indexMetaData11.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet16 = indexMetaData14.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff17 = indexMetaData11.diff(indexMetaData14);
        long long18 = indexMetaData14.getCreationDate();
        org.elasticsearch.Version version19 = indexMetaData14.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings20 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap21 = settings20.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate22 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings23 = settings20.filter(strPredicate22);
        org.elasticsearch.index.IndexSettings indexSettings24 = new org.elasticsearch.index.IndexSettings(indexMetaData14, settings20);
        boolean boolean25 = indexSettings24.getqueryStringLenient();
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig26 = indexSettings24.mergePolicyConfig;
        org.elasticsearch.Version version27 = indexSettings24.getIndexVersionCreated();
        org.elasticsearch.common.settings.Settings.Builder builder28 = builder9.put("index.version.created", version27);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strImmutableOpenMap12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(indexMetaDataDiff17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(mergePolicyConfig26);
        org.junit.Assert.assertNotNull(version27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        boolean boolean1 = org.elasticsearch.common.settings.AbstractScopedSettings.isValidKey("index.version.created");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.apache.lucene.util.Version version8 = indexMetaData3.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData3);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap11 = indexMetaData10.getAliases();
        int int12 = indexMetaData10.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData13 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet15 = indexMetaData13.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff16 = indexMetaData10.diff(indexMetaData13);
        long long17 = indexMetaData13.getCreationDate();
        org.elasticsearch.Version version18 = indexMetaData13.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings19 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap20 = settings19.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate21 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings22 = settings19.filter(strPredicate21);
        org.elasticsearch.index.IndexSettings indexSettings23 = new org.elasticsearch.index.IndexSettings(indexMetaData13, settings19);
        org.elasticsearch.common.logging.ESLogger eSLogger24 = indexSettings23.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue25 = indexSettings23.getsyncInterval();
        indexSettings23.setEnableWarmer(false);
        java.lang.String str28 = indexSettings23.defaultField;
        org.elasticsearch.common.settings.Settings settings29 = indexSettings23.settings;
        org.elasticsearch.common.unit.TimeValue timeValue30 = indexSettings23.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue31 = indexSettings23.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate32 = indexSettings23.indexNameMatcher;
        org.elasticsearch.Version version33 = indexSettings23.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting34 = indexSettings23.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue35 = indexSettings23.getFlushThresholdSize();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting36 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_BLOCKS_READ_SETTING;
        java.lang.Boolean boolean37 = indexSettings23.getValue(booleanSetting36);
        boolean boolean38 = indexMetaData3.equals((java.lang.Object) indexSettings23);
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings39 = indexSettings23.scopedSettings;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData40 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap41 = indexMetaData40.getAliases();
        int int42 = indexMetaData40.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData43 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet45 = indexMetaData43.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff46 = indexMetaData40.diff(indexMetaData43);
        long long47 = indexMetaData43.getCreationDate();
        org.elasticsearch.Version version48 = indexMetaData43.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings49 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap50 = settings49.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate51 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings52 = settings49.filter(strPredicate51);
        org.elasticsearch.index.IndexSettings indexSettings53 = new org.elasticsearch.index.IndexSettings(indexMetaData43, settings49);
        org.elasticsearch.common.logging.ESLogger eSLogger54 = indexSettings53.getlogger();
        boolean boolean55 = indexSettings53.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue56 = indexSettings53.syncInterval;
        int int57 = indexSettings53.getMaxResultWindow();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData58 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap59 = indexMetaData58.getAliases();
        int int60 = indexMetaData58.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData61 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet63 = indexMetaData61.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff64 = indexMetaData58.diff(indexMetaData61);
        long long65 = indexMetaData61.getCreationDate();
        org.elasticsearch.Version version66 = indexMetaData61.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings67 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap68 = settings67.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate69 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings70 = settings67.filter(strPredicate69);
        org.elasticsearch.index.IndexSettings indexSettings71 = new org.elasticsearch.index.IndexSettings(indexMetaData61, settings67);
        boolean boolean72 = indexSettings71.warmerEnabled;
        indexSettings71.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue75 = indexSettings71.getTranslogSyncInterval();
        indexSettings53.refreshInterval = timeValue75;
        org.elasticsearch.common.unit.TimeValue timeValue77 = indexSettings53.getsyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue78 = indexSettings53.getFlushThresholdSize();
        int int79 = indexSettings53.maxRescoreWindow;
        boolean boolean80 = indexSettings53.isShadowReplicaIndex;
        org.elasticsearch.common.settings.Settings settings81 = indexSettings53.nodeSettings;
        org.elasticsearch.common.settings.Settings settings82 = indexScopedSettings39.applySettings(settings81);
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap83 = settings81.getAsGroups();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNull(version8);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(strImmutableOpenMap11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(indexMetaData13);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(indexMetaDataDiff16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strPredicate21);
        org.junit.Assert.assertNotNull(settings22);
        org.junit.Assert.assertNotNull(eSLogger24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_all" + "'", str28, "_all");
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(byteSizeValue31);
        org.junit.Assert.assertNotNull(strPredicate32);
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(strSetting34);
        org.junit.Assert.assertNotNull(byteSizeValue35);
        org.junit.Assert.assertNotNull(booleanSetting36);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(indexScopedSettings39);
        org.junit.Assert.assertNotNull(indexMetaData40);
        org.junit.Assert.assertNotNull(strImmutableOpenMap41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(indexMetaData43);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(indexMetaDataDiff46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(settings49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strPredicate51);
        org.junit.Assert.assertNotNull(settings52);
        org.junit.Assert.assertNotNull(eSLogger54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(timeValue56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10000 + "'", int57 == 10000);
        org.junit.Assert.assertNotNull(indexMetaData58);
        org.junit.Assert.assertNotNull(strImmutableOpenMap59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(indexMetaData61);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(indexMetaDataDiff64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(version66);
        org.junit.Assert.assertNotNull(settings67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strPredicate69);
        org.junit.Assert.assertNotNull(settings70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(timeValue75);
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertNotNull(byteSizeValue78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10000 + "'", int79 == 10000);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(settings81);
        org.junit.Assert.assertNotNull(settings82);
        org.junit.Assert.assertNotNull(strMap83);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.numberOfShards((int) (byte) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap8 = indexMetaData7.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state9 = indexMetaData7.getState();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters10 = indexMetaData7.includeFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData12 = indexMetaData7.mappingOrDefault("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.State state13 = indexMetaData7.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder6.state(state13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder6.removeAlias("index.shadow_replicas");
        int int17 = builder6.numberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder6.index("5000099");
        long long20 = builder19.version();
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
        org.junit.Assert.assertTrue("'" + state9 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state9.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNull(discoveryNodeFilters10);
        org.junit.Assert.assertNull(mappingMetaData12);
        org.junit.Assert.assertTrue("'" + state13 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state13.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters10 = indexMetaData3.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData12 = indexMetaData3.mapping("state-");
        org.elasticsearch.index.Index index13 = indexMetaData3.getMergeSourceIndex();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNull(discoveryNodeFilters10);
        org.junit.Assert.assertNull(mappingMetaData12);
        org.junit.Assert.assertNull(index13);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData0.requireFilters();
        org.elasticsearch.Version version5 = indexMetaData0.getCreationVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(version5);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getisShadowReplicaIndex();
        boolean boolean16 = indexSettings13.isShadowReplicaIndex();
        java.lang.String str17 = indexSettings13.getUUID();
        org.elasticsearch.common.unit.TimeValue timeValue18 = indexSettings13.getsyncInterval();
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher19 = indexSettings13.parseFieldMatcher;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_na_" + "'", str17, "_na_");
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(parseFieldMatcher19);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        boolean boolean15 = indexSettings13.isTTLPurgeDisabled();
        org.elasticsearch.common.settings.Settings settings16 = indexSettings13.nodeSettings;
        boolean boolean17 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting18 = indexSettings13.getALLOW_UNMAPPED();
        org.elasticsearch.common.unit.TimeValue timeValue19 = indexSettings13.getDEFAULT_REFRESH_INTERVAL();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(booleanSetting18);
        org.junit.Assert.assertNotNull(timeValue19);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings0 = org.elasticsearch.common.settings.IndexScopedSettings.DEFAULT_SCOPED_SETTINGS;
        org.elasticsearch.common.settings.Setting.Property property1 = indexScopedSettings0.getScope();
        java.util.function.Predicate<java.lang.String> strPredicate2 = indexScopedSettings0.getINDEX_SETTINGS_KEY_PREDICATE();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting3 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_NUMBER_OF_SHARDS_SETTING;
        indexScopedSettings0.validateSettingKey((org.elasticsearch.common.settings.Setting) intSetting3);
        boolean boolean6 = indexScopedSettings0.isPrivateSetting("hi!");
        org.junit.Assert.assertNotNull(indexScopedSettings0);
        org.junit.Assert.assertTrue("'" + property1 + "' != '" + org.elasticsearch.common.settings.Setting.Property.IndexScope + "'", property1.equals(org.elasticsearch.common.settings.Setting.Property.IndexScope));
        org.junit.Assert.assertNotNull(strPredicate2);
        org.junit.Assert.assertNotNull(intSetting3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig15 = indexSettings13.getMergeSchedulerConfig();
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher16 = indexSettings13.parseFieldMatcher;
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher17 = indexSettings13.getParseFieldMatcher();
        int int18 = indexSettings13.getNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig15);
        org.junit.Assert.assertNotNull(parseFieldMatcher16);
        org.junit.Assert.assertNotNull(parseFieldMatcher17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue16 = indexSettings13.flushThresholdSize;
        org.apache.lucene.index.MergePolicy mergePolicy17 = indexSettings13.getMergePolicy();
        java.util.function.Predicate<java.lang.String> strPredicate18 = indexSettings13.indexNameMatcher;
        int int19 = indexSettings13.numberOfShards;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteSizeValue16);
        org.junit.Assert.assertNotNull(mergePolicy17);
        org.junit.Assert.assertNotNull(strPredicate18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig15 = indexSettings13.getMergeSchedulerConfig();
        boolean boolean16 = indexSettings13.queryStringAnalyzeWildcard;
        boolean boolean17 = indexSettings13.isIndexUsingShadowReplicas();
        java.lang.String str18 = indexSettings13.defaultField;
        boolean boolean19 = indexSettings13.isIndexUsingShadowReplicas();
        int int20 = indexSettings13.maxRefreshListeners;
        boolean boolean21 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1000 + "'", int20 == 1000);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate22 = indexSettings13.indexNameMatcher;
        org.elasticsearch.Version version23 = indexSettings13.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting24 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue25 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_BLOCKS_READ_SETTING;
        java.lang.Boolean boolean27 = indexSettings13.getValue(booleanSetting26);
        indexSettings13.TTLPurgeDisabled = true;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting30 = indexSettings13.getQUERY_STRING_ANALYZE_WILDCARD();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting31 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        indexSettings13.setwarmerEnabled(false);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData34 = indexSettings13.indexMetaData;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(strSetting24);
        org.junit.Assert.assertNotNull(byteSizeValue25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertNotNull(booleanSetting30);
        org.junit.Assert.assertNotNull(intSetting31);
        org.junit.Assert.assertNotNull(indexMetaData34);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        int int16 = indexSettings13.getMaxResultWindow();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        org.elasticsearch.common.logging.ESLogger eSLogger31 = indexSettings30.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue32 = indexSettings30.getsyncInterval();
        indexSettings30.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting35 = indexSettings30.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = indexSettings30.getIndexMetaData();
        org.elasticsearch.common.logging.ESLogger eSLogger37 = indexSettings30.logger;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting38 = indexSettings30.getINDEX_TTL_DISABLE_PURGE_SETTING();
        java.lang.Boolean boolean39 = indexSettings13.getValue(booleanSetting38);
        indexSettings13.setTTLPurgeDisabled(true);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(eSLogger31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(intSetting35);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(eSLogger37);
        org.junit.Assert.assertNotNull(booleanSetting38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state2 = indexMetaData0.getState();
        org.apache.lucene.util.Version version3 = indexMetaData0.getMinimumCompatibleVersion();
        int int4 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.Version version5 = indexMetaData0.getUpgradedVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + state2 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state2.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNull(version3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(version5);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.Version version19 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting21 = indexSettings13.getQUERY_STRING_ANALYZE_WILDCARD();
        org.apache.lucene.index.MergePolicy mergePolicy22 = indexSettings13.getMergePolicy();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting23 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting24 = indexSettings13.getINDEX_REFRESH_INTERVAL_SETTING();
        long long25 = indexSettings13.getGcDeletesInMillis();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(booleanSetting21);
        org.junit.Assert.assertNotNull(mergePolicy22);
        org.junit.Assert.assertNotNull(intSetting23);
        org.junit.Assert.assertNotNull(timeValueSetting24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 60000L + "'", long25 == 60000L);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder22 = builder20.normalizePrefix("index.blocks.read");
        org.elasticsearch.common.settings.Settings.Builder builder24 = builder20.loadFromSource("index.number_of_shards");
        org.elasticsearch.common.settings.Settings.Builder builder25 = builder20.replacePropertyPlaceholders();
        org.elasticsearch.Version version27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder28 = builder25.put("index.number_of_replicas=0aindex.number_of_shards=1aindex.version.created=5000099a", version27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder25);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        int int16 = indexSettings13.getNumberOfShards();
        java.util.function.Predicate<java.lang.String> strPredicate17 = indexSettings13.getindexNameMatcher();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting18 = indexSettings13.getALLOW_UNMAPPED();
        indexSettings13.setMaxRescoreWindow(0);
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting21 = indexSettings13.getINDEX_TTL_DISABLE_PURGE_SETTING();
        boolean boolean22 = indexSettings13.hasCustomDataPath();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(strPredicate17);
        org.junit.Assert.assertNotNull(booleanSetting18);
        org.junit.Assert.assertNotNull(booleanSetting21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        java.lang.String str16 = indexSettings13.customDataPath();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        java.lang.String str31 = indexSettings30.getUUID();
        boolean boolean32 = indexSettings30.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability33 = indexSettings30.getTranslogDurability();
        indexSettings13.durability = durability33;
        java.lang.String str35 = indexSettings13.getDefaultField();
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig36 = indexSettings13.mergePolicyConfig;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap38 = indexMetaData37.getAliases();
        int int39 = indexMetaData37.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData40 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet42 = indexMetaData40.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff43 = indexMetaData37.diff(indexMetaData40);
        long long44 = indexMetaData40.getCreationDate();
        org.elasticsearch.Version version45 = indexMetaData40.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings46 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap47 = settings46.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate48 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings49 = settings46.filter(strPredicate48);
        org.elasticsearch.index.IndexSettings indexSettings50 = new org.elasticsearch.index.IndexSettings(indexMetaData40, settings46);
        java.lang.String str51 = indexSettings50.getUUID();
        boolean boolean52 = indexSettings50.getqueryStringAnalyzeWildcard();
        indexSettings50.maxRescoreWindow = 1;
        org.elasticsearch.index.translog.Translog.Durability durability55 = indexSettings50.durability;
        indexSettings13.setTranslogDurability(durability55);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData57 = indexSettings13.getIndexMetaData();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters58 = indexMetaData57.getInitialRecoveryFilters();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput59 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData57.writeTo(streamOutput59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "_na_" + "'", str31, "_na_");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + durability33 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability33.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_all" + "'", str35, "_all");
        org.junit.Assert.assertNotNull(mergePolicyConfig36);
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(strImmutableOpenMap38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(indexMetaData40);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(indexMetaDataDiff43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(version45);
        org.junit.Assert.assertNotNull(settings46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strPredicate48);
        org.junit.Assert.assertNotNull(settings49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "_na_" + "'", str51, "_na_");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + durability55 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability55.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(indexMetaData57);
        org.junit.Assert.assertNull(discoveryNodeFilters58);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap2 = indexMetaData1.getAliases();
        int int3 = indexMetaData1.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet6 = indexMetaData4.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff7 = indexMetaData1.diff(indexMetaData4);
        long long8 = indexMetaData4.getCreationDate();
        org.elasticsearch.Version version9 = indexMetaData4.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings10 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap11 = settings10.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate12 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings13 = settings10.filter(strPredicate12);
        org.elasticsearch.index.IndexSettings indexSettings14 = new org.elasticsearch.index.IndexSettings(indexMetaData4, settings10);
        org.elasticsearch.common.logging.ESLogger eSLogger15 = indexSettings14.getlogger();
        boolean boolean16 = indexSettings14.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue17 = indexSettings14.syncInterval;
        org.elasticsearch.common.settings.Settings settings18 = indexSettings14.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap20 = indexMetaData19.getAliases();
        int int21 = indexMetaData19.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet24 = indexMetaData22.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff25 = indexMetaData19.diff(indexMetaData22);
        long long26 = indexMetaData22.getCreationDate();
        org.apache.lucene.util.Version version27 = indexMetaData22.getMinimumCompatibleVersion();
        indexSettings14.indexMetaData = indexMetaData22;
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData30 = indexMetaData22.mapping("index.uuid");
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap31 = indexMetaData22.getActiveAllocationIds();
        long long32 = indexMetaData22.getVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state33 = indexMetaData22.getState();
        int int34 = indexMetaData22.getRoutingNumShards();
        org.elasticsearch.Version version35 = indexMetaData22.getCreationVersion();
        org.elasticsearch.index.Index index36 = indexMetaData22.getMergeSourceIndex();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<org.elasticsearch.index.shard.ShardId> shardIdSet38 = org.elasticsearch.cluster.metadata.IndexMetaData.selectShrinkShards((int) (short) 1, indexMetaData22, 1000);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: the number of target shards must be less that the number of source shards");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(indexMetaDataDiff7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(version9);
        org.junit.Assert.assertNotNull(settings10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strPredicate12);
        org.junit.Assert.assertNotNull(settings13);
        org.junit.Assert.assertNotNull(eSLogger15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(settings18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(strImmutableOpenMap20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(indexMetaDataDiff25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNull(version27);
        org.junit.Assert.assertNull(mappingMetaData30);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + state33 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state33.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNull(index36);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.numberOfShards((int) (byte) 100);
        int int7 = builder4.numberOfReplicas();
        int int8 = builder4.numberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet12 = indexMetaData10.activeAllocationIds(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder4.putActiveAllocationIds(10, strSet12);
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder22 = builder20.putNull("index.version.upgraded");
        org.elasticsearch.common.settings.Settings settings23 = builder20.build();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = settings23.getAsMap();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData26 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap27 = indexMetaData26.getAliases();
        int int28 = indexMetaData26.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData29 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet31 = indexMetaData29.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff32 = indexMetaData26.diff(indexMetaData29);
        long long33 = indexMetaData29.getCreationDate();
        org.elasticsearch.Version version34 = indexMetaData29.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings35 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap36 = settings35.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate37 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings38 = settings35.filter(strPredicate37);
        org.elasticsearch.index.IndexSettings indexSettings39 = new org.elasticsearch.index.IndexSettings(indexMetaData29, settings35);
        boolean boolean40 = indexSettings39.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig41 = indexSettings39.getMergeSchedulerConfig();
        org.elasticsearch.common.settings.Settings settings42 = indexSettings39.settings;
        java.lang.Boolean boolean45 = settings42.getAsBoolean("index.version.upgraded", (java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = settings42.getAsMap();
        java.lang.String[] strArray48 = settings42.getAsArray("index.priority");
        java.lang.String[] strArray49 = settings23.getAsArray("index.blocks.write", strArray48);
        java.lang.Boolean boolean52 = settings23.getAsBoolean("index.version.created", (java.lang.Boolean) true);
        boolean boolean53 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings23);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(indexMetaData26);
        org.junit.Assert.assertNotNull(strImmutableOpenMap27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(indexMetaData29);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(indexMetaDataDiff32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(version34);
        org.junit.Assert.assertNotNull(settings35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strPredicate37);
        org.junit.Assert.assertNotNull(settings38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig41);
        org.junit.Assert.assertNotNull(settings42);
        org.junit.Assert.assertEquals("'" + boolean45 + "' != '" + false + "'", boolean45, false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertEquals("'" + boolean52 + "' != '" + true + "'", boolean52, true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        int int4 = builder1.getRoutingNumShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder1.removeAlias("index.blocks.metadata");
        long long7 = builder1.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state8 = org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.state(state8);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder1.numberOfReplicas((int) (byte) 10);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData13 = builder11.mapping("index.blocks.write");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder11.primaryTerm((int) (byte) -1, (long) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: you must set the number of shards before setting/reading primary terms");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + state8 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE + "'", state8.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE));
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNull(mappingMetaData13);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.Version version19 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting21 = indexSettings13.getQUERY_STRING_ANALYZE_WILDCARD();
        org.apache.lucene.index.MergePolicy mergePolicy22 = indexSettings13.getMergePolicy();
        boolean boolean23 = indexSettings13.isQueryStringAllowLeadingWildcard();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting24 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        org.elasticsearch.Version version25 = indexSettings13.getversion();
        boolean boolean26 = indexSettings13.isQueryStringAllowLeadingWildcard();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(booleanSetting21);
        org.junit.Assert.assertNotNull(mergePolicy22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(timeValueSetting24);
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap2 = indexMetaData1.getAliases();
        int int3 = indexMetaData1.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet6 = indexMetaData4.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff7 = indexMetaData1.diff(indexMetaData4);
        long long8 = indexMetaData4.getCreationDate();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff9 = indexMetaData0.diff(indexMetaData4);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData4);
        int int11 = builder10.numberOfReplicas();
        org.elasticsearch.common.settings.Settings.Builder builder12 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder15 = builder12.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder18 = builder15.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap21 = indexMetaData20.getAliases();
        int int22 = indexMetaData20.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet25 = indexMetaData23.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff26 = indexMetaData20.diff(indexMetaData23);
        long long27 = indexMetaData23.getCreationDate();
        org.elasticsearch.Version version28 = indexMetaData23.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder29 = builder15.put("index.creation_date_string", version28);
        org.elasticsearch.common.settings.Settings.Builder builder32 = builder15.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder34 = builder32.normalizePrefix("index.blocks.read");
        org.elasticsearch.common.settings.Settings.Builder builder36 = builder32.loadFromSource("index.number_of_shards");
        org.elasticsearch.common.settings.Settings.Builder builder39 = builder32.put("index.creation_date_string", (long) (byte) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder10.settings(builder39);
        long long41 = builder40.version();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(indexMetaDataDiff7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaDataDiff9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strImmutableOpenMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(indexMetaDataDiff26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder2 = builder0.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder5 = builder2.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder8 = builder5.put("index.creation_date_string", (double) 0);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.maxRescoreWindow;
        boolean boolean16 = indexSettings13.isWarmerEnabled();
        int int17 = indexSettings13.maxRescoreWindow;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000 + "'", int17 == 10000);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.warmerEnabled;
        indexSettings13.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue17 = indexSettings13.getTranslogSyncInterval();
        int int18 = indexSettings13.maxRefreshListeners;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting19 = indexSettings13.getINDEX_WARMER_ENABLED_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1000 + "'", int18 == 1000);
        org.junit.Assert.assertNotNull(booleanSetting19);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder22 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder24 = builder22.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder27 = builder24.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder30 = builder27.put("", (double) 1000);
        java.lang.Class<?> wildcardClass31 = builder27.getClass();
        org.elasticsearch.common.settings.Settings.Builder builder32 = builder3.put("_all", (java.lang.Class) wildcardClass31);
        org.elasticsearch.common.settings.Settings.Builder builder35 = builder3.put("active_allocations", true);
        org.elasticsearch.common.settings.Settings.Builder builder38 = builder35.put("index.version.created_string", false);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder38);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder1.setRoutingNumShards(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder1.setRoutingNumShards(0);
        long long9 = builder8.version();
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.getMaxRefreshListeners();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        boolean boolean16 = indexSettings13.isQueryStringLenient();
        java.util.function.Predicate<java.lang.String> strPredicate17 = indexSettings13.getindexNameMatcher();
        org.elasticsearch.index.translog.Translog.Durability durability18 = indexSettings13.getTranslogDurability();
        boolean boolean19 = indexSettings13.defaultAllowUnmappedFields;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap21 = indexMetaData20.getAliases();
        int int22 = indexMetaData20.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet25 = indexMetaData23.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff26 = indexMetaData20.diff(indexMetaData23);
        long long27 = indexMetaData23.getCreationDate();
        org.elasticsearch.Version version28 = indexMetaData23.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings29 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap30 = settings29.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate31 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings32 = settings29.filter(strPredicate31);
        org.elasticsearch.index.IndexSettings indexSettings33 = new org.elasticsearch.index.IndexSettings(indexMetaData23, settings29);
        org.elasticsearch.common.logging.ESLogger eSLogger34 = indexSettings33.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue35 = indexSettings33.getsyncInterval();
        indexSettings33.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting38 = indexSettings33.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue39 = indexSettings33.flushThresholdSize;
        org.apache.lucene.index.MergePolicy mergePolicy40 = indexSettings33.getMergePolicy();
        org.elasticsearch.common.settings.Settings settings41 = indexSettings33.getNodeSettings();
        indexSettings33.maxResultWindow = 10000;
        int int44 = indexSettings33.maxResultWindow;
        org.elasticsearch.common.unit.TimeValue timeValue45 = indexSettings33.getDEFAULT_REFRESH_INTERVAL();
        indexSettings13.setRefreshInterval(timeValue45);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strPredicate17);
        org.junit.Assert.assertTrue("'" + durability18 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability18.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strImmutableOpenMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(indexMetaDataDiff26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strPredicate31);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertNotNull(eSLogger34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(intSetting38);
        org.junit.Assert.assertNotNull(byteSizeValue39);
        org.junit.Assert.assertNotNull(mergePolicy40);
        org.junit.Assert.assertNotNull(settings41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10000 + "'", int44 == 10000);
        org.junit.Assert.assertNotNull(timeValue45);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        int int16 = indexSettings13.getMaxResultWindow();
        boolean boolean17 = indexSettings13.isShadowReplicaIndex;
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher18 = indexSettings13.parseFieldMatcher;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting19 = indexSettings13.getINDEX_TTL_DISABLE_PURGE_SETTING();
        boolean boolean20 = indexSettings13.hasCustomDataPath();
        boolean boolean21 = indexSettings13.queryStringLenient;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(parseFieldMatcher18);
        org.junit.Assert.assertNotNull(booleanSetting19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingNumShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap3 = indexMetaData0.getCustoms();
        long long4 = indexMetaData0.getCreationDate();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy16 = indexSettings13.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        boolean boolean31 = indexSettings30.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig32 = indexSettings30.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability33 = indexSettings30.getdurability();
        indexSettings13.setTranslogDurability(durability33);
        boolean boolean35 = indexSettings13.queryStringLenient;
        boolean boolean36 = indexSettings13.queryStringAllowLeadingWildcard;
        indexSettings13.setMaxRefreshListeners((int) (short) -1);
        indexSettings13.setwarmerEnabled(true);
        org.elasticsearch.common.unit.TimeValue timeValue41 = indexSettings13.getDEFAULT_GC_DELETES();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(mergePolicy16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig32);
        org.junit.Assert.assertTrue("'" + durability33 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability33.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(timeValue41);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig15 = indexSettings13.getMergeSchedulerConfig();
        indexSettings13.setMaxRefreshListeners((int) ' ');
        boolean boolean18 = indexSettings13.TTLPurgeDisabled;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state2 = indexMetaData0.getState();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData0.excludeFilters();
        int int5 = indexMetaData0.getNumberOfReplicas();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + state2 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state2.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting15 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings16 = indexSettings13.getScopedSettings();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting17 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings18 = indexSettings13.getScopedSettings();
        java.util.function.Predicate<java.lang.String> strPredicate19 = indexSettings13.indexNameMatcher;
        long long20 = indexSettings13.gcDeletesInMillis;
        boolean boolean21 = indexSettings13.isWarmerEnabled();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(timeValueSetting15);
        org.junit.Assert.assertNotNull(indexScopedSettings16);
        org.junit.Assert.assertNotNull(timeValueSetting17);
        org.junit.Assert.assertNotNull(indexScopedSettings18);
        org.junit.Assert.assertNotNull(strPredicate19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 60000L + "'", long20 == 60000L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = indexSettings13.getIndexMetaData();
        java.lang.String str20 = indexSettings13.customDataPath();
        int int21 = indexSettings13.maxRescoreWindow;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = indexSettings13.getIndexMetaData();
        org.elasticsearch.Version version23 = indexSettings13.getIndexVersionCreated();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10000 + "'", int21 == 10000);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(version23);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        long long16 = indexSettings13.gcDeletesInMillis;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings17 = indexSettings13.getScopedSettings();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting18 = indexSettings13.getINDEX_TRANSLOG_SYNC_INTERVAL_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 60000L + "'", long16 == 60000L);
        org.junit.Assert.assertNotNull(indexScopedSettings17);
        org.junit.Assert.assertNotNull(timeValueSetting18);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        boolean boolean15 = indexSettings13.isTTLPurgeDisabled();
        org.elasticsearch.common.settings.Settings settings16 = indexSettings13.nodeSettings;
        boolean boolean17 = indexSettings13.getdefaultAllowUnmappedFields();
        org.elasticsearch.Version version18 = indexSettings13.getIndexVersionCreated();
        boolean boolean19 = indexSettings13.hasCustomDataPath();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap21 = indexMetaData20.getAliases();
        int int22 = indexMetaData20.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet25 = indexMetaData23.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff26 = indexMetaData20.diff(indexMetaData23);
        long long27 = indexMetaData23.getCreationDate();
        org.elasticsearch.Version version28 = indexMetaData23.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings29 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap30 = settings29.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate31 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings32 = settings29.filter(strPredicate31);
        org.elasticsearch.index.IndexSettings indexSettings33 = new org.elasticsearch.index.IndexSettings(indexMetaData23, settings29);
        java.lang.String str34 = indexSettings33.getUUID();
        int int35 = indexSettings33.maxRefreshListeners;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        boolean boolean37 = indexSettings33.updateIndexMetaData(indexMetaData36);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap38 = indexMetaData36.getMappings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData36);
        long long40 = indexMetaData36.getVersion();
        indexSettings13.indexMetaData = indexMetaData36;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting42 = indexSettings13.getQUERY_STRING_ANALYZE_WILDCARD();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strImmutableOpenMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(indexMetaDataDiff26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strPredicate31);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "_na_" + "'", str34, "_na_");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1000 + "'", int35 == 1000);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strImmutableOpenMap38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
        org.junit.Assert.assertNotNull(booleanSetting42);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.removeAlias("index.creation_date_string");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.numberOfShards(10000);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.numberOfReplicas((int) (byte) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder7.index("index.number_of_replicas=0#index.number_of_shards=1#index.version.created=5000099#");
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.logging.ESLogger eSLogger15 = indexSettings13.logger;
        long long16 = indexSettings13.getGcDeletesInMillis();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(eSLogger15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 60000L + "'", long16 == 60000L);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        org.elasticsearch.common.unit.TimeValue timeValue18 = indexSettings13.refreshInterval;
        int int19 = indexSettings13.numberOfShards;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap23 = indexMetaData22.getAliases();
        int int24 = indexMetaData22.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet27 = indexMetaData25.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff28 = indexMetaData22.diff(indexMetaData25);
        long long29 = indexMetaData25.getCreationDate();
        org.elasticsearch.Version version30 = indexMetaData25.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings31 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap32 = settings31.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate33 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings34 = settings31.filter(strPredicate33);
        org.elasticsearch.index.IndexSettings indexSettings35 = new org.elasticsearch.index.IndexSettings(indexMetaData25, settings31);
        org.elasticsearch.common.logging.ESLogger eSLogger36 = indexSettings35.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue37 = indexSettings35.getsyncInterval();
        indexSettings35.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting40 = indexSettings35.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData41 = indexSettings35.getIndexMetaData();
        indexSettings35.setwarmerEnabled(false);
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher44 = indexSettings35.parseFieldMatcher;
        java.lang.String str45 = indexSettings35.customDataPath();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig46 = indexSettings35.mergeSchedulerConfig;
        boolean boolean47 = indexSettings35.TTLPurgeDisabled;
        org.elasticsearch.common.unit.TimeValue timeValue48 = indexSettings35.getDEFAULT_GC_DELETES();
        indexSettings13.refreshInterval = timeValue48;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(strImmutableOpenMap23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(indexMetaDataDiff28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(settings31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strPredicate33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(eSLogger36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(intSetting40);
        org.junit.Assert.assertNotNull(indexMetaData41);
        org.junit.Assert.assertNotNull(parseFieldMatcher44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(timeValue48);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state2 = indexMetaData0.getState();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData4 = indexMetaData0.mappingOrDefault("");
        org.elasticsearch.Version version5 = indexMetaData0.getUpgradedVersion();
        // The following exception was thrown during execution in test generation
        try {
            long long7 = indexMetaData0.primaryTerm(1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + state2 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state2.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNull(mappingMetaData4);
        org.junit.Assert.assertNotNull(version5);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.common.settings.Settings.Builder builder9 = builder6.put("index.version.upgraded", (int) (byte) 100);
        java.lang.String str11 = builder9.remove("index.creation_date");
        org.elasticsearch.common.settings.Settings.Builder builder14 = builder9.put("active_allocations", false);
        java.io.InputStream inputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder17 = builder14.loadFromStream("index.", inputStream16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(builder14);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getisShadowReplicaIndex();
        java.lang.String str16 = indexSettings13.customDataPath();
        indexSettings13.maxResultWindow = 1000;
        org.elasticsearch.common.unit.TimeValue timeValue19 = indexSettings13.refreshInterval;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getRefreshInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.flushThresholdSize;
        indexSettings13.setEnableWarmer(false);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.numberOfShards((int) (byte) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap8 = indexMetaData7.getAliases();
        int int9 = indexMetaData7.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet12 = indexMetaData10.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData7.diff(indexMetaData10);
        long long14 = indexMetaData10.getCreationDate();
        org.elasticsearch.Version version15 = indexMetaData10.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings16 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap17 = settings16.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate18 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings19 = settings16.filter(strPredicate18);
        org.elasticsearch.index.IndexSettings indexSettings20 = new org.elasticsearch.index.IndexSettings(indexMetaData10, settings16);
        org.elasticsearch.common.logging.ESLogger eSLogger21 = indexSettings20.getlogger();
        boolean boolean22 = indexSettings20.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue23 = indexSettings20.syncInterval;
        org.elasticsearch.common.settings.Settings settings24 = indexSettings20.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap26 = indexMetaData25.getAliases();
        int int27 = indexMetaData25.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData28 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet30 = indexMetaData28.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff31 = indexMetaData25.diff(indexMetaData28);
        long long32 = indexMetaData28.getCreationDate();
        org.apache.lucene.util.Version version33 = indexMetaData28.getMinimumCompatibleVersion();
        indexSettings20.indexMetaData = indexMetaData28;
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData36 = indexMetaData28.mapping("index.uuid");
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap37 = indexMetaData28.getActiveAllocationIds();
        long long38 = indexMetaData28.getVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state39 = indexMetaData28.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder6.state(state39);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder40.primaryTerm((-1), (long) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strPredicate18);
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(eSLogger21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(settings24);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strImmutableOpenMap26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(indexMetaData28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(indexMetaDataDiff31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNull(version33);
        org.junit.Assert.assertNull(mappingMetaData36);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertTrue("'" + state39 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state39.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.warmerEnabled;
        indexSettings13.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue17 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData18.getAliases();
        int int20 = indexMetaData18.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet23 = indexMetaData21.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff24 = indexMetaData18.diff(indexMetaData21);
        long long25 = indexMetaData21.getCreationDate();
        org.elasticsearch.Version version26 = indexMetaData21.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings27 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap28 = settings27.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate29 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings30 = settings27.filter(strPredicate29);
        org.elasticsearch.index.IndexSettings indexSettings31 = new org.elasticsearch.index.IndexSettings(indexMetaData21, settings27);
        java.lang.String str32 = indexSettings31.getUUID();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting33 = indexSettings31.getINDEX_WARMER_ENABLED_SETTING();
        java.lang.Boolean boolean34 = indexSettings13.getValue(booleanSetting33);
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting35 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        java.lang.String str36 = indexSettings13.nodeName;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(indexMetaDataDiff24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strPredicate29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_na_" + "'", str32, "_na_");
        org.junit.Assert.assertNotNull(booleanSetting33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + true + "'", boolean34, true);
        org.junit.Assert.assertNotNull(timeValueSetting35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting15 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings16 = indexSettings13.getScopedSettings();
        org.elasticsearch.common.unit.TimeValue timeValue17 = indexSettings13.syncInterval;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(timeValueSetting15);
        org.junit.Assert.assertNotNull(indexScopedSettings16);
        org.junit.Assert.assertNotNull(timeValue17);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.numberOfShards((int) (byte) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap8 = indexMetaData7.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state9 = indexMetaData7.getState();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters10 = indexMetaData7.includeFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData12 = indexMetaData7.mappingOrDefault("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.State state13 = indexMetaData7.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder6.state(state13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder6.removeAlias("index.shadow_replicas");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder6.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state19 = org.elasticsearch.cluster.metadata.IndexMetaData.State.fromId((byte) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder17.state(state19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder17.numberOfReplicas((int) 'a');
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder17.putAlias(aliasMetaData23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
        org.junit.Assert.assertTrue("'" + state9 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state9.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNull(discoveryNodeFilters10);
        org.junit.Assert.assertNull(mappingMetaData12);
        org.junit.Assert.assertTrue("'" + state13 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state13.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + state19 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE + "'", state19.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE));
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder22 = builder20.normalizePrefix("index.blocks.read");
        org.elasticsearch.common.settings.Settings.Builder builder25 = builder20.put("index.data_path", "index.version.upgraded");
        org.elasticsearch.common.settings.Settings.Builder builder27 = builder20.normalizePrefix("index.creation_date");
        java.util.concurrent.TimeUnit timeUnit30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder31 = builder20.put("index.version.created_string", (long) '4', timeUnit30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue19 = indexSettings13.flushThresholdSize;
        int int20 = indexSettings13.getNumberOfReplicas();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        indexSettings13.setTTLPurgeDisabled(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting24 = indexSettings13.getMAX_RESCORE_WINDOW_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(byteSizeValue19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(intSetting24);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.excludeFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData5 = indexMetaData0.mapping("index.priority");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder6 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap8 = indexMetaData7.getAliases();
        int int9 = indexMetaData7.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet12 = indexMetaData10.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData7.diff(indexMetaData10);
        long long14 = indexMetaData10.getCreationDate();
        org.elasticsearch.Version version15 = indexMetaData10.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings16 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap17 = settings16.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate18 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings19 = settings16.filter(strPredicate18);
        org.elasticsearch.index.IndexSettings indexSettings20 = new org.elasticsearch.index.IndexSettings(indexMetaData10, settings16);
        java.lang.String str22 = settings16.get("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder24 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder27 = builder24.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder30 = builder27.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData32 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap33 = indexMetaData32.getAliases();
        int int34 = indexMetaData32.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData35 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet37 = indexMetaData35.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff38 = indexMetaData32.diff(indexMetaData35);
        long long39 = indexMetaData35.getCreationDate();
        org.elasticsearch.Version version40 = indexMetaData35.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder41 = builder27.put("index.creation_date_string", version40);
        org.elasticsearch.Version version42 = settings16.getAsVersion("index.creation_date", version40);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData43 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap44 = indexMetaData43.getAliases();
        int int45 = indexMetaData43.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData46 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet48 = indexMetaData46.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff49 = indexMetaData43.diff(indexMetaData46);
        long long50 = indexMetaData46.getCreationDate();
        org.elasticsearch.Version version51 = indexMetaData46.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings52 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap53 = settings52.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate54 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings55 = settings52.filter(strPredicate54);
        org.elasticsearch.index.IndexSettings indexSettings56 = new org.elasticsearch.index.IndexSettings(indexMetaData46, settings52);
        java.lang.String str57 = indexSettings56.getUUID();
        boolean boolean58 = indexSettings56.getisShadowReplicaIndex();
        boolean boolean59 = indexSettings56.isShadowReplicaIndex();
        java.util.function.Predicate<java.lang.String> strPredicate60 = indexSettings56.getindexNameMatcher();
        org.elasticsearch.common.settings.Settings settings61 = settings16.filter(strPredicate60);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder62 = null;
        org.elasticsearch.common.settings.Settings settings63 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap64 = settings63.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate65 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings66 = settings63.filter(strPredicate65);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder67 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params68 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder69 = settings63.toXContent(xContentBuilder67, params68);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder70 = settings61.toXContent(xContentBuilder62, params68);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder.toXContent(indexMetaData0, xContentBuilder6, params68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(mappingMetaData5);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strPredicate18);
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(indexMetaData32);
        org.junit.Assert.assertNotNull(strImmutableOpenMap33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(indexMetaData35);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(indexMetaDataDiff38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(version40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(version42);
        org.junit.Assert.assertNotNull(indexMetaData43);
        org.junit.Assert.assertNotNull(strImmutableOpenMap44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(indexMetaData46);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(indexMetaDataDiff49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(version51);
        org.junit.Assert.assertNotNull(settings52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strPredicate54);
        org.junit.Assert.assertNotNull(settings55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "_na_" + "'", str57, "_na_");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strPredicate60);
        org.junit.Assert.assertNotNull(settings61);
        org.junit.Assert.assertNotNull(settings63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strPredicate65);
        org.junit.Assert.assertNotNull(settings66);
        org.junit.Assert.assertNotNull(params68);
        org.junit.Assert.assertNull(xContentBuilder69);
        org.junit.Assert.assertNull(xContentBuilder70);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = indexSettings13.getIndexMetaData();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting17 = indexSettings13.getINDEX_WARMER_ENABLED_SETTING();
        org.elasticsearch.common.unit.TimeValue timeValue18 = indexSettings13.getDEFAULT_GC_DELETES();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(booleanSetting17);
        org.junit.Assert.assertNotNull(timeValue18);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        boolean boolean15 = indexSettings13.isTTLPurgeDisabled();
        org.elasticsearch.common.settings.Settings settings16 = indexSettings13.nodeSettings;
        boolean boolean17 = indexSettings13.getdefaultAllowUnmappedFields();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = indexSettings13.indexMetaData;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(indexMetaData18);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy16 = indexSettings13.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        boolean boolean31 = indexSettings30.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig32 = indexSettings30.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability33 = indexSettings30.getdurability();
        indexSettings13.setTranslogDurability(durability33);
        indexSettings13.TTLPurgeDisabled = true;
        boolean boolean37 = indexSettings13.queryStringLenient;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(mergePolicy16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig32);
        org.junit.Assert.assertTrue("'" + durability33 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability33.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings0 = org.elasticsearch.common.settings.IndexScopedSettings.DEFAULT_SCOPED_SETTINGS;
        org.elasticsearch.common.settings.Setting.Property property1 = indexScopedSettings0.getScope();
        java.util.function.Predicate<java.lang.String> strPredicate2 = indexScopedSettings0.getINDEX_SETTINGS_KEY_PREDICATE();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting3 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_NUMBER_OF_SHARDS_SETTING;
        indexScopedSettings0.validateSettingKey((org.elasticsearch.common.settings.Setting) intSetting3);
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting5 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_READ_ONLY_SETTING;
        java.util.function.Consumer<java.lang.Boolean> booleanConsumer6 = null;
        indexScopedSettings0.addSettingsUpdateConsumer(booleanSetting5, booleanConsumer6);
        boolean boolean9 = indexScopedSettings0.hasDynamicSetting("index.version.minimum_compatible");
        org.elasticsearch.common.settings.Settings settings10 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexScopedSettings0.validate(settings10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexScopedSettings0);
        org.junit.Assert.assertTrue("'" + property1 + "' != '" + org.elasticsearch.common.settings.Setting.Property.IndexScope + "'", property1.equals(org.elasticsearch.common.settings.Setting.Property.IndexScope));
        org.junit.Assert.assertNotNull(strPredicate2);
        org.junit.Assert.assertNotNull(intSetting3);
        org.junit.Assert.assertNotNull(booleanSetting5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData8 = builder6.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder6.numberOfShards((int) (short) -1);
        java.lang.String[] strArray28 = new java.lang.String[] { "index.version.created", "index.blocks.metadata", "active_allocations", "index.version.minimum_compatible", "index.uuid", "index.shadow_replicas", "index.version.created", "_all", "_all", "index.", "index.creation_date_string", "index.shared_filesystem.recover_on_any_node", "_all", "index.number_of_shards", "index.blocks.read", "index.version.upgraded_string" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder6.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet29);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder3.putActiveAllocationIds(10, (java.util.Set<java.lang.String>) strSet29);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData33 = builder3.build();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNull(mappingMetaData8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(indexMetaData33);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.common.settings.Settings.Builder builder9 = builder3.put("index.blocks.read", (int) '#');
        org.elasticsearch.common.settings.Settings.Builder builder12 = builder9.put("index.version.created_string", "index.version.created_string");
        org.elasticsearch.common.settings.Settings.Builder builder15 = builder12.put("", 10);
        java.util.concurrent.TimeUnit timeUnit18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder19 = builder15.put("index.number_of_replicas=0aindex.number_of_shards=1aindex.version.created=5000099a", (-1L), timeUnit18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting16 = indexSettings13.getINDEX_REFRESH_INTERVAL_SETTING();
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.settings;
        boolean boolean18 = indexSettings13.warmerEnabled;
        org.elasticsearch.Version version19 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.Version version20 = indexSettings13.getIndexVersionCreated();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(timeValueSetting16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(version20);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet3 = indexMetaData1.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap4 = indexMetaData1.getMappings();
        int int5 = indexMetaData1.getNumberOfReplicas();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap6 = indexMetaData1.getAliases();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<org.elasticsearch.index.shard.ShardId> shardIdSet8 = org.elasticsearch.cluster.metadata.IndexMetaData.selectShrinkShards(5, indexMetaData1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: the number of target shards must be less that the number of source shards");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strImmutableOpenMap4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap6);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        java.lang.String str16 = indexSettings13.customDataPath();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        java.lang.String str31 = indexSettings30.getUUID();
        boolean boolean32 = indexSettings30.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability33 = indexSettings30.getTranslogDurability();
        indexSettings13.durability = durability33;
        boolean boolean35 = indexSettings13.hasCustomDataPath();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "_na_" + "'", str31, "_na_");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + durability33 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability33.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher16 = indexSettings13.getParseFieldMatcher();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(parseFieldMatcher16);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder5 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder8 = builder5.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder11 = builder8.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData13 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap14 = indexMetaData13.getAliases();
        int int15 = indexMetaData13.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet18 = indexMetaData16.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff19 = indexMetaData13.diff(indexMetaData16);
        long long20 = indexMetaData16.getCreationDate();
        org.elasticsearch.Version version21 = indexMetaData16.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder22 = builder8.put("index.creation_date_string", version21);
        org.elasticsearch.common.settings.Settings.Builder builder25 = builder8.put("index.version.created", "index.version.created_string");
        java.lang.String[] strArray27 = new java.lang.String[] {};
        org.elasticsearch.common.settings.Settings.Builder builder28 = builder8.extendArray("archived.", strArray27);
        org.elasticsearch.common.settings.Settings.Builder builder29 = builder0.extendArray("index.auto_expand_replicas", strArray27);
        org.elasticsearch.common.settings.Settings.Builder builder31 = builder29.normalizePrefix("primary_terms");
        java.nio.file.Path path32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder33 = builder31.loadFromPath(path32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(indexMetaData13);
        org.junit.Assert.assertNotNull(strImmutableOpenMap14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(indexMetaDataDiff19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting16 = indexSettings13.getINDEX_REFRESH_INTERVAL_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        org.elasticsearch.common.logging.ESLogger eSLogger31 = indexSettings30.getlogger();
        boolean boolean32 = indexSettings30.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue33 = indexSettings30.syncInterval;
        org.elasticsearch.common.settings.Settings settings34 = indexSettings30.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData35 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap36 = indexMetaData35.getAliases();
        int int37 = indexMetaData35.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet40 = indexMetaData38.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff41 = indexMetaData35.diff(indexMetaData38);
        long long42 = indexMetaData38.getCreationDate();
        org.apache.lucene.util.Version version43 = indexMetaData38.getMinimumCompatibleVersion();
        indexSettings30.indexMetaData = indexMetaData38;
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData46 = indexMetaData38.mapping("index.uuid");
        boolean boolean47 = indexSettings13.updateIndexMetaData(indexMetaData38);
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue48 = indexSettings13.flushThresholdSize;
        long long49 = indexSettings13.getGcDeletesInMillis();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(timeValueSetting16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(eSLogger31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(indexMetaData35);
        org.junit.Assert.assertNotNull(strImmutableOpenMap36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(indexMetaDataDiff41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNull(version43);
        org.junit.Assert.assertNull(mappingMetaData46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(byteSizeValue48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 60000L + "'", long49 == 60000L);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.maxRescoreWindow;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings16 = indexSettings13.scopedSettings;
        org.elasticsearch.index.translog.Translog.Durability durability17 = indexSettings13.getdurability();
        org.apache.lucene.index.MergePolicy mergePolicy18 = indexSettings13.getMergePolicy();
        org.elasticsearch.Version version19 = indexSettings13.getversion();
        boolean boolean20 = indexSettings13.isIndexUsingShadowReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData21.getAliases();
        int int23 = indexMetaData21.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData24 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet26 = indexMetaData24.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff27 = indexMetaData21.diff(indexMetaData24);
        long long28 = indexMetaData24.getCreationDate();
        org.elasticsearch.Version version29 = indexMetaData24.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings30 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap31 = settings30.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate32 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings33 = settings30.filter(strPredicate32);
        org.elasticsearch.index.IndexSettings indexSettings34 = new org.elasticsearch.index.IndexSettings(indexMetaData24, settings30);
        org.elasticsearch.common.logging.ESLogger eSLogger35 = indexSettings34.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue36 = indexSettings34.getsyncInterval();
        indexSettings34.setEnableWarmer(false);
        java.lang.String str39 = indexSettings34.defaultField;
        org.elasticsearch.common.settings.Settings settings40 = indexSettings34.settings;
        org.elasticsearch.common.unit.TimeValue timeValue41 = indexSettings34.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue42 = indexSettings34.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate43 = indexSettings34.indexNameMatcher;
        org.elasticsearch.Version version44 = indexSettings34.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting45 = indexSettings34.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData46 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap47 = indexMetaData46.getAliases();
        int int48 = indexMetaData46.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData49 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet51 = indexMetaData49.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff52 = indexMetaData46.diff(indexMetaData49);
        long long53 = indexMetaData49.getCreationDate();
        org.elasticsearch.Version version54 = indexMetaData49.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings55 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap56 = settings55.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate57 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings58 = settings55.filter(strPredicate57);
        org.elasticsearch.index.IndexSettings indexSettings59 = new org.elasticsearch.index.IndexSettings(indexMetaData49, settings55);
        org.elasticsearch.common.logging.ESLogger eSLogger60 = indexSettings59.getlogger();
        boolean boolean61 = indexSettings59.isWarmerEnabled();
        indexSettings59.maxRescoreWindow = 1;
        boolean boolean64 = indexSettings59.hasCustomDataPath();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData65 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap66 = indexMetaData65.getAliases();
        int int67 = indexMetaData65.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData68 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet70 = indexMetaData68.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff71 = indexMetaData65.diff(indexMetaData68);
        long long72 = indexMetaData68.getCreationDate();
        org.elasticsearch.Version version73 = indexMetaData68.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings74 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap75 = settings74.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate76 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings77 = settings74.filter(strPredicate76);
        org.elasticsearch.index.IndexSettings indexSettings78 = new org.elasticsearch.index.IndexSettings(indexMetaData68, settings74);
        org.elasticsearch.common.logging.ESLogger eSLogger79 = indexSettings78.getlogger();
        boolean boolean80 = indexSettings78.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue81 = indexSettings78.syncInterval;
        indexSettings59.setRefreshInterval(timeValue81);
        indexSettings34.setGCDeletes(timeValue81);
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue84 = indexSettings34.flushThresholdSize;
        indexSettings13.flushThresholdSize = byteSizeValue84;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertNotNull(indexScopedSettings16);
        org.junit.Assert.assertTrue("'" + durability17 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability17.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(mergePolicy18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(indexMetaData24);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(indexMetaDataDiff27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strPredicate32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertNotNull(eSLogger35);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "_all" + "'", str39, "_all");
        org.junit.Assert.assertNotNull(settings40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(byteSizeValue42);
        org.junit.Assert.assertNotNull(strPredicate43);
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(strSetting45);
        org.junit.Assert.assertNotNull(indexMetaData46);
        org.junit.Assert.assertNotNull(strImmutableOpenMap47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(indexMetaData49);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(indexMetaDataDiff52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(version54);
        org.junit.Assert.assertNotNull(settings55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strPredicate57);
        org.junit.Assert.assertNotNull(settings58);
        org.junit.Assert.assertNotNull(eSLogger60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(indexMetaData65);
        org.junit.Assert.assertNotNull(strImmutableOpenMap66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(indexMetaData68);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertNotNull(indexMetaDataDiff71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(version73);
        org.junit.Assert.assertNotNull(settings74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strPredicate76);
        org.junit.Assert.assertNotNull(settings77);
        org.junit.Assert.assertNotNull(eSLogger79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(timeValue81);
        org.junit.Assert.assertNotNull(byteSizeValue84);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getisShadowReplicaIndex();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting16 = indexSettings13.getQUERY_STRING_LENIENT_SETTING();
        org.elasticsearch.common.unit.TimeValue timeValue17 = indexSettings13.refreshInterval;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(booleanSetting16);
        org.junit.Assert.assertNotNull(timeValue17);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        boolean boolean16 = indexSettings13.isQueryStringLenient();
        int int17 = indexSettings13.getNumberOfShards();
        org.elasticsearch.common.logging.ESLogger eSLogger18 = indexSettings13.logger;
        int int19 = indexSettings13.maxRescoreWindow;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(eSLogger18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000 + "'", int19 == 10000);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.registerPrototype("index.shadow_replicas", custom1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.metadata");
        java.lang.String str2 = builder1.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.creationDate(1L);
        int int5 = builder4.numberOfReplicas();
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "index.blocks.metadata" + "'", str2, "index.blocks.metadata");
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData15 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap16 = indexMetaData15.getAliases();
        int int17 = indexMetaData15.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet20 = indexMetaData18.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff21 = indexMetaData15.diff(indexMetaData18);
        long long22 = indexMetaData18.getCreationDate();
        org.elasticsearch.Version version23 = indexMetaData18.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings24 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap25 = settings24.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate26 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings27 = settings24.filter(strPredicate26);
        org.elasticsearch.index.IndexSettings indexSettings28 = new org.elasticsearch.index.IndexSettings(indexMetaData18, settings24);
        org.elasticsearch.common.logging.ESLogger eSLogger29 = indexSettings28.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue30 = indexSettings28.getsyncInterval();
        indexSettings28.setEnableWarmer(false);
        java.lang.String str33 = indexSettings28.defaultField;
        org.elasticsearch.common.settings.Settings settings34 = indexSettings28.settings;
        org.elasticsearch.common.unit.TimeValue timeValue35 = indexSettings28.getTranslogSyncInterval();
        indexSettings13.setGCDeletes(timeValue35);
        org.elasticsearch.common.settings.Setting<org.elasticsearch.index.translog.Translog.Durability> durabilitySetting37 = indexSettings13.getINDEX_TRANSLOG_DURABILITY_SETTING();
        java.lang.String str38 = indexSettings13.getNodeName();
        java.util.function.Predicate<java.lang.String> strPredicate39 = indexSettings13.indexNameMatcher;
        boolean boolean40 = indexSettings13.isQueryStringLenient();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(indexMetaData15);
        org.junit.Assert.assertNotNull(strImmutableOpenMap16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(indexMetaDataDiff21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(settings24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strPredicate26);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertNotNull(eSLogger29);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_all" + "'", str33, "_all");
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(durabilitySetting37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(strPredicate39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        org.apache.lucene.util.Version version4 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state5 = indexMetaData0.getState();
        // The following exception was thrown during execution in test generation
        try {
            long long7 = indexMetaData0.primaryTerm((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(version4);
        org.junit.Assert.assertTrue("'" + state5 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state5.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("_all");
        org.elasticsearch.cluster.metadata.IndexMetaData.State state3 = org.elasticsearch.cluster.metadata.IndexMetaData.State.fromId((byte) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.state(state3);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder1.putMapping("", "index.number_of_replicas=0#index.number_of_shards=1#index.version.created=5000099#");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + state3 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE + "'", state3.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap5 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.Version version6 = indexMetaData0.getCreationVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder7.putAlias(aliasMetaData8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap5);
        org.junit.Assert.assertNotNull(version6);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        long long16 = indexSettings13.gcDeletesInMillis;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting17 = indexSettings13.getINDEX_WARMER_ENABLED_SETTING();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig18 = indexSettings13.mergeSchedulerConfig;
        boolean boolean19 = indexSettings13.isTTLPurgeDisabled();
        org.elasticsearch.Version version20 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig21 = indexSettings13.mergeSchedulerConfig;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 60000L + "'", long16 == 60000L);
        org.junit.Assert.assertNotNull(booleanSetting17);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig21);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        java.lang.String str16 = indexSettings13.getDefaultField();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        org.elasticsearch.common.logging.ESLogger eSLogger31 = indexSettings30.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue32 = indexSettings30.getsyncInterval();
        indexSettings30.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting35 = indexSettings30.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = indexSettings30.getIndexMetaData();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap38 = indexMetaData37.getAliases();
        int int39 = indexMetaData37.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData40 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet42 = indexMetaData40.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff43 = indexMetaData37.diff(indexMetaData40);
        long long44 = indexMetaData40.getCreationDate();
        org.elasticsearch.Version version45 = indexMetaData40.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings46 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap47 = settings46.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate48 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings49 = settings46.filter(strPredicate48);
        org.elasticsearch.index.IndexSettings indexSettings50 = new org.elasticsearch.index.IndexSettings(indexMetaData40, settings46);
        java.lang.String str51 = indexSettings50.getUUID();
        boolean boolean52 = indexSettings50.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability53 = indexSettings50.getTranslogDurability();
        indexSettings30.setdurability(durability53);
        indexSettings13.setdurability(durability53);
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings56 = indexSettings13.scopedSettings;
        java.util.Set<org.elasticsearch.common.settings.Setting<?>> wildcardSettingSet57 = indexScopedSettings56.getBUILT_IN_INDEX_SETTINGS();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_all" + "'", str16, "_all");
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(eSLogger31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(intSetting35);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(strImmutableOpenMap38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(indexMetaData40);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(indexMetaDataDiff43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(version45);
        org.junit.Assert.assertNotNull(settings46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strPredicate48);
        org.junit.Assert.assertNotNull(settings49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "_na_" + "'", str51, "_na_");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + durability53 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability53.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(indexScopedSettings56);
        org.junit.Assert.assertNotNull(wildcardSettingSet57);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        int int4 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData8 = builder6.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder6.removeAllAliases();
        boolean boolean10 = indexMetaData0.equals((java.lang.Object) builder6);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap11 = indexMetaData0.getCustoms();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters12 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData13 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap14 = indexMetaData13.getAliases();
        int int15 = indexMetaData13.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet18 = indexMetaData16.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff19 = indexMetaData13.diff(indexMetaData16);
        long long20 = indexMetaData16.getCreationDate();
        org.elasticsearch.Version version21 = indexMetaData16.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings22 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap23 = settings22.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate24 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings25 = settings22.filter(strPredicate24);
        org.elasticsearch.index.IndexSettings indexSettings26 = new org.elasticsearch.index.IndexSettings(indexMetaData16, settings22);
        org.elasticsearch.common.logging.ESLogger eSLogger27 = indexSettings26.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue28 = indexSettings26.getsyncInterval();
        indexSettings26.setEnableWarmer(false);
        boolean boolean31 = indexSettings26.isShadowReplicaIndex;
        org.elasticsearch.common.settings.Settings settings32 = indexSettings26.settings;
        boolean boolean33 = indexSettings26.isQueryStringAllowLeadingWildcard();
        org.elasticsearch.common.settings.Settings settings34 = indexSettings26.getSettings();
        org.elasticsearch.index.IndexSettings indexSettings35 = new org.elasticsearch.index.IndexSettings(indexMetaData0, settings34);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(mappingMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strImmutableOpenMap11);
        org.junit.Assert.assertNull(discoveryNodeFilters12);
        org.junit.Assert.assertNotNull(indexMetaData13);
        org.junit.Assert.assertNotNull(strImmutableOpenMap14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(indexMetaDataDiff19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(settings22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strPredicate24);
        org.junit.Assert.assertNotNull(settings25);
        org.junit.Assert.assertNotNull(eSLogger27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(settings34);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        int int16 = indexSettings13.getMaxResultWindow();
        boolean boolean17 = indexSettings13.isShadowReplicaIndex;
        java.util.function.Predicate<java.lang.String> strPredicate18 = indexSettings13.indexNameMatcher;
        int int19 = indexSettings13.getNumberOfReplicas();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.ByteSizeValue> byteSizeValueSetting20 = indexSettings13.getINDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE_SETTING();
        org.elasticsearch.common.logging.ESLogger eSLogger21 = indexSettings13.getlogger();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting22 = indexSettings13.getINDEX_TRANSLOG_SYNC_INTERVAL_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strPredicate18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(byteSizeValueSetting20);
        org.junit.Assert.assertNotNull(eSLogger21);
        org.junit.Assert.assertNotNull(timeValueSetting22);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        long long16 = indexSettings13.gcDeletesInMillis;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting17 = indexSettings13.getINDEX_WARMER_ENABLED_SETTING();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig18 = indexSettings13.mergeSchedulerConfig;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig19 = indexSettings13.mergeSchedulerConfig;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 60000L + "'", long16 == 60000L);
        org.junit.Assert.assertNotNull(booleanSetting17);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig18);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig19);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.version.created", "index.version.created_string");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap23 = indexMetaData22.getAliases();
        int int24 = indexMetaData22.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet27 = indexMetaData25.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff28 = indexMetaData22.diff(indexMetaData25);
        long long29 = indexMetaData25.getCreationDate();
        org.elasticsearch.Version version30 = indexMetaData25.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings31 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap32 = settings31.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate33 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings34 = settings31.filter(strPredicate33);
        org.elasticsearch.index.IndexSettings indexSettings35 = new org.elasticsearch.index.IndexSettings(indexMetaData25, settings31);
        org.elasticsearch.common.logging.ESLogger eSLogger36 = indexSettings35.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue37 = indexSettings35.getsyncInterval();
        indexSettings35.setEnableWarmer(false);
        java.lang.String str40 = indexSettings35.defaultField;
        org.elasticsearch.common.settings.Settings settings41 = indexSettings35.settings;
        org.elasticsearch.common.unit.TimeValue timeValue42 = indexSettings35.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue43 = indexSettings35.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate44 = indexSettings35.indexNameMatcher;
        org.elasticsearch.Version version45 = indexSettings35.version;
        org.elasticsearch.common.settings.Settings.Builder builder46 = builder20.put("index.blocks.read", version45);
        org.elasticsearch.common.settings.Settings.Builder builder47 = builder46.replacePropertyPlaceholders();
        org.elasticsearch.common.settings.Settings.Builder builder50 = builder46.put("index.blocks.read", (float) (byte) 100);
        org.elasticsearch.common.settings.Settings.Builder builder53 = builder50.put("index.blocks.metadata", "5000099");
        org.elasticsearch.common.unit.ByteSizeUnit byteSizeUnit56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder57 = builder53.put("state-", (long) 5, byteSizeUnit56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(strImmutableOpenMap23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(indexMetaDataDiff28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(settings31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strPredicate33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(eSLogger36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "_all" + "'", str40, "_all");
        org.junit.Assert.assertNotNull(settings41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(byteSizeValue43);
        org.junit.Assert.assertNotNull(strPredicate44);
        org.junit.Assert.assertNotNull(version45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder53);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting15 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap17 = indexMetaData16.getAliases();
        int int18 = indexMetaData16.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet21 = indexMetaData19.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff22 = indexMetaData16.diff(indexMetaData19);
        long long23 = indexMetaData19.getCreationDate();
        org.elasticsearch.Version version24 = indexMetaData19.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings25 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap26 = settings25.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate27 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings28 = settings25.filter(strPredicate27);
        org.elasticsearch.index.IndexSettings indexSettings29 = new org.elasticsearch.index.IndexSettings(indexMetaData19, settings25);
        java.lang.String str30 = indexSettings29.getUUID();
        boolean boolean31 = indexSettings29.getqueryStringAnalyzeWildcard();
        java.lang.String str32 = indexSettings29.customDataPath();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData33 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap34 = indexMetaData33.getAliases();
        int int35 = indexMetaData33.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet38 = indexMetaData36.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff39 = indexMetaData33.diff(indexMetaData36);
        long long40 = indexMetaData36.getCreationDate();
        org.elasticsearch.Version version41 = indexMetaData36.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings42 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap43 = settings42.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate44 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings45 = settings42.filter(strPredicate44);
        org.elasticsearch.index.IndexSettings indexSettings46 = new org.elasticsearch.index.IndexSettings(indexMetaData36, settings42);
        java.lang.String str47 = indexSettings46.getUUID();
        boolean boolean48 = indexSettings46.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability49 = indexSettings46.getTranslogDurability();
        indexSettings29.durability = durability49;
        indexSettings13.durability = durability49;
        boolean boolean52 = indexSettings13.isShadowReplicaIndex;
        int int53 = indexSettings13.maxResultWindow;
        org.elasticsearch.index.translog.Translog.Durability durability54 = indexSettings13.durability;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(timeValueSetting15);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(strImmutableOpenMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(indexMetaDataDiff22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(settings25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strPredicate27);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "_na_" + "'", str30, "_na_");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(indexMetaData33);
        org.junit.Assert.assertNotNull(strImmutableOpenMap34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(indexMetaDataDiff39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(settings42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strPredicate44);
        org.junit.Assert.assertNotNull(settings45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "_na_" + "'", str47, "_na_");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + durability49 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability49.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10000 + "'", int53 == 10000);
        org.junit.Assert.assertTrue("'" + durability54 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability54.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        boolean boolean31 = indexSettings30.warmerEnabled;
        indexSettings30.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue34 = indexSettings30.getTranslogSyncInterval();
        indexSettings13.refreshInterval = timeValue34;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap37 = indexMetaData36.getAliases();
        int int38 = indexMetaData36.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData39 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet41 = indexMetaData39.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff42 = indexMetaData36.diff(indexMetaData39);
        long long43 = indexMetaData39.getCreationDate();
        org.elasticsearch.Version version44 = indexMetaData39.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings45 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap46 = settings45.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate47 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings48 = settings45.filter(strPredicate47);
        org.elasticsearch.index.IndexSettings indexSettings49 = new org.elasticsearch.index.IndexSettings(indexMetaData39, settings45);
        org.elasticsearch.common.logging.ESLogger eSLogger50 = indexSettings49.getlogger();
        boolean boolean51 = indexSettings49.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue52 = indexSettings49.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData53 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap54 = indexMetaData53.getAliases();
        int int55 = indexMetaData53.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData56 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet58 = indexMetaData56.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff59 = indexMetaData53.diff(indexMetaData56);
        long long60 = indexMetaData56.getCreationDate();
        org.elasticsearch.Version version61 = indexMetaData56.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings62 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap63 = settings62.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate64 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings65 = settings62.filter(strPredicate64);
        org.elasticsearch.index.IndexSettings indexSettings66 = new org.elasticsearch.index.IndexSettings(indexMetaData56, settings62);
        boolean boolean67 = indexSettings66.warmerEnabled;
        indexSettings66.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue70 = indexSettings66.getTranslogSyncInterval();
        indexSettings49.refreshInterval = timeValue70;
        indexSettings13.refreshInterval = timeValue70;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting73 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        boolean boolean74 = indexSettings13.warmerEnabled;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(strImmutableOpenMap37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(indexMetaData39);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(indexMetaDataDiff42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(settings45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strPredicate47);
        org.junit.Assert.assertNotNull(settings48);
        org.junit.Assert.assertNotNull(eSLogger50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(indexMetaData53);
        org.junit.Assert.assertNotNull(strImmutableOpenMap54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(indexMetaData56);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNotNull(indexMetaDataDiff59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(version61);
        org.junit.Assert.assertNotNull(settings62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strPredicate64);
        org.junit.Assert.assertNotNull(settings65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(timeValue70);
        org.junit.Assert.assertNotNull(timeValueSetting73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        boolean boolean31 = indexSettings30.warmerEnabled;
        indexSettings30.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue34 = indexSettings30.getTranslogSyncInterval();
        indexSettings13.refreshInterval = timeValue34;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap37 = indexMetaData36.getAliases();
        int int38 = indexMetaData36.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData39 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet41 = indexMetaData39.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff42 = indexMetaData36.diff(indexMetaData39);
        long long43 = indexMetaData39.getCreationDate();
        org.elasticsearch.Version version44 = indexMetaData39.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings45 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap46 = settings45.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate47 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings48 = settings45.filter(strPredicate47);
        org.elasticsearch.index.IndexSettings indexSettings49 = new org.elasticsearch.index.IndexSettings(indexMetaData39, settings45);
        org.elasticsearch.common.logging.ESLogger eSLogger50 = indexSettings49.getlogger();
        boolean boolean51 = indexSettings49.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue52 = indexSettings49.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData53 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap54 = indexMetaData53.getAliases();
        int int55 = indexMetaData53.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData56 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet58 = indexMetaData56.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff59 = indexMetaData53.diff(indexMetaData56);
        long long60 = indexMetaData56.getCreationDate();
        org.elasticsearch.Version version61 = indexMetaData56.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings62 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap63 = settings62.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate64 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings65 = settings62.filter(strPredicate64);
        org.elasticsearch.index.IndexSettings indexSettings66 = new org.elasticsearch.index.IndexSettings(indexMetaData56, settings62);
        boolean boolean67 = indexSettings66.warmerEnabled;
        indexSettings66.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue70 = indexSettings66.getTranslogSyncInterval();
        indexSettings49.refreshInterval = timeValue70;
        indexSettings13.refreshInterval = timeValue70;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting73 = indexSettings13.getALLOW_UNMAPPED();
        org.elasticsearch.common.unit.TimeValue timeValue74 = indexSettings13.syncInterval;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(strImmutableOpenMap37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(indexMetaData39);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(indexMetaDataDiff42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(settings45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strPredicate47);
        org.junit.Assert.assertNotNull(settings48);
        org.junit.Assert.assertNotNull(eSLogger50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(indexMetaData53);
        org.junit.Assert.assertNotNull(strImmutableOpenMap54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(indexMetaData56);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNotNull(indexMetaDataDiff59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(version61);
        org.junit.Assert.assertNotNull(settings62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strPredicate64);
        org.junit.Assert.assertNotNull(settings65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(timeValue70);
        org.junit.Assert.assertNotNull(booleanSetting73);
        org.junit.Assert.assertNotNull(timeValue74);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        int int17 = indexSettings13.getMaxResultWindow();
        org.elasticsearch.common.logging.ESLogger eSLogger18 = indexSettings13.getlogger();
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig19 = indexSettings13.mergePolicyConfig;
        indexSettings13.maxRefreshListeners = (byte) 100;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings22 = indexSettings13.scopedSettings;
        boolean boolean23 = indexSettings13.defaultAllowUnmappedFields;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000 + "'", int17 == 10000);
        org.junit.Assert.assertNotNull(eSLogger18);
        org.junit.Assert.assertNotNull(mergePolicyConfig19);
        org.junit.Assert.assertNotNull(indexScopedSettings22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        int int16 = indexSettings13.getMaxResultWindow();
        boolean boolean17 = indexSettings13.isShadowReplicaIndex;
        boolean boolean19 = indexSettings13.matchesIndexName("index.version.created");
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getsyncInterval();
        int int21 = indexSettings13.getNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters10 = indexMetaData3.getInitialRecoveryFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData3.excludeFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNull(discoveryNodeFilters10);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        boolean boolean17 = indexSettings13.updateIndexMetaData(indexMetaData16);
        boolean boolean19 = indexMetaData16.isSameUUID("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData21 = indexMetaData16.mapping("_all");
        int int22 = indexMetaData16.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state23 = indexMetaData16.getState();
        org.elasticsearch.common.io.stream.StreamInput streamInput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = indexMetaData16.readFrom(streamInput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(mappingMetaData21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + state23 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state23.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        java.lang.String str16 = indexSettings13.getDefaultField();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        org.elasticsearch.common.logging.ESLogger eSLogger31 = indexSettings30.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue32 = indexSettings30.getsyncInterval();
        indexSettings30.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting35 = indexSettings30.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = indexSettings30.getIndexMetaData();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap38 = indexMetaData37.getAliases();
        int int39 = indexMetaData37.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData40 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet42 = indexMetaData40.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff43 = indexMetaData37.diff(indexMetaData40);
        long long44 = indexMetaData40.getCreationDate();
        org.elasticsearch.Version version45 = indexMetaData40.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings46 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap47 = settings46.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate48 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings49 = settings46.filter(strPredicate48);
        org.elasticsearch.index.IndexSettings indexSettings50 = new org.elasticsearch.index.IndexSettings(indexMetaData40, settings46);
        java.lang.String str51 = indexSettings50.getUUID();
        boolean boolean52 = indexSettings50.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability53 = indexSettings50.getTranslogDurability();
        indexSettings30.setdurability(durability53);
        indexSettings13.setdurability(durability53);
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings56 = indexSettings13.scopedSettings;
        org.elasticsearch.Version version57 = indexSettings13.getIndexVersionCreated();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_all" + "'", str16, "_all");
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(eSLogger31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(intSetting35);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(strImmutableOpenMap38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(indexMetaData40);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(indexMetaDataDiff43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(version45);
        org.junit.Assert.assertNotNull(settings46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strPredicate48);
        org.junit.Assert.assertNotNull(settings49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "_na_" + "'", str51, "_na_");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + durability53 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability53.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(indexScopedSettings56);
        org.junit.Assert.assertNotNull(version57);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.version.created", "index.version.created_string");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap23 = indexMetaData22.getAliases();
        int int24 = indexMetaData22.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet27 = indexMetaData25.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff28 = indexMetaData22.diff(indexMetaData25);
        long long29 = indexMetaData25.getCreationDate();
        org.elasticsearch.Version version30 = indexMetaData25.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings31 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap32 = settings31.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate33 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings34 = settings31.filter(strPredicate33);
        org.elasticsearch.index.IndexSettings indexSettings35 = new org.elasticsearch.index.IndexSettings(indexMetaData25, settings31);
        org.elasticsearch.common.logging.ESLogger eSLogger36 = indexSettings35.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue37 = indexSettings35.getsyncInterval();
        indexSettings35.setEnableWarmer(false);
        java.lang.String str40 = indexSettings35.defaultField;
        org.elasticsearch.common.settings.Settings settings41 = indexSettings35.settings;
        org.elasticsearch.common.unit.TimeValue timeValue42 = indexSettings35.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue43 = indexSettings35.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate44 = indexSettings35.indexNameMatcher;
        org.elasticsearch.Version version45 = indexSettings35.version;
        org.elasticsearch.common.settings.Settings.Builder builder46 = builder20.put("index.blocks.read", version45);
        org.elasticsearch.common.settings.Settings.Builder builder47 = builder46.replacePropertyPlaceholders();
        org.elasticsearch.common.settings.Settings.Builder builder50 = builder46.put("index.blocks.read", (float) (byte) 100);
        org.elasticsearch.common.settings.Settings.Builder builder53 = builder50.put("index.blocks.metadata", "5000099");
        org.elasticsearch.common.settings.Settings.Builder builder56 = builder53.put("1", (float) 60000L);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(strImmutableOpenMap23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(indexMetaDataDiff28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(version30);
        org.junit.Assert.assertNotNull(settings31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strPredicate33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(eSLogger36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "_all" + "'", str40, "_all");
        org.junit.Assert.assertNotNull(settings41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(byteSizeValue43);
        org.junit.Assert.assertNotNull(strPredicate44);
        org.junit.Assert.assertNotNull(version45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder56);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom5 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder3.putCustom("index.uuid", custom5);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder6.removeAllAliases();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        int int16 = indexSettings13.getMaxResultWindow();
        boolean boolean17 = indexSettings13.isShadowReplicaIndex;
        java.util.function.Predicate<java.lang.String> strPredicate18 = indexSettings13.indexNameMatcher;
        int int19 = indexSettings13.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap21 = indexMetaData20.getAliases();
        int int22 = indexMetaData20.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet25 = indexMetaData23.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff26 = indexMetaData20.diff(indexMetaData23);
        long long27 = indexMetaData23.getCreationDate();
        org.elasticsearch.Version version28 = indexMetaData23.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings29 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap30 = settings29.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate31 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings32 = settings29.filter(strPredicate31);
        org.elasticsearch.index.IndexSettings indexSettings33 = new org.elasticsearch.index.IndexSettings(indexMetaData23, settings29);
        org.elasticsearch.common.logging.ESLogger eSLogger34 = indexSettings33.getlogger();
        boolean boolean35 = indexSettings33.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue36 = indexSettings33.syncInterval;
        org.elasticsearch.common.settings.Settings settings37 = indexSettings33.getSettings();
        java.lang.String str38 = indexSettings33.defaultField;
        org.elasticsearch.Version version39 = indexSettings33.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue40 = indexSettings33.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData41 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap42 = indexMetaData41.getAliases();
        int int43 = indexMetaData41.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData44 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet46 = indexMetaData44.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff47 = indexMetaData41.diff(indexMetaData44);
        long long48 = indexMetaData44.getCreationDate();
        org.elasticsearch.Version version49 = indexMetaData44.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings50 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap51 = settings50.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate52 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings53 = settings50.filter(strPredicate52);
        org.elasticsearch.index.IndexSettings indexSettings54 = new org.elasticsearch.index.IndexSettings(indexMetaData44, settings50);
        java.lang.String str55 = indexSettings54.getUUID();
        boolean boolean56 = indexSettings54.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy57 = indexSettings54.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData58 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap59 = indexMetaData58.getAliases();
        int int60 = indexMetaData58.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData61 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet63 = indexMetaData61.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff64 = indexMetaData58.diff(indexMetaData61);
        long long65 = indexMetaData61.getCreationDate();
        org.elasticsearch.Version version66 = indexMetaData61.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings67 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap68 = settings67.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate69 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings70 = settings67.filter(strPredicate69);
        org.elasticsearch.index.IndexSettings indexSettings71 = new org.elasticsearch.index.IndexSettings(indexMetaData61, settings67);
        boolean boolean72 = indexSettings71.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig73 = indexSettings71.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability74 = indexSettings71.getdurability();
        indexSettings54.setTranslogDurability(durability74);
        indexSettings33.durability = durability74;
        indexSettings13.durability = durability74;
        org.elasticsearch.Version version78 = indexSettings13.version;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData79 = indexSettings13.getIndexMetaData();
        int int80 = indexMetaData79.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters81 = indexMetaData79.requireFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strPredicate18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strImmutableOpenMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(indexMetaDataDiff26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strPredicate31);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertNotNull(eSLogger34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(settings37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "_all" + "'", str38, "_all");
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(indexMetaData41);
        org.junit.Assert.assertNotNull(strImmutableOpenMap42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(indexMetaData44);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(indexMetaDataDiff47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(version49);
        org.junit.Assert.assertNotNull(settings50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strPredicate52);
        org.junit.Assert.assertNotNull(settings53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "_na_" + "'", str55, "_na_");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(mergePolicy57);
        org.junit.Assert.assertNotNull(indexMetaData58);
        org.junit.Assert.assertNotNull(strImmutableOpenMap59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(indexMetaData61);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(indexMetaDataDiff64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(version66);
        org.junit.Assert.assertNotNull(settings67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strPredicate69);
        org.junit.Assert.assertNotNull(settings70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig73);
        org.junit.Assert.assertTrue("'" + durability74 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability74.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(version78);
        org.junit.Assert.assertNotNull(indexMetaData79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters81);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        java.lang.String str16 = indexSettings13.getDefaultField();
        org.elasticsearch.common.unit.TimeValue timeValue17 = indexSettings13.getTranslogSyncInterval();
        boolean boolean18 = indexSettings13.isDefaultAllowUnmappedFields();
        int int19 = indexSettings13.maxRefreshListeners;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.refreshInterval;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_all" + "'", str16, "_all");
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000);
        org.junit.Assert.assertNotNull(timeValue20);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate22 = indexSettings13.indexNameMatcher;
        org.elasticsearch.Version version23 = indexSettings13.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting24 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue25 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_BLOCKS_READ_SETTING;
        java.lang.Boolean boolean27 = indexSettings13.getValue(booleanSetting26);
        indexSettings13.TTLPurgeDisabled = true;
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting30 = indexSettings13.getMAX_RESCORE_WINDOW_SETTING();
        boolean boolean31 = indexSettings13.TTLPurgeDisabled;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(strSetting24);
        org.junit.Assert.assertNotNull(byteSizeValue25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertNotNull(intSetting30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        int int21 = indexSettings13.getNumberOfShards();
        org.elasticsearch.common.settings.Settings settings22 = indexSettings13.settings;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig23 = indexSettings13.getMergeSchedulerConfig();
        boolean boolean24 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting25 = indexSettings13.getMAX_REFRESH_LISTENERS_PER_SHARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = indexSettings13.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting27 = indexSettings13.getQUERY_STRING_LENIENT_SETTING();
        indexSettings13.maxRescoreWindow = 0;
        int int30 = indexSettings13.getNumberOfShards();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.index.translog.Translog.Durability> durabilitySetting31 = indexSettings13.getINDEX_TRANSLOG_DURABILITY_SETTING();
        indexSettings13.setTTLPurgeDisabled(true);
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting34 = indexSettings13.getALLOW_UNMAPPED();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(settings22);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intSetting25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertNotNull(booleanSetting27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(durabilitySetting31);
        org.junit.Assert.assertNotNull(booleanSetting34);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.shared_filesystem.recover_on_any_node");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.putMapping(mappingMetaData2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.numberOfShards((int) (byte) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder6.setRoutingNumShards((int) (short) 100);
        java.lang.String str9 = builder6.index();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = builder6.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: must specify numberOfReplicas for index [index.]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "index." + "'", str9, "index.");
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        boolean boolean19 = indexSettings13.matchesIndexName("index.version.upgraded_string");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = indexSettings13.indexMetaData;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds((int) (short) 0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap4 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap6 = indexMetaData0.getCustoms();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters7 = indexMetaData0.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.Version version9 = indexMetaData0.getUpgradedVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap4);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(strImmutableOpenMap6);
        org.junit.Assert.assertNull(discoveryNodeFilters7);
        org.junit.Assert.assertNotNull(version9);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        int int4 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.Version version5 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.common.settings.Settings settings6 = indexMetaData0.getSettings();
        int int7 = indexMetaData0.getRoutingFactor();
        int int8 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData9 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet11 = indexMetaData9.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap12 = indexMetaData9.getMappings();
        int int13 = indexMetaData9.getNumberOfReplicas();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData0.diff(indexMetaData9);
        java.util.Set<java.lang.String> strSet16 = null; // flaky: indexMetaData0.activeAllocationIds((int) (short) 1);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData0.writeTo(streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(version5);
        org.junit.Assert.assertNotNull(settings6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(indexMetaData9);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strImmutableOpenMap12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertNull(strSet16);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.removeAlias("index.creation_date_string");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder1.putMapping("index.shared_filesystem", "_na_");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.Version version4 = indexMetaData0.getUpgradedVersion();
        java.util.Set<java.lang.String> strSet6 = null; // flaky: indexMetaData0.activeAllocationIds((int) (byte) 100);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNotNull(version4);
        org.junit.Assert.assertNull(strSet6);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.warmerEnabled;
        indexSettings13.gcDeletesInMillis = (byte) 1;
        indexSettings13.maxRefreshListeners = (short) 1;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.getNodeSettings();
        org.apache.lucene.index.MergePolicy mergePolicy20 = indexSettings13.getMergePolicy();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting21 = indexSettings13.getINDEX_WARMER_ENABLED_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(mergePolicy20);
        org.junit.Assert.assertNotNull(booleanSetting21);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting16 = indexSettings13.getINDEX_TTL_DISABLE_PURGE_SETTING();
        java.lang.String str17 = indexSettings13.getNodeName();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting18 = indexSettings13.getINDEX_CHECK_ON_STARTUP();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig19 = indexSettings13.mergeSchedulerConfig;
        boolean boolean20 = indexSettings13.getqueryStringAnalyzeWildcard();
        java.util.function.Predicate<java.lang.String> strPredicate21 = indexSettings13.indexNameMatcher;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(booleanSetting16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strSetting18);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strPredicate21);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = indexSettings13.getIndexMetaData();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting17 = indexSettings13.getINDEX_WARMER_ENABLED_SETTING();
        int int18 = indexSettings13.maxRescoreWindow;
        int int19 = indexSettings13.getMaxResultWindow();
        int int20 = indexSettings13.getMaxRefreshListeners();
        org.elasticsearch.common.unit.TimeValue timeValue21 = org.elasticsearch.index.IndexSettings.DEFAULT_REFRESH_INTERVAL;
        indexSettings13.refreshInterval = timeValue21;
        org.elasticsearch.common.unit.TimeValue timeValue23 = indexSettings13.syncInterval;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(booleanSetting17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000 + "'", int18 == 10000);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000 + "'", int19 == 10000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1000 + "'", int20 == 1000);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(timeValue23);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = indexSettings13.getIndexMetaData();
        indexSettings13.setwarmerEnabled(false);
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher22 = indexSettings13.parseFieldMatcher;
        java.lang.String str23 = indexSettings13.customDataPath();
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher24 = indexSettings13.getParseFieldMatcher();
        java.lang.String str25 = indexSettings13.customDataPath();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting26 = indexSettings13.getINDEX_CHECK_ON_STARTUP();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(parseFieldMatcher22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(parseFieldMatcher24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strSetting26);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue19 = indexSettings13.flushThresholdSize;
        java.lang.String str20 = indexSettings13.customDataPath();
        boolean boolean21 = indexSettings13.warmerEnabled;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet24 = indexMetaData22.activeAllocationIds(0);
        int int25 = indexMetaData22.getRoutingNumShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters26 = indexMetaData22.requireFilters();
        indexSettings13.indexMetaData = indexMetaData22;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting28 = indexSettings13.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(byteSizeValue19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters26);
        org.junit.Assert.assertNotNull(booleanSetting28);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder22 = builder20.normalizePrefix("index.blocks.read");
        org.elasticsearch.common.settings.Settings.Builder builder25 = builder22.put("", false);
        org.elasticsearch.common.settings.Settings.Builder builder26 = builder22.replacePropertyPlaceholders();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = builder22.internalMap();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData18.getAliases();
        int int20 = indexMetaData18.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet23 = indexMetaData21.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff24 = indexMetaData18.diff(indexMetaData21);
        long long25 = indexMetaData21.getCreationDate();
        org.apache.lucene.util.Version version26 = indexMetaData21.getMinimumCompatibleVersion();
        indexSettings13.indexMetaData = indexMetaData21;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting28 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData29 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap30 = indexMetaData29.getAliases();
        int int31 = indexMetaData29.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData32 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet34 = indexMetaData32.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff35 = indexMetaData29.diff(indexMetaData32);
        long long36 = indexMetaData32.getCreationDate();
        org.elasticsearch.Version version37 = indexMetaData32.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings38 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap39 = settings38.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate40 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings41 = settings38.filter(strPredicate40);
        org.elasticsearch.index.IndexSettings indexSettings42 = new org.elasticsearch.index.IndexSettings(indexMetaData32, settings38);
        java.lang.String str43 = indexSettings42.getUUID();
        boolean boolean44 = indexSettings42.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting45 = indexSettings42.getINDEX_REFRESH_INTERVAL_SETTING();
        org.elasticsearch.Version version46 = indexSettings42.getversion();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue47 = indexSettings42.getFlushThresholdSize();
        indexSettings13.flushThresholdSize = byteSizeValue47;
        long long49 = indexSettings13.gcDeletesInMillis;
        java.util.function.Predicate<java.lang.String> strPredicate50 = indexSettings13.indexNameMatcher;
        long long51 = indexSettings13.getGcDeletesInMillis();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(indexMetaDataDiff24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNull(version26);
        org.junit.Assert.assertNotNull(timeValueSetting28);
        org.junit.Assert.assertNotNull(indexMetaData29);
        org.junit.Assert.assertNotNull(strImmutableOpenMap30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(indexMetaData32);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(indexMetaDataDiff35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertNotNull(settings38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strPredicate40);
        org.junit.Assert.assertNotNull(settings41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "_na_" + "'", str43, "_na_");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(timeValueSetting45);
        org.junit.Assert.assertNotNull(version46);
        org.junit.Assert.assertNotNull(byteSizeValue47);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 60000L + "'", long49 == 60000L);
        org.junit.Assert.assertNotNull(strPredicate50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 60000L + "'", long51 == 60000L);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        boolean boolean31 = indexSettings30.warmerEnabled;
        indexSettings30.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue34 = indexSettings30.getTranslogSyncInterval();
        indexSettings13.refreshInterval = timeValue34;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap37 = indexMetaData36.getAliases();
        int int38 = indexMetaData36.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData39 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet41 = indexMetaData39.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff42 = indexMetaData36.diff(indexMetaData39);
        long long43 = indexMetaData39.getCreationDate();
        org.elasticsearch.Version version44 = indexMetaData39.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings45 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap46 = settings45.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate47 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings48 = settings45.filter(strPredicate47);
        org.elasticsearch.index.IndexSettings indexSettings49 = new org.elasticsearch.index.IndexSettings(indexMetaData39, settings45);
        org.elasticsearch.common.logging.ESLogger eSLogger50 = indexSettings49.getlogger();
        boolean boolean51 = indexSettings49.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue52 = indexSettings49.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData53 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap54 = indexMetaData53.getAliases();
        int int55 = indexMetaData53.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData56 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet58 = indexMetaData56.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff59 = indexMetaData53.diff(indexMetaData56);
        long long60 = indexMetaData56.getCreationDate();
        org.elasticsearch.Version version61 = indexMetaData56.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings62 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap63 = settings62.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate64 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings65 = settings62.filter(strPredicate64);
        org.elasticsearch.index.IndexSettings indexSettings66 = new org.elasticsearch.index.IndexSettings(indexMetaData56, settings62);
        boolean boolean67 = indexSettings66.warmerEnabled;
        indexSettings66.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue70 = indexSettings66.getTranslogSyncInterval();
        indexSettings49.refreshInterval = timeValue70;
        indexSettings13.refreshInterval = timeValue70;
        java.lang.String str73 = indexSettings13.getNodeName();
        org.elasticsearch.common.unit.TimeValue timeValue74 = indexSettings13.getsyncInterval();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(strImmutableOpenMap37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(indexMetaData39);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(indexMetaDataDiff42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(settings45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strPredicate47);
        org.junit.Assert.assertNotNull(settings48);
        org.junit.Assert.assertNotNull(eSLogger50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(indexMetaData53);
        org.junit.Assert.assertNotNull(strImmutableOpenMap54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(indexMetaData56);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNotNull(indexMetaDataDiff59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(version61);
        org.junit.Assert.assertNotNull(settings62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strPredicate64);
        org.junit.Assert.assertNotNull(settings65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(timeValue70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(timeValue74);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.numberOfShards((int) (short) -1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.numberOfShards(1);
        int int8 = builder5.numberOfReplicas();
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData18.getAliases();
        int int20 = indexMetaData18.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet23 = indexMetaData21.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff24 = indexMetaData18.diff(indexMetaData21);
        long long25 = indexMetaData21.getCreationDate();
        org.apache.lucene.util.Version version26 = indexMetaData21.getMinimumCompatibleVersion();
        indexSettings13.indexMetaData = indexMetaData21;
        org.elasticsearch.common.io.stream.StreamOutput streamOutput28 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData21.writeTo(streamOutput28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(indexMetaDataDiff24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNull(version26);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.warmerEnabled;
        indexSettings13.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue17 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData18.getAliases();
        int int20 = indexMetaData18.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet23 = indexMetaData21.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff24 = indexMetaData18.diff(indexMetaData21);
        long long25 = indexMetaData21.getCreationDate();
        org.elasticsearch.Version version26 = indexMetaData21.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings27 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap28 = settings27.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate29 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings30 = settings27.filter(strPredicate29);
        org.elasticsearch.index.IndexSettings indexSettings31 = new org.elasticsearch.index.IndexSettings(indexMetaData21, settings27);
        java.lang.String str32 = indexSettings31.getUUID();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting33 = indexSettings31.getINDEX_WARMER_ENABLED_SETTING();
        java.lang.Boolean boolean34 = indexSettings13.getValue(booleanSetting33);
        org.elasticsearch.index.translog.Translog.Durability durability35 = indexSettings13.getdurability();
        boolean boolean36 = indexSettings13.isShadowReplicaIndex();
        org.elasticsearch.common.unit.TimeValue timeValue37 = indexSettings13.syncInterval;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(indexMetaDataDiff24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(version26);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strPredicate29);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "_na_" + "'", str32, "_na_");
        org.junit.Assert.assertNotNull(booleanSetting33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + true + "'", boolean34, true);
        org.junit.Assert.assertTrue("'" + durability35 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability35.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(timeValue37);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.State state1 = org.elasticsearch.cluster.metadata.IndexMetaData.State.fromString("_na_");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No state match for [_na_]");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        boolean boolean16 = indexSettings13.isTTLPurgeDisabled();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting17 = indexSettings13.getMAX_REFRESH_LISTENERS_PER_SHARD();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(intSetting17);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings19 = indexSettings13.scopedSettings;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting20 = indexSettings13.getINDEX_TRANSLOG_SYNC_INTERVAL_SETTING();
        boolean boolean21 = indexSettings13.isQueryStringAnalyzeWildcard();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(indexScopedSettings19);
        org.junit.Assert.assertNotNull(timeValueSetting20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.creationDate((long) ' ');
        int int4 = builder1.getRoutingNumShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder1.creationDate((long) (byte) 100);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.version.created");
        org.junit.Assert.assertNotNull(builder1);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = indexSettings13.getIndexMetaData();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting17 = indexSettings13.getINDEX_WARMER_ENABLED_SETTING();
        org.elasticsearch.index.translog.Translog.Durability durability18 = indexSettings13.durability;
        boolean boolean20 = indexSettings13.matchesIndexName("state-");
        boolean boolean21 = indexSettings13.queryStringAnalyzeWildcard;
        int int22 = indexSettings13.getMaxRefreshListeners();
        int int23 = indexSettings13.getMaxRefreshListeners();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(booleanSetting17);
        org.junit.Assert.assertTrue("'" + durability18 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability18.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1000 + "'", int22 == 1000);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1000 + "'", int23 == 1000);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        java.lang.String str16 = indexSettings13.getDefaultField();
        org.elasticsearch.common.unit.TimeValue timeValue17 = indexSettings13.getTranslogSyncInterval();
        boolean boolean18 = indexSettings13.isDefaultAllowUnmappedFields();
        java.lang.String str19 = indexSettings13.nodeName;
        java.lang.String str20 = indexSettings13.customDataPath();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_all" + "'", str16, "_all");
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder2 = builder0.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder5 = builder2.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder8 = builder5.put("", (double) 1000);
        java.lang.String str10 = builder5.get("index.uuid");
        org.elasticsearch.common.settings.Settings.Builder builder11 = builder5.replacePropertyPlaceholders();
        org.elasticsearch.common.settings.Settings.Builder builder12 = builder5.replacePropertyPlaceholders();
        org.elasticsearch.common.settings.Settings settings13 = builder12.build();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap15 = indexMetaData14.getAliases();
        int int16 = indexMetaData14.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet19 = indexMetaData17.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff20 = indexMetaData14.diff(indexMetaData17);
        long long21 = indexMetaData17.getCreationDate();
        org.elasticsearch.Version version22 = indexMetaData17.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings23 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap24 = settings23.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate25 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings26 = settings23.filter(strPredicate25);
        org.elasticsearch.index.IndexSettings indexSettings27 = new org.elasticsearch.index.IndexSettings(indexMetaData17, settings23);
        java.lang.String str28 = indexSettings27.getUUID();
        boolean boolean29 = indexSettings27.getqueryStringAnalyzeWildcard();
        indexSettings27.maxRescoreWindow = 1;
        org.elasticsearch.index.translog.Translog.Durability durability32 = indexSettings27.durability;
        java.lang.String str33 = indexSettings27.getDefaultField();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue34 = indexSettings27.getFlushThresholdSize();
        boolean boolean35 = settings13.equals((java.lang.Object) indexSettings27);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(settings13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(strImmutableOpenMap15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(indexMetaDataDiff20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strPredicate25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_na_" + "'", str28, "_na_");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + durability32 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability32.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_all" + "'", str33, "_all");
        org.junit.Assert.assertNotNull(byteSizeValue34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        int int4 = builder1.getRoutingNumShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder1.removeAlias("index.blocks.metadata");
        java.lang.String[] strArray30 = new java.lang.String[] { "index.creation_date", "index.blocks.metadata", "index.data_path", "index.version.created", "hi!", "index.shared_filesystem.recover_on_any_node", "primary_terms", "index.blocks.metadata", "index.blocks.write", "state-", "index.creation_date_string", "state-", "index.shared_filesystem.recover_on_any_node", "archived.", "5000099", "index.creation_date_string", "index.", "index.creation_date", "index.priority", "index.priority", "index.blocks.read_only", "index.version.upgraded_string" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder1.putActiveAllocationIds(10000, (java.util.Set<java.lang.String>) strSet31);
        org.elasticsearch.common.settings.Settings settings34 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap35 = settings34.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate36 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings37 = settings34.filter(strPredicate36);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder33.settings(settings37);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder38.setRoutingNumShards((int) '#');
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = builder40.putAlias(aliasMetaData41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strPredicate36);
        org.junit.Assert.assertNotNull(settings37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.auto_expand_replicas", (long) 1000);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap23 = indexMetaData22.getAliases();
        int int24 = indexMetaData22.getNumberOfShards();
        org.elasticsearch.Version version25 = indexMetaData22.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder26 = builder20.put("index.version.created", version25);
        org.elasticsearch.common.settings.Settings.Builder builder29 = builder26.put("", "index.");
        org.elasticsearch.common.settings.Settings settings30 = builder29.build();
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(strImmutableOpenMap23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(settings30);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("_all");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData2 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap3 = indexMetaData2.getAliases();
        int int4 = indexMetaData2.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData5 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet7 = indexMetaData5.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff8 = indexMetaData2.diff(indexMetaData5);
        long long9 = indexMetaData5.getCreationDate();
        org.elasticsearch.Version version10 = indexMetaData5.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings11 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap12 = settings11.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate13 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings14 = settings11.filter(strPredicate13);
        org.elasticsearch.index.IndexSettings indexSettings15 = new org.elasticsearch.index.IndexSettings(indexMetaData5, settings11);
        java.lang.String str17 = settings11.get("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder19 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder22 = builder19.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder25 = builder22.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData27 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap28 = indexMetaData27.getAliases();
        int int29 = indexMetaData27.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData30 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet32 = indexMetaData30.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff33 = indexMetaData27.diff(indexMetaData30);
        long long34 = indexMetaData30.getCreationDate();
        org.elasticsearch.Version version35 = indexMetaData30.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder36 = builder22.put("index.creation_date_string", version35);
        org.elasticsearch.Version version37 = settings11.getAsVersion("index.creation_date", version35);
        java.lang.String str39 = settings11.toDelimitedString('a');
        org.elasticsearch.common.settings.Settings settings41 = settings11.getAsSettings("");
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap42 = settings41.getAsGroups();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder1.settings(settings41);
        org.elasticsearch.common.settings.Settings.Builder builder44 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder46 = builder44.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder49 = builder46.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder52 = builder49.put("", (double) 1000);
        org.elasticsearch.common.settings.Settings.Builder builder54 = builder49.putNull("");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder55 = builder1.settings(builder54);
        int int56 = builder55.numberOfShards();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder58 = builder55.putMapping(mappingMetaData57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData2);
        org.junit.Assert.assertNotNull(strImmutableOpenMap3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(indexMetaData5);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(indexMetaDataDiff8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(version10);
        org.junit.Assert.assertNotNull(settings11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strPredicate13);
        org.junit.Assert.assertNotNull(settings14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(indexMetaData27);
        org.junit.Assert.assertNotNull(strImmutableOpenMap28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(indexMetaData30);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(indexMetaDataDiff33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(version37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(settings41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig15 = indexSettings13.getMergeSchedulerConfig();
        boolean boolean16 = indexSettings13.TTLPurgeDisabled;
        long long17 = indexSettings13.gcDeletesInMillis;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = indexSettings13.indexMetaData;
        org.elasticsearch.Version version19 = indexMetaData18.getUpgradedVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 60000L + "'", long17 == 60000L);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(version19);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder2 = builder0.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder5 = builder2.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder8 = builder2.put("index.creation_date", (double) (-1.0f));
        org.elasticsearch.common.settings.Settings.Builder builder11 = builder8.put("index.blocks.write", (float) 1L);
        org.elasticsearch.common.settings.Settings.Builder builder14 = builder8.put("state-", "5000099");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap17 = indexMetaData16.getAliases();
        int int18 = indexMetaData16.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet21 = indexMetaData19.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff22 = indexMetaData16.diff(indexMetaData19);
        long long23 = indexMetaData19.getCreationDate();
        org.elasticsearch.Version version24 = indexMetaData19.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings25 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap26 = settings25.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate27 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings28 = settings25.filter(strPredicate27);
        org.elasticsearch.index.IndexSettings indexSettings29 = new org.elasticsearch.index.IndexSettings(indexMetaData19, settings25);
        boolean boolean30 = indexSettings29.getqueryStringLenient();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting31 = indexSettings29.getINDEX_GC_DELETES_SETTING();
        java.lang.Class<?> wildcardClass32 = indexSettings29.getClass();
        org.elasticsearch.common.settings.Settings.Builder builder33 = builder14.put("index.auto_expand_replicas", (java.lang.Class) wildcardClass32);
        org.elasticsearch.common.settings.Settings.Builder builder36 = builder33.put("index.blocks.read_only", (float) (byte) 1);
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(strImmutableOpenMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(indexMetaDataDiff22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(settings25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strPredicate27);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(timeValueSetting31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder36);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        boolean boolean16 = indexSettings13.isQueryStringLenient();
        java.util.function.Predicate<java.lang.String> strPredicate17 = indexSettings13.getindexNameMatcher();
        boolean boolean18 = indexSettings13.getdefaultAllowUnmappedFields();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting19 = indexSettings13.getMAX_RESCORE_WINDOW_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strPredicate17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(intSetting19);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        int int16 = indexSettings13.maxRescoreWindow;
        boolean boolean17 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability18 = indexSettings13.durability;
        boolean boolean19 = indexSettings13.isWarmerEnabled();
        int int20 = indexSettings13.getNumberOfShards();
        java.lang.String str21 = indexSettings13.customDataPath();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + durability18 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability18.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        java.lang.String str16 = indexSettings13.customDataPath();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        java.lang.String str31 = indexSettings30.getUUID();
        boolean boolean32 = indexSettings30.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability33 = indexSettings30.getTranslogDurability();
        indexSettings13.durability = durability33;
        java.lang.String str35 = indexSettings13.getDefaultField();
        org.elasticsearch.common.settings.Settings settings36 = indexSettings13.getSettings();
        int int37 = indexSettings13.maxRefreshListeners;
        boolean boolean38 = indexSettings13.isQueryStringAllowLeadingWildcard();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "_na_" + "'", str31, "_na_");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + durability33 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability33.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "_all" + "'", str35, "_all");
        org.junit.Assert.assertNotNull(settings36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1000 + "'", int37 == 1000);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = indexSettings13.getIndexMetaData();
        indexSettings13.setwarmerEnabled(false);
        java.lang.String str22 = indexSettings13.nodeName;
        int int23 = indexSettings13.getMaxResultWindow();
        int int24 = indexSettings13.getNumberOfShards();
        indexSettings13.maxRefreshListeners = (byte) 100;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10000 + "'", int23 == 10000);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        int int16 = indexSettings13.maxRescoreWindow;
        boolean boolean17 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = indexSettings13.getIndexMetaData();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData18.getInitialRecoveryFilters();
        int int20 = indexMetaData18.getNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        long long6 = indexMetaData0.primaryTerm(0);
        int int7 = indexMetaData0.getNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        indexSettings13.maxRescoreWindow = 1;
        org.elasticsearch.index.translog.Translog.Durability durability18 = indexSettings13.durability;
        java.lang.String str19 = indexSettings13.getDefaultField();
        org.elasticsearch.common.logging.ESLogger eSLogger20 = indexSettings13.logger;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + durability18 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability18.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_all" + "'", str19, "_all");
        org.junit.Assert.assertNotNull(eSLogger20);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        boolean boolean15 = indexSettings13.queryStringAllowLeadingWildcard;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting16 = indexSettings13.getINDEX_REFRESH_INTERVAL_SETTING();
        boolean boolean17 = indexSettings13.getisShadowReplicaIndex();
        boolean boolean18 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValueSetting16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder23 = builder3.put("index.blocks.read_only", false);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData24 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap25 = indexMetaData24.getAliases();
        int int26 = indexMetaData24.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData27 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet29 = indexMetaData27.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff30 = indexMetaData24.diff(indexMetaData27);
        long long31 = indexMetaData27.getCreationDate();
        org.elasticsearch.Version version32 = indexMetaData27.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings33 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap34 = settings33.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate35 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings36 = settings33.filter(strPredicate35);
        org.elasticsearch.index.IndexSettings indexSettings37 = new org.elasticsearch.index.IndexSettings(indexMetaData27, settings33);
        org.elasticsearch.common.logging.ESLogger eSLogger38 = indexSettings37.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue39 = indexSettings37.getsyncInterval();
        indexSettings37.setEnableWarmer(false);
        java.lang.String str42 = indexSettings37.defaultField;
        org.elasticsearch.common.settings.Settings settings43 = indexSettings37.settings;
        org.elasticsearch.common.unit.TimeValue timeValue44 = indexSettings37.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue45 = indexSettings37.getFlushThresholdSize();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData46 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        int int47 = indexMetaData46.getTotalNumberOfShards();
        boolean boolean48 = indexSettings37.updateIndexMetaData(indexMetaData46);
        indexSettings37.warmerEnabled = true;
        org.elasticsearch.common.settings.Settings settings51 = indexSettings37.settings;
        org.elasticsearch.common.settings.Settings.Builder builder52 = builder23.put(settings51);
        java.lang.String str54 = builder52.remove("archived.");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(indexMetaData24);
        org.junit.Assert.assertNotNull(strImmutableOpenMap25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(indexMetaData27);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(indexMetaDataDiff30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(version32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strPredicate35);
        org.junit.Assert.assertNotNull(settings36);
        org.junit.Assert.assertNotNull(eSLogger38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_all" + "'", str42, "_all");
        org.junit.Assert.assertNotNull(settings43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(byteSizeValue45);
        org.junit.Assert.assertNotNull(indexMetaData46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(settings51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.Version version19 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.syncInterval;
        int int21 = indexSettings13.getNumberOfShards();
        org.elasticsearch.common.unit.TimeValue timeValue22 = indexSettings13.getRefreshInterval();
        org.elasticsearch.common.logging.ESLogger eSLogger23 = indexSettings13.logger;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.index.translog.Translog.Durability> durabilitySetting24 = indexSettings13.getINDEX_TRANSLOG_DURABILITY_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(eSLogger23);
        org.junit.Assert.assertNotNull(durabilitySetting24);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.blocks.read");
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings0 = org.elasticsearch.common.settings.IndexScopedSettings.DEFAULT_SCOPED_SETTINGS;
        org.elasticsearch.common.settings.Settings settings1 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap2 = settings1.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate3 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings4 = settings1.filter(strPredicate3);
        indexScopedSettings0.validate(settings4);
        boolean boolean7 = indexScopedSettings0.isPrivateSetting("index.blocks.read");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings17 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap18 = settings17.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate19 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings20 = settings17.filter(strPredicate19);
        org.elasticsearch.index.IndexSettings indexSettings21 = new org.elasticsearch.index.IndexSettings(indexMetaData11, settings17);
        org.elasticsearch.common.logging.ESLogger eSLogger22 = indexSettings21.getlogger();
        boolean boolean23 = indexSettings21.isWarmerEnabled();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting24 = indexSettings21.getINDEX_TTL_DISABLE_PURGE_SETTING();
        indexScopedSettings0.validateSettingKey((org.elasticsearch.common.settings.Setting) booleanSetting24);
        java.util.Set<org.elasticsearch.common.settings.Setting<?>> wildcardSettingSet26 = indexScopedSettings0.getBUILT_IN_INDEX_SETTINGS();
        org.elasticsearch.common.settings.Settings.Builder builder27 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder30 = builder27.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder33 = builder30.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.common.settings.Settings.Builder builder36 = builder30.put("index.blocks.read", (int) '#');
        org.elasticsearch.common.settings.Settings.Builder builder39 = builder30.put("index.priority", true);
        org.elasticsearch.common.settings.Settings.Builder builder41 = builder30.putNull("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData45 = builder43.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder46 = builder43.removeAllAliases();
        org.elasticsearch.common.settings.Settings settings47 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap48 = settings47.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate49 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings50 = settings47.filter(strPredicate49);
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue52 = null;
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue53 = settings47.getAsBytesSize("hi!", byteSizeValue52);
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap55 = settings47.getAsGroups(false);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder56 = builder46.settings(settings47);
        java.lang.Boolean boolean59 = settings47.getAsBoolean("primary_terms", (java.lang.Boolean) true);
        org.elasticsearch.common.settings.Settings.Builder builder60 = builder41.put(settings47);
        // The following exception was thrown during execution in test generation
        try {
            indexScopedSettings0.validate(builder41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unknown setting []");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexScopedSettings0);
        org.junit.Assert.assertNotNull(settings1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strPredicate3);
        org.junit.Assert.assertNotNull(settings4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strPredicate19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(eSLogger22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(booleanSetting24);
        org.junit.Assert.assertNotNull(wildcardSettingSet26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNull(mappingMetaData45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strPredicate49);
        org.junit.Assert.assertNotNull(settings50);
        org.junit.Assert.assertNull(byteSizeValue53);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + true + "'", boolean59, true);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy16 = indexSettings13.getMergePolicy();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        boolean boolean31 = indexSettings30.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig32 = indexSettings30.getMergeSchedulerConfig();
        org.elasticsearch.index.translog.Translog.Durability durability33 = indexSettings30.getdurability();
        indexSettings13.setTranslogDurability(durability33);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData35 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap36 = indexMetaData35.getAliases();
        int int37 = indexMetaData35.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet40 = indexMetaData38.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff41 = indexMetaData35.diff(indexMetaData38);
        long long42 = indexMetaData38.getCreationDate();
        org.elasticsearch.Version version43 = indexMetaData38.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings44 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap45 = settings44.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate46 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings47 = settings44.filter(strPredicate46);
        org.elasticsearch.index.IndexSettings indexSettings48 = new org.elasticsearch.index.IndexSettings(indexMetaData38, settings44);
        org.elasticsearch.common.logging.ESLogger eSLogger49 = indexSettings48.getlogger();
        boolean boolean50 = indexSettings48.isWarmerEnabled();
        boolean boolean51 = indexSettings48.isTTLPurgeDisabled();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData52 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap53 = indexMetaData52.getAliases();
        int int54 = indexMetaData52.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData55 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet57 = indexMetaData55.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff58 = indexMetaData52.diff(indexMetaData55);
        long long59 = indexMetaData55.getCreationDate();
        org.elasticsearch.Version version60 = indexMetaData55.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings61 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap62 = settings61.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate63 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings64 = settings61.filter(strPredicate63);
        org.elasticsearch.index.IndexSettings indexSettings65 = new org.elasticsearch.index.IndexSettings(indexMetaData55, settings61);
        org.elasticsearch.common.logging.ESLogger eSLogger66 = indexSettings65.getlogger();
        boolean boolean67 = indexSettings65.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue68 = indexSettings65.syncInterval;
        org.elasticsearch.common.settings.Settings settings69 = indexSettings65.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData70 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap71 = indexMetaData70.getAliases();
        int int72 = indexMetaData70.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData73 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet75 = indexMetaData73.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff76 = indexMetaData70.diff(indexMetaData73);
        long long77 = indexMetaData73.getCreationDate();
        org.apache.lucene.util.Version version78 = indexMetaData73.getMinimumCompatibleVersion();
        indexSettings65.indexMetaData = indexMetaData73;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting80 = indexSettings65.getINDEX_GC_DELETES_SETTING();
        org.elasticsearch.index.translog.Translog.Durability durability81 = indexSettings65.getTranslogDurability();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue82 = indexSettings65.flushThresholdSize;
        indexSettings48.setTranslogFlushThresholdSize(byteSizeValue82);
        indexSettings13.flushThresholdSize = byteSizeValue82;
        long long85 = indexSettings13.gcDeletesInMillis;
        boolean boolean86 = indexSettings13.getdefaultAllowUnmappedFields();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(mergePolicy16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig32);
        org.junit.Assert.assertTrue("'" + durability33 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability33.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(indexMetaData35);
        org.junit.Assert.assertNotNull(strImmutableOpenMap36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(indexMetaDataDiff41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(version43);
        org.junit.Assert.assertNotNull(settings44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strPredicate46);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(eSLogger49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(indexMetaData52);
        org.junit.Assert.assertNotNull(strImmutableOpenMap53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(indexMetaData55);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(indexMetaDataDiff58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(version60);
        org.junit.Assert.assertNotNull(settings61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strPredicate63);
        org.junit.Assert.assertNotNull(settings64);
        org.junit.Assert.assertNotNull(eSLogger66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(settings69);
        org.junit.Assert.assertNotNull(indexMetaData70);
        org.junit.Assert.assertNotNull(strImmutableOpenMap71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(indexMetaData73);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(indexMetaDataDiff76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNull(version78);
        org.junit.Assert.assertNotNull(timeValueSetting80);
        org.junit.Assert.assertTrue("'" + durability81 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability81.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(byteSizeValue82);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 60000L + "'", long85 == 60000L);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.common.settings.Settings.Builder builder4 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder7 = builder4.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder10 = builder7.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData12 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap13 = indexMetaData12.getAliases();
        int int14 = indexMetaData12.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData15 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet17 = indexMetaData15.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff18 = indexMetaData12.diff(indexMetaData15);
        long long19 = indexMetaData15.getCreationDate();
        org.elasticsearch.Version version20 = indexMetaData15.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder21 = builder7.put("index.creation_date_string", version20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder1.settings(builder21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder22.removeAlias("index.uuid");
        org.elasticsearch.cluster.metadata.AliasMetaData.Builder builder25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder24.putAlias(builder25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(indexMetaData12);
        org.junit.Assert.assertNotNull(strImmutableOpenMap13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(indexMetaData15);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(indexMetaDataDiff18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(version20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        int int15 = indexSettings13.maxRefreshListeners;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        boolean boolean17 = indexSettings13.updateIndexMetaData(indexMetaData16);
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig18 = indexSettings13.getMergeSchedulerConfig();
        long long19 = indexSettings13.gcDeletesInMillis;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1000 + "'", int15 == 1000);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 60000L + "'", long19 == 60000L);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData18.getAliases();
        int int20 = indexMetaData18.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet23 = indexMetaData21.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff24 = indexMetaData18.diff(indexMetaData21);
        long long25 = indexMetaData21.getCreationDate();
        org.apache.lucene.util.Version version26 = indexMetaData21.getMinimumCompatibleVersion();
        indexSettings13.indexMetaData = indexMetaData21;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting28 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        int int29 = indexSettings13.getNumberOfReplicas();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting30 = indexSettings13.getINDEX_CHECK_ON_STARTUP();
        org.elasticsearch.Version version31 = indexSettings13.getIndexVersionCreated();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(indexMetaDataDiff24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNull(version26);
        org.junit.Assert.assertNotNull(timeValueSetting28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strSetting30);
        org.junit.Assert.assertNotNull(version31);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = indexSettings13.getIndexMetaData();
        indexSettings13.setwarmerEnabled(false);
        java.lang.String str22 = indexSettings13.nodeName;
        int int23 = indexSettings13.getMaxResultWindow();
        org.elasticsearch.common.unit.TimeValue timeValue24 = indexSettings13.getDEFAULT_REFRESH_INTERVAL();
        indexSettings13.setwarmerEnabled(false);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10000 + "'", int23 == 10000);
        org.junit.Assert.assertNotNull(timeValue24);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings0 = org.elasticsearch.common.settings.IndexScopedSettings.DEFAULT_SCOPED_SETTINGS;
        org.elasticsearch.common.settings.Setting.Property property1 = indexScopedSettings0.getScope();
        java.util.function.Predicate<java.lang.String> strPredicate2 = indexScopedSettings0.getINDEX_SETTINGS_KEY_PREDICATE();
        org.elasticsearch.common.settings.Settings settings3 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, java.lang.String> strMap4 = settings3.getAsMap();
        java.util.Set<java.lang.String> strSet5 = settings3.names();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap7 = indexMetaData6.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state8 = indexMetaData6.getState();
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings9 = indexScopedSettings0.copy(settings3, indexMetaData6);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters10 = indexMetaData6.getInitialRecoveryFilters();
        int int11 = indexMetaData6.getTotalNumberOfShards();
        long long12 = indexMetaData6.getVersion();
        org.junit.Assert.assertNotNull(indexScopedSettings0);
        org.junit.Assert.assertTrue("'" + property1 + "' != '" + org.elasticsearch.common.settings.Setting.Property.IndexScope + "'", property1.equals(org.elasticsearch.common.settings.Setting.Property.IndexScope));
        org.junit.Assert.assertNotNull(strPredicate2);
        org.junit.Assert.assertNotNull(settings3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(strImmutableOpenMap7);
        org.junit.Assert.assertTrue("'" + state8 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state8.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(indexScopedSettings9);
        org.junit.Assert.assertNull(discoveryNodeFilters10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        indexSettings13.maxRescoreWindow = 1;
        indexSettings13.maxRefreshListeners = (byte) 100;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig20 = indexSettings13.getMergeSchedulerConfig();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = indexSettings13.indexMetaData;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap22 = indexMetaData21.getMappings();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig20);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        indexSettings13.maxRescoreWindow = 1;
        indexSettings13.maxRefreshListeners = (byte) 100;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig20 = indexSettings13.getMergeSchedulerConfig();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting21 = indexSettings13.getINDEX_TTL_DISABLE_PURGE_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig20);
        org.junit.Assert.assertNotNull(booleanSetting21);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig15 = indexSettings13.getMergeSchedulerConfig();
        org.elasticsearch.common.settings.Settings settings16 = indexSettings13.settings;
        int int17 = indexSettings13.getMaxRefreshListeners();
        boolean boolean18 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting19 = indexSettings13.getINDEX_CHECK_ON_STARTUP();
        indexSettings13.setTTLPurgeDisabled(false);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig15);
        org.junit.Assert.assertNotNull(settings16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1000 + "'", int17 == 1000);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSetting19);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        org.elasticsearch.common.unit.TimeValue timeValue18 = indexSettings13.refreshInterval;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.getSettings();
        java.lang.String str22 = settings19.get("hi!", "index.blocks.read");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "index.blocks.read" + "'", str22, "index.blocks.read");
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        int int23 = indexMetaData22.getTotalNumberOfShards();
        boolean boolean24 = indexSettings13.updateIndexMetaData(indexMetaData22);
        indexSettings13.warmerEnabled = true;
        boolean boolean27 = indexSettings13.isOnSharedFilesystem();
        boolean boolean28 = indexSettings13.defaultAllowUnmappedFields;
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting29 = indexSettings13.getINDEX_TTL_DISABLE_PURGE_SETTING();
        boolean boolean30 = indexSettings13.isOnSharedFilesystem();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(booleanSetting29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        int int21 = indexSettings13.getNumberOfShards();
        org.elasticsearch.common.settings.Settings settings22 = indexSettings13.settings;
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig23 = indexSettings13.getMergeSchedulerConfig();
        boolean boolean24 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting25 = indexSettings13.getMAX_REFRESH_LISTENERS_PER_SHARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting26 = indexSettings13.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting27 = indexSettings13.getQUERY_STRING_LENIENT_SETTING();
        indexSettings13.maxRescoreWindow = 0;
        indexSettings13.maxRefreshListeners = ' ';
        boolean boolean32 = indexSettings13.queryStringAllowLeadingWildcard;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(settings22);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intSetting25);
        org.junit.Assert.assertNotNull(booleanSetting26);
        org.junit.Assert.assertNotNull(booleanSetting27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.logging.ESLogger eSLogger15 = indexSettings13.logger;
        boolean boolean16 = indexSettings13.isIndexUsingShadowReplicas();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(eSLogger15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability16 = indexSettings13.getdurability();
        org.elasticsearch.common.unit.TimeValue timeValue17 = indexSettings13.getDEFAULT_GC_DELETES();
        org.apache.lucene.index.MergePolicy mergePolicy18 = indexSettings13.getMergePolicy();
        java.lang.String str19 = indexSettings13.nodeName;
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue20 = indexSettings13.flushThresholdSize;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + durability16 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability16.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(mergePolicy18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(byteSizeValue20);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder23 = builder3.put("index.blocks.read_only", false);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData24 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap25 = indexMetaData24.getAliases();
        int int26 = indexMetaData24.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData27 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet29 = indexMetaData27.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff30 = indexMetaData24.diff(indexMetaData27);
        long long31 = indexMetaData27.getCreationDate();
        org.elasticsearch.Version version32 = indexMetaData27.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings33 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap34 = settings33.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate35 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings36 = settings33.filter(strPredicate35);
        org.elasticsearch.index.IndexSettings indexSettings37 = new org.elasticsearch.index.IndexSettings(indexMetaData27, settings33);
        org.elasticsearch.common.logging.ESLogger eSLogger38 = indexSettings37.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue39 = indexSettings37.getsyncInterval();
        indexSettings37.setEnableWarmer(false);
        java.lang.String str42 = indexSettings37.defaultField;
        org.elasticsearch.common.settings.Settings settings43 = indexSettings37.settings;
        org.elasticsearch.common.unit.TimeValue timeValue44 = indexSettings37.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue45 = indexSettings37.getFlushThresholdSize();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData46 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        int int47 = indexMetaData46.getTotalNumberOfShards();
        boolean boolean48 = indexSettings37.updateIndexMetaData(indexMetaData46);
        indexSettings37.warmerEnabled = true;
        org.elasticsearch.common.settings.Settings settings51 = indexSettings37.settings;
        org.elasticsearch.common.settings.Settings.Builder builder52 = builder23.put(settings51);
        org.elasticsearch.common.settings.Settings.Builder builder54 = builder23.loadFromSource("index.auto_expand_replicas");
        java.util.concurrent.TimeUnit timeUnit57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder58 = builder54.put("index.version.created_string", (long) 10000, timeUnit57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(indexMetaData24);
        org.junit.Assert.assertNotNull(strImmutableOpenMap25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(indexMetaData27);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(indexMetaDataDiff30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(version32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strPredicate35);
        org.junit.Assert.assertNotNull(settings36);
        org.junit.Assert.assertNotNull(eSLogger38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_all" + "'", str42, "_all");
        org.junit.Assert.assertNotNull(settings43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(byteSizeValue45);
        org.junit.Assert.assertNotNull(indexMetaData46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(settings51);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.numberOfShards((int) (byte) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings17 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap18 = settings17.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate19 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings20 = settings17.filter(strPredicate19);
        org.elasticsearch.index.IndexSettings indexSettings21 = new org.elasticsearch.index.IndexSettings(indexMetaData11, settings17);
        java.lang.String str23 = settings17.get("index.version.created");
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = settings17.getAsStructuredMap();
        java.lang.String str26 = settings17.get("index.version.upgraded");
        java.util.Set<java.lang.String> strSet27 = settings17.names();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = builder4.putActiveAllocationIds(10, strSet27);
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder4.putAlias(aliasMetaData29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strPredicate19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap3 = indexMetaData0.getMappings();
        int int4 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap5 = indexMetaData0.getActiveAllocationIds();
        java.lang.String str6 = indexMetaData0.getIndexUUID();
        org.elasticsearch.index.Index index7 = indexMetaData0.getMergeSourceIndex();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strImmutableOpenMap3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_na_" + "'", str6, "_na_");
        org.junit.Assert.assertNull(index7);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting19 = indexSettings13.getQUERY_STRING_ALLOW_LEADING_WILDCARD();
        org.elasticsearch.index.translog.Translog.Durability durability20 = indexSettings13.getTranslogDurability();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(booleanSetting19);
        org.junit.Assert.assertTrue("'" + durability20 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability20.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.index.MergePolicyConfig mergePolicyConfig15 = indexSettings13.mergePolicyConfig;
        org.elasticsearch.Version version16 = indexSettings13.getIndexVersionCreated();
        org.elasticsearch.common.unit.TimeValue timeValue17 = indexSettings13.getRefreshInterval();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig18 = indexSettings13.mergeSchedulerConfig;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mergePolicyConfig15);
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig18);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting16 = indexSettings13.getINDEX_REFRESH_INTERVAL_SETTING();
        org.elasticsearch.Version version17 = indexSettings13.getversion();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue18 = indexSettings13.getFlushThresholdSize();
        int int19 = indexSettings13.maxRefreshListeners;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(timeValueSetting16);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertNotNull(byteSizeValue18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1000 + "'", int19 == 1000);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.unit.TimeValue timeValue17 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting18 = indexSettings13.getINDEX_REFRESH_INTERVAL_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue19 = indexSettings13.getFlushThresholdSize();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(timeValueSetting18);
        org.junit.Assert.assertNotNull(byteSizeValue19);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting16 = indexSettings13.getINDEX_TTL_DISABLE_PURGE_SETTING();
        java.lang.String str17 = indexSettings13.getNodeName();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting18 = indexSettings13.getINDEX_CHECK_ON_STARTUP();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig19 = indexSettings13.mergeSchedulerConfig;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap21 = indexMetaData20.getAliases();
        int int22 = indexMetaData20.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet25 = indexMetaData23.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff26 = indexMetaData20.diff(indexMetaData23);
        long long27 = indexMetaData23.getCreationDate();
        org.elasticsearch.Version version28 = indexMetaData23.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings29 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap30 = settings29.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate31 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings32 = settings29.filter(strPredicate31);
        org.elasticsearch.index.IndexSettings indexSettings33 = new org.elasticsearch.index.IndexSettings(indexMetaData23, settings29);
        org.elasticsearch.common.logging.ESLogger eSLogger34 = indexSettings33.getlogger();
        int int35 = indexSettings33.maxRescoreWindow;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings36 = indexSettings33.scopedSettings;
        org.elasticsearch.index.translog.Translog.Durability durability37 = indexSettings33.getdurability();
        indexSettings13.durability = durability37;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.ByteSizeValue> byteSizeValueSetting39 = indexSettings13.getINDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE_SETTING();
        boolean boolean40 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(booleanSetting16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strSetting18);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig19);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strImmutableOpenMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(indexMetaDataDiff26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(version28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strPredicate31);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertNotNull(eSLogger34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10000 + "'", int35 == 10000);
        org.junit.Assert.assertNotNull(indexScopedSettings36);
        org.junit.Assert.assertTrue("'" + durability37 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability37.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertNotNull(byteSizeValueSetting39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.shared_filesystem.recover_on_any_node");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        // The following exception was thrown during execution in test generation
        try {
            long long4 = builder2.primaryTerm((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: you must set the number of shards before setting/reading primary terms");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder2);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        int int4 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData8 = builder6.mapping("index.creation_date");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder6.removeAllAliases();
        boolean boolean10 = indexMetaData0.equals((java.lang.Object) builder6);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData12 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap13 = indexMetaData12.getAliases();
        int int14 = indexMetaData12.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData15 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet17 = indexMetaData15.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff18 = indexMetaData12.diff(indexMetaData15);
        long long19 = indexMetaData15.getCreationDate();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff20 = indexMetaData11.diff(indexMetaData15);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff21 = indexMetaData0.diff(indexMetaData11);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData11.getAliases();
        java.lang.Class<?> wildcardClass23 = strImmutableOpenMap22.getClass();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(mappingMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(indexMetaData12);
        org.junit.Assert.assertNotNull(strImmutableOpenMap13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(indexMetaData15);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(indexMetaDataDiff18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaDataDiff20);
        org.junit.Assert.assertNotNull(indexMetaDataDiff21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        java.lang.String str16 = indexSettings13.customDataPath();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        java.lang.String str31 = indexSettings30.getUUID();
        int int32 = indexSettings30.maxRefreshListeners;
        int int33 = indexSettings30.maxRescoreWindow;
        boolean boolean34 = indexSettings30.getqueryStringAnalyzeWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData35 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap37 = indexMetaData36.getAliases();
        int int38 = indexMetaData36.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData39 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet41 = indexMetaData39.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff42 = indexMetaData36.diff(indexMetaData39);
        long long43 = indexMetaData39.getCreationDate();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff44 = indexMetaData35.diff(indexMetaData39);
        boolean boolean45 = indexSettings30.updateIndexMetaData(indexMetaData39);
        boolean boolean46 = indexSettings13.updateIndexMetaData(indexMetaData39);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters47 = indexMetaData39.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap48 = indexMetaData39.getCustoms();
        long long49 = indexMetaData39.getCreationDate();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters50 = indexMetaData39.requireFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "_na_" + "'", str31, "_na_");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1000 + "'", int32 == 1000);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10000 + "'", int33 == 10000);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(indexMetaData35);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(strImmutableOpenMap37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(indexMetaData39);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(indexMetaDataDiff42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaDataDiff44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters47);
        org.junit.Assert.assertNotNull(strImmutableOpenMap48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNull(discoveryNodeFilters50);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = indexSettings13.getIndexMetaData();
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getNodeSettings();
        boolean boolean18 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings17);
        org.elasticsearch.common.settings.Settings settings20 = settings17.getAsSettings("index.blocks.read_only");
        org.elasticsearch.common.settings.Settings settings22 = settings20.getAsSettings("index.shadow_replicas");
        org.elasticsearch.common.settings.Settings settings23 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings22);
        java.lang.String str26 = settings22.get("index.number_of_replicas=0aindex.number_of_shards=1aindex.version.created=5000099a", "index.number_of_shards");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(settings22);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "index.number_of_shards" + "'", str26, "index.number_of_shards");
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap2 = indexMetaData1.getAliases();
        int int3 = indexMetaData1.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet6 = indexMetaData4.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff7 = indexMetaData1.diff(indexMetaData4);
        long long8 = indexMetaData4.getCreationDate();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff9 = indexMetaData0.diff(indexMetaData4);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData4);
        int int11 = builder10.numberOfReplicas();
        org.elasticsearch.common.settings.Settings.Builder builder12 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder15 = builder12.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder18 = builder15.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.common.settings.Settings.Builder builder21 = builder15.put("index.blocks.read", (int) '#');
        org.elasticsearch.common.settings.Settings settings22 = builder21.build();
        org.elasticsearch.common.settings.Settings.Builder builder25 = builder21.put("index.creation_date", (int) (short) 1);
        org.elasticsearch.common.settings.Settings.Builder builder28 = builder25.put("index.creation_date_string", false);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder10.settings(builder25);
        org.elasticsearch.common.settings.Settings.Builder builder31 = builder25.loadFromSource("index.data_path");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData33 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap34 = indexMetaData33.getAliases();
        int int35 = indexMetaData33.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet38 = indexMetaData36.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff39 = indexMetaData33.diff(indexMetaData36);
        long long40 = indexMetaData36.getCreationDate();
        org.elasticsearch.Version version41 = indexMetaData36.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings42 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap43 = settings42.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate44 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings45 = settings42.filter(strPredicate44);
        org.elasticsearch.index.IndexSettings indexSettings46 = new org.elasticsearch.index.IndexSettings(indexMetaData36, settings42);
        org.elasticsearch.common.logging.ESLogger eSLogger47 = indexSettings46.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue48 = indexSettings46.getsyncInterval();
        indexSettings46.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting51 = indexSettings46.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData52 = indexSettings46.getIndexMetaData();
        long long53 = indexMetaData52.getVersion();
        java.lang.String str54 = indexMetaData52.getIndexUUID();
        int int55 = indexMetaData52.getTotalNumberOfShards();
        java.lang.Class<?> wildcardClass56 = indexMetaData52.getClass();
        org.elasticsearch.common.settings.Settings.Builder builder57 = builder31.put("index.uuid", (java.lang.Class) wildcardClass56);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData59 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap60 = indexMetaData59.getAliases();
        int int61 = indexMetaData59.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData62 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet64 = indexMetaData62.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff65 = indexMetaData59.diff(indexMetaData62);
        long long66 = indexMetaData62.getCreationDate();
        org.elasticsearch.Version version67 = indexMetaData62.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings68 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap69 = settings68.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate70 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings71 = settings68.filter(strPredicate70);
        org.elasticsearch.index.IndexSettings indexSettings72 = new org.elasticsearch.index.IndexSettings(indexMetaData62, settings68);
        org.elasticsearch.common.logging.ESLogger eSLogger73 = indexSettings72.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue74 = indexSettings72.getsyncInterval();
        indexSettings72.setEnableWarmer(false);
        java.lang.String str77 = indexSettings72.defaultField;
        org.elasticsearch.common.settings.Settings settings78 = indexSettings72.settings;
        org.elasticsearch.common.unit.TimeValue timeValue79 = indexSettings72.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue80 = indexSettings72.getFlushThresholdSize();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData81 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        int int82 = indexMetaData81.getTotalNumberOfShards();
        boolean boolean83 = indexSettings72.updateIndexMetaData(indexMetaData81);
        indexSettings72.warmerEnabled = true;
        org.elasticsearch.Version version86 = indexSettings72.getIndexVersionCreated();
        org.elasticsearch.common.settings.Settings.Builder builder87 = builder31.put("1", version86);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(indexMetaDataDiff7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaDataDiff9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(settings22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(indexMetaData33);
        org.junit.Assert.assertNotNull(strImmutableOpenMap34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(indexMetaDataDiff39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(settings42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strPredicate44);
        org.junit.Assert.assertNotNull(settings45);
        org.junit.Assert.assertNotNull(eSLogger47);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(intSetting51);
        org.junit.Assert.assertNotNull(indexMetaData52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 1L + "'", long53 == 1L);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "_na_" + "'", str54, "_na_");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(indexMetaData59);
        org.junit.Assert.assertNotNull(strImmutableOpenMap60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(indexMetaData62);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNotNull(indexMetaDataDiff65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(version67);
        org.junit.Assert.assertNotNull(settings68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strPredicate70);
        org.junit.Assert.assertNotNull(settings71);
        org.junit.Assert.assertNotNull(eSLogger73);
        org.junit.Assert.assertNotNull(timeValue74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "_all" + "'", str77, "_all");
        org.junit.Assert.assertNotNull(settings78);
        org.junit.Assert.assertNotNull(timeValue79);
        org.junit.Assert.assertNotNull(byteSizeValue80);
        org.junit.Assert.assertNotNull(indexMetaData81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(version86);
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap27 = settings26.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate28 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings29 = settings26.filter(strPredicate28);
        org.elasticsearch.index.IndexSettings indexSettings30 = new org.elasticsearch.index.IndexSettings(indexMetaData20, settings26);
        boolean boolean31 = indexSettings30.warmerEnabled;
        indexSettings30.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue34 = indexSettings30.getTranslogSyncInterval();
        indexSettings13.refreshInterval = timeValue34;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap37 = indexMetaData36.getAliases();
        int int38 = indexMetaData36.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData39 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet41 = indexMetaData39.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff42 = indexMetaData36.diff(indexMetaData39);
        long long43 = indexMetaData39.getCreationDate();
        org.elasticsearch.Version version44 = indexMetaData39.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings45 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap46 = settings45.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate47 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings48 = settings45.filter(strPredicate47);
        org.elasticsearch.index.IndexSettings indexSettings49 = new org.elasticsearch.index.IndexSettings(indexMetaData39, settings45);
        org.elasticsearch.common.logging.ESLogger eSLogger50 = indexSettings49.getlogger();
        boolean boolean51 = indexSettings49.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue52 = indexSettings49.syncInterval;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData53 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap54 = indexMetaData53.getAliases();
        int int55 = indexMetaData53.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData56 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet58 = indexMetaData56.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff59 = indexMetaData53.diff(indexMetaData56);
        long long60 = indexMetaData56.getCreationDate();
        org.elasticsearch.Version version61 = indexMetaData56.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings62 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap63 = settings62.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate64 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings65 = settings62.filter(strPredicate64);
        org.elasticsearch.index.IndexSettings indexSettings66 = new org.elasticsearch.index.IndexSettings(indexMetaData56, settings62);
        boolean boolean67 = indexSettings66.warmerEnabled;
        indexSettings66.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue70 = indexSettings66.getTranslogSyncInterval();
        indexSettings49.refreshInterval = timeValue70;
        indexSettings13.refreshInterval = timeValue70;
        java.lang.String str73 = indexSettings13.getNodeName();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData74 = indexSettings13.indexMetaData;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strPredicate28);
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(strImmutableOpenMap37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(indexMetaData39);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(indexMetaDataDiff42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(version44);
        org.junit.Assert.assertNotNull(settings45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strPredicate47);
        org.junit.Assert.assertNotNull(settings48);
        org.junit.Assert.assertNotNull(eSLogger50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(indexMetaData53);
        org.junit.Assert.assertNotNull(strImmutableOpenMap54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(indexMetaData56);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNotNull(indexMetaDataDiff59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(version61);
        org.junit.Assert.assertNotNull(settings62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strPredicate64);
        org.junit.Assert.assertNotNull(settings65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(timeValue70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(indexMetaData74);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings19 = indexSettings13.scopedSettings;
        boolean boolean20 = indexSettings13.queryStringLenient;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings21 = indexSettings13.getScopedSettings();
        org.elasticsearch.common.settings.Settings.Builder builder22 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder25 = builder22.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder28 = builder25.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData30 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap31 = indexMetaData30.getAliases();
        int int32 = indexMetaData30.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData33 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet35 = indexMetaData33.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff36 = indexMetaData30.diff(indexMetaData33);
        long long37 = indexMetaData33.getCreationDate();
        org.elasticsearch.Version version38 = indexMetaData33.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder39 = builder25.put("index.creation_date_string", version38);
        org.elasticsearch.common.settings.Settings.Builder builder42 = builder25.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder45 = builder25.put("index.blocks.read_only", false);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData46 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap47 = indexMetaData46.getAliases();
        int int48 = indexMetaData46.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData49 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet51 = indexMetaData49.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff52 = indexMetaData46.diff(indexMetaData49);
        long long53 = indexMetaData49.getCreationDate();
        org.elasticsearch.Version version54 = indexMetaData49.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings55 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap56 = settings55.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate57 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings58 = settings55.filter(strPredicate57);
        org.elasticsearch.index.IndexSettings indexSettings59 = new org.elasticsearch.index.IndexSettings(indexMetaData49, settings55);
        org.elasticsearch.common.logging.ESLogger eSLogger60 = indexSettings59.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue61 = indexSettings59.getsyncInterval();
        indexSettings59.setEnableWarmer(false);
        java.lang.String str64 = indexSettings59.defaultField;
        org.elasticsearch.common.settings.Settings settings65 = indexSettings59.settings;
        org.elasticsearch.common.unit.TimeValue timeValue66 = indexSettings59.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue67 = indexSettings59.getFlushThresholdSize();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData68 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        int int69 = indexMetaData68.getTotalNumberOfShards();
        boolean boolean70 = indexSettings59.updateIndexMetaData(indexMetaData68);
        indexSettings59.warmerEnabled = true;
        org.elasticsearch.common.settings.Settings settings73 = indexSettings59.settings;
        org.elasticsearch.common.settings.Settings.Builder builder74 = builder45.put(settings73);
        org.elasticsearch.common.settings.Settings.Builder builder76 = builder45.loadFromSource("index.auto_expand_replicas");
        // The following exception was thrown during execution in test generation
        try {
            indexScopedSettings21.validate(builder76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: unknown setting []");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(indexScopedSettings19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(indexScopedSettings21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(indexMetaData30);
        org.junit.Assert.assertNotNull(strImmutableOpenMap31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(indexMetaData33);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(indexMetaDataDiff36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(version38);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(indexMetaData46);
        org.junit.Assert.assertNotNull(strImmutableOpenMap47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNotNull(indexMetaData49);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(indexMetaDataDiff52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(version54);
        org.junit.Assert.assertNotNull(settings55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strPredicate57);
        org.junit.Assert.assertNotNull(settings58);
        org.junit.Assert.assertNotNull(eSLogger60);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "_all" + "'", str64, "_all");
        org.junit.Assert.assertNotNull(settings65);
        org.junit.Assert.assertNotNull(timeValue66);
        org.junit.Assert.assertNotNull(byteSizeValue67);
        org.junit.Assert.assertNotNull(indexMetaData68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(settings73);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder76);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue16 = null;
        indexSettings13.flushThresholdSize = byteSizeValue16;
        indexSettings13.setMaxResultWindow(1);
        boolean boolean20 = indexSettings13.isShadowReplicaIndex();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        java.lang.String str14 = indexSettings13.getUUID();
        boolean boolean15 = indexSettings13.getqueryStringAnalyzeWildcard();
        java.lang.String str16 = indexSettings13.customDataPath();
        boolean boolean17 = indexSettings13.isQueryStringAllowLeadingWildcard();
        org.apache.lucene.index.MergePolicy mergePolicy18 = indexSettings13.getMergePolicy();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting19 = indexSettings13.getINDEX_CHECK_ON_STARTUP();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting20 = indexSettings13.getQUERY_STRING_ANALYZE_WILDCARD();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_na_" + "'", str14, "_na_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(mergePolicy18);
        org.junit.Assert.assertNotNull(strSetting19);
        org.junit.Assert.assertNotNull(booleanSetting20);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        boolean boolean19 = indexSettings13.matchesIndexName("index.version.upgraded_string");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = indexSettings13.indexMetaData;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters21 = indexMetaData20.requireFilters();
        int int22 = indexMetaData20.getTotalNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNull(discoveryNodeFilters21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        int int15 = indexSettings13.getNumberOfShards();
        int int16 = indexSettings13.getMaxResultWindow();
        boolean boolean17 = indexSettings13.isShadowReplicaIndex;
        java.util.function.Predicate<java.lang.String> strPredicate18 = indexSettings13.indexNameMatcher;
        int int19 = indexSettings13.getNumberOfReplicas();
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getDEFAULT_REFRESH_INTERVAL();
        java.lang.String str21 = indexSettings13.getDefaultField();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strPredicate18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_all" + "'", str21, "_all");
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.getMaxRescoreWindow();
        indexSettings13.warmerEnabled = false;
        org.elasticsearch.common.unit.TimeValue timeValue18 = indexSettings13.getDEFAULT_GC_DELETES();
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings19 = indexSettings13.getScopedSettings();
        java.lang.String str20 = indexSettings13.getDefaultField();
        org.elasticsearch.common.unit.TimeValue timeValue21 = indexSettings13.getDEFAULT_GC_DELETES();
        indexSettings13.gcDeletesInMillis = (-1L);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(indexScopedSettings19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_all" + "'", str20, "_all");
        org.junit.Assert.assertNotNull(timeValue21);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings19 = indexSettings13.scopedSettings;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting20 = indexSettings13.getINDEX_TRANSLOG_SYNC_INTERVAL_SETTING();
        indexSettings13.maxRefreshListeners = (byte) 0;
        java.lang.String str23 = indexSettings13.getNodeName();
        org.elasticsearch.common.unit.TimeValue timeValue24 = indexSettings13.getDEFAULT_GC_DELETES();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(indexScopedSettings19);
        org.junit.Assert.assertNotNull(timeValueSetting20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(timeValue24);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap3 = indexMetaData0.getMappings();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData5 = indexMetaData0.mappingOrDefault("index.blocks.write");
        java.util.Set<java.lang.String> strSet7 = null; // flaky: indexMetaData0.activeAllocationIds((int) 'a');
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData9 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet11 = indexMetaData9.activeAllocationIds(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData9);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData13 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet15 = indexMetaData13.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap16 = indexMetaData13.getMappings();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData18 = indexMetaData13.mappingOrDefault("index.blocks.write");
        java.util.Set<java.lang.String> strSet20 = null; // flaky: indexMetaData13.activeAllocationIds((int) (byte) -1);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff21 = indexMetaData9.diff(indexMetaData13);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff22 = indexMetaData0.diff(indexMetaData13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.settings.Settings settings24 = indexMetaData0.getSettings();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertNotNull(strImmutableOpenMap3);
        org.junit.Assert.assertNull(mappingMetaData5);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertNotNull(indexMetaData9);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(indexMetaData13);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strImmutableOpenMap16);
        org.junit.Assert.assertNull(mappingMetaData18);
        org.junit.Assert.assertNull(strSet20);
        org.junit.Assert.assertNotNull(indexMetaDataDiff21);
        org.junit.Assert.assertNotNull(indexMetaDataDiff22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(settings24);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue16 = indexSettings13.syncInterval;
        org.elasticsearch.common.settings.Settings settings17 = indexSettings13.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData18.getAliases();
        int int20 = indexMetaData18.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet23 = indexMetaData21.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff24 = indexMetaData18.diff(indexMetaData21);
        long long25 = indexMetaData21.getCreationDate();
        org.apache.lucene.util.Version version26 = indexMetaData21.getMinimumCompatibleVersion();
        indexSettings13.indexMetaData = indexMetaData21;
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting28 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        org.elasticsearch.index.translog.Translog.Durability durability29 = indexSettings13.getTranslogDurability();
        boolean boolean30 = indexSettings13.getdefaultAllowUnmappedFields();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData31 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap32 = indexMetaData31.getAliases();
        int int33 = indexMetaData31.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData34 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet36 = indexMetaData34.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff37 = indexMetaData31.diff(indexMetaData34);
        long long38 = indexMetaData34.getCreationDate();
        org.elasticsearch.Version version39 = indexMetaData34.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings40 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap41 = settings40.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate42 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings43 = settings40.filter(strPredicate42);
        org.elasticsearch.index.IndexSettings indexSettings44 = new org.elasticsearch.index.IndexSettings(indexMetaData34, settings40);
        org.elasticsearch.common.logging.ESLogger eSLogger45 = indexSettings44.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue46 = indexSettings44.getsyncInterval();
        indexSettings44.setEnableWarmer(false);
        java.lang.String str49 = indexSettings44.defaultField;
        indexSettings44.setwarmerEnabled(true);
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting52 = indexSettings44.getQUERY_STRING_LENIENT_SETTING();
        java.lang.Boolean boolean53 = indexSettings13.getValue(booleanSetting52);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(settings17);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(indexMetaDataDiff24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNull(version26);
        org.junit.Assert.assertNotNull(timeValueSetting28);
        org.junit.Assert.assertTrue("'" + durability29 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability29.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(indexMetaData31);
        org.junit.Assert.assertNotNull(strImmutableOpenMap32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(indexMetaData34);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(indexMetaDataDiff37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(version39);
        org.junit.Assert.assertNotNull(settings40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strPredicate42);
        org.junit.Assert.assertNotNull(settings43);
        org.junit.Assert.assertNotNull(eSLogger45);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "_all" + "'", str49, "_all");
        org.junit.Assert.assertNotNull(booleanSetting52);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting15 = indexSettings13.getINDEX_GC_DELETES_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap17 = indexMetaData16.getAliases();
        int int18 = indexMetaData16.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet21 = indexMetaData19.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff22 = indexMetaData16.diff(indexMetaData19);
        long long23 = indexMetaData19.getCreationDate();
        org.elasticsearch.Version version24 = indexMetaData19.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings25 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap26 = settings25.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate27 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings28 = settings25.filter(strPredicate27);
        org.elasticsearch.index.IndexSettings indexSettings29 = new org.elasticsearch.index.IndexSettings(indexMetaData19, settings25);
        java.lang.String str30 = indexSettings29.getUUID();
        boolean boolean31 = indexSettings29.getqueryStringAnalyzeWildcard();
        java.lang.String str32 = indexSettings29.customDataPath();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData33 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap34 = indexMetaData33.getAliases();
        int int35 = indexMetaData33.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet38 = indexMetaData36.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff39 = indexMetaData33.diff(indexMetaData36);
        long long40 = indexMetaData36.getCreationDate();
        org.elasticsearch.Version version41 = indexMetaData36.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings42 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap43 = settings42.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate44 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings45 = settings42.filter(strPredicate44);
        org.elasticsearch.index.IndexSettings indexSettings46 = new org.elasticsearch.index.IndexSettings(indexMetaData36, settings42);
        java.lang.String str47 = indexSettings46.getUUID();
        boolean boolean48 = indexSettings46.getqueryStringAllowLeadingWildcard();
        org.elasticsearch.index.translog.Translog.Durability durability49 = indexSettings46.getTranslogDurability();
        indexSettings29.durability = durability49;
        indexSettings13.durability = durability49;
        boolean boolean52 = indexSettings13.getqueryStringLenient();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(timeValueSetting15);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(strImmutableOpenMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(indexMetaDataDiff22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(settings25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strPredicate27);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "_na_" + "'", str30, "_na_");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(indexMetaData33);
        org.junit.Assert.assertNotNull(strImmutableOpenMap34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(indexMetaDataDiff39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(settings42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strPredicate44);
        org.junit.Assert.assertNotNull(settings45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "_na_" + "'", str47, "_na_");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + durability49 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability49.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet2 = indexMetaData0.activeAllocationIds(0);
        int int3 = indexMetaData0.getRoutingNumShards();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData5 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap6 = indexMetaData5.getAliases();
        int int7 = indexMetaData5.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet10 = indexMetaData8.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff11 = indexMetaData5.diff(indexMetaData8);
        long long12 = indexMetaData8.getCreationDate();
        org.apache.lucene.util.Version version13 = indexMetaData8.getMinimumCompatibleVersion();
        int int14 = indexMetaData8.getNumberOfShards();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff15 = indexMetaData0.diff(indexMetaData8);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters16 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.common.settings.Settings.Builder builder17 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder17.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder23 = builder20.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap26 = indexMetaData25.getAliases();
        int int27 = indexMetaData25.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData28 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet30 = indexMetaData28.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff31 = indexMetaData25.diff(indexMetaData28);
        long long32 = indexMetaData28.getCreationDate();
        org.elasticsearch.Version version33 = indexMetaData28.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder34 = builder20.put("index.creation_date_string", version33);
        org.elasticsearch.common.settings.Settings.Builder builder37 = builder20.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder39 = builder37.putNull("index.version.upgraded");
        org.elasticsearch.common.settings.Settings settings40 = builder37.build();
        org.elasticsearch.index.IndexSettings indexSettings41 = new org.elasticsearch.index.IndexSettings(indexMetaData0, settings40);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(indexMetaData5);
        org.junit.Assert.assertNotNull(strImmutableOpenMap6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(indexMetaDataDiff11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNull(version13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(indexMetaDataDiff15);
        org.junit.Assert.assertNull(discoveryNodeFilters16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strImmutableOpenMap26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(indexMetaData28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(indexMetaDataDiff31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(settings40);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        int int15 = indexSettings13.getMaxRescoreWindow();
        indexSettings13.gcDeletesInMillis = 1;
        long long18 = indexSettings13.getGcDeletesInMillis();
        boolean boolean19 = indexSettings13.getqueryStringLenient();
        int int20 = indexSettings13.maxRefreshListeners;
        boolean boolean21 = indexSettings13.getdefaultAllowUnmappedFields();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1000 + "'", int20 == 1000);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        java.lang.String str18 = indexSettings13.defaultField;
        org.elasticsearch.common.settings.Settings settings19 = indexSettings13.settings;
        org.elasticsearch.common.unit.TimeValue timeValue20 = indexSettings13.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue21 = indexSettings13.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate22 = indexSettings13.indexNameMatcher;
        org.elasticsearch.Version version23 = indexSettings13.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting24 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap26 = indexMetaData25.getAliases();
        int int27 = indexMetaData25.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData28 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet30 = indexMetaData28.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff31 = indexMetaData25.diff(indexMetaData28);
        long long32 = indexMetaData28.getCreationDate();
        org.elasticsearch.Version version33 = indexMetaData28.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings34 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap35 = settings34.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate36 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings37 = settings34.filter(strPredicate36);
        org.elasticsearch.index.IndexSettings indexSettings38 = new org.elasticsearch.index.IndexSettings(indexMetaData28, settings34);
        org.elasticsearch.common.logging.ESLogger eSLogger39 = indexSettings38.getlogger();
        boolean boolean40 = indexSettings38.isWarmerEnabled();
        indexSettings38.maxRescoreWindow = 1;
        boolean boolean43 = indexSettings38.hasCustomDataPath();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData44 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap45 = indexMetaData44.getAliases();
        int int46 = indexMetaData44.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData47 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet49 = indexMetaData47.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff50 = indexMetaData44.diff(indexMetaData47);
        long long51 = indexMetaData47.getCreationDate();
        org.elasticsearch.Version version52 = indexMetaData47.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings53 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap54 = settings53.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate55 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings56 = settings53.filter(strPredicate55);
        org.elasticsearch.index.IndexSettings indexSettings57 = new org.elasticsearch.index.IndexSettings(indexMetaData47, settings53);
        org.elasticsearch.common.logging.ESLogger eSLogger58 = indexSettings57.getlogger();
        boolean boolean59 = indexSettings57.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue60 = indexSettings57.syncInterval;
        indexSettings38.setRefreshInterval(timeValue60);
        indexSettings13.setGCDeletes(timeValue60);
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue63 = indexSettings13.getFlushThresholdSize();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting64 = indexSettings13.getDEFAULT_FIELD_SETTING();
        int int65 = indexSettings13.numberOfShards;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_all" + "'", str18, "_all");
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(byteSizeValue21);
        org.junit.Assert.assertNotNull(strPredicate22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertNotNull(strSetting24);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(strImmutableOpenMap26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(indexMetaData28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(indexMetaDataDiff31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strPredicate36);
        org.junit.Assert.assertNotNull(settings37);
        org.junit.Assert.assertNotNull(eSLogger39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(indexMetaData44);
        org.junit.Assert.assertNotNull(strImmutableOpenMap45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(indexMetaData47);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(indexMetaDataDiff50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(version52);
        org.junit.Assert.assertNotNull(settings53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strPredicate55);
        org.junit.Assert.assertNotNull(settings56);
        org.junit.Assert.assertNotNull(eSLogger58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(byteSizeValue63);
        org.junit.Assert.assertNotNull(strSetting64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder22 = builder20.normalizePrefix("index.blocks.read");
        org.elasticsearch.common.settings.Settings.Builder builder25 = builder22.put("index.", 0.0d);
        java.lang.String str27 = builder25.get("index.number_of_replicas=0aindex.number_of_shards=1aindex.version.created=5000099a");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.apache.lucene.util.Version version8 = indexMetaData3.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData3);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap11 = indexMetaData10.getAliases();
        int int12 = indexMetaData10.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData13 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet15 = indexMetaData13.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff16 = indexMetaData10.diff(indexMetaData13);
        long long17 = indexMetaData13.getCreationDate();
        org.elasticsearch.Version version18 = indexMetaData13.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings19 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap20 = settings19.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate21 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings22 = settings19.filter(strPredicate21);
        org.elasticsearch.index.IndexSettings indexSettings23 = new org.elasticsearch.index.IndexSettings(indexMetaData13, settings19);
        org.elasticsearch.common.logging.ESLogger eSLogger24 = indexSettings23.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue25 = indexSettings23.getsyncInterval();
        indexSettings23.setEnableWarmer(false);
        java.lang.String str28 = indexSettings23.defaultField;
        org.elasticsearch.common.settings.Settings settings29 = indexSettings23.settings;
        org.elasticsearch.common.unit.TimeValue timeValue30 = indexSettings23.getTranslogSyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue31 = indexSettings23.getFlushThresholdSize();
        java.util.function.Predicate<java.lang.String> strPredicate32 = indexSettings23.indexNameMatcher;
        org.elasticsearch.Version version33 = indexSettings23.version;
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting34 = indexSettings23.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue35 = indexSettings23.getFlushThresholdSize();
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting36 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_BLOCKS_READ_SETTING;
        java.lang.Boolean boolean37 = indexSettings23.getValue(booleanSetting36);
        boolean boolean38 = indexMetaData3.equals((java.lang.Object) indexSettings23);
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings39 = indexSettings23.scopedSettings;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData40 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap41 = indexMetaData40.getAliases();
        int int42 = indexMetaData40.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData43 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet45 = indexMetaData43.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff46 = indexMetaData40.diff(indexMetaData43);
        long long47 = indexMetaData43.getCreationDate();
        org.elasticsearch.Version version48 = indexMetaData43.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings49 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap50 = settings49.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate51 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings52 = settings49.filter(strPredicate51);
        org.elasticsearch.index.IndexSettings indexSettings53 = new org.elasticsearch.index.IndexSettings(indexMetaData43, settings49);
        org.elasticsearch.common.logging.ESLogger eSLogger54 = indexSettings53.getlogger();
        boolean boolean55 = indexSettings53.isWarmerEnabled();
        org.elasticsearch.common.unit.TimeValue timeValue56 = indexSettings53.syncInterval;
        int int57 = indexSettings53.getMaxResultWindow();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData58 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap59 = indexMetaData58.getAliases();
        int int60 = indexMetaData58.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData61 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet63 = indexMetaData61.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff64 = indexMetaData58.diff(indexMetaData61);
        long long65 = indexMetaData61.getCreationDate();
        org.elasticsearch.Version version66 = indexMetaData61.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings67 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap68 = settings67.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate69 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings70 = settings67.filter(strPredicate69);
        org.elasticsearch.index.IndexSettings indexSettings71 = new org.elasticsearch.index.IndexSettings(indexMetaData61, settings67);
        boolean boolean72 = indexSettings71.warmerEnabled;
        indexSettings71.gcDeletesInMillis = (byte) 1;
        org.elasticsearch.common.unit.TimeValue timeValue75 = indexSettings71.getTranslogSyncInterval();
        indexSettings53.refreshInterval = timeValue75;
        org.elasticsearch.common.unit.TimeValue timeValue77 = indexSettings53.getsyncInterval();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue78 = indexSettings53.getFlushThresholdSize();
        int int79 = indexSettings53.maxRescoreWindow;
        boolean boolean80 = indexSettings53.isShadowReplicaIndex;
        org.elasticsearch.common.settings.Settings settings81 = indexSettings53.nodeSettings;
        org.elasticsearch.common.settings.Settings settings82 = indexScopedSettings39.applySettings(settings81);
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap85 = settings81.getGroups("index.blocks.read_only", false);
        java.lang.String str87 = settings81.get("false");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNull(version8);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(strImmutableOpenMap11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(indexMetaData13);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(indexMetaDataDiff16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(version18);
        org.junit.Assert.assertNotNull(settings19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strPredicate21);
        org.junit.Assert.assertNotNull(settings22);
        org.junit.Assert.assertNotNull(eSLogger24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_all" + "'", str28, "_all");
        org.junit.Assert.assertNotNull(settings29);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(byteSizeValue31);
        org.junit.Assert.assertNotNull(strPredicate32);
        org.junit.Assert.assertNotNull(version33);
        org.junit.Assert.assertNotNull(strSetting34);
        org.junit.Assert.assertNotNull(byteSizeValue35);
        org.junit.Assert.assertNotNull(booleanSetting36);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(indexScopedSettings39);
        org.junit.Assert.assertNotNull(indexMetaData40);
        org.junit.Assert.assertNotNull(strImmutableOpenMap41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(indexMetaData43);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(indexMetaDataDiff46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(settings49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strPredicate51);
        org.junit.Assert.assertNotNull(settings52);
        org.junit.Assert.assertNotNull(eSLogger54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(timeValue56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10000 + "'", int57 == 10000);
        org.junit.Assert.assertNotNull(indexMetaData58);
        org.junit.Assert.assertNotNull(strImmutableOpenMap59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(indexMetaData61);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(indexMetaDataDiff64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(version66);
        org.junit.Assert.assertNotNull(settings67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strPredicate69);
        org.junit.Assert.assertNotNull(settings70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(timeValue75);
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertNotNull(byteSizeValue78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10000 + "'", int79 == 10000);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(settings81);
        org.junit.Assert.assertNotNull(settings82);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder3 = builder0.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder6 = builder3.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap9 = indexMetaData8.getAliases();
        int int10 = indexMetaData8.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet13 = indexMetaData11.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData8.diff(indexMetaData11);
        long long15 = indexMetaData11.getCreationDate();
        org.elasticsearch.Version version16 = indexMetaData11.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder17 = builder3.put("index.creation_date_string", version16);
        org.elasticsearch.common.settings.Settings.Builder builder20 = builder3.put("index.version.created", "index.version.created_string");
        java.util.concurrent.TimeUnit timeUnit23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.settings.Settings.Builder builder24 = builder3.put("index.blocks.read", 100L, timeUnit23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(version16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder20);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.unit.TimeValue timeValue15 = indexSettings13.getsyncInterval();
        indexSettings13.setEnableWarmer(false);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting18 = indexSettings13.getMAX_RESULT_WINDOW_SETTING();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = indexSettings13.getIndexMetaData();
        java.lang.String str20 = indexMetaData19.getIndexUUID();
        int int21 = indexMetaData19.getNumberOfReplicas();
        int int22 = indexMetaData19.getNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData19);
        // The following exception was thrown during execution in test generation
        try {
            int int25 = org.elasticsearch.cluster.metadata.IndexMetaData.getRoutingFactor(indexMetaData19, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: / by zero");
        } catch (java.lang.ArithmeticException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(intSetting18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_na_" + "'", str20, "_na_");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        org.elasticsearch.common.settings.Setting<java.lang.String> strSetting15 = indexSettings13.getDEFAULT_FIELD_SETTING();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting16 = indexSettings13.getINDEX_REFRESH_INTERVAL_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertNotNull(strSetting15);
        org.junit.Assert.assertNotNull(timeValueSetting16);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig15 = indexSettings13.getMergeSchedulerConfig();
        boolean boolean16 = indexSettings13.queryStringAnalyzeWildcard;
        indexSettings13.TTLPurgeDisabled = false;
        boolean boolean19 = indexSettings13.getdefaultAllowUnmappedFields();
        boolean boolean20 = indexSettings13.isQueryStringAnalyzeWildcard();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        boolean boolean1 = org.elasticsearch.common.settings.AbstractScopedSettings.isValidKey("primary_terms");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.elasticsearch.common.settings.Settings.Builder builder0 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder2 = builder0.normalizePrefix("index.version.created");
        org.elasticsearch.common.settings.Settings.Builder builder5 = builder2.put("_all", (long) 1);
        org.elasticsearch.common.settings.Settings.Builder builder8 = builder2.put("index.creation_date", (double) (-1.0f));
        org.elasticsearch.common.settings.Settings.Builder builder9 = org.elasticsearch.common.settings.Settings.builder();
        org.elasticsearch.common.settings.Settings.Builder builder12 = builder9.put("", (float) (-1));
        org.elasticsearch.common.settings.Settings.Builder builder15 = builder12.put("index.auto_expand_replicas", 100.0f);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap18 = indexMetaData17.getAliases();
        int int19 = indexMetaData17.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet22 = indexMetaData20.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData17.diff(indexMetaData20);
        long long24 = indexMetaData20.getCreationDate();
        org.elasticsearch.Version version25 = indexMetaData20.getCreationVersion();
        org.elasticsearch.common.settings.Settings.Builder builder26 = builder12.put("index.creation_date_string", version25);
        org.elasticsearch.common.settings.Settings.Builder builder29 = builder12.put("index.", 10.0f);
        org.elasticsearch.common.settings.Settings.Builder builder31 = builder29.normalizePrefix("index.blocks.read");
        java.util.Map<java.lang.String, java.lang.String> strMap32 = builder31.internalMap();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData33 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap34 = indexMetaData33.getAliases();
        int int35 = indexMetaData33.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData36 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet38 = indexMetaData36.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff39 = indexMetaData33.diff(indexMetaData36);
        long long40 = indexMetaData36.getCreationDate();
        org.elasticsearch.Version version41 = indexMetaData36.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings42 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap43 = settings42.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate44 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings45 = settings42.filter(strPredicate44);
        org.elasticsearch.index.IndexSettings indexSettings46 = new org.elasticsearch.index.IndexSettings(indexMetaData36, settings42);
        boolean boolean47 = indexSettings46.getqueryStringLenient();
        int int48 = indexSettings46.getNumberOfShards();
        boolean boolean49 = indexSettings46.isQueryStringLenient();
        java.util.function.Predicate<java.lang.String> strPredicate50 = indexSettings46.getindexNameMatcher();
        java.util.function.Function<java.lang.String, java.lang.String> strFunction51 = null;
        org.elasticsearch.common.settings.Settings.Builder builder52 = builder8.putProperties(strMap32, strPredicate50, strFunction51);
        org.elasticsearch.common.settings.Settings.Builder builder54 = builder52.normalizePrefix("");
        org.elasticsearch.common.settings.Settings.Builder builder57 = builder54.put("active_allocations", (float) (byte) -1);
        org.elasticsearch.common.settings.Settings.Builder builder60 = builder54.put("index.blocks.read_only", "false");
        org.junit.Assert.assertNotNull(builder0);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(strImmutableOpenMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(version25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(indexMetaData33);
        org.junit.Assert.assertNotNull(strImmutableOpenMap34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(indexMetaData36);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(indexMetaDataDiff39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(version41);
        org.junit.Assert.assertNotNull(settings42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strPredicate44);
        org.junit.Assert.assertNotNull(settings45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strPredicate50);
        org.junit.Assert.assertNotNull(builder52);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder60);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        boolean boolean14 = indexSettings13.getqueryStringLenient();
        org.elasticsearch.index.MergeSchedulerConfig mergeSchedulerConfig15 = indexSettings13.getMergeSchedulerConfig();
        boolean boolean16 = indexSettings13.queryStringAnalyzeWildcard;
        boolean boolean17 = indexSettings13.isIndexUsingShadowReplicas();
        org.elasticsearch.common.unit.ByteSizeValue byteSizeValue18 = indexSettings13.flushThresholdSize;
        java.util.function.Predicate<java.lang.String> strPredicate19 = indexSettings13.indexNameMatcher;
        indexSettings13.maxResultWindow = (short) 10;
        int int22 = indexSettings13.getNumberOfShards();
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.unit.TimeValue> timeValueSetting23 = indexSettings13.getINDEX_TRANSLOG_SYNC_INTERVAL_SETTING();
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting24 = indexSettings13.getMAX_RESCORE_WINDOW_SETTING();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mergeSchedulerConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteSizeValue18);
        org.junit.Assert.assertNotNull(strPredicate19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(timeValueSetting23);
        org.junit.Assert.assertNotNull(intSetting24);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap1 = indexMetaData0.getAliases();
        int int2 = indexMetaData0.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet5 = indexMetaData3.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff6 = indexMetaData0.diff(indexMetaData3);
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.Version version8 = indexMetaData3.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings9.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate11 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings12 = settings9.filter(strPredicate11);
        org.elasticsearch.index.IndexSettings indexSettings13 = new org.elasticsearch.index.IndexSettings(indexMetaData3, settings9);
        org.elasticsearch.common.logging.ESLogger eSLogger14 = indexSettings13.getlogger();
        boolean boolean15 = indexSettings13.queryStringAllowLeadingWildcard;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap17 = indexMetaData16.getAliases();
        int int18 = indexMetaData16.getRoutingFactor();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        java.util.Set<java.lang.String> strSet21 = indexMetaData19.activeAllocationIds(0);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff22 = indexMetaData16.diff(indexMetaData19);
        long long23 = indexMetaData19.getCreationDate();
        org.elasticsearch.Version version24 = indexMetaData19.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings25 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap26 = settings25.getAsGroups();
        java.util.function.Predicate<java.lang.String> strPredicate27 = org.elasticsearch.common.settings.IndexScopedSettings.INDEX_SETTINGS_KEY_PREDICATE;
        org.elasticsearch.common.settings.Settings settings28 = settings25.filter(strPredicate27);
        org.elasticsearch.index.IndexSettings indexSettings29 = new org.elasticsearch.index.IndexSettings(indexMetaData19, settings25);
        org.elasticsearch.common.logging.ESLogger eSLogger30 = indexSettings29.getlogger();
        int int31 = indexSettings29.maxRescoreWindow;
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher32 = indexSettings29.getParseFieldMatcher();
        org.elasticsearch.index.translog.Translog.Durability durability33 = indexSettings29.getTranslogDurability();
        indexSettings13.durability = durability33;
        boolean boolean35 = indexSettings13.isWarmerEnabled();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strPredicate11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(eSLogger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(strImmutableOpenMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(indexMetaDataDiff22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(version24);
        org.junit.Assert.assertNotNull(settings25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strPredicate27);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertNotNull(eSLogger30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10000 + "'", int31 == 10000);
        org.junit.Assert.assertNotNull(parseFieldMatcher32);
        org.junit.Assert.assertTrue("'" + durability33 + "' != '" + org.elasticsearch.index.translog.Translog.Durability.REQUEST + "'", durability33.equals(org.elasticsearch.index.translog.Translog.Durability.REQUEST));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.version.created_string");
        org.junit.Assert.assertNotNull(builder1);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings0 = org.elasticsearch.common.settings.IndexScopedSettings.DEFAULT_SCOPED_SETTINGS;
        org.elasticsearch.common.settings.Setting.Property property1 = indexScopedSettings0.getScope();
        java.util.function.Predicate<java.lang.String> strPredicate2 = indexScopedSettings0.getINDEX_SETTINGS_KEY_PREDICATE();
        org.elasticsearch.common.settings.Settings settings3 = org.elasticsearch.common.settings.Settings.Builder.EMPTY_SETTINGS;
        java.util.Map<java.lang.String, java.lang.String> strMap4 = settings3.getAsMap();
        java.util.Set<java.lang.String> strSet5 = settings3.names();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap7 = indexMetaData6.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state8 = indexMetaData6.getState();
        org.elasticsearch.common.settings.IndexScopedSettings indexScopedSettings9 = indexScopedSettings0.copy(settings3, indexMetaData6);
        java.util.Map<java.lang.String, org.elasticsearch.common.settings.Settings> strMap10 = settings3.getAsGroups();
        org.junit.Assert.assertNotNull(indexScopedSettings0);
        org.junit.Assert.assertTrue("'" + property1 + "' != '" + org.elasticsearch.common.settings.Setting.Property.IndexScope + "'", property1.equals(org.elasticsearch.common.settings.Setting.Property.IndexScope));
        org.junit.Assert.assertNotNull(strPredicate2);
        org.junit.Assert.assertNotNull(settings3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(strImmutableOpenMap7);
        org.junit.Assert.assertTrue("'" + state8 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state8.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(indexScopedSettings9);
        org.junit.Assert.assertNotNull(strMap10);
    }
}
