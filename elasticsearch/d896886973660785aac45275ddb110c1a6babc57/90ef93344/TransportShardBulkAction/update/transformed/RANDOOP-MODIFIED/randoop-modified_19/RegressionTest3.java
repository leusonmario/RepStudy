import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.common.settings.Settings settings6 = indexMetaData0.getSettings();
        boolean boolean7 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings6);
        boolean boolean8 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings6);
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings6);
        org.elasticsearch.transport.TransportService transportService10 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService11 = null;
        org.elasticsearch.indices.IndicesService indicesService12 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool13 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction14 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction15 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper16 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters17 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction19 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings6, transportService10, clusterService11, indicesService12, threadPool13, shardStateAction14, mappingUpdatedAction15, updateHelper16, actionFilters17, indexNameExpressionResolver18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(settings6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(settings9);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest0 = null;
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple7 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.ActionRequest actionRequest10 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.ActionRequest actionRequest16 = null; // flaky: bulkItemRequest5.request();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, (org.elasticsearch.action.ActionRequest) bulkShardRequest22, false, throwable25, writeResult26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str32 = bulkShardRequest31.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple33 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest0, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        org.junit.Assert.assertNull(actionRequest16);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable4, "");
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure6, (org.elasticsearch.transport.TransportMessage) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.action.ActionRequest actionRequest19 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest19);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.ActionRequest actionRequest26 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest26);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        boolean boolean30 = bulkShardRequest28.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int33 = builder32.numberOfShards();
        java.lang.String[] strArray37 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder32.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet38);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest28, strSet38);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple42 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        org.elasticsearch.action.ActionRequest actionRequest44 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest44);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple47 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest45, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest46);
        boolean boolean48 = bulkShardRequest46.getShouldPersistResult();
        bulkShardRequest46.primaryTerm(100L);
        long long51 = bulkShardRequest46.seqNo();
        long long52 = bulkShardRequest46.seqNo();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple53 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest46);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult54 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult55 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest46, writeResult54);
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData2 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData2);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap4 = indexMetaData2.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData2.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData2);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff7 = indexMetaData0.diff(indexMetaData2);
        long long8 = indexMetaData2.getVersion();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData10 = indexMetaData2.mappingOrDefault("hi!");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(indexMetaData2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap4);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertNull(mappingMetaData10);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.tasks.TaskId taskId14 = null;
        bulkShardRequest7.setParentTask(taskId14);
        org.elasticsearch.index.shard.ShardId shardId16 = bulkShardRequest7.shardId();
        bulkShardRequest7.seqNo((long) 0);
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable20, writeResult21);
        org.elasticsearch.action.ActionRequest actionRequest23 = updateResult22.actionRequest;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, actionRequest23, writeResult24);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = updateResult25.writeResult;
        org.elasticsearch.action.ActionRequest actionRequest27 = updateResult25.actionRequest;
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(actionRequest23);
        org.junit.Assert.assertNull(writeResult26);
        org.junit.Assert.assertNotNull(actionRequest27);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads(10L);
        boolean boolean25 = versionType12.validateVersionForWrites((long) 1);
        org.elasticsearch.index.VersionType versionType26 = versionType12.versionTypeForReplicationAndRecovery();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput27 = null;
        // The following exception was thrown during execution in test generation
        try {
            versionType12.writeTo(streamOutput27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(versionType26);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters29 = indexMetaData0.getInitialRecoveryFilters();
        long long31 = indexMetaData0.primaryTerm(0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters32 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder33.numberOfShards(100);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder33.putMapping("index.auto_expand_replicas", "index.version.minimum_compatible");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNull(discoveryNodeFilters32);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = null;
        java.lang.Throwable throwable7 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting5, "", throwable7, "");
        org.elasticsearch.action.update.UpdateHelper.Result result10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result10, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable13, writeResult14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure9, (org.elasticsearch.transport.TransportMessage) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = bulkShardRequest11.index("hi!");
        bulkShardRequest11.primaryTerm(100L);
        org.elasticsearch.index.shard.ShardId shardId21 = bulkShardRequest11.shardId();
        boolean boolean22 = bulkShardRequest11.getShouldPersistResult();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting28 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.action.update.UpdateHelper.Result result34 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult40 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult41 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result34, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, false, throwable39, writeResult40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple42 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        org.elasticsearch.tasks.TaskId taskId43 = null;
        bulkShardRequest36.setParentTask(taskId43);
        org.elasticsearch.index.shard.ShardId shardId45 = bulkShardRequest36.shardId();
        bulkShardRequest36.seqNo((long) 0);
        java.lang.Throwable throwable49 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult50 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult51 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, false, throwable49, writeResult50);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException52 = bulkShardRequest36.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting28, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException52, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "update", (java.lang.Throwable) actionRequestValidationException52, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting24, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException52, "index.version.minimum_compatible");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, (java.lang.Throwable) actionRequestValidationException52, writeResult59);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure62 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException52, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure64 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [2] is higher than the one provided [-1]", (java.lang.Throwable) actionRequestValidationException52, "index.blocks.read_only");
        org.junit.Assert.assertNotNull(bulkShardRequest18);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(actionRequestValidationException52);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.tasks.TaskId taskId12 = null;
        bulkShardRequest5.setParentTask(taskId12);
        org.elasticsearch.index.shard.ShardId shardId14 = bulkShardRequest5.shardId();
        bulkShardRequest5.seqNo((long) 0);
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = bulkShardRequest5.indicesOptions();
        bulkShardRequest5.primaryTerm(0L);
        java.lang.String str20 = bulkShardRequest5.index();
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.index("active_allocations");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData4);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap6 = indexMetaData4.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet7 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData4, indexShardStateSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData4);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData10);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap12 = indexMetaData10.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet13 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData10, indexShardStateSet13);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters15 = indexMetaData10.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData10);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff17 = indexMetaData4.diff(indexMetaData10);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder20.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder21.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int27 = builder26.numberOfShards();
        java.lang.String[] strArray31 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = builder26.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet32);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder21.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet32);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple36 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData18, (java.lang.Iterable<java.lang.String>) strSet32);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap37 = indexMetaData18.getAliases();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff38 = indexMetaData4.diff(indexMetaData18);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state39 = indexMetaData18.getState();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting40 = null;
        java.lang.Throwable throwable42 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting40, "", throwable42, "");
        org.elasticsearch.action.update.UpdateHelper.Result result45 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result45, (org.elasticsearch.action.ActionRequest) bulkShardRequest46, false, throwable48, writeResult49);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple51 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure44, (org.elasticsearch.transport.TransportMessage) bulkShardRequest46);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest53 = bulkShardRequest46.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue54 = bulkShardRequest53.timeout();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData.State, org.elasticsearch.common.unit.TimeValue> stateTuple55 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData.State, org.elasticsearch.common.unit.TimeValue>(state39, timeValue54);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder56 = builder1.state(state39);
        org.elasticsearch.common.settings.Settings.Builder builder57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder58 = builder56.settings(builder57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap6);
        org.junit.Assert.assertNotNull(indexShardStateSet7);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap12);
        org.junit.Assert.assertNotNull(indexShardStateSet13);
        org.junit.Assert.assertNull(discoveryNodeFilters15);
        org.junit.Assert.assertNotNull(indexMetaDataDiff17);
        org.junit.Assert.assertNotNull(indexMetaData18);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple36);
        org.junit.Assert.assertNotNull(strImmutableOpenMap37);
        org.junit.Assert.assertNotNull(indexMetaDataDiff38);
        org.junit.Assert.assertTrue("'" + state39 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state39.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(bulkShardRequest53);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(builder56);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.ActionRequest actionRequest14 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.action.update.UpdateHelper.Result result19 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result19, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, false, throwable24, writeResult25);
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable36, writeResult37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, true, throwable41, writeResult42);
        org.elasticsearch.index.shard.ShardId shardId44 = bulkShardRequest33.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue45 = bulkShardRequest33.timeout();
        org.elasticsearch.tasks.TaskId taskId46 = bulkShardRequest33.getParentTask();
        bulkShardRequest21.setParentTask(taskId46);
        bulkShardRequest16.setParentTask(taskId46);
        org.elasticsearch.tasks.TaskId taskId49 = bulkShardRequest16.getParentTask();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel50 = bulkShardRequest16.consistencyLevel();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest51 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 2, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest53 = bulkShardRequest16.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.tasks.TaskId taskId54 = bulkShardRequest53.getParentTask();
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(taskId46);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel50 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel50.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest53);
        org.junit.Assert.assertNotNull(taskId54);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("index.");
        int int8 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.Version version9 = indexMetaData0.getCreationVersion();
        long long10 = indexMetaData0.getCreationDate();
        org.elasticsearch.index.Index index11 = indexMetaData0.getMergeSourceIndex();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(version9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(index11);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting1, "", throwable3, "");
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure5, (org.elasticsearch.transport.TransportMessage) bulkShardRequest7);
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = bulkShardRequest7.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(32, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.ActionRequest actionRequest17 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure26 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "", throwable24, "");
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable30 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult31 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult32 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, false, throwable30, writeResult31);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple33 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure26, (org.elasticsearch.transport.TransportMessage) bulkShardRequest28);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = bulkShardRequest28.index("hi!");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest37 = bulkItemRequestTuple36.v2();
        org.elasticsearch.action.update.UpdateHelper.Result result38 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest40);
        org.elasticsearch.action.update.UpdateHelper.Result result42 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest44 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest44);
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult48 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult49 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result42, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, false, throwable47, writeResult48);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple50 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest41, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest44);
        org.elasticsearch.tasks.TaskId taskId51 = null;
        bulkShardRequest44.setParentTask(taskId51);
        org.elasticsearch.index.shard.ShardId shardId53 = bulkShardRequest44.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult54 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult55 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result38, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, writeResult54);
        org.elasticsearch.common.unit.TimeValue timeValue56 = bulkShardRequest44.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = bulkShardRequest44.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest58 = bulkShardRequestReplicationRequest37.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest59 = bulkShardRequest7.consistencyLevel(writeConsistencyLevel57);
        org.elasticsearch.common.io.stream.StreamInput streamInput60 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest7.readFrom(streamInput60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(bulkShardRequest35);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest37);
        org.junit.Assert.assertNull(shardId53);
        org.junit.Assert.assertNotNull(timeValue56);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest58);
        org.junit.Assert.assertNotNull(bulkShardRequest59);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        long long14 = builder9.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state15 = org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE;
        byte byte16 = state15.id();
        byte byte17 = state15.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder9.state(state15);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData19 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData19);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap21 = indexMetaData19.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet22 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData19, indexShardStateSet22);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters24 = indexMetaData19.includeFilters();
        org.elasticsearch.common.settings.Settings settings25 = indexMetaData19.getSettings();
        org.elasticsearch.common.settings.Settings settings26 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings25);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = builder9.settings(settings26);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder9.numberOfReplicas(3);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData30 = builder29.build();
        java.lang.String str31 = builder29.index();
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + state15 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE + "'", state15.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE));
        org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) 1 + "'", byte16 == (byte) 1);
        org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 1 + "'", byte17 == (byte) 1);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(indexMetaData19);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap21);
        org.junit.Assert.assertNotNull(indexShardStateSet22);
        org.junit.Assert.assertNull(discoveryNodeFilters24);
        org.junit.Assert.assertNotNull(settings25);
        org.junit.Assert.assertNotNull(settings26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(indexMetaData30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "index.blocks.write" + "'", str31, "index.blocks.write");
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        java.lang.String str3 = versionType0.explainConflictForReads((long) 97, 35L);
        boolean boolean7 = versionType0.isVersionConflictForWrites((long) '#', 100L, true);
        long long10 = versionType0.updateVersion((long) (byte) 1, (long) (short) 1);
        boolean boolean14 = versionType0.isVersionConflictForWrites((long) (byte) 1, 98L, true);
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "current version [97] is different than the one provided [35]" + "'", str3, "current version [97] is different than the one provided [35]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.version.upgraded");
        java.lang.String str2 = builder1.index();
        org.elasticsearch.cluster.metadata.AliasMetaData.Builder builder3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.putAlias(builder3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "index.version.upgraded" + "'", str2, "index.version.upgraded");
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        long long4 = indexMetaData0.getCreationDate();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap5 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.creation_date_string");
        boolean boolean10 = indexMetaData0.equals((java.lang.Object) "index.creation_date_string");
        org.elasticsearch.common.settings.Settings settings11 = indexMetaData0.getSettings();
        org.elasticsearch.transport.TransportService transportService12 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService13 = null;
        org.elasticsearch.indices.IndicesService indicesService14 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool15 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction16 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction17 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper18 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters19 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction21 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings11, transportService12, clusterService13, indicesService14, threadPool15, shardStateAction16, mappingUpdatedAction17, updateHelper18, actionFilters19, indexNameExpressionResolver20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap5);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(settings11);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.version.upgraded_string");
        int int2 = builder1.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData4);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap6 = indexMetaData4.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters7 = indexMetaData4.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff8 = indexMetaData3.diff(indexMetaData4);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters9 = indexMetaData4.requireFilters();
        org.elasticsearch.common.settings.Settings settings10 = indexMetaData4.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder1.settings(settings10);
        org.elasticsearch.transport.TransportService transportService12 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService13 = null;
        org.elasticsearch.indices.IndicesService indicesService14 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool15 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction16 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction17 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper18 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters19 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction21 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings10, transportService12, clusterService13, indicesService14, threadPool15, shardStateAction16, mappingUpdatedAction17, updateHelper18, actionFilters19, indexNameExpressionResolver20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap6);
        org.junit.Assert.assertNull(discoveryNodeFilters7);
        org.junit.Assert.assertNotNull(indexMetaDataDiff8);
        org.junit.Assert.assertNull(discoveryNodeFilters9);
        org.junit.Assert.assertNotNull(settings10);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData9 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData9);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap11 = indexMetaData9.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet12 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData9, indexShardStateSet12);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData9);
        org.elasticsearch.Version version15 = indexMetaData9.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData9);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int19 = builder18.numberOfShards();
        java.lang.String[] strArray23 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet24 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet24, strArray23);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder18.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet24);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state27 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = builder26.state(state27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder26.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData31 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData31);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap33 = indexMetaData31.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet34 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData31, indexShardStateSet34);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters36 = indexMetaData31.includeFilters();
        org.elasticsearch.common.settings.Settings settings37 = indexMetaData31.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder26.settings(settings37);
        boolean boolean39 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings37);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder16.settings(settings37);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = builder8.settings(settings37);
        org.elasticsearch.common.settings.Settings settings42 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings37);
        org.elasticsearch.transport.TransportService transportService43 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService44 = null;
        org.elasticsearch.indices.IndicesService indicesService45 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool46 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction47 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction48 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper49 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters50 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction52 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings42, transportService43, clusterService44, indicesService45, threadPool46, shardStateAction47, mappingUpdatedAction48, updateHelper49, actionFilters50, indexNameExpressionResolver51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(indexMetaData9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap11);
        org.junit.Assert.assertNotNull(indexShardStateSet12);
        org.junit.Assert.assertNotNull(version15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(indexMetaData31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap33);
        org.junit.Assert.assertNotNull(indexShardStateSet34);
        org.junit.Assert.assertNull(discoveryNodeFilters36);
        org.junit.Assert.assertNotNull(settings37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(settings42);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting1, "", throwable3, "");
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure5, (org.elasticsearch.transport.TransportMessage) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = bulkShardRequest7.index("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = bulkShardRequest14.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.update.UpdateHelper.Result result21 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result21, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, false, throwable26, writeResult27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.action.ActionRequest actionRequest31 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest31);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, writeResult36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = bulkItemRequestTuple38.v1();
        org.elasticsearch.common.io.stream.StreamInput streamInput40 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest39.readFrom(streamInput40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest14);
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertNotNull(bulkItemRequest39);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters2 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData3);
        org.elasticsearch.Version version5 = indexMetaData3.getCreationVersion();
        long long6 = indexMetaData3.getCreationDate();
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData3.getActiveAllocationIds();
        boolean boolean9 = indexMetaData0.equals((java.lang.Object) indexMetaData3);
        org.apache.lucene.util.Version version10 = indexMetaData3.getMinimumCompatibleVersion();
        org.elasticsearch.common.io.stream.StreamInput streamInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff12 = indexMetaData3.readDiffFrom(streamInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNull(discoveryNodeFilters2);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(version5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(version10);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple7 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.ActionRequest actionRequest10 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = bulkShardRequest12.setShardId(shardId16);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest(97, (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        org.elasticsearch.action.update.UpdateHelper.Result result19 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable28, writeResult29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result19, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, true, throwable33, writeResult34);
        org.elasticsearch.index.shard.ShardId shardId36 = bulkShardRequest25.shardId();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        java.lang.Object obj38 = null;
        boolean boolean39 = bulkItemRequestTuple37.equals(obj38);
        org.junit.Assert.assertNotNull(bulkShardRequest17);
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        long long14 = builder9.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder9.version((long) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom18 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder9.putCustom("_na_", custom18);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int23 = builder22.numberOfShards();
        java.lang.String[] strArray27 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder22.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder19.putActiveAllocationIds((int) (byte) 1, (java.util.Set<java.lang.String>) strSet28);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = builder31.putMapping("index.uuid", "current version [2] is higher than the one provided [-1]");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", throwable14, "");
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable20, writeResult21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure16, (org.elasticsearch.transport.TransportMessage) bulkShardRequest18);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = bulkShardRequest18.index("index.version.created");
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = bulkShardRequest18.setShardId(shardId26);
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.action.update.UpdateHelper.Result result34 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult40 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult41 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result34, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, false, throwable39, writeResult40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple42 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        java.lang.Throwable throwable44 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult45 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult46 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, true, throwable44, writeResult45);
        org.elasticsearch.index.shard.ShardId shardId47 = bulkShardRequest36.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue48 = bulkShardRequest36.timeout();
        org.elasticsearch.tasks.TaskId taskId49 = bulkShardRequest36.getParentTask();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult50 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult51 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, writeResult50);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        org.elasticsearch.action.update.UpdateHelper.Result result53 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest56 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest55);
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result53, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable58, writeResult59);
        org.elasticsearch.action.update.UpdateHelper.Result result61 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest63 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest64 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest63);
        org.elasticsearch.action.update.UpdateHelper.Result result65 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest67 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest68 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest67);
        java.lang.Throwable throwable70 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult71 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult72 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result65, (org.elasticsearch.action.ActionRequest) bulkShardRequest67, false, throwable70, writeResult71);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple73 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest64, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest67);
        java.lang.Throwable throwable75 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult76 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult77 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result61, (org.elasticsearch.action.ActionRequest) bulkShardRequest67, true, throwable75, writeResult76);
        org.elasticsearch.index.shard.ShardId shardId78 = bulkShardRequest67.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue79 = bulkShardRequest67.timeout();
        org.elasticsearch.tasks.TaskId taskId80 = bulkShardRequest67.getParentTask();
        bulkShardRequest55.setParentTask(taskId80);
        bulkShardRequest36.setParentTask(taskId80);
        bulkShardRequest18.setParentTask(taskId80);
        bulkShardRequest5.setParentTask(taskId80);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = bulkShardRequest5.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest25);
        org.junit.Assert.assertNotNull(bulkShardRequest27);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNull(shardId78);
        org.junit.Assert.assertNotNull(timeValue79);
        org.junit.Assert.assertNotNull(taskId80);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters1 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = indexMetaData0.mappingOrDefault("index.auto_expand_replicas");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap4 = indexMetaData0.getCustoms();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        boolean boolean8 = indexMetaData0.isSameUUID("index.blocks.read_only");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNull(discoveryNodeFilters1);
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(strImmutableOpenMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.tasks.TaskId taskId14 = null;
        bulkShardRequest7.setParentTask(taskId14);
        org.elasticsearch.index.shard.ShardId shardId16 = bulkShardRequest7.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, writeResult17);
        long long19 = bulkShardRequest7.primaryTerm();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        int int21 = bulkItemRequest20.id();
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.ActionRequest actionRequest28 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest28);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest30);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        org.elasticsearch.action.ActionRequest actionRequest34 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest34);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest35, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue40 = bulkShardRequest39.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = bulkShardRequest36.timeout(timeValue40);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest41);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult43 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult44 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest41, writeResult43);
        org.elasticsearch.action.update.UpdateHelper.Result result45 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest47);
        org.elasticsearch.action.update.UpdateHelper.Result result49 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult55 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult56 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result49, (org.elasticsearch.action.ActionRequest) bulkShardRequest51, false, throwable54, writeResult55);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple57 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest48, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest51);
        java.lang.Throwable throwable59 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult60 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult61 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result45, (org.elasticsearch.action.ActionRequest) bulkShardRequest51, true, throwable59, writeResult60);
        org.elasticsearch.index.shard.ShardId shardId62 = bulkShardRequest51.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue63 = bulkShardRequest51.timeout();
        org.elasticsearch.tasks.TaskId taskId64 = bulkShardRequest51.getParentTask();
        bulkShardRequest41.setParentTask(taskId64);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest66 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest41);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest67 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest41);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting68 = null;
        java.lang.Throwable throwable70 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure72 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting68, "", throwable70, "");
        org.elasticsearch.action.update.UpdateHelper.Result result73 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest74 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable76 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult77 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult78 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result73, (org.elasticsearch.action.ActionRequest) bulkShardRequest74, false, throwable76, writeResult77);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple79 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure72, (org.elasticsearch.transport.TransportMessage) bulkShardRequest74);
        org.elasticsearch.common.transport.TransportAddress transportAddress80 = bulkShardRequest74.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions81 = bulkShardRequest74.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException82 = bulkShardRequest74.validate();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple83 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest67, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest74);
        org.elasticsearch.common.unit.TimeValue timeValue84 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest85 = bulkShardRequest74.timeout(timeValue84);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple86 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest74);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str87 = bulkShardRequest74.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(bulkShardRequest41);
        org.junit.Assert.assertNull(shardId62);
        org.junit.Assert.assertNotNull(timeValue63);
        org.junit.Assert.assertNotNull(taskId64);
        org.junit.Assert.assertNull(transportAddress80);
        org.junit.Assert.assertNotNull(indicesOptions81);
        org.junit.Assert.assertNotNull(actionRequestValidationException82);
        org.junit.Assert.assertNotNull(timeValue84);
        org.junit.Assert.assertNotNull(bulkShardRequest85);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads(10L);
        boolean boolean26 = versionType12.isVersionConflictForReads(100L, (long) 'a');
        long long29 = versionType12.updateVersion((long) 3, 0L);
        boolean boolean32 = versionType12.isVersionConflictForReads((long) 97, (long) (byte) 0);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.ActionRequest actionRequest17 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        bulkShardRequest19.remoteAddress(transportAddress23);
        org.elasticsearch.action.update.UpdateHelper.Result result25 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue27 = bulkShardRequest26.timeout();
        java.lang.String str28 = bulkShardRequest26.index();
        org.elasticsearch.common.unit.TimeValue timeValue29 = bulkShardRequest26.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting33 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result35 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest37);
        org.elasticsearch.action.update.UpdateHelper.Result result39 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest41);
        java.lang.Throwable throwable44 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult45 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult46 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result39, (org.elasticsearch.action.ActionRequest) bulkShardRequest41, false, throwable44, writeResult45);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple47 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest38, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest41);
        org.elasticsearch.tasks.TaskId taskId48 = null;
        bulkShardRequest41.setParentTask(taskId48);
        org.elasticsearch.index.shard.ShardId shardId50 = bulkShardRequest41.shardId();
        bulkShardRequest41.seqNo((long) 0);
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult55 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult56 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result35, (org.elasticsearch.action.ActionRequest) bulkShardRequest41, false, throwable54, writeResult55);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException57 = bulkShardRequest41.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure59 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting33, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException57, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure61 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting31, "update", (java.lang.Throwable) actionRequestValidationException57, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult62 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult63 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result25, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, false, (java.lang.Throwable) actionRequestValidationException57, writeResult62);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException> transportRequestTuple64 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException>((org.elasticsearch.transport.TransportRequest) bulkShardRequest19, (java.lang.RuntimeException) actionRequestValidationException57);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure66 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException57, "index.shadow_replicas");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult67 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult68 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, true, (java.lang.Throwable) actionRequestValidationException57, writeResult67);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult69 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult70 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, writeResult69);
        bulkShardRequest5.setParentTask("current version [97] is different than the one provided [97]", 10L);
        org.elasticsearch.action.update.UpdateHelper.Result result77 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result79 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest81 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest82 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest81);
        java.lang.Throwable throwable84 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult85 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult86 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result79, (org.elasticsearch.action.ActionRequest) bulkShardRequest81, false, throwable84, writeResult85);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest87 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest81);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult88 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult89 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result77, (org.elasticsearch.action.ActionRequest) bulkShardRequest81, writeResult88);
        org.elasticsearch.common.transport.TransportAddress transportAddress90 = bulkShardRequest81.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId91 = bulkShardRequest81.getParentTask();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.tasks.Task task92 = bulkShardRequest5.createTask((long) (byte) 1, "delete", "current version [35] is different than the one provided [35]", taskId91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(actionRequestValidationException57);
        org.junit.Assert.assertNull(transportAddress90);
        org.junit.Assert.assertNotNull(taskId91);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = bulkShardRequest4.setShardId(shardId7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = bulkShardRequest4.setShardId(shardId9);
        boolean boolean11 = bulkShardRequest4.getShouldPersistResult();
        long long12 = bulkShardRequest4.seqNo();
        java.lang.String str13 = bulkShardRequest4.index();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest4.writeTo(streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest8);
        org.junit.Assert.assertNotNull(bulkShardRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        boolean boolean3 = versionType0.isVersionConflictForReads((long) 10, (long) (byte) -1);
        byte byte4 = versionType0.getValue();
        org.elasticsearch.index.VersionType versionType5 = versionType0.versionTypeForReplicationAndRecovery();
        byte byte6 = versionType5.getValue();
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + byte4 + "' != '" + (byte) 2 + "'", byte4 == (byte) 2);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 2 + "'", byte6 == (byte) 2);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable13, writeResult14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.tasks.TaskId taskId17 = null;
        bulkShardRequest10.setParentTask(taskId17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest10.shardId();
        bulkShardRequest10.seqNo((long) 0);
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = bulkShardRequest10.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = bulkShardRequest10.setShardId(shardId24);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting28 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting30 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting32 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result34 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        org.elasticsearch.action.update.UpdateHelper.Result result38 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest40);
        java.lang.Throwable throwable43 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult44 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult45 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result38, (org.elasticsearch.action.ActionRequest) bulkShardRequest40, false, throwable43, writeResult44);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple46 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest37, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest40);
        org.elasticsearch.tasks.TaskId taskId47 = null;
        bulkShardRequest40.setParentTask(taskId47);
        org.elasticsearch.index.shard.ShardId shardId49 = bulkShardRequest40.shardId();
        bulkShardRequest40.seqNo((long) 0);
        java.lang.Throwable throwable53 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult54 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult55 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result34, (org.elasticsearch.action.ActionRequest) bulkShardRequest40, false, throwable53, writeResult54);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException56 = bulkShardRequest40.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting32, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException56, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting30, "update", (java.lang.Throwable) actionRequestValidationException56, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure62 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting28, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException56, "index.version.minimum_compatible");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult63 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult64 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, (java.lang.Throwable) actionRequestValidationException56, writeResult63);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure66 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.blocks.read", (java.lang.Throwable) actionRequestValidationException56, "current version [-1] is higher than the one provided [0]");
        java.lang.Throwable throwable67 = shardFailure66.cause;
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertNotNull(bulkShardRequest25);
        org.junit.Assert.assertNull(shardId49);
        org.junit.Assert.assertNotNull(actionRequestValidationException56);
        org.junit.Assert.assertNotNull(throwable67);
        org.junit.Assert.assertEquals(throwable67.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable67.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable67.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData7);
        org.elasticsearch.Version version9 = indexMetaData7.getCreationVersion();
        long long10 = indexMetaData7.getCreationDate();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData12 = indexMetaData7.mappingOrDefault("index.");
        long long13 = indexMetaData7.getCreationDate();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData0.diff(indexMetaData7);
        org.apache.lucene.util.Version version15 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.index.Index index16 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData18 = indexMetaData0.mapping("index.shared_filesystem.recover_on_any_node");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(version9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(mappingMetaData12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertNull(version15);
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertNull(mappingMetaData18);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.requireFilters();
        java.util.Set<java.lang.String> strSet8 = null; // flaky: indexMetaData0.activeAllocationIds((int) (short) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap10 = indexMetaData0.getCustoms();
        java.lang.String str11 = indexMetaData0.getIndexUUID();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params13 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder14 = indexMetaData0.toXContent(xContentBuilder12, params13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(version5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNull(strSet8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_na_" + "'", str11, "_na_");
        org.junit.Assert.assertNotNull(params13);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder29.putMapping(mappingMetaData30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder6.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder7.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int13 = builder12.numberOfShards();
        java.lang.String[] strArray17 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder12.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet18);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder7.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet18);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder21.creationDate((long) (byte) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData24 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData24);
        java.lang.String str26 = builder25.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int29 = builder28.numberOfShards();
        java.lang.String[] strArray33 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = builder28.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet34);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state37 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder36.state(state37);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder36.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData41 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData41);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap43 = indexMetaData41.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet44 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple45 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData41, indexShardStateSet44);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters46 = indexMetaData41.includeFilters();
        org.elasticsearch.common.settings.Settings settings47 = indexMetaData41.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder48 = builder36.settings(settings47);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder49 = builder25.settings(settings47);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder50 = builder21.settings(settings47);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder51 = builder4.settings(settings47);
        org.elasticsearch.transport.TransportService transportService52 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService53 = null;
        org.elasticsearch.indices.IndicesService indicesService54 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool55 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction56 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction57 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper58 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters59 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction61 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings47, transportService52, clusterService53, indicesService54, threadPool55, shardStateAction56, mappingUpdatedAction57, updateHelper58, actionFilters59, indexNameExpressionResolver60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(indexMetaData24);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(indexMetaData41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap43);
        org.junit.Assert.assertNotNull(indexShardStateSet44);
        org.junit.Assert.assertNull(discoveryNodeFilters46);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(builder51);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        int int6 = indexMetaData1.getNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData8.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet11 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData8, indexShardStateSet11);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters13 = indexMetaData8.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state14 = indexMetaData8.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder7.state(state14);
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.ActionRequest actionRequest17 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting29 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        org.elasticsearch.action.update.UpdateHelper.Result result37 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        java.lang.Throwable throwable42 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult43 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult44 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result37, (org.elasticsearch.action.ActionRequest) bulkShardRequest39, false, throwable42, writeResult43);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple45 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest36, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest39);
        org.elasticsearch.tasks.TaskId taskId46 = null;
        bulkShardRequest39.setParentTask(taskId46);
        org.elasticsearch.index.shard.ShardId shardId48 = bulkShardRequest39.shardId();
        bulkShardRequest39.seqNo((long) 0);
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult53 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult54 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest39, false, throwable52, writeResult53);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException55 = bulkShardRequest39.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting31, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException55, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure59 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting29, "update", (java.lang.Throwable) actionRequestValidationException55, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure61 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "_na_", (java.lang.Throwable) actionRequestValidationException55, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure63 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "_na_", (java.lang.Throwable) actionRequestValidationException55, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure65 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException55, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting21, "index.blocks.write", (java.lang.Throwable) actionRequestValidationException55, "primary_terms");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure69 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting19, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException55, "delete");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult70 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult71 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, actionRequest17, false, (java.lang.Throwable) actionRequestValidationException55, writeResult70);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData.State, java.lang.IllegalArgumentException> stateTuple72 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData.State, java.lang.IllegalArgumentException>(state14, (java.lang.IllegalArgumentException) actionRequestValidationException55);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNotNull(indexShardStateSet11);
        org.junit.Assert.assertNull(discoveryNodeFilters13);
        org.junit.Assert.assertTrue("'" + state14 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state14.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(actionRequestValidationException55);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData1.getInitialRecoveryFilters();
        boolean boolean10 = indexMetaData1.isSameUUID("");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData1.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.Version version13 = indexMetaData1.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings14 = indexMetaData1.getSettings();
        org.elasticsearch.transport.TransportService transportService15 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService16 = null;
        org.elasticsearch.indices.IndicesService indicesService17 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool18 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction19 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction20 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper21 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters22 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction24 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings14, transportService15, clusterService16, indicesService17, threadPool18, shardStateAction19, mappingUpdatedAction20, updateHelper21, actionFilters22, indexNameExpressionResolver23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(version13);
        org.junit.Assert.assertNotNull(settings14);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting19, "", throwable21, "");
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable27, writeResult28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure23, (org.elasticsearch.transport.TransportMessage) bulkShardRequest25);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = bulkShardRequest25.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str35 = bulkShardRequest34.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest34);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = bulkShardRequest39.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple45 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest42);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder49 = builder47.numberOfReplicas((int) '4');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder51 = builder47.numberOfShards(10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder53 = builder47.numberOfShards((int) (short) 100);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.cluster.metadata.IndexMetaData.Builder> bulkItemRequestTupleTuple54 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.cluster.metadata.IndexMetaData.Builder>(bulkItemRequestTuple45, builder47);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = bulkItemRequestTuple45.v1();
        org.junit.Assert.assertNotNull(bulkShardRequest32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(bulkShardRequest42);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(bulkItemRequest55);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, true, throwable15, writeResult16);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, writeResult18);
        org.elasticsearch.action.update.UpdateHelper.Result result20 = updateResult19.result;
        org.junit.Assert.assertNull(result20);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, throwable17, writeResult18);
        org.elasticsearch.index.shard.ShardId shardId20 = bulkShardRequest9.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.common.unit.TimeValue timeValue22 = bulkShardRequest9.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = bulkShardRequest9.index("");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.action.update.UpdateHelper.Result result34 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult40 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult41 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result34, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, false, throwable39, writeResult40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple42 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        org.elasticsearch.tasks.TaskId taskId43 = null;
        bulkShardRequest36.setParentTask(taskId43);
        org.elasticsearch.index.shard.ShardId shardId45 = bulkShardRequest36.shardId();
        bulkShardRequest36.seqNo((long) 0);
        org.elasticsearch.action.support.IndicesOptions indicesOptions48 = bulkShardRequest36.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest49 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = bulkShardRequest36.setShardId(shardId50);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting54 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting56 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting58 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result60 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest62 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest63 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest62);
        org.elasticsearch.action.update.UpdateHelper.Result result64 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest66 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest67 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest66);
        java.lang.Throwable throwable69 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult70 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult71 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result64, (org.elasticsearch.action.ActionRequest) bulkShardRequest66, false, throwable69, writeResult70);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple72 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest63, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest66);
        org.elasticsearch.tasks.TaskId taskId73 = null;
        bulkShardRequest66.setParentTask(taskId73);
        org.elasticsearch.index.shard.ShardId shardId75 = bulkShardRequest66.shardId();
        bulkShardRequest66.seqNo((long) 0);
        java.lang.Throwable throwable79 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult80 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult81 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result60, (org.elasticsearch.action.ActionRequest) bulkShardRequest66, false, throwable79, writeResult80);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException82 = bulkShardRequest66.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure84 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting58, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException82, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure86 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting56, "update", (java.lang.Throwable) actionRequestValidationException82, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure88 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting54, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException82, "index.version.minimum_compatible");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult89 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult90 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest51, false, (java.lang.Throwable) actionRequestValidationException82, writeResult89);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure92 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "index.blocks.read", (java.lang.Throwable) actionRequestValidationException82, "current version [-1] is higher than the one provided [0]");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult93 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult94 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, (java.lang.Throwable) actionRequestValidationException82, writeResult93);
        org.elasticsearch.tasks.TaskId taskId95 = null;
        bulkShardRequest9.setParentTask(taskId95);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest97 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(bulkShardRequest24);
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(indicesOptions48);
        org.junit.Assert.assertNotNull(bulkShardRequest51);
        org.junit.Assert.assertNull(shardId75);
        org.junit.Assert.assertNotNull(actionRequestValidationException82);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder9.numberOfReplicas((int) (byte) -1);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.update.UpdateHelper.Result result21 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result21, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, false, throwable26, writeResult27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.tasks.TaskId taskId30 = null;
        bulkShardRequest23.setParentTask(taskId30);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, true, throwable33, writeResult34);
        org.elasticsearch.action.support.IndicesOptions indicesOptions36 = bulkShardRequest23.indicesOptions();
        java.lang.String[] strArray50 = new java.lang.String[] { "primary_terms", "index.shared_filesystem.recover_on_any_node", "index.", "indices:data/write/bulk[s]", "index.", "index.version.created", "index.creation_date_string", "index.creation_date_string", "index.version.created", "hi!", "index.version.created_string", "", "index.blocks.metadata" };
        java.util.HashSet<java.lang.String> strSet51 = new java.util.HashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.IndicesOptions, java.util.HashSet<java.lang.String>> indicesOptionsTuple53 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.IndicesOptions, java.util.HashSet<java.lang.String>>(indicesOptions36, strSet51);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = builder15.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet51);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData55 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder57 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder58 = builder57.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder60 = builder58.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder63 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int64 = builder63.numberOfShards();
        java.lang.String[] strArray68 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet69 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet69, strArray68);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder71 = builder63.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet69);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder72 = builder58.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet69);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple73 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData55, (java.lang.Iterable<java.lang.String>) strSet69);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap74 = indexMetaData55.getAliases();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData.Builder, org.elasticsearch.cluster.metadata.IndexMetaData> builderTuple75 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData.Builder, org.elasticsearch.cluster.metadata.IndexMetaData>(builder15, indexMetaData55);
        org.elasticsearch.common.settings.Settings.Builder builder76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder77 = builder15.settings(builder76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(indicesOptions36);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(indexMetaData55);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(builder71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple73);
        org.junit.Assert.assertNotNull(strImmutableOpenMap74);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.tasks.TaskId taskId13 = null;
        bulkShardRequest6.setParentTask(taskId13);
        org.elasticsearch.index.shard.ShardId shardId15 = bulkShardRequest6.shardId();
        bulkShardRequest6.seqNo((long) 0);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, writeResult18);
        org.elasticsearch.action.update.UpdateHelper.Result result20 = updateResult19.result;
        java.lang.Throwable throwable21 = updateResult19.error;
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNull(result20);
        org.junit.Assert.assertNull(throwable21);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable4, "");
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure6, (org.elasticsearch.transport.TransportMessage) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str18 = bulkShardRequest17.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = bulkShardRequest22.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, writeResult28);
        boolean boolean30 = updateResult29.success();
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(bulkShardRequest25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting1, "", throwable3, "");
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure5, (org.elasticsearch.transport.TransportMessage) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = bulkShardRequest7.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = bulkShardRequest7.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure21 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting17, "", throwable19, "");
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, false, throwable25, writeResult26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure21, (org.elasticsearch.transport.TransportMessage) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str31 = bulkShardRequest30.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest30);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        org.elasticsearch.action.update.UpdateHelper.Result result36 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result36, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, false, throwable41, writeResult42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest35, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.tasks.TaskId taskId45 = null;
        bulkShardRequest38.setParentTask(taskId45);
        org.elasticsearch.index.shard.ShardId shardId47 = bulkShardRequest38.shardId();
        bulkShardRequest38.seqNo((long) 0);
        org.elasticsearch.action.support.IndicesOptions indicesOptions50 = bulkShardRequest38.indicesOptions();
        bulkShardRequest38.primaryTerm(0L);
        bulkShardRequest38.primaryTerm((long) (-1));
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest56 = bulkShardRequest38.setShardId(shardId55);
        boolean boolean57 = bulkItemRequestTuple32.equals((java.lang.Object) shardId55);
        org.junit.Assert.assertNotNull(bulkShardRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNotNull(indicesOptions50);
        org.junit.Assert.assertNotNull(bulkShardRequest56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state5 = indexMetaData0.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder7 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params8 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder9 = indexMetaData0.toXContent(xContentBuilder7, params8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + state5 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state5.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(params8);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        long long4 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap7 = indexMetaData0.getCustoms();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData0.getActiveAllocationIds();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(strImmutableOpenMap7);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        boolean boolean3 = versionType0.isVersionConflictForReads((long) 10, (long) (byte) -1);
        byte byte4 = versionType0.getValue();
        java.lang.String str7 = versionType0.explainConflictForReads(35L, (long) '#');
        boolean boolean10 = versionType0.isVersionConflictForReads((long) '4', (long) (byte) 1);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            versionType0.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + byte4 + "' != '" + (byte) 2 + "'", byte4 == (byte) 2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "current version [35] is different than the one provided [35]" + "'", str7, "current version [35] is different than the one provided [35]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue9 = bulkShardRequest8.timeout();
        java.lang.String str10 = bulkShardRequest8.index();
        org.elasticsearch.common.unit.TimeValue timeValue11 = bulkShardRequest8.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = bulkShardRequest5.timeout(timeValue11);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable35, writeResult36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        org.elasticsearch.tasks.TaskId taskId39 = null;
        bulkShardRequest32.setParentTask(taskId39);
        org.elasticsearch.index.shard.ShardId shardId41 = bulkShardRequest32.shardId();
        bulkShardRequest32.seqNo((long) 0);
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult46 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult47 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable45, writeResult46);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException48 = bulkShardRequest32.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting24, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException48, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "update", (java.lang.Throwable) actionRequestValidationException48, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "_na_", (java.lang.Throwable) actionRequestValidationException48, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "_na_", (java.lang.Throwable) actionRequestValidationException48, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "index.version.minimum_compatible", (java.lang.Throwable) actionRequestValidationException48, "index.uuid");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException48, "hi!");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult61 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult62 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest12, true, (java.lang.Throwable) actionRequestValidationException48, writeResult61);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest64 = bulkShardRequest12.timeout("current version [1] is different than the one provided [0]");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [BulkShardRequest.timeout] with value [current version [1] is different than the one provided [0]] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(bulkShardRequest12);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(actionRequestValidationException48);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        long long4 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData5 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder7.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder8.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int14 = builder13.numberOfShards();
        java.lang.String[] strArray18 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder13.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder8.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple23 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData5, (java.lang.Iterable<java.lang.String>) strSet19);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap24 = indexMetaData5.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData5);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData5);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData5);
        org.elasticsearch.common.settings.Settings settings28 = indexMetaData5.getSettings();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff29 = indexMetaData0.diff(indexMetaData5);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData5);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaData5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple23);
        org.junit.Assert.assertNotNull(strImmutableOpenMap24);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertNotNull(indexMetaDataDiff29);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple9 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.ActionRequest actionRequest12 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest12);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable38, writeResult39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.tasks.TaskId taskId42 = null;
        bulkShardRequest35.setParentTask(taskId42);
        org.elasticsearch.index.shard.ShardId shardId44 = bulkShardRequest35.shardId();
        bulkShardRequest35.seqNo((long) 0);
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable48, writeResult49);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException51 = bulkShardRequest35.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException51, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "update", (java.lang.Throwable) actionRequestValidationException51, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "_na_", (java.lang.Throwable) actionRequestValidationException51, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure59 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting21, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException51, "index.priority");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult60 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult61 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, true, (java.lang.Throwable) actionRequestValidationException51, writeResult60);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure63 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [2] is higher than the one provided [-1]", (java.lang.Throwable) actionRequestValidationException51, "");
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(actionRequestValidationException51);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", throwable10, "");
        org.elasticsearch.action.update.UpdateHelper.Result result13 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result13, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, throwable16, writeResult17);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure12, (org.elasticsearch.transport.TransportMessage) bulkShardRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = bulkShardRequest14.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.ActionRequest actionRequest25 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest25);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        org.elasticsearch.action.ActionRequest actionRequest32 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest32);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest34);
        boolean boolean36 = bulkShardRequest34.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int39 = builder38.numberOfShards();
        java.lang.String[] strArray43 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet44 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet44, strArray43);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder46 = builder38.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet44);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple47 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest34, strSet44);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest34);
        org.elasticsearch.action.ActionRequest actionRequest50 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest51 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest50);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest52 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple53 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest51, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest52);
        boolean boolean54 = bulkShardRequest52.getShouldPersistResult();
        bulkShardRequest52.primaryTerm(100L);
        long long57 = bulkShardRequest52.seqNo();
        long long58 = bulkShardRequest52.seqNo();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple59 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest52);
        org.elasticsearch.action.update.UpdateHelper.Result result60 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest62 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest63 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest62);
        java.lang.Throwable throwable65 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult66 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult67 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result60, (org.elasticsearch.action.ActionRequest) bulkShardRequest62, false, throwable65, writeResult66);
        org.elasticsearch.common.unit.TimeValue timeValue68 = bulkShardRequest62.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest69 = bulkShardRequest52.timeout(timeValue68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> indexMetaDataDiffableTuple70 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>((org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest69);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(bulkShardRequest21);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(bulkShardRequest69);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters1 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters2 = indexMetaData0.includeFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNull(discoveryNodeFilters1);
        org.junit.Assert.assertNull(discoveryNodeFilters2);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.common.settings.Settings settings7 = indexMetaData1.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        java.lang.String str9 = indexMetaData1.getIndexUUID();
        org.elasticsearch.common.xcontent.XContentParser xContentParser10 = null;
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData12 = indexMetaData1.fromXContent(xContentParser10, parseFieldMatcher11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(settings7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_na_" + "'", str9, "_na_");
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        int int7 = bulkItemRequest6.id();
        org.elasticsearch.action.ActionRequest actionRequest8 = bulkItemRequest6.request();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertNotNull(actionRequest8);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.ActionRequest actionRequest14 = null; // flaky: bulkItemRequest3.request();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable23, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str30 = bulkShardRequest29.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        org.elasticsearch.action.update.UpdateHelper.Result result37 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        java.lang.Throwable throwable42 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult43 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult44 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result37, (org.elasticsearch.action.ActionRequest) bulkShardRequest39, false, throwable42, writeResult43);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple45 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest36, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest39);
        org.elasticsearch.tasks.TaskId taskId46 = null;
        bulkShardRequest39.setParentTask(taskId46);
        org.elasticsearch.index.shard.ShardId shardId48 = bulkShardRequest39.shardId();
        bulkShardRequest39.seqNo((long) 0);
        org.elasticsearch.action.support.IndicesOptions indicesOptions51 = bulkShardRequest39.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest54 = bulkShardRequest39.setShardId(shardId53);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest54);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple56 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest54);
        org.elasticsearch.action.update.UpdateHelper.Result result59 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest61 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest62 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest61);
        org.elasticsearch.action.update.UpdateHelper.Result result63 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest65 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest66 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest65);
        java.lang.Throwable throwable68 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult69 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult70 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result63, (org.elasticsearch.action.ActionRequest) bulkShardRequest65, false, throwable68, writeResult69);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple71 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest62, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest65);
        org.elasticsearch.tasks.TaskId taskId72 = null;
        bulkShardRequest65.setParentTask(taskId72);
        org.elasticsearch.index.shard.ShardId shardId74 = bulkShardRequest65.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult75 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult76 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result59, (org.elasticsearch.action.ActionRequest) bulkShardRequest65, writeResult75);
        org.elasticsearch.common.unit.TimeValue timeValue77 = bulkShardRequest65.timeout();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest78 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest65);
        java.lang.String str79 = bulkShardRequest65.index();
        org.elasticsearch.common.unit.TimeValue timeValue80 = bulkShardRequest65.timeout();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest81 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest65);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple82 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest65);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str83 = bulkShardRequest65.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(actionRequest14);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(indicesOptions51);
        org.junit.Assert.assertNotNull(bulkShardRequest54);
        org.junit.Assert.assertNull(shardId74);
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(timeValue80);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.State state1 = org.elasticsearch.cluster.metadata.IndexMetaData.State.fromString("index.shared_filesystem.recover_on_any_node");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No state match for [index.shared_filesystem.recover_on_any_node]");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.tasks.TaskId taskId16 = null;
        bulkShardRequest9.setParentTask(taskId16);
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, throwable19, writeResult20);
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = bulkShardRequest9.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, throwable25, writeResult26);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable38, writeResult39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.tasks.TaskId taskId42 = null;
        bulkShardRequest35.setParentTask(taskId42);
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult46 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult47 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, true, throwable45, writeResult46);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest49 = bulkItemRequestTuple48.v1();
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest50 = bulkItemRequestTuple48.v2();
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertNotNull(bulkItemRequest49);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest50);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable17, writeResult18);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult20);
        bulkShardRequest8.seqNo((long) 0);
        bulkShardRequest8.seqNo((long) 'a');
        org.elasticsearch.common.io.stream.StreamOutput streamOutput26 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest8.writeTo(streamOutput26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 100);
        long long26 = versionType12.updateVersion((long) (byte) 10, 10L);
        org.elasticsearch.index.VersionType versionType27 = versionType12.versionTypeForReplicationAndRecovery();
        boolean boolean31 = versionType27.isVersionConflictForWrites(98L, (long) (byte) 100, true);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10L + "'", long26 == 10L);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        bulkShardRequest10.remoteAddress(transportAddress14);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) ' ', (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, writeResult17);
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.ActionRequest actionRequest21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable38, writeResult39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.tasks.TaskId taskId42 = null;
        bulkShardRequest35.setParentTask(taskId42);
        org.elasticsearch.index.shard.ShardId shardId44 = bulkShardRequest35.shardId();
        bulkShardRequest35.seqNo((long) 0);
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable48, writeResult49);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException51 = bulkShardRequest35.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException51, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "update", (java.lang.Throwable) actionRequestValidationException51, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "index.priority", (java.lang.Throwable) actionRequestValidationException51, "index.uuid");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, actionRequest21, false, (java.lang.Throwable) actionRequestValidationException51, writeResult58);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult60 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult61 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, true, (java.lang.Throwable) actionRequestValidationException51, writeResult60);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest62 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue63 = bulkShardRequest62.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest64 = bulkShardRequest10.timeout(timeValue63);
        org.elasticsearch.common.transport.TransportAddress transportAddress65 = null;
        bulkShardRequest64.remoteAddress(transportAddress65);
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(actionRequestValidationException51);
        org.junit.Assert.assertNotNull(timeValue63);
        org.junit.Assert.assertNotNull(bulkShardRequest64);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable16, writeResult17);
        boolean boolean19 = updateResult18.success();
        boolean boolean20 = updateResult18.success();
        boolean boolean21 = updateResult18.success();
        boolean boolean22 = updateResult18.retry;
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        int int18 = bulkItemRequest2.id();
        org.elasticsearch.action.update.UpdateHelper.Result result19 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable28, writeResult29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result19, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, true, throwable33, writeResult34);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest36 = updateResult35.request();
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest37 = updateResult35.request();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, bulkShardRequestReplicationRequest37);
        org.elasticsearch.action.update.UpdateHelper.Result result42 = null;
        org.elasticsearch.action.ActionRequest actionRequest45 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest46 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest45);
        org.elasticsearch.action.ActionRequest actionRequest49 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest49);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple52 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest50, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest51);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest53 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple54 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest46, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest51);
        org.elasticsearch.common.transport.TransportAddress transportAddress55 = null;
        bulkShardRequest51.remoteAddress(transportAddress55);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest57 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result42, (org.elasticsearch.action.ActionRequest) bulkShardRequest51, writeResult58);
        org.elasticsearch.tasks.TaskId taskId60 = bulkShardRequest51.getParentTask();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.tasks.Task task61 = bulkShardRequestReplicationRequest37.createTask((long) (byte) 2, "index.data_path", "index.priority", taskId60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest36);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest37);
        org.junit.Assert.assertNotNull(taskId60);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters1 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = indexMetaData0.mappingOrDefault("index.auto_expand_replicas");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.creationDate((long) (byte) 0);
        org.elasticsearch.common.settings.Settings settings7 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder4.settings(settings7);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData9 = builder4.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNull(discoveryNodeFilters1);
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.version.upgraded_string");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.index("index.priority");
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom5 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder1.putCustom("index.blocks.read", custom5);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = builder6.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: must specify numberOfShards for index [index.priority]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = bulkShardRequest20.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable36, writeResult37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, true, throwable41, writeResult42);
        org.elasticsearch.index.shard.ShardId shardId44 = bulkShardRequest33.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue45 = bulkShardRequest33.timeout();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = bulkShardRequest33.setShardId(shardId46);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest47);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest49 = bulkItemRequestTuple48.v1();
        org.elasticsearch.index.VersionType versionType50 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        boolean boolean53 = versionType50.isVersionConflictForReads((long) 10, (long) (byte) -1);
        byte byte54 = versionType50.getValue();
        org.elasticsearch.index.VersionType versionType55 = versionType50.versionTypeForReplicationAndRecovery();
        byte byte56 = versionType50.getValue();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder58 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int59 = builder58.numberOfShards();
        java.lang.String[] strArray63 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet64 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet64, strArray63);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder66 = builder58.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet64);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData68 = builder58.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder71 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder72 = builder71.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder74 = builder72.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest77 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest78 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest77);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest79 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple80 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest78, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest79);
        boolean boolean81 = bulkShardRequest79.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder83 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int84 = builder83.numberOfShards();
        java.lang.String[] strArray88 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet89 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet89, strArray88);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder91 = builder83.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet89);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple92 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest79, strSet89);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder93 = builder72.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet89);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder94 = builder58.putActiveAllocationIds((int) (byte) 0, (java.util.Set<java.lang.String>) strSet89);
        org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.util.AbstractCollection<java.lang.String>> versionTypeEnumTuple95 = new org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.util.AbstractCollection<java.lang.String>>((java.lang.Enum<org.elasticsearch.index.VersionType>) versionType50, (java.util.AbstractCollection<java.lang.String>) strSet89);
        boolean boolean96 = bulkItemRequestTuple48.equals((java.lang.Object) strSet89);
        org.junit.Assert.assertNotNull(bulkShardRequest23);
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(bulkShardRequest47);
        org.junit.Assert.assertNotNull(bulkItemRequest49);
        org.junit.Assert.assertNotNull(versionType50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + byte54 + "' != '" + (byte) 2 + "'", byte54 == (byte) 2);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertTrue("'" + byte56 + "' != '" + (byte) 2 + "'", byte56 == (byte) 2);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertNull(mappingMetaData68);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder93);
        org.junit.Assert.assertNotNull(builder94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData11 = builder1.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int15 = builder14.numberOfShards();
        java.lang.String[] strArray19 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder14.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder1.putActiveAllocationIds((int) (byte) 3, (java.util.Set<java.lang.String>) strSet20);
        java.lang.String str24 = builder1.index();
        org.elasticsearch.cluster.metadata.AliasMetaData.Builder builder25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder1.putAlias(builder25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(mappingMetaData11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "index.blocks.write" + "'", str24, "index.blocks.write");
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData5 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData5);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap7 = indexMetaData5.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData5.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff9 = indexMetaData4.diff(indexMetaData5);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters10 = indexMetaData5.requireFilters();
        org.elasticsearch.Version version11 = indexMetaData5.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings12 = indexMetaData5.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder3.settings(settings12);
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting14 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_SHARED_FS_ALLOW_RECOVERY_ON_ANY_NODE_SETTING;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder16.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder17.numberOfReplicas((int) '#');
        int int20 = builder17.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder23.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder24.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int30 = builder29.numberOfShards();
        java.lang.String[] strArray34 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder37 = builder29.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet35);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder24.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple39 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData21, (java.lang.Iterable<java.lang.String>) strSet35);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap40 = indexMetaData21.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData21);
        org.elasticsearch.common.settings.Settings settings44 = indexMetaData21.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = builder17.settings(settings44);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent> toXContentToBytesTuple46 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.action.support.ToXContentToBytes) booleanSetting14, (org.elasticsearch.common.xcontent.ToXContent) settings44);
        org.elasticsearch.common.settings.Settings settings47 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings44);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder48 = builder3.settings(settings44);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData49 = builder48.build();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters50 = indexMetaData49.requireFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(indexMetaData5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertNotNull(indexMetaDataDiff9);
        org.junit.Assert.assertNull(discoveryNodeFilters10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(booleanSetting14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple39);
        org.junit.Assert.assertNotNull(strImmutableOpenMap40);
        org.junit.Assert.assertNotNull(settings44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(indexMetaData49);
        org.junit.Assert.assertNull(discoveryNodeFilters50);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData14);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap16 = indexMetaData14.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet17 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData14, indexShardStateSet17);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData14.includeFilters();
        org.elasticsearch.common.settings.Settings settings20 = indexMetaData14.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder9.settings(settings20);
        boolean boolean22 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings20);
        org.elasticsearch.common.settings.Settings settings23 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings20);
        boolean boolean24 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings23);
        boolean boolean25 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings23);
        org.elasticsearch.transport.TransportService transportService26 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService27 = null;
        org.elasticsearch.indices.IndicesService indicesService28 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool29 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction30 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction31 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper32 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters33 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction35 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings23, transportService26, clusterService27, indicesService28, threadPool29, shardStateAction30, mappingUpdatedAction31, updateHelper32, actionFilters33, indexNameExpressionResolver34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap16);
        org.junit.Assert.assertNotNull(indexShardStateSet17);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        boolean boolean3 = versionType0.isVersionConflictForReads((long) 10, (long) (byte) -1);
        byte byte4 = versionType0.getValue();
        org.elasticsearch.index.VersionType versionType5 = versionType0.versionTypeForReplicationAndRecovery();
        byte byte6 = versionType0.getValue();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData18 = builder8.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder21.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder22.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest27 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest27);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        boolean boolean31 = bulkShardRequest29.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int34 = builder33.numberOfShards();
        java.lang.String[] strArray38 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = builder33.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple42 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest29, strSet39);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder22.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet39);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder44 = builder8.putActiveAllocationIds((int) (byte) 0, (java.util.Set<java.lang.String>) strSet39);
        org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.util.AbstractCollection<java.lang.String>> versionTypeEnumTuple45 = new org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.util.AbstractCollection<java.lang.String>>((java.lang.Enum<org.elasticsearch.index.VersionType>) versionType0, (java.util.AbstractCollection<java.lang.String>) strSet39);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData46 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder48 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder49 = builder48.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder51 = builder49.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int55 = builder54.numberOfShards();
        java.lang.String[] strArray59 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet60 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet60, strArray59);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder62 = builder54.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet60);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder63 = builder49.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet60);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple64 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData46, (java.lang.Iterable<java.lang.String>) strSet60);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap65 = indexMetaData46.getAliases();
        int int66 = indexMetaData46.getNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap67 = indexMetaData46.getCustoms();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters68 = indexMetaData46.requireFilters();
        org.elasticsearch.common.settings.Settings settings69 = indexMetaData46.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder70 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData46);
        long long71 = indexMetaData46.getVersion();
        org.elasticsearch.common.collect.Tuple<java.lang.Iterable<java.lang.String>, org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>> strIterableTuple72 = new org.elasticsearch.common.collect.Tuple<java.lang.Iterable<java.lang.String>, org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>>((java.lang.Iterable<java.lang.String>) strSet39, (org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData46);
        org.elasticsearch.action.ActionRequest actionRequest74 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest75 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest74);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest76 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple77 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest75, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest76);
        boolean boolean78 = bulkShardRequest76.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder80 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int81 = builder80.numberOfShards();
        java.lang.String[] strArray85 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet86 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet86, strArray85);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder88 = builder80.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet86);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple89 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest76, strSet86);
        org.elasticsearch.common.collect.Tuple<java.lang.Cloneable, java.util.AbstractCollection<java.lang.String>> cloneableTuple90 = new org.elasticsearch.common.collect.Tuple<java.lang.Cloneable, java.util.AbstractCollection<java.lang.String>>((java.lang.Cloneable) strSet39, (java.util.AbstractCollection<java.lang.String>) strSet86);
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + byte4 + "' != '" + (byte) 2 + "'", byte4 == (byte) 2);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 2 + "'", byte6 == (byte) 2);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(mappingMetaData18);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(indexMetaData46);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple64);
        org.junit.Assert.assertNotNull(strImmutableOpenMap65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap67);
        org.junit.Assert.assertNull(discoveryNodeFilters68);
        org.junit.Assert.assertNotNull(settings69);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 1L + "'", long71 == 1L);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest9 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.ActionRequest actionRequest20 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest20);
        org.elasticsearch.action.ActionRequest actionRequest24 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest24);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        bulkShardRequest26.remoteAddress(transportAddress30);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting33 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting35 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting37 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting39 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting41 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result43 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest45 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest46 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest45);
        org.elasticsearch.action.update.UpdateHelper.Result result47 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest49);
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult53 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult54 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result47, (org.elasticsearch.action.ActionRequest) bulkShardRequest49, false, throwable52, writeResult53);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple55 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest46, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest49);
        org.elasticsearch.tasks.TaskId taskId56 = null;
        bulkShardRequest49.setParentTask(taskId56);
        org.elasticsearch.index.shard.ShardId shardId58 = bulkShardRequest49.shardId();
        bulkShardRequest49.seqNo((long) 0);
        java.lang.Throwable throwable62 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult63 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult64 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result43, (org.elasticsearch.action.ActionRequest) bulkShardRequest49, false, throwable62, writeResult63);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException65 = bulkShardRequest49.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting41, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException65, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure69 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting39, "update", (java.lang.Throwable) actionRequestValidationException65, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure71 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting37, "_na_", (java.lang.Throwable) actionRequestValidationException65, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure73 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting35, "_na_", (java.lang.Throwable) actionRequestValidationException65, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure75 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting33, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException65, "");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult76 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult77 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, false, (java.lang.Throwable) actionRequestValidationException65, writeResult76);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure79 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "index.creation_date", (java.lang.Throwable) actionRequestValidationException65, "hi!");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkShardRequest, java.lang.RuntimeException> bulkShardRequestTuple80 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkShardRequest, java.lang.RuntimeException>(bulkShardRequest11, (java.lang.RuntimeException) actionRequestValidationException65);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest81 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.junit.Assert.assertNull(shardId58);
        org.junit.Assert.assertNotNull(actionRequestValidationException65);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, true, throwable14, writeResult15);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest17 = updateResult16.request();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = updateResult16.request();
        org.elasticsearch.action.update.UpdateResponse updateResponse19 = updateResult16.noopResult;
        java.lang.Throwable throwable20 = updateResult16.error;
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest17);
        org.junit.Assert.assertNotNull(bulkShardRequest18);
        org.junit.Assert.assertNull(updateResponse19);
        org.junit.Assert.assertNull(throwable20);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        bulkShardRequest5.primaryTerm((long) 1);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, writeResult10);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = bulkShardRequest5.consistencyLevel();
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters29 = indexMetaData0.getInitialRecoveryFilters();
        java.lang.String str30 = indexMetaData0.getIndexUUID();
        java.util.Set<java.lang.String> strSet32 = null; // flaky: indexMetaData0.activeAllocationIds((int) (byte) -1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder33.version(32L);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "_na_" + "'", str30, "_na_");
        org.junit.Assert.assertNull(strSet32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        boolean boolean6 = bulkShardRequest4.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = bulkShardRequest4.setShardId(shardId7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest((int) ' ', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData10);
        org.elasticsearch.Version version12 = indexMetaData10.getCreationVersion();
        long long13 = indexMetaData10.getCreationDate();
        int int14 = indexMetaData10.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state15 = indexMetaData10.getState();
        byte byte16 = state15.id();
        byte byte17 = state15.id();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.update.UpdateHelper.Result result21 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result21, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, false, throwable26, writeResult27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.action.ActionRequest actionRequest31 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest31);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        org.elasticsearch.action.update.UpdateHelper.Result result36 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result36, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, false, throwable41, writeResult42);
        org.elasticsearch.action.update.UpdateHelper.Result result44 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest46);
        org.elasticsearch.action.update.UpdateHelper.Result result48 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest50 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest51 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest50);
        java.lang.Throwable throwable53 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult54 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult55 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result48, (org.elasticsearch.action.ActionRequest) bulkShardRequest50, false, throwable53, writeResult54);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple56 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest47, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest50);
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result44, (org.elasticsearch.action.ActionRequest) bulkShardRequest50, true, throwable58, writeResult59);
        org.elasticsearch.index.shard.ShardId shardId61 = bulkShardRequest50.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue62 = bulkShardRequest50.timeout();
        org.elasticsearch.tasks.TaskId taskId63 = bulkShardRequest50.getParentTask();
        bulkShardRequest38.setParentTask(taskId63);
        bulkShardRequest33.setParentTask(taskId63);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData66 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder67 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData66);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData68 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder69 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData68);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap70 = indexMetaData68.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters71 = indexMetaData68.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder72 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData68);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff73 = indexMetaData66.diff(indexMetaData68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.tasks.TaskId, org.elasticsearch.cluster.metadata.IndexMetaData> taskIdTuple74 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.tasks.TaskId, org.elasticsearch.cluster.metadata.IndexMetaData>(taskId63, indexMetaData66);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData.State, org.elasticsearch.tasks.TaskId> stateTuple75 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData.State, org.elasticsearch.tasks.TaskId>(state15, taskId63);
        bulkShardRequest8.setParentTask(taskId63);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(bulkShardRequest8);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + state15 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state15.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) 0 + "'", byte16 == (byte) 0);
        org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 0 + "'", byte17 == (byte) 0);
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(timeValue62);
        org.junit.Assert.assertNotNull(taskId63);
        org.junit.Assert.assertNotNull(indexMetaData66);
        org.junit.Assert.assertNotNull(builder67);
        org.junit.Assert.assertNotNull(indexMetaData68);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap70);
        org.junit.Assert.assertNull(discoveryNodeFilters71);
        org.junit.Assert.assertNotNull(indexMetaDataDiff73);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData0.includeFilters();
        long long5 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData7);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap9 = indexMetaData7.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters10 = indexMetaData7.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData7);
        org.apache.lucene.util.Version version12 = indexMetaData7.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters13 = indexMetaData7.requireFilters();
        org.elasticsearch.common.settings.Settings settings14 = indexMetaData7.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData7);
        boolean boolean16 = indexMetaData0.equals((java.lang.Object) builder15);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap9);
        org.junit.Assert.assertNull(discoveryNodeFilters10);
        org.junit.Assert.assertNull(version12);
        org.junit.Assert.assertNull(discoveryNodeFilters13);
        org.junit.Assert.assertNotNull(settings14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.elasticsearch.index.VersionType versionType1 = org.elasticsearch.index.VersionType.fromValue((byte) 2);
        java.lang.String str4 = versionType1.explainConflictForReads((long) 'a', (long) (short) 1);
        org.elasticsearch.index.VersionType versionType5 = versionType1.versionTypeForReplicationAndRecovery();
        byte byte6 = versionType5.getValue();
        org.junit.Assert.assertNotNull(versionType1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "current version [97] is different than the one provided [1]" + "'", str4, "current version [97] is different than the one provided [1]");
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 2 + "'", byte6 == (byte) 2);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        bulkShardRequest4.remoteAddress(transportAddress6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, false, throwable9, writeResult10);
        org.elasticsearch.action.update.UpdateResponse updateResponse12 = updateResult11.noopResult;
        org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestActionRequest13 = updateResult11.request();
        org.elasticsearch.action.update.UpdateHelper.Result result14 = updateResult11.result;
        boolean boolean15 = updateResult11.failure();
        java.lang.Throwable throwable16 = updateResult11.error;
        org.junit.Assert.assertNull(updateResponse12);
        org.junit.Assert.assertNotNull(bulkShardRequestActionRequest13);
        org.junit.Assert.assertNull(result14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(throwable16);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting1, "", throwable3, "");
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure5, (org.elasticsearch.transport.TransportMessage) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = bulkShardRequest7.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = bulkShardRequest7.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.update.UpdateHelper.Result result21 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result21, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, false, throwable26, writeResult27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.tasks.TaskId taskId30 = null;
        bulkShardRequest23.setParentTask(taskId30);
        org.elasticsearch.index.shard.ShardId shardId32 = bulkShardRequest23.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, writeResult33);
        org.elasticsearch.common.unit.TimeValue timeValue35 = bulkShardRequest23.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = bulkShardRequest7.timeout(timeValue35);
        long long37 = bulkShardRequest7.primaryTerm();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput38 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest7.writeTo(streamOutput38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(bulkShardRequest36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.update.UpdateHelper.Result result10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result10, (org.elasticsearch.action.ActionRequest) bulkShardRequest12, false, throwable15, writeResult16);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.tasks.TaskId taskId19 = null;
        bulkShardRequest12.setParentTask(taskId19);
        org.elasticsearch.index.shard.ShardId shardId21 = bulkShardRequest12.shardId();
        bulkShardRequest12.seqNo((long) 0);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = bulkShardRequest12.validate();
        org.elasticsearch.common.io.stream.StreamInput streamInput26 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest12.readFrom(streamInput26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(actionRequestValidationException25);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.numberOfShards((int) (short) 0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.putMapping(mappingMetaData4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "current version [52] is different than the one provided [1]");
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.update.UpdateHelper.Result result11 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result11, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, throwable16, writeResult17);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.action.ActionRequest actionRequest21 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest21);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "", throwable29, "");
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable35, writeResult36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure31, (org.elasticsearch.transport.TransportMessage) bulkShardRequest33);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = bulkShardRequest33.index("index.version.created");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest40);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 3, (org.elasticsearch.action.ActionRequest) bulkShardRequest40);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput43 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest42.writeTo(streamOutput43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest40);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData8.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet11 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData8, indexShardStateSet11);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData1.diff(indexMetaData8);
        boolean boolean15 = indexMetaData1.isSameUUID("index.uuid");
        boolean boolean17 = indexMetaData1.isSameUUID("current version [1] is different than the one provided [32]");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNotNull(indexShardStateSet11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable2, "");
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure4, (org.elasticsearch.transport.TransportMessage) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = bulkShardRequest6.index("index.version.created");
        long long14 = bulkShardRequest6.seqNo();
        long long15 = bulkShardRequest6.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = bulkShardRequest6.setShardId(shardId16);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = bulkShardRequest17.setShardId(shardId18);
        org.junit.Assert.assertNotNull(bulkShardRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(bulkShardRequest17);
        org.junit.Assert.assertNotNull(bulkShardRequest19);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.tasks.TaskId taskId14 = null;
        bulkShardRequest7.setParentTask(taskId14);
        org.elasticsearch.index.shard.ShardId shardId16 = bulkShardRequest7.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, writeResult17);
        long long19 = bulkShardRequest7.primaryTerm();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = bulkShardRequest7.consistencyLevel();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest7.writeTo(streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        boolean boolean3 = versionType0.isVersionConflictForReads((long) 10, (long) (byte) -1);
        byte byte4 = versionType0.getValue();
        java.lang.String str7 = versionType0.explainConflictForReads((long) 'a', (long) 'a');
        long long10 = versionType0.updateVersion(10L, 100L);
        java.lang.String str14 = versionType0.explainConflictForWrites(100L, (long) (-1), true);
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + byte4 + "' != '" + (byte) 2 + "'", byte4 == (byte) 2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "current version [97] is different than the one provided [97]" + "'", str7, "current version [97] is different than the one provided [97]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 100L + "'", long10 == 100L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "current version [100] is higher than the one provided [-1]" + "'", str14, "current version [100] is higher than the one provided [-1]");
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 100);
        org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.lang.String> versionTypeEnumTuple25 = new org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.lang.String>((java.lang.Enum<org.elasticsearch.index.VersionType>) versionType12, "indices:data/write/bulk[s]");
        byte byte26 = versionType12.getValue();
        boolean boolean30 = versionType12.isVersionConflictForWrites((long) (short) 10, 0L, false);
        boolean boolean32 = versionType12.validateVersionForReads((long) (byte) 100);
        boolean boolean34 = versionType12.validateVersionForWrites((long) 1);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + byte26 + "' != '" + (byte) 3 + "'", byte26 == (byte) 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        int int6 = indexMetaData1.getNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData9 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData9);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData11);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap13 = indexMetaData11.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters14 = indexMetaData11.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData11);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff16 = indexMetaData9.diff(indexMetaData11);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int19 = builder18.numberOfShards();
        java.lang.String[] strArray23 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet24 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet24, strArray23);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder18.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet24);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData28 = builder18.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int32 = builder31.numberOfShards();
        java.lang.String[] strArray36 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = builder31.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet37);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder18.putActiveAllocationIds((int) (byte) 3, (java.util.Set<java.lang.String>) strSet37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData>, java.util.Set<java.lang.String>> indexMetaDataDiffTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData>, java.util.Set<java.lang.String>>(indexMetaDataDiff16, (java.util.Set<java.lang.String>) strSet37);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = builder7.putActiveAllocationIds(52, (java.util.Set<java.lang.String>) strSet37);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData44 = builder7.mapping("current version [1] is different than the one provided [0]");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(indexMetaData9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap13);
        org.junit.Assert.assertNull(discoveryNodeFilters14);
        org.junit.Assert.assertNotNull(indexMetaDataDiff16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNull(mappingMetaData28);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNull(mappingMetaData44);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.update.UpdateHelper.Result result10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result10, (org.elasticsearch.action.ActionRequest) bulkShardRequest12, false, throwable15, writeResult16);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.ActionRequest actionRequest20 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest20);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        bulkShardRequest22.setParentTask("index.version.created", (long) (byte) 1);
        bulkShardRequest22.primaryTerm((long) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = bulkShardRequest22.timeout("index.version.upgraded_string");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [BulkShardRequest.timeout] with value [index.version.upgraded_string] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData8.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet11 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData8, indexShardStateSet11);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData1.diff(indexMetaData8);
        org.elasticsearch.common.settings.Settings settings14 = indexMetaData8.getSettings();
        org.elasticsearch.common.settings.Settings settings15 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings14);
        org.elasticsearch.common.settings.Settings settings16 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings15);
        org.elasticsearch.transport.TransportService transportService17 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService18 = null;
        org.elasticsearch.indices.IndicesService indicesService19 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool20 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction21 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction22 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper23 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters24 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction26 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings16, transportService17, clusterService18, indicesService19, threadPool20, shardStateAction21, mappingUpdatedAction22, updateHelper23, actionFilters24, indexNameExpressionResolver25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNotNull(indexShardStateSet11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNotNull(settings14);
        org.junit.Assert.assertNotNull(settings15);
        org.junit.Assert.assertNotNull(settings16);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable21, writeResult22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.tasks.TaskId taskId25 = null;
        bulkShardRequest18.setParentTask(taskId25);
        org.elasticsearch.index.shard.ShardId shardId27 = bulkShardRequest18.shardId();
        bulkShardRequest18.seqNo((long) 0);
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult32 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult33 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result12, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable31, writeResult32);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = bulkShardRequest18.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException34, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "update", (java.lang.Throwable) actionRequestValidationException34, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "_na_", (java.lang.Throwable) actionRequestValidationException34, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "_na_", (java.lang.Throwable) actionRequestValidationException34, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException34, "current version [2] is higher than the one provided [-1]");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.data_path", (java.lang.Throwable) actionRequestValidationException34, "index.creation_date");
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.requireFilters();
        java.util.Set<java.lang.String> strSet8 = null; // flaky: indexMetaData0.activeAllocationIds((int) (short) 10);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData10 = indexMetaData0.mapping("current version [100] is higher than the one provided [-1]");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(version5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNull(strSet8);
        org.junit.Assert.assertNull(mappingMetaData10);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.tasks.TaskId taskId16 = null;
        bulkShardRequest9.setParentTask(taskId16);
        org.elasticsearch.index.shard.ShardId shardId18 = bulkShardRequest9.shardId();
        bulkShardRequest9.seqNo((long) 0);
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable22, writeResult23);
        long long25 = bulkShardRequest9.seqNo();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult26);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult28);
        boolean boolean30 = updateResult29.failure();
        org.elasticsearch.action.ActionRequest actionRequest31 = updateResult29.actionRequest;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult32 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult33 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, actionRequest31, writeResult32);
        java.lang.Throwable throwable34 = updateResult33.error;
        boolean boolean35 = updateResult33.success();
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(actionRequest31);
        org.junit.Assert.assertNull(throwable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.ActionRequest actionRequest11 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest12, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue17 = bulkShardRequest16.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = bulkShardRequest13.timeout(timeValue17);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, writeResult20);
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult32 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult33 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, false, throwable31, writeResult32);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, true, throwable36, writeResult37);
        org.elasticsearch.index.shard.ShardId shardId39 = bulkShardRequest28.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue40 = bulkShardRequest28.timeout();
        org.elasticsearch.tasks.TaskId taskId41 = bulkShardRequest28.getParentTask();
        bulkShardRequest18.setParentTask(taskId41);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.common.unit.TimeValue timeValue44 = bulkShardRequest18.timeout();
        org.elasticsearch.index.shard.ShardId shardId45 = bulkShardRequest18.shardId();
        long long46 = bulkShardRequest18.seqNo();
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(bulkShardRequest18);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap5 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.includeFilters();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap7 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.index.Index index8 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData9 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData9);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap11 = indexMetaData9.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet12 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData9, indexShardStateSet12);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters14 = indexMetaData9.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable23, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.index.VersionType versionType27 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean31 = versionType27.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest17, versionType27);
        boolean boolean36 = versionType27.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean37 = indexMetaData9.equals((java.lang.Object) boolean36);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData9);
        long long39 = indexMetaData9.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData9);
        long long42 = indexMetaData9.primaryTerm(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap43 = indexMetaData9.getCustoms();
        boolean boolean44 = indexMetaData0.equals((java.lang.Object) strImmutableOpenMap43);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap7);
        org.junit.Assert.assertNull(index8);
        org.junit.Assert.assertNotNull(indexMetaData9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap11);
        org.junit.Assert.assertNotNull(indexShardStateSet12);
        org.junit.Assert.assertNull(discoveryNodeFilters14);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(strImmutableOpenMap43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        long long4 = indexMetaData0.getCreationDate();
        java.util.Set<java.lang.String> strSet6 = null; // flaky: indexMetaData0.activeAllocationIds((int) (byte) 3);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData8 = indexMetaData0.mapping("hi!");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap9 = indexMetaData0.getCustoms();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters10 = indexMetaData0.getInitialRecoveryFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertNull(mappingMetaData8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap9);
        org.junit.Assert.assertNull(discoveryNodeFilters10);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.Version version6 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap8 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData10 = indexMetaData0.mappingOrDefault("index.number_of_replicas");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData11);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap13 = indexMetaData11.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet14 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData11, indexShardStateSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataDiffableTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>((org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, indexShardStateSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap17 = indexMetaData0.getCustoms();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
        org.junit.Assert.assertNull(mappingMetaData10);
        org.junit.Assert.assertNotNull(indexMetaData11);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap13);
        org.junit.Assert.assertNotNull(indexShardStateSet14);
        org.junit.Assert.assertNotNull(strImmutableOpenMap17);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult30 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult31 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, false, throwable29, writeResult30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.tasks.TaskId taskId33 = null;
        bulkShardRequest26.setParentTask(taskId33);
        org.elasticsearch.index.shard.ShardId shardId35 = bulkShardRequest26.shardId();
        bulkShardRequest26.seqNo((long) 0);
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult40 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult41 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, false, throwable39, writeResult40);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException42 = bulkShardRequest26.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException42, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "update", (java.lang.Throwable) actionRequestValidationException42, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "_na_", (java.lang.Throwable) actionRequestValidationException42, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "_na_", (java.lang.Throwable) actionRequestValidationException42, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException42, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "index.blocks.write", (java.lang.Throwable) actionRequestValidationException42, "primary_terms");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "state-", (java.lang.Throwable) actionRequestValidationException42, "index.creation_date_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "index.blocks.write", (java.lang.Throwable) actionRequestValidationException42, "index.priority");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException42, "current version [35] is different than the one provided [35]");
        java.lang.Throwable throwable61 = shardFailure60.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure63 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [0] is higher than the one provided [98]", throwable61, "index.version.upgraded_string");
        java.lang.String str64 = shardFailure63.indexUUID;
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(actionRequestValidationException42);
        org.junit.Assert.assertNotNull(throwable61);
        org.junit.Assert.assertEquals(throwable61.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable61.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable61.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "index.version.upgraded_string" + "'", str64, "index.version.upgraded_string");
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        long long4 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder6.numberOfReplicas(0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData10 = builder6.mapping("current version [52] is different than the one provided [1]");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(mappingMetaData10);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        java.lang.String str12 = builder11.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder11.version(0L);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder18.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder19.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int25 = builder24.numberOfShards();
        java.lang.String[] strArray29 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder24.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet30);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder19.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple34 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData16, (java.lang.Iterable<java.lang.String>) strSet30);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder14.putActiveAllocationIds(35, (java.util.Set<java.lang.String>) strSet30);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = builder35.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData37);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap39 = indexMetaData37.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData37);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData41 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData42 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData42);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap44 = indexMetaData42.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters45 = indexMetaData42.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff46 = indexMetaData41.diff(indexMetaData42);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters47 = indexMetaData42.requireFilters();
        org.elasticsearch.Version version48 = indexMetaData42.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings49 = indexMetaData42.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder50 = builder40.settings(settings49);
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting51 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_SHARED_FS_ALLOW_RECOVERY_ON_ANY_NODE_SETTING;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder53 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = builder53.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder56 = builder54.numberOfReplicas((int) '#');
        int int57 = builder54.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData58 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder60 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder61 = builder60.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder63 = builder61.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder66 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int67 = builder66.numberOfShards();
        java.lang.String[] strArray71 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet72 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet72, strArray71);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder74 = builder66.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet72);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder75 = builder61.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet72);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple76 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData58, (java.lang.Iterable<java.lang.String>) strSet72);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap77 = indexMetaData58.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder78 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData58);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder79 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData58);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder80 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData58);
        org.elasticsearch.common.settings.Settings settings81 = indexMetaData58.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder82 = builder54.settings(settings81);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent> toXContentToBytesTuple83 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.action.support.ToXContentToBytes) booleanSetting51, (org.elasticsearch.common.xcontent.ToXContent) settings81);
        org.elasticsearch.common.settings.Settings settings84 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings81);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder85 = builder40.settings(settings81);
        boolean boolean86 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings81);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder87 = builder35.settings(settings81);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder88 = builder35.removeAllAliases();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder91 = builder35.putMapping("index.priority", "current version [2] is higher than the one provided [-1]");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "index.blocks.write" + "'", str12, "index.blocks.write");
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(indexMetaData41);
        org.junit.Assert.assertNotNull(indexMetaData42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap44);
        org.junit.Assert.assertNull(discoveryNodeFilters45);
        org.junit.Assert.assertNotNull(indexMetaDataDiff46);
        org.junit.Assert.assertNull(discoveryNodeFilters47);
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(settings49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(booleanSetting51);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData58);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple76);
        org.junit.Assert.assertNotNull(strImmutableOpenMap77);
        org.junit.Assert.assertNotNull(settings81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(settings84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder88);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("index.");
        int int8 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters9 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData10);
        org.elasticsearch.Version version12 = indexMetaData10.getCreationVersion();
        long long13 = indexMetaData10.getCreationDate();
        int int14 = indexMetaData10.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData10);
        boolean boolean16 = indexMetaData0.equals((java.lang.Object) indexMetaData10);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData18 = indexMetaData0.mappingOrDefault("index.creation_date_string");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData20 = indexMetaData0.mapping("index.creation_date");
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap21 = indexMetaData0.getActiveAllocationIds();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters9);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(mappingMetaData18);
        org.junit.Assert.assertNull(mappingMetaData20);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap21);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure12 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", throwable10, "");
        org.elasticsearch.action.update.UpdateHelper.Result result13 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result13, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, throwable16, writeResult17);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure12, (org.elasticsearch.transport.TransportMessage) bulkShardRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = bulkShardRequest14.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = bulkShardRequest14.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable36, writeResult37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        org.elasticsearch.tasks.TaskId taskId40 = null;
        bulkShardRequest33.setParentTask(taskId40);
        org.elasticsearch.index.shard.ShardId shardId42 = bulkShardRequest33.shardId();
        bulkShardRequest33.seqNo((long) 0);
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable46, writeResult47);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException49 = bulkShardRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure51 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException49, "index.blocks.write");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult52 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult53 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, (java.lang.Throwable) actionRequestValidationException49, writeResult52);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "state-", (java.lang.Throwable) actionRequestValidationException49, "primary_terms");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException49, "index.");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure59 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [0] is different than the one provided [100]", (java.lang.Throwable) actionRequestValidationException49, "index.shared_filesystem");
        java.lang.Throwable throwable60 = shardFailure59.cause;
        java.lang.String str61 = shardFailure59.indexUUID;
        java.lang.String str62 = shardFailure59.reason;
        org.junit.Assert.assertNotNull(bulkShardRequest21);
        org.junit.Assert.assertNull(transportAddress22);
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertNotNull(actionRequestValidationException49);
        org.junit.Assert.assertNotNull(throwable60);
        org.junit.Assert.assertEquals(throwable60.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable60.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable60.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "index.shared_filesystem" + "'", str61, "index.shared_filesystem");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "current version [0] is different than the one provided [100]" + "'", str62, "current version [0] is different than the one provided [100]");
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.update.UpdateHelper.Result result12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result12, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, throwable17, writeResult18);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.tasks.TaskId taskId21 = null;
        bulkShardRequest14.setParentTask(taskId21);
        org.elasticsearch.index.shard.ShardId shardId23 = bulkShardRequest14.shardId();
        bulkShardRequest14.seqNo((long) 0);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, throwable27, writeResult28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = bulkShardRequest14.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException30, "update");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException30, "index.creation_date");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "current version [10] is higher than the one provided [98]", (java.lang.Throwable) actionRequestValidationException30, "current version [-1] is higher than the one provided [0]");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException30, "state-");
        java.lang.String str39 = shardFailure38.indexUUID;
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "state-" + "'", str39, "state-");
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting1, "", throwable3, "");
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure5, (org.elasticsearch.transport.TransportMessage) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = bulkShardRequest7.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = bulkShardRequest7.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.update.UpdateHelper.Result result21 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result21, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, false, throwable26, writeResult27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.tasks.TaskId taskId30 = null;
        bulkShardRequest23.setParentTask(taskId30);
        org.elasticsearch.index.shard.ShardId shardId32 = bulkShardRequest23.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, writeResult33);
        org.elasticsearch.common.unit.TimeValue timeValue35 = bulkShardRequest23.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = bulkShardRequest7.timeout(timeValue35);
        java.lang.Class<?> wildcardClass37 = timeValue35.getClass();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = builder40.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder41.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder46 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int47 = builder46.numberOfShards();
        java.lang.String[] strArray51 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet52 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet52, strArray51);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = builder46.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet52);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder55 = builder41.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet52);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple56 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData38, (java.lang.Iterable<java.lang.String>) strSet52);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap57 = indexMetaData38.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder58 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData38);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap59 = indexMetaData38.getAliases();
        org.elasticsearch.common.collect.Tuple<java.lang.reflect.GenericDeclaration, org.elasticsearch.cluster.metadata.IndexMetaData> genericDeclarationTuple60 = new org.elasticsearch.common.collect.Tuple<java.lang.reflect.GenericDeclaration, org.elasticsearch.cluster.metadata.IndexMetaData>((java.lang.reflect.GenericDeclaration) wildcardClass37, indexMetaData38);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder61 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params62 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder.toXContent(indexMetaData38, xContentBuilder61, params62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(bulkShardRequest36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple56);
        org.junit.Assert.assertNotNull(strImmutableOpenMap57);
        org.junit.Assert.assertNotNull(strImmutableOpenMap59);
        org.junit.Assert.assertNotNull(params62);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        boolean boolean8 = bulkShardRequest4.getShouldPersistResult();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 2, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.ActionRequest actionRequest19 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest19);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        java.lang.reflect.AnnotatedElement annotatedElement27 = null;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkShardRequest, java.lang.reflect.AnnotatedElement> bulkShardRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkShardRequest, java.lang.reflect.AnnotatedElement>(bulkShardRequest21, annotatedElement27);
        org.elasticsearch.index.shard.ShardId shardId29 = bulkShardRequest21.shardId();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = bulkShardRequest21.timeout("current version [35] is different than the one provided [35]");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [BulkShardRequest.timeout] with value [current version [35] is different than the one provided [35]] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(shardId29);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        boolean boolean11 = bulkShardRequest9.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int14 = builder13.numberOfShards();
        java.lang.String[] strArray18 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder13.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest9, strSet19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder2.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet19);
        int int24 = builder23.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder23.numberOfShards(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = builder26.removeAllAliases();
        int int28 = builder27.numberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder27.creationDate(98L);
        // The following exception was thrown during execution in test generation
        try {
            long long32 = builder27.primaryTerm(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 35 + "'", int28 == 35);
        org.junit.Assert.assertNotNull(builder30);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.version((long) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.removeAlias("index.shadow_replicas");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder1.putMapping(mappingMetaData6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple7 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.ActionRequest actionRequest10 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.ActionRequest actionRequest16 = null; // flaky: bulkItemRequest5.request();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, (org.elasticsearch.action.ActionRequest) bulkShardRequest22, false, throwable25, writeResult26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str32 = bulkShardRequest31.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple33 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.junit.Assert.assertNull(actionRequest16);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData14);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap16 = indexMetaData14.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet17 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData14, indexShardStateSet17);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData14.includeFilters();
        org.elasticsearch.common.settings.Settings settings20 = indexMetaData14.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder9.settings(settings20);
        boolean boolean22 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings20);
        boolean boolean23 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings20);
        boolean boolean24 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings20);
        boolean boolean25 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings20);
        org.elasticsearch.transport.TransportService transportService26 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService27 = null;
        org.elasticsearch.indices.IndicesService indicesService28 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool29 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction30 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction31 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper32 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters33 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction35 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings20, transportService26, clusterService27, indicesService28, threadPool29, shardStateAction30, mappingUpdatedAction31, updateHelper32, actionFilters33, indexNameExpressionResolver34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap16);
        org.junit.Assert.assertNotNull(indexShardStateSet17);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable27, writeResult28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.tasks.TaskId taskId31 = null;
        bulkShardRequest24.setParentTask(taskId31);
        org.elasticsearch.index.shard.ShardId shardId33 = bulkShardRequest24.shardId();
        bulkShardRequest24.seqNo((long) 0);
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable37, writeResult38);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = bulkShardRequest24.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException40, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "update", (java.lang.Throwable) actionRequestValidationException40, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "_na_", (java.lang.Throwable) actionRequestValidationException40, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "primary_terms", (java.lang.Throwable) actionRequestValidationException40, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "index.blocks.read_only", (java.lang.Throwable) actionRequestValidationException40, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "index.blocks.read", (java.lang.Throwable) actionRequestValidationException40, "index.auto_expand_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException40, "index.blocks.metadata");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "active_allocations", (java.lang.Throwable) actionRequestValidationException40, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.blocks.write", (java.lang.Throwable) actionRequestValidationException40, "index.data_path");
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertNotNull(actionRequestValidationException40);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.tasks.TaskId taskId15 = null;
        bulkShardRequest8.setParentTask(taskId15);
        org.elasticsearch.index.shard.ShardId shardId17 = bulkShardRequest8.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult18);
        org.elasticsearch.common.unit.TimeValue timeValue20 = bulkShardRequest8.timeout();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '4', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.common.io.stream.StreamInput streamInput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest8.readFrom(streamInput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(timeValue20);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters2 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData3);
        org.elasticsearch.Version version5 = indexMetaData3.getCreationVersion();
        long long6 = indexMetaData3.getCreationDate();
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData3.getActiveAllocationIds();
        boolean boolean9 = indexMetaData0.equals((java.lang.Object) indexMetaData3);
        org.apache.lucene.util.Version version10 = indexMetaData3.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData3.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap12 = indexMetaData3.getMappings();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap13 = indexMetaData3.getAliases();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData15 = indexMetaData3.mapping("current version [0] is different than the one provided [100]");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNull(discoveryNodeFilters2);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(version5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(version10);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(strImmutableOpenMap12);
        org.junit.Assert.assertNotNull(strImmutableOpenMap13);
        org.junit.Assert.assertNull(mappingMetaData15);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, true, throwable15, writeResult16);
        org.elasticsearch.index.shard.ShardId shardId18 = bulkShardRequest7.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.common.unit.TimeValue timeValue20 = bulkShardRequest7.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = bulkShardRequest7.index("");
        bulkShardRequest22.seqNo(100L);
        org.elasticsearch.tasks.TaskId taskId25 = bulkShardRequest22.getParentTask();
        org.elasticsearch.tasks.TaskId taskId29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.tasks.Task task30 = bulkShardRequest22.createTask((long) (short) 10, "index.version.upgraded_string", "current version [97] is different than the one provided [35]", taskId29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(bulkShardRequest22);
        org.junit.Assert.assertNotNull(taskId25);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.number_of_shards");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.creationDate((long) ' ');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.version((long) 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = builder5.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: must specify numberOfShards for index [index.number_of_shards]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable16, writeResult17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest8.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.common.unit.TimeValue timeValue21 = bulkShardRequest8.timeout();
        bulkShardRequest8.primaryTerm((long) '#');
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = bulkShardRequest8.index("index.version.created");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, writeResult26);
        boolean boolean28 = updateResult27.failure();
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(bulkShardRequest25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.creationDate((long) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder5.removeAlias("index.version.minimum_compatible");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder5.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder10.numberOfShards(0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters21 = indexMetaData0.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters23 = indexMetaData0.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.settings.Settings settings25 = indexMetaData0.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = builder26.version((long) (byte) -1);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertNull(discoveryNodeFilters23);
        org.junit.Assert.assertNotNull(settings25);
        org.junit.Assert.assertNotNull(builder28);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.numberOfShards(1);
        int int5 = builder1.numberOfReplicas();
        java.lang.String str6 = builder1.index();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.index.VersionType versionType13 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean17 = versionType13.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest3, versionType13);
        boolean boolean22 = versionType13.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean24 = versionType13.validateVersionForReads((long) (byte) 0);
        byte byte25 = versionType13.getValue();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.VersionType versionType26 = org.elasticsearch.index.VersionType.fromString("index.version.minimum_compatible", versionType13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No version type match [index.version.minimum_compatible]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + byte25 + "' != '" + (byte) 3 + "'", byte25 == (byte) 3);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.ActionRequest actionRequest11 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest12, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue17 = bulkShardRequest16.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = bulkShardRequest13.timeout(timeValue17);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, writeResult20);
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult32 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult33 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, false, throwable31, writeResult32);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, true, throwable36, writeResult37);
        org.elasticsearch.index.shard.ShardId shardId39 = bulkShardRequest28.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue40 = bulkShardRequest28.timeout();
        org.elasticsearch.tasks.TaskId taskId41 = bulkShardRequest28.getParentTask();
        bulkShardRequest18.setParentTask(taskId41);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.ActionRequest actionRequest45 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest46 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest45);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest46, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest47);
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = null;
        bulkShardRequest47.remoteAddress(transportAddress49);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = bulkShardRequest47.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest52 = bulkShardRequest18.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.tasks.TaskId taskId53 = bulkShardRequest52.getParentTask();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = bulkShardRequest52.timeout("");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [BulkShardRequest.timeout] with value [] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(bulkShardRequest18);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest52);
        org.junit.Assert.assertNotNull(taskId53);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        boolean boolean3 = versionType0.isVersionConflictForReads((long) 10, (long) (byte) -1);
        boolean boolean7 = versionType0.isVersionConflictForWrites((long) (short) 10, (long) 10, false);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            versionType0.writeTo(streamOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 100);
        long long26 = versionType12.updateVersion((long) (byte) 0, (long) (byte) -1);
        org.elasticsearch.index.VersionType versionType27 = versionType12.versionTypeForReplicationAndRecovery();
        boolean boolean29 = versionType12.validateVersionForReads(10L);
        byte byte30 = versionType12.getValue();
        boolean boolean34 = versionType12.isVersionConflictForWrites(1L, (long) (short) 10, true);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + byte30 + "' != '" + (byte) 3 + "'", byte30 == (byte) 3);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getCreationVersion();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData1.getActiveAllocationIds();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData6.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet9 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData6, indexShardStateSet9);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData6.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData6);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData0.diff(indexMetaData6);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters14 = indexMetaData6.includeFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertNotNull(indexShardStateSet9);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNull(discoveryNodeFilters14);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        long long14 = builder9.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder9.numberOfReplicas((int) (byte) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder9.numberOfShards(10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder9.removeAlias("current version [97] is different than the one provided [35]");
        java.lang.String str21 = builder20.index();
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "index.blocks.write" + "'", str21, "index.blocks.write");
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData5 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData5);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap7 = indexMetaData5.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData5.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff9 = indexMetaData4.diff(indexMetaData5);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters10 = indexMetaData5.requireFilters();
        org.elasticsearch.Version version11 = indexMetaData5.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings12 = indexMetaData5.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder3.settings(settings12);
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting14 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_SHARED_FS_ALLOW_RECOVERY_ON_ANY_NODE_SETTING;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder16.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder17.numberOfReplicas((int) '#');
        int int20 = builder17.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder23.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder24.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int30 = builder29.numberOfShards();
        java.lang.String[] strArray34 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder37 = builder29.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet35);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder24.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple39 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData21, (java.lang.Iterable<java.lang.String>) strSet35);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap40 = indexMetaData21.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData21);
        org.elasticsearch.common.settings.Settings settings44 = indexMetaData21.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = builder17.settings(settings44);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent> toXContentToBytesTuple46 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.action.support.ToXContentToBytes) booleanSetting14, (org.elasticsearch.common.xcontent.ToXContent) settings44);
        org.elasticsearch.common.settings.Settings settings47 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings44);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder48 = builder3.settings(settings44);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder49 = builder3.removeAllAliases();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder52 = builder3.primaryTerm(52, 98L);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 52");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(indexMetaData5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertNotNull(indexMetaDataDiff9);
        org.junit.Assert.assertNull(discoveryNodeFilters10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(booleanSetting14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple39);
        org.junit.Assert.assertNotNull(strImmutableOpenMap40);
        org.junit.Assert.assertNotNull(settings44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(builder49);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str4 = bulkShardRequest3.index();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult5 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult6 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.tasks.TaskId taskId15 = null;
        bulkShardRequest8.setParentTask(taskId15);
        org.elasticsearch.index.shard.ShardId shardId17 = bulkShardRequest8.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult18);
        long long20 = bulkShardRequest8.primaryTerm();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 3, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        int int23 = bulkItemRequest22.id();
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData6.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet9 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData6, indexShardStateSet9);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData6.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData6);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData0.diff(indexMetaData6);
        int int14 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters15 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder17 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder19 = indexMetaData0.toXContent(xContentBuilder17, params18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertNotNull(indexShardStateSet9);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(discoveryNodeFilters15);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        java.lang.String str12 = builder11.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder11.version(0L);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder18.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder19.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int25 = builder24.numberOfShards();
        java.lang.String[] strArray29 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder24.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet30);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder19.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple34 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData16, (java.lang.Iterable<java.lang.String>) strSet30);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder14.putActiveAllocationIds(35, (java.util.Set<java.lang.String>) strSet30);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = builder35.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData37);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap39 = indexMetaData37.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData37);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData41 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData42 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData42);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap44 = indexMetaData42.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters45 = indexMetaData42.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff46 = indexMetaData41.diff(indexMetaData42);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters47 = indexMetaData42.requireFilters();
        org.elasticsearch.Version version48 = indexMetaData42.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings49 = indexMetaData42.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder50 = builder40.settings(settings49);
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting51 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_SHARED_FS_ALLOW_RECOVERY_ON_ANY_NODE_SETTING;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder53 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = builder53.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder56 = builder54.numberOfReplicas((int) '#');
        int int57 = builder54.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData58 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder60 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder61 = builder60.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder63 = builder61.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder66 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int67 = builder66.numberOfShards();
        java.lang.String[] strArray71 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet72 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet72, strArray71);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder74 = builder66.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet72);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder75 = builder61.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet72);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple76 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData58, (java.lang.Iterable<java.lang.String>) strSet72);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap77 = indexMetaData58.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder78 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData58);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder79 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData58);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder80 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData58);
        org.elasticsearch.common.settings.Settings settings81 = indexMetaData58.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder82 = builder54.settings(settings81);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent> toXContentToBytesTuple83 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.action.support.ToXContentToBytes) booleanSetting51, (org.elasticsearch.common.xcontent.ToXContent) settings81);
        org.elasticsearch.common.settings.Settings settings84 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings81);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder85 = builder40.settings(settings81);
        boolean boolean86 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings81);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder87 = builder35.settings(settings81);
        // The following exception was thrown during execution in test generation
        try {
            long long89 = builder87.primaryTerm(100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "index.blocks.write" + "'", str12, "index.blocks.write");
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(indexMetaData41);
        org.junit.Assert.assertNotNull(indexMetaData42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap44);
        org.junit.Assert.assertNull(discoveryNodeFilters45);
        org.junit.Assert.assertNotNull(indexMetaDataDiff46);
        org.junit.Assert.assertNull(discoveryNodeFilters47);
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(settings49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(booleanSetting51);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData58);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple76);
        org.junit.Assert.assertNotNull(strImmutableOpenMap77);
        org.junit.Assert.assertNotNull(settings81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(settings84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(builder87);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap5 = indexMetaData0.getAliases();
        java.lang.String str6 = indexMetaData0.getIndexUUID();
        org.elasticsearch.action.ActionRequest actionRequest11 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest12, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        org.elasticsearch.action.ActionRequest actionRequest17 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = bulkShardRequest19.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable36, writeResult37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, true, throwable41, writeResult42);
        org.elasticsearch.index.shard.ShardId shardId44 = bulkShardRequest33.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue45 = bulkShardRequest33.timeout();
        org.elasticsearch.tasks.TaskId taskId46 = bulkShardRequest33.getParentTask();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, writeResult47);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest49 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        org.elasticsearch.action.update.UpdateHelper.Result result50 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest52 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest53 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest52);
        java.lang.Throwable throwable55 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult56 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult57 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result50, (org.elasticsearch.action.ActionRequest) bulkShardRequest52, false, throwable55, writeResult56);
        org.elasticsearch.action.update.UpdateHelper.Result result58 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest60 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest61 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        org.elasticsearch.action.update.UpdateHelper.Result result62 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest64 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest65 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest64);
        java.lang.Throwable throwable67 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult68 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult69 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result62, (org.elasticsearch.action.ActionRequest) bulkShardRequest64, false, throwable67, writeResult68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple70 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest61, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest64);
        java.lang.Throwable throwable72 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult73 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult74 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result58, (org.elasticsearch.action.ActionRequest) bulkShardRequest64, true, throwable72, writeResult73);
        org.elasticsearch.index.shard.ShardId shardId75 = bulkShardRequest64.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue76 = bulkShardRequest64.timeout();
        org.elasticsearch.tasks.TaskId taskId77 = bulkShardRequest64.getParentTask();
        bulkShardRequest52.setParentTask(taskId77);
        bulkShardRequest33.setParentTask(taskId77);
        bulkShardRequest19.setParentTask(taskId77);
        boolean boolean81 = indexMetaData0.equals((java.lang.Object) taskId77);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_na_" + "'", str6, "_na_");
        org.junit.Assert.assertNull(transportAddress23);
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(taskId46);
        org.junit.Assert.assertNull(shardId75);
        org.junit.Assert.assertNotNull(timeValue76);
        org.junit.Assert.assertNotNull(taskId77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int8 = builder7.numberOfShards();
        java.lang.String[] strArray12 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder7.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder2.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData18 = builder2.mapping("index.blocks.metadata");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder2.numberOfReplicas((int) (byte) 3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.version.created");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder22.numberOfShards(100);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData25);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap27 = indexMetaData25.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet28 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData25, indexShardStateSet28);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters30 = indexMetaData25.includeFilters();
        org.elasticsearch.common.settings.Settings settings31 = indexMetaData25.getSettings();
        org.elasticsearch.common.settings.Settings settings32 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings31);
        org.elasticsearch.common.settings.Settings settings33 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings32);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = builder22.settings(settings33);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder20.settings(settings33);
        org.elasticsearch.common.settings.Settings.Builder builder36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder37 = builder35.settings(builder36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(mappingMetaData18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap27);
        org.junit.Assert.assertNotNull(indexShardStateSet28);
        org.junit.Assert.assertNull(discoveryNodeFilters30);
        org.junit.Assert.assertNotNull(settings31);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        long long5 = builder4.version();
        java.lang.String str6 = builder4.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder4.version((long) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder4.primaryTerm((int) (short) 1, (long) 97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        int int4 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder5 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting9 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting13 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result19 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable28, writeResult29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.tasks.TaskId taskId32 = null;
        bulkShardRequest25.setParentTask(taskId32);
        org.elasticsearch.index.shard.ShardId shardId34 = bulkShardRequest25.shardId();
        bulkShardRequest25.seqNo((long) 0);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result19, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable38, writeResult39);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException41 = bulkShardRequest25.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure43 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting17, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException41, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure45 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting15, "update", (java.lang.Throwable) actionRequestValidationException41, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure47 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting13, "_na_", (java.lang.Throwable) actionRequestValidationException41, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure49 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting11, "_na_", (java.lang.Throwable) actionRequestValidationException41, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure51 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting9, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException41, "update");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult52 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult53 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, actionRequest7, true, (java.lang.Throwable) actionRequestValidationException41, writeResult52);
        org.elasticsearch.common.xcontent.ToXContent.Params params54 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params> exceptionTuple55 = new org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params>((java.lang.Exception) actionRequestValidationException41, params54);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, java.lang.CharSequence> paramsTuple57 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, java.lang.CharSequence>(params54, (java.lang.CharSequence) "primary_terms");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder58 = indexMetaData0.toXContent(xContentBuilder5, params54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(actionRequestValidationException41);
        org.junit.Assert.assertNotNull(params54);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("index.");
        int int8 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters9 = indexMetaData0.includeFilters();
        org.elasticsearch.Version version10 = indexMetaData0.getCreationVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData0.requireFilters();
        org.elasticsearch.common.io.stream.StreamInput streamInput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData13 = indexMetaData0.readFrom(streamInput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters9);
        org.junit.Assert.assertNotNull(version10);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.version.upgraded_string");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.index("index.priority");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.numberOfReplicas((int) 'a');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder1.creationDate((long) 'a');
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue19 = bulkShardRequest18.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = bulkShardRequest15.timeout(timeValue19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, writeResult22);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, false, throwable33, writeResult34);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest30);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, true, throwable38, writeResult39);
        org.elasticsearch.index.shard.ShardId shardId41 = bulkShardRequest30.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue42 = bulkShardRequest30.timeout();
        org.elasticsearch.tasks.TaskId taskId43 = bulkShardRequest30.getParentTask();
        bulkShardRequest20.setParentTask(taskId43);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest46 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting47 = null;
        java.lang.Throwable throwable49 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure51 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting47, "", throwable49, "");
        org.elasticsearch.action.update.UpdateHelper.Result result52 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest53 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable55 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult56 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult57 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result52, (org.elasticsearch.action.ActionRequest) bulkShardRequest53, false, throwable55, writeResult56);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple58 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure51, (org.elasticsearch.transport.TransportMessage) bulkShardRequest53);
        org.elasticsearch.common.transport.TransportAddress transportAddress59 = bulkShardRequest53.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions60 = bulkShardRequest53.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException61 = bulkShardRequest53.validate();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple62 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest46, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest53);
        org.elasticsearch.common.unit.TimeValue timeValue63 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest64 = bulkShardRequest53.timeout(timeValue63);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult65 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult66 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest64, writeResult65);
        org.elasticsearch.action.update.UpdateHelper.Result result67 = updateResult66.result;
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(bulkShardRequest20);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNull(transportAddress59);
        org.junit.Assert.assertNotNull(indicesOptions60);
        org.junit.Assert.assertNotNull(actionRequestValidationException61);
        org.junit.Assert.assertNotNull(timeValue63);
        org.junit.Assert.assertNotNull(bulkShardRequest64);
        org.junit.Assert.assertNull(result67);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest5);
        org.elasticsearch.action.ActionRequest actionRequest9 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        bulkShardRequest11.remoteAddress(transportAddress15);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue19 = bulkShardRequest18.timeout();
        java.lang.String str20 = bulkShardRequest18.index();
        org.elasticsearch.common.unit.TimeValue timeValue21 = bulkShardRequest18.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable36, writeResult37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        org.elasticsearch.tasks.TaskId taskId40 = null;
        bulkShardRequest33.setParentTask(taskId40);
        org.elasticsearch.index.shard.ShardId shardId42 = bulkShardRequest33.shardId();
        bulkShardRequest33.seqNo((long) 0);
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable46, writeResult47);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException49 = bulkShardRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure51 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException49, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "update", (java.lang.Throwable) actionRequestValidationException49, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult54 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult55 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, (java.lang.Throwable) actionRequestValidationException49, writeResult54);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException> transportRequestTuple56 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException>((org.elasticsearch.transport.TransportRequest) bulkShardRequest11, (java.lang.RuntimeException) actionRequestValidationException49);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.creation_date_string", (java.lang.Throwable) actionRequestValidationException49, "index.version.minimum_compatible");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [100] is different than the one provided [1]", (java.lang.Throwable) actionRequestValidationException49, "primary_terms");
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertNotNull(actionRequestValidationException49);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.apache.lucene.util.Version version29 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state30 = indexMetaData0.getState();
        boolean boolean32 = indexMetaData0.isSameUUID("primary_terms");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder33.putMapping(mappingMetaData34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(version29);
        org.junit.Assert.assertTrue("'" + state30 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state30.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap21 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult32 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult33 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, false, throwable31, writeResult32);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        org.elasticsearch.index.VersionType versionType35 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean39 = versionType35.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest25, versionType35);
        boolean boolean44 = versionType35.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean46 = versionType35.validateVersionForReads((long) (byte) 100);
        long long49 = versionType35.updateVersion((long) (byte) 0, (long) (byte) -1);
        boolean boolean52 = versionType35.isVersionConflictForReads((long) (short) 1, 0L);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.io.Serializable> indexMetaDataTuple53 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.io.Serializable>(indexMetaData0, (java.io.Serializable) versionType35);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertNotNull(strImmutableOpenMap21);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable16, writeResult17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest8.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue20 = bulkShardRequest8.timeout();
        long long21 = bulkShardRequest8.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.ActionRequest actionRequest23 = bulkItemRequest22.request();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest(100, actionRequest23);
        int int25 = bulkItemRequest24.id();
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(actionRequest23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap5 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.includeFilters();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap7 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.index.Index index8 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.apache.lucene.util.Version version10 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData0.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap7);
        org.junit.Assert.assertNull(index8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(version10);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        int int3 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData0.writeTo(streamOutput5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 100);
        long long26 = versionType12.updateVersion((long) (byte) 0, (long) (byte) -1);
        org.elasticsearch.index.VersionType versionType27 = versionType12.versionTypeForReplicationAndRecovery();
        boolean boolean31 = versionType27.isVersionConflictForWrites((long) 10, 98L, true);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput32 = null;
        // The following exception was thrown during execution in test generation
        try {
            versionType27.writeTo(streamOutput32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData1.getInitialRecoveryFilters();
        boolean boolean10 = indexMetaData1.isSameUUID("");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap11 = indexMetaData1.getCustoms();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData13 = indexMetaData1.mappingOrDefault("index.blocks.metadata");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData1.writeTo(streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strImmutableOpenMap11);
        org.junit.Assert.assertNull(mappingMetaData13);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.tasks.TaskId taskId14 = null;
        bulkShardRequest7.setParentTask(taskId14);
        org.elasticsearch.index.shard.ShardId shardId16 = bulkShardRequest7.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, writeResult17);
        org.elasticsearch.action.update.UpdateResponse updateResponse19 = updateResult18.noopResult;
        boolean boolean20 = updateResult18.success();
        org.elasticsearch.action.ActionRequest actionRequest21 = updateResult18.actionRequest;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, actionRequest21, writeResult22);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNull(updateResponse19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(actionRequest21);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable27, writeResult28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.tasks.TaskId taskId31 = null;
        bulkShardRequest24.setParentTask(taskId31);
        org.elasticsearch.index.shard.ShardId shardId33 = bulkShardRequest24.shardId();
        bulkShardRequest24.seqNo((long) 0);
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable37, writeResult38);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = bulkShardRequest24.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException40, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "update", (java.lang.Throwable) actionRequestValidationException40, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "_na_", (java.lang.Throwable) actionRequestValidationException40, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "primary_terms", (java.lang.Throwable) actionRequestValidationException40, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException40, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete", (java.lang.Throwable) actionRequestValidationException40, "index.auto_expand_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException40, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "current version [10] is different than the one provided [32]", (java.lang.Throwable) actionRequestValidationException40, "primary_terms");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.blocks.read", (java.lang.Throwable) actionRequestValidationException40, "_na_");
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertNotNull(actionRequestValidationException40);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData8.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet11 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData8, indexShardStateSet11);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData1.diff(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap14 = indexMetaData1.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData15 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData15);
        org.elasticsearch.Version version17 = indexMetaData15.getCreationVersion();
        long long18 = indexMetaData15.getCreationDate();
        long long19 = indexMetaData15.getCreationDate();
        java.util.Set<java.lang.String> strSet21 = null; // flaky: indexMetaData15.activeAllocationIds((int) (short) 10);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff22 = indexMetaData1.diff(indexMetaData15);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap23 = indexMetaData15.getMappings();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNotNull(indexShardStateSet11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNotNull(strImmutableOpenMap14);
        org.junit.Assert.assertNotNull(indexMetaData15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(version17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNull(strSet21);
        org.junit.Assert.assertNotNull(indexMetaDataDiff22);
        org.junit.Assert.assertNotNull(strImmutableOpenMap23);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.update.UpdateHelper.Result result10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result10, (org.elasticsearch.action.ActionRequest) bulkShardRequest12, false, throwable15, writeResult16);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.tasks.TaskId taskId19 = null;
        bulkShardRequest12.setParentTask(taskId19);
        org.elasticsearch.index.shard.ShardId shardId21 = bulkShardRequest12.shardId();
        bulkShardRequest12.seqNo((long) 0);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        java.util.Map<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strMap25 = org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes;
        org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes = strMap25;
        org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes = strMap25;
        boolean boolean28 = bulkItemRequestTuple24.equals((java.lang.Object) strMap25);
        org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes = strMap25;
        org.junit.Assert.assertNull(shardId21);
// flaky:         org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.tasks.TaskId taskId18 = null;
        bulkShardRequest11.setParentTask(taskId18);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, true, throwable21, writeResult22);
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = bulkShardRequest11.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = bulkShardRequest11.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException26, "index.auto_expand_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [100] is higher than the one provided [-1]", (java.lang.Throwable) actionRequestValidationException26, "current version [1] is different than the one provided [0]");
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting1, "", throwable3, "");
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure5, (org.elasticsearch.transport.TransportMessage) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = bulkShardRequest7.index("hi!");
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable16, writeResult17);
        org.elasticsearch.tasks.TaskId taskId19 = bulkShardRequest7.getParentTask();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = bulkShardRequest7.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest14);
        org.junit.Assert.assertNotNull(taskId19);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest16, false, throwable19, writeResult20);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.tasks.TaskId taskId23 = null;
        bulkShardRequest16.setParentTask(taskId23);
        org.elasticsearch.index.shard.ShardId shardId25 = bulkShardRequest16.shardId();
        bulkShardRequest16.seqNo((long) 0);
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult30 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult31 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result10, (org.elasticsearch.action.ActionRequest) bulkShardRequest16, false, throwable29, writeResult30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = bulkShardRequest16.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException32, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "update", (java.lang.Throwable) actionRequestValidationException32, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "_na_", (java.lang.Throwable) actionRequestValidationException32, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "primary_terms", (java.lang.Throwable) actionRequestValidationException32, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [2] is higher than the one provided [-1]", (java.lang.Throwable) actionRequestValidationException32, "index.creation_date");
        java.lang.Class<?> wildcardClass43 = shardFailure42.getClass();
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = bulkShardRequest5.setShardId(shardId8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = bulkShardRequest5.setShardId(shardId10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = bulkShardRequest11.index("index.version.upgraded_string");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest11.setShardId(shardId15);
        org.junit.Assert.assertNotNull(bulkShardRequest9);
        org.junit.Assert.assertNotNull(bulkShardRequest11);
        org.junit.Assert.assertNotNull(bulkShardRequest14);
        org.junit.Assert.assertNotNull(bulkShardRequest16);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 100);
        long long26 = versionType12.updateVersion((long) (byte) 0, (long) (byte) -1);
        org.elasticsearch.index.VersionType versionType27 = versionType12.versionTypeForReplicationAndRecovery();
        org.elasticsearch.index.VersionType versionType28 = versionType27.versionTypeForReplicationAndRecovery();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput29 = null;
        // The following exception was thrown during execution in test generation
        try {
            versionType27.writeTo(streamOutput29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(versionType28);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.creationDate((long) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int11 = builder10.numberOfShards();
        java.lang.String[] strArray15 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder10.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet16);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData20 = builder10.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder23.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder24.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest29 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest29);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        boolean boolean33 = bulkShardRequest31.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int36 = builder35.numberOfShards();
        java.lang.String[] strArray40 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder35.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet41);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest31, strSet41);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = builder24.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet41);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder46 = builder10.putActiveAllocationIds((int) (byte) 0, (java.util.Set<java.lang.String>) strSet41);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = builder7.putActiveAllocationIds((int) '4', (java.util.Set<java.lang.String>) strSet41);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder50 = builder47.primaryTerm((int) (byte) 1, (long) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNull(mappingMetaData20);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNotNull(builder47);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.tasks.TaskId taskId15 = null;
        bulkShardRequest8.setParentTask(taskId15);
        org.elasticsearch.index.shard.ShardId shardId17 = bulkShardRequest8.shardId();
        bulkShardRequest8.seqNo((long) 0);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable21, writeResult22);
        long long24 = bulkShardRequest8.seqNo();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult25);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult27);
        boolean boolean29 = updateResult28.failure();
        org.elasticsearch.action.ActionRequest actionRequest30 = updateResult28.actionRequest;
        java.lang.Throwable throwable31 = updateResult28.error;
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(actionRequest30);
        org.junit.Assert.assertNull(throwable31);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.numberOfShards((int) (short) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.numberOfShards((int) (short) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder8.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int15 = builder14.numberOfShards();
        java.lang.String[] strArray19 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder14.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder9.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder23.creationDate((long) (byte) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = builder25.numberOfReplicas((int) (short) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder27.removeAlias("index.priority");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData31 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = builder33.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = builder34.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int40 = builder39.numberOfShards();
        java.lang.String[] strArray44 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = builder39.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet45);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder48 = builder34.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet45);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple49 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData31, (java.lang.Iterable<java.lang.String>) strSet45);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder50 = builder27.putActiveAllocationIds((-1), (java.util.Set<java.lang.String>) strSet45);
        int int51 = builder27.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int55 = builder54.numberOfShards();
        java.lang.String[] strArray59 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet60 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet60, strArray59);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder62 = builder54.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet60);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData64 = builder54.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder67 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder68 = builder67.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder70 = builder68.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest73 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest74 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest73);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest75 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple76 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest74, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest75);
        boolean boolean77 = bulkShardRequest75.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder79 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int80 = builder79.numberOfShards();
        java.lang.String[] strArray84 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet85 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet85, strArray84);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder87 = builder79.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet85);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple88 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest75, strSet85);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder89 = builder68.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet85);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder90 = builder54.putActiveAllocationIds((int) (byte) 0, (java.util.Set<java.lang.String>) strSet85);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder91 = builder27.putActiveAllocationIds(0, (java.util.Set<java.lang.String>) strSet85);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder92 = builder5.putActiveAllocationIds((int) (byte) 3, (java.util.Set<java.lang.String>) strSet85);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(indexMetaData31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertNull(mappingMetaData64);
        org.junit.Assert.assertNotNull(builder68);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(builder79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(builder89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(builder91);
        org.junit.Assert.assertNotNull(builder92);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap21 = indexMetaData0.getCustoms();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters22 = indexMetaData0.requireFilters();
        org.elasticsearch.common.settings.Settings settings23 = indexMetaData0.getSettings();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder24 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result25 = null;
        org.elasticsearch.action.ActionRequest actionRequest26 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting28 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting30 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting32 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting34 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting36 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result38 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest40);
        org.elasticsearch.action.update.UpdateHelper.Result result42 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest44 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest44);
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult48 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult49 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result42, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, false, throwable47, writeResult48);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple50 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest41, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest44);
        org.elasticsearch.tasks.TaskId taskId51 = null;
        bulkShardRequest44.setParentTask(taskId51);
        org.elasticsearch.index.shard.ShardId shardId53 = bulkShardRequest44.shardId();
        bulkShardRequest44.seqNo((long) 0);
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result38, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, false, throwable57, writeResult58);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException60 = bulkShardRequest44.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure62 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting36, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException60, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure64 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting34, "update", (java.lang.Throwable) actionRequestValidationException60, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure66 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting32, "_na_", (java.lang.Throwable) actionRequestValidationException60, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure68 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting30, "_na_", (java.lang.Throwable) actionRequestValidationException60, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure70 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting28, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException60, "update");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult71 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult72 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result25, actionRequest26, true, (java.lang.Throwable) actionRequestValidationException60, writeResult71);
        org.elasticsearch.common.xcontent.ToXContent.Params params73 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params> exceptionTuple74 = new org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params>((java.lang.Exception) actionRequestValidationException60, params73);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder75 = indexMetaData0.toXContent(xContentBuilder24, params73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap21);
        org.junit.Assert.assertNull(discoveryNodeFilters22);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertNull(shardId53);
        org.junit.Assert.assertNotNull(actionRequestValidationException60);
        org.junit.Assert.assertNotNull(params73);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.ActionRequest actionRequest17 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        boolean boolean21 = bulkShardRequest19.getShouldPersistResult();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.ActionRequest actionRequest26 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest26);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        bulkShardRequest28.primaryTerm((long) 1);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, writeResult33);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = bulkItemRequestTuple36.v1();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput38 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest37.writeTo(streamOutput38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(bulkItemRequest37);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.EXTERNAL;
        byte byte1 = versionType0.getValue();
        java.lang.String str5 = versionType0.explainConflictForWrites(0L, (long) 35, false);
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertTrue("'" + byte1 + "' != '" + (byte) 1 + "'", byte1 == (byte) 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "current version [0] is higher or equal to the one provided [35]" + "'", str5, "current version [0] is higher or equal to the one provided [35]");
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData14);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap16 = indexMetaData14.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet17 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData14, indexShardStateSet17);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData14.includeFilters();
        org.elasticsearch.common.settings.Settings settings20 = indexMetaData14.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder9.settings(settings20);
        boolean boolean22 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings20);
        boolean boolean23 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings20);
        org.elasticsearch.transport.TransportService transportService24 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService25 = null;
        org.elasticsearch.indices.IndicesService indicesService26 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool27 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction28 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction29 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper30 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters31 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction33 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings20, transportService24, clusterService25, indicesService26, threadPool27, shardStateAction28, mappingUpdatedAction29, updateHelper30, actionFilters31, indexNameExpressionResolver32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap16);
        org.junit.Assert.assertNotNull(indexShardStateSet17);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = bulkShardRequest7.setShardId(shardId10);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = bulkShardRequest7.setShardId(shardId12);
        bulkShardRequest13.setParentTask("index.uuid", (long) 97);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = null;
        org.elasticsearch.action.ActionRequest actionRequest34 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest34);
        org.elasticsearch.action.ActionRequest actionRequest38 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest38);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest39, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest40);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest35, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest40);
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = null;
        bulkShardRequest40.remoteAddress(transportAddress44);
        org.elasticsearch.action.update.UpdateHelper.Result result46 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue48 = bulkShardRequest47.timeout();
        java.lang.String str49 = bulkShardRequest47.index();
        org.elasticsearch.common.unit.TimeValue timeValue50 = bulkShardRequest47.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting52 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting54 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result56 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest58 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest59 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest58);
        org.elasticsearch.action.update.UpdateHelper.Result result60 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest62 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest63 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest62);
        java.lang.Throwable throwable65 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult66 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult67 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result60, (org.elasticsearch.action.ActionRequest) bulkShardRequest62, false, throwable65, writeResult66);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple68 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest59, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest62);
        org.elasticsearch.tasks.TaskId taskId69 = null;
        bulkShardRequest62.setParentTask(taskId69);
        org.elasticsearch.index.shard.ShardId shardId71 = bulkShardRequest62.shardId();
        bulkShardRequest62.seqNo((long) 0);
        java.lang.Throwable throwable75 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult76 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult77 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result56, (org.elasticsearch.action.ActionRequest) bulkShardRequest62, false, throwable75, writeResult76);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException78 = bulkShardRequest62.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure80 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting54, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException78, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure82 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting52, "update", (java.lang.Throwable) actionRequestValidationException78, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult83 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult84 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result46, (org.elasticsearch.action.ActionRequest) bulkShardRequest47, false, (java.lang.Throwable) actionRequestValidationException78, writeResult83);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException> transportRequestTuple85 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException>((org.elasticsearch.transport.TransportRequest) bulkShardRequest40, (java.lang.RuntimeException) actionRequestValidationException78);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure87 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting31, "", (java.lang.Throwable) actionRequestValidationException78, "index.shadow_replicas");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult88 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult89 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, true, (java.lang.Throwable) actionRequestValidationException78, writeResult88);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure91 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "index.blocks.write", (java.lang.Throwable) actionRequestValidationException78, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure93 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "index.data_path", (java.lang.Throwable) actionRequestValidationException78, "index.version.upgraded");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult94 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult95 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, (java.lang.Throwable) actionRequestValidationException78, writeResult94);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure97 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [0] is higher or equal to the one provided [35]", (java.lang.Throwable) actionRequestValidationException78, "index.version.upgraded_string");
        org.junit.Assert.assertNotNull(bulkShardRequest11);
        org.junit.Assert.assertNotNull(bulkShardRequest13);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNull(shardId71);
        org.junit.Assert.assertNotNull(actionRequestValidationException78);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        boolean boolean3 = versionType0.isVersionConflictForReads((long) 10, (long) (byte) -1);
        boolean boolean7 = versionType0.isVersionConflictForWrites((long) (short) 10, (long) 10, false);
        boolean boolean9 = versionType0.validateVersionForReads(0L);
        java.lang.String str13 = versionType0.explainConflictForWrites((long) (byte) 2, (-1L), false);
        boolean boolean17 = versionType0.isVersionConflictForWrites(0L, 0L, false);
        boolean boolean19 = versionType0.validateVersionForReads((-1L));
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "current version [2] is higher than the one provided [-1]" + "'", str13, "current version [2] is higher than the one provided [-1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters1 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = indexMetaData0.mappingOrDefault("index.auto_expand_replicas");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.creationDate((long) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = builder4.build();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder4.numberOfReplicas(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder4.putCustom("index.creation_date", custom11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNull(discoveryNodeFilters1);
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters21 = indexMetaData0.excludeFilters();
        org.elasticsearch.Version version22 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData23);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap25 = indexMetaData23.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet26 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData23, indexShardStateSet26);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData23);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData29 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData29);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap31 = indexMetaData29.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet32 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple33 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData29, indexShardStateSet32);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters34 = indexMetaData29.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData29);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff36 = indexMetaData23.diff(indexMetaData29);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder39.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = builder40.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int46 = builder45.numberOfShards();
        java.lang.String[] strArray50 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet51 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder53 = builder45.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet51);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = builder40.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet51);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple55 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData37, (java.lang.Iterable<java.lang.String>) strSet51);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap56 = indexMetaData37.getAliases();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff57 = indexMetaData23.diff(indexMetaData37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData>> indexMetaDataTuple58 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData>>(indexMetaData0, indexMetaDataDiff57);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder59 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder61 = builder59.removeAlias("current version [0] is higher or equal to the one provided [35]");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters21);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap25);
        org.junit.Assert.assertNotNull(indexShardStateSet26);
        org.junit.Assert.assertNotNull(indexMetaData29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap31);
        org.junit.Assert.assertNotNull(indexShardStateSet32);
        org.junit.Assert.assertNull(discoveryNodeFilters34);
        org.junit.Assert.assertNotNull(indexMetaDataDiff36);
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple55);
        org.junit.Assert.assertNotNull(strImmutableOpenMap56);
        org.junit.Assert.assertNotNull(indexMetaDataDiff57);
        org.junit.Assert.assertNotNull(builder61);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.version((long) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom6 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder4.putCustom("current version [2] is higher than the one provided [-1]", custom6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder7.numberOfReplicas(52);
        int int10 = builder9.numberOfShards();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue9 = bulkShardRequest8.timeout();
        java.lang.String str10 = bulkShardRequest8.index();
        org.elasticsearch.common.unit.TimeValue timeValue11 = bulkShardRequest8.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = bulkShardRequest5.timeout(timeValue11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(35, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest16 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest16);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        java.lang.String str21 = bulkShardRequest18.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.tasks.TaskId taskId26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.tasks.Task task27 = bulkShardRequest18.createTask(2L, "indices:data/write/bulk[s]", "delete", taskId26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(bulkShardRequest12);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, throwable17, writeResult18);
        org.elasticsearch.index.shard.ShardId shardId20 = bulkShardRequest9.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue21 = bulkShardRequest9.timeout();
        long long22 = bulkShardRequest9.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = bulkShardRequest9.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue28 = bulkShardRequest27.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions29 = bulkShardRequest27.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = bulkShardRequest27.validate();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult31 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult32 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, (java.lang.Throwable) actionRequestValidationException30, writeResult31);
        boolean boolean33 = updateResult32.failure();
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(indicesOptions29);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        boolean boolean11 = bulkShardRequest9.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int14 = builder13.numberOfShards();
        java.lang.String[] strArray18 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder13.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest9, strSet19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder2.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet19);
        int int24 = builder23.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder23.numberOfShards(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder28.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder29.numberOfReplicas((int) '#');
        int int32 = builder29.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData33 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = builder35.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder36.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int42 = builder41.numberOfShards();
        java.lang.String[] strArray46 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder49 = builder41.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet47);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder50 = builder36.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet47);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple51 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData33, (java.lang.Iterable<java.lang.String>) strSet47);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap52 = indexMetaData33.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder53 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData33);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData33);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder55 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData33);
        org.elasticsearch.common.settings.Settings settings56 = indexMetaData33.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder57 = builder29.settings(settings56);
        boolean boolean58 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings56);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder59 = builder23.settings(settings56);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder61 = builder59.index("current version [1] is different than the one provided [32]");
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder63 = builder59.putAlias(aliasMetaData62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData33);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple51);
        org.junit.Assert.assertNotNull(strImmutableOpenMap52);
        org.junit.Assert.assertNotNull(settings56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertNotNull(builder61);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.ActionRequest actionRequest14 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.action.update.UpdateHelper.Result result19 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result19, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, false, throwable24, writeResult25);
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable36, writeResult37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, true, throwable41, writeResult42);
        org.elasticsearch.index.shard.ShardId shardId44 = bulkShardRequest33.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue45 = bulkShardRequest33.timeout();
        org.elasticsearch.tasks.TaskId taskId46 = bulkShardRequest33.getParentTask();
        bulkShardRequest21.setParentTask(taskId46);
        bulkShardRequest16.setParentTask(taskId46);
        org.elasticsearch.tasks.TaskId taskId49 = bulkShardRequest16.getParentTask();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = bulkShardRequest16.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(taskId46);
        org.junit.Assert.assertNotNull(taskId49);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, true, throwable15, writeResult16);
        org.elasticsearch.index.shard.ShardId shardId18 = bulkShardRequest7.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.common.unit.TimeValue timeValue20 = bulkShardRequest7.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = bulkShardRequest7.index("");
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = bulkShardRequest7.setShardId(shardId23);
        boolean boolean25 = bulkShardRequest24.getShouldPersistResult();
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(bulkShardRequest22);
        org.junit.Assert.assertNotNull(bulkShardRequest24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder19 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params20 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.action.update.UpdateHelper.Result result21 = null;
        org.elasticsearch.action.ActionRequest actionRequest25 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest25);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest27);
        org.elasticsearch.action.ActionRequest actionRequest31 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest31);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue37 = bulkShardRequest36.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = bulkShardRequest33.timeout(timeValue37);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult40 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult41 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result21, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, writeResult40);
        boolean boolean42 = updateResult41.failure();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult> paramsTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult>(params20, updateResult41);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder44 = indexMetaData0.toXContent(xContentBuilder19, params20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(params20);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(bulkShardRequest38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters21 = indexMetaData0.excludeFilters();
        org.elasticsearch.Version version22 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData23);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap25 = indexMetaData23.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet26 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData23, indexShardStateSet26);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData23);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData29 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData29);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap31 = indexMetaData29.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet32 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple33 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData29, indexShardStateSet32);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters34 = indexMetaData29.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData29);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff36 = indexMetaData23.diff(indexMetaData29);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder39.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = builder40.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int46 = builder45.numberOfShards();
        java.lang.String[] strArray50 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet51 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder53 = builder45.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet51);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = builder40.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet51);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple55 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData37, (java.lang.Iterable<java.lang.String>) strSet51);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap56 = indexMetaData37.getAliases();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff57 = indexMetaData23.diff(indexMetaData37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData>> indexMetaDataTuple58 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData>>(indexMetaData0, indexMetaDataDiff57);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder59 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        int int60 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.Version version61 = indexMetaData0.getUpgradedVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters21);
        org.junit.Assert.assertNotNull(version22);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap25);
        org.junit.Assert.assertNotNull(indexShardStateSet26);
        org.junit.Assert.assertNotNull(indexMetaData29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap31);
        org.junit.Assert.assertNotNull(indexShardStateSet32);
        org.junit.Assert.assertNull(discoveryNodeFilters34);
        org.junit.Assert.assertNotNull(indexMetaDataDiff36);
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple55);
        org.junit.Assert.assertNotNull(strImmutableOpenMap56);
        org.junit.Assert.assertNotNull(indexMetaDataDiff57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(version61);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        java.lang.String str12 = builder11.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder11.version(0L);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder18.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder19.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int25 = builder24.numberOfShards();
        java.lang.String[] strArray29 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder24.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet30);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder19.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple34 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData16, (java.lang.Iterable<java.lang.String>) strSet30);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder14.putActiveAllocationIds(35, (java.util.Set<java.lang.String>) strSet30);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder37 = builder14.putMapping(mappingMetaData36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "index.blocks.write" + "'", str12, "index.blocks.write");
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple34);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("delete");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        int int3 = builder2.numberOfShards();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting3 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_PRIORITY_SETTING;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = null;
        java.lang.Throwable throwable7 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting5, "", throwable7, "");
        org.elasticsearch.action.update.UpdateHelper.Result result10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result10, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable13, writeResult14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure9, (org.elasticsearch.transport.TransportMessage) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = bulkShardRequest11.index("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = bulkShardRequest18.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult30 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult31 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, false, throwable29, writeResult30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.action.ActionRequest actionRequest34 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest34);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest35, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = bulkItemRequestTuple38.v1();
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest40 = bulkItemRequestTuple38.v2();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = bulkShardRequestReplicationRequest40.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = bulkShardRequest18.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.action.WriteConsistencyLevel> toXContentToBytesTuple43 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.action.support.ToXContentToBytes) intSetting3, writeConsistencyLevel41);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest44 = bulkShardRequest1.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting50 = null;
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting50, "", throwable52, "");
        org.elasticsearch.action.update.UpdateHelper.Result result55 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest56 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result55, (org.elasticsearch.action.ActionRequest) bulkShardRequest56, false, throwable58, writeResult59);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure54, (org.elasticsearch.transport.TransportMessage) bulkShardRequest56);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest63 = bulkShardRequest56.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress64 = bulkShardRequest56.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest65 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest56);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest66 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest56);
        org.elasticsearch.index.shard.ShardId shardId67 = bulkShardRequest56.shardId();
        org.elasticsearch.tasks.TaskId taskId68 = bulkShardRequest56.getParentTask();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.tasks.Task task69 = bulkShardRequest44.createTask((long) 'a', "index.blocks.metadata", "current version [100] is different than the one provided [1]", taskId68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intSetting3);
        org.junit.Assert.assertNotNull(bulkShardRequest18);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNotNull(bulkItemRequest39);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest42);
        org.junit.Assert.assertNotNull(toXContentToBytesTuple43);
        org.junit.Assert.assertNotNull(bulkShardRequest44);
        org.junit.Assert.assertNotNull(bulkShardRequest63);
        org.junit.Assert.assertNull(transportAddress64);
        org.junit.Assert.assertNull(shardId67);
        org.junit.Assert.assertNotNull(taskId68);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder9.numberOfReplicas((int) (byte) -1);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.update.UpdateHelper.Result result21 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result21, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, false, throwable26, writeResult27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.tasks.TaskId taskId30 = null;
        bulkShardRequest23.setParentTask(taskId30);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, true, throwable33, writeResult34);
        org.elasticsearch.action.support.IndicesOptions indicesOptions36 = bulkShardRequest23.indicesOptions();
        java.lang.String[] strArray50 = new java.lang.String[] { "primary_terms", "index.shared_filesystem.recover_on_any_node", "index.", "indices:data/write/bulk[s]", "index.", "index.version.created", "index.creation_date_string", "index.creation_date_string", "index.version.created", "hi!", "index.version.created_string", "", "index.blocks.metadata" };
        java.util.HashSet<java.lang.String> strSet51 = new java.util.HashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.IndicesOptions, java.util.HashSet<java.lang.String>> indicesOptionsTuple53 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.IndicesOptions, java.util.HashSet<java.lang.String>>(indicesOptions36, strSet51);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = builder15.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet51);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder56 = builder54.index("_na_");
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder58 = builder56.putAlias(aliasMetaData57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(indicesOptions36);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, true, throwable14, writeResult15);
        org.elasticsearch.index.shard.ShardId shardId17 = bulkShardRequest6.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue18 = bulkShardRequest6.timeout();
        long long19 = bulkShardRequest6.seqNo();
        org.elasticsearch.common.io.stream.StreamInput streamInput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest6.readFrom(streamInput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue9 = bulkShardRequest8.timeout();
        java.lang.String str10 = bulkShardRequest8.index();
        org.elasticsearch.common.unit.TimeValue timeValue11 = bulkShardRequest8.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = bulkShardRequest5.timeout(timeValue11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData14);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap16 = indexMetaData14.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet17 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData14, indexShardStateSet17);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData14);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData20);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap22 = indexMetaData20.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet23 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData20, indexShardStateSet23);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters25 = indexMetaData20.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData20);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff27 = indexMetaData14.diff(indexMetaData20);
        int int28 = indexMetaData14.getNumberOfReplicas();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap29 = indexMetaData14.getCustoms();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent> streamableTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest12, (org.elasticsearch.common.xcontent.ToXContent) indexMetaData14);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters31 = indexMetaData14.getInitialRecoveryFilters();
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(bulkShardRequest12);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap16);
        org.junit.Assert.assertNotNull(indexShardStateSet17);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap22);
        org.junit.Assert.assertNotNull(indexShardStateSet23);
        org.junit.Assert.assertNull(discoveryNodeFilters25);
        org.junit.Assert.assertNotNull(indexMetaDataDiff27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap29);
        org.junit.Assert.assertNull(discoveryNodeFilters31);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.VersionType versionType1 = org.elasticsearch.index.VersionType.fromString("index.");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No version type match [index.]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters29 = indexMetaData0.getInitialRecoveryFilters();
        boolean boolean31 = indexMetaData0.isSameUUID("_na_");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters32 = indexMetaData0.excludeFilters();
        boolean boolean34 = indexMetaData0.isSameUUID("index.uuid");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder35 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result36 = null;
        org.elasticsearch.action.ActionRequest actionRequest37 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting39 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting41 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting43 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting45 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting47 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result49 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        org.elasticsearch.action.update.UpdateHelper.Result result53 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest56 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest55);
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result53, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable58, writeResult59);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest52, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        org.elasticsearch.tasks.TaskId taskId62 = null;
        bulkShardRequest55.setParentTask(taskId62);
        org.elasticsearch.index.shard.ShardId shardId64 = bulkShardRequest55.shardId();
        bulkShardRequest55.seqNo((long) 0);
        java.lang.Throwable throwable68 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult69 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult70 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result49, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable68, writeResult69);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException71 = bulkShardRequest55.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure73 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting47, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException71, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure75 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting45, "update", (java.lang.Throwable) actionRequestValidationException71, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure77 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting43, "_na_", (java.lang.Throwable) actionRequestValidationException71, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure79 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting41, "_na_", (java.lang.Throwable) actionRequestValidationException71, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure81 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting39, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException71, "update");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult82 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult83 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result36, actionRequest37, true, (java.lang.Throwable) actionRequestValidationException71, writeResult82);
        org.elasticsearch.common.xcontent.ToXContent.Params params84 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params> exceptionTuple85 = new org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params>((java.lang.Exception) actionRequestValidationException71, params84);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, java.lang.CharSequence> paramsTuple87 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, java.lang.CharSequence>(params84, (java.lang.CharSequence) "primary_terms");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder88 = indexMetaData0.toXContent(xContentBuilder35, params84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(discoveryNodeFilters32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(shardId64);
        org.junit.Assert.assertNotNull(actionRequestValidationException71);
        org.junit.Assert.assertNotNull(params84);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        int int2 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder4 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params5 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.ActionRequest actionRequest10 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.action.ActionRequest actionRequest16 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest16);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue22 = bulkShardRequest21.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = bulkShardRequest18.timeout(timeValue22);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, writeResult25);
        boolean boolean27 = updateResult26.failure();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult> paramsTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult>(params5, updateResult26);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder29 = indexMetaData0.toXContent(xContentBuilder4, params5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(params5);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(bulkShardRequest23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting1, "", throwable3, "");
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure5, (org.elasticsearch.transport.TransportMessage) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = bulkShardRequest7.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str17 = bulkShardRequest16.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest15.writeTo(streamOutput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest14);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.", throwable2, "current version [32] is different than the one provided [2]");
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        long long21 = indexMetaData0.getVersion();
        long long22 = indexMetaData0.getVersion();
        int int23 = indexMetaData0.getNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("index.");
        int int8 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters9 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData10);
        org.elasticsearch.Version version12 = indexMetaData10.getCreationVersion();
        long long13 = indexMetaData10.getCreationDate();
        int int14 = indexMetaData10.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData10);
        boolean boolean16 = indexMetaData0.equals((java.lang.Object) indexMetaData10);
        long long17 = indexMetaData10.getCreationDate();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters9);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.tasks.TaskId taskId16 = null;
        bulkShardRequest9.setParentTask(taskId16);
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, throwable19, writeResult20);
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = bulkShardRequest9.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure33 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting29, "", throwable31, "");
        org.elasticsearch.action.update.UpdateHelper.Result result34 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result34, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable37, writeResult38);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure33, (org.elasticsearch.transport.TransportMessage) bulkShardRequest35);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = bulkShardRequest35.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress43 = bulkShardRequest35.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting46 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result48 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest50 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest51 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest50);
        org.elasticsearch.action.update.UpdateHelper.Result result52 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest54 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest54);
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result52, (org.elasticsearch.action.ActionRequest) bulkShardRequest54, false, throwable57, writeResult58);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple60 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest51, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest54);
        org.elasticsearch.tasks.TaskId taskId61 = null;
        bulkShardRequest54.setParentTask(taskId61);
        org.elasticsearch.index.shard.ShardId shardId63 = bulkShardRequest54.shardId();
        bulkShardRequest54.seqNo((long) 0);
        java.lang.Throwable throwable67 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult68 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult69 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result48, (org.elasticsearch.action.ActionRequest) bulkShardRequest54, false, throwable67, writeResult68);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException70 = bulkShardRequest54.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure72 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting46, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException70, "index.blocks.write");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult73 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult74 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, (java.lang.Throwable) actionRequestValidationException70, writeResult73);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure76 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "indices:data/write/bulk[s]", (java.lang.Throwable) actionRequestValidationException70, "hi!");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult77 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult78 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, (java.lang.Throwable) actionRequestValidationException70, writeResult77);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest79 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting80 = null;
        java.lang.Throwable throwable82 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure84 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting80, "", throwable82, "");
        org.elasticsearch.action.update.UpdateHelper.Result result85 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest86 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable88 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult89 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult90 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result85, (org.elasticsearch.action.ActionRequest) bulkShardRequest86, false, throwable88, writeResult89);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple91 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure84, (org.elasticsearch.transport.TransportMessage) bulkShardRequest86);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest93 = bulkShardRequest86.index("index.version.created");
        long long94 = bulkShardRequest86.seqNo();
        bulkShardRequest86.setParentTask("index.creation_date", (long) '#');
        org.elasticsearch.index.shard.ShardId shardId98 = bulkShardRequest86.shardId();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple99 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest79, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest86);
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertNotNull(bulkShardRequest42);
        org.junit.Assert.assertNull(transportAddress43);
        org.junit.Assert.assertNull(shardId63);
        org.junit.Assert.assertNotNull(actionRequestValidationException70);
        org.junit.Assert.assertNotNull(bulkShardRequest93);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 0L + "'", long94 == 0L);
        org.junit.Assert.assertNull(shardId98);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [2] is higher than the one provided [-1]", throwable2, "active_allocations");
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        long long19 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder20.removeAlias("index.auto_expand_replicas");
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom24 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder20.putCustom("index.version.upgraded_string", custom24);
        long long26 = builder20.version();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData28 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData28);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap30 = indexMetaData28.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters31 = indexMetaData28.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData28);
        org.apache.lucene.util.Version version33 = indexMetaData28.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData34 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData34);
        org.elasticsearch.Version version36 = indexMetaData34.getCreationVersion();
        long long37 = indexMetaData34.getCreationDate();
        long long38 = indexMetaData34.getCreationDate();
        java.util.Set<java.lang.String> strSet40 = null; // flaky: indexMetaData34.activeAllocationIds((int) (byte) 3);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData42 = indexMetaData34.mapping("hi!");
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff43 = indexMetaData28.diff(indexMetaData34);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int46 = builder45.numberOfShards();
        java.lang.String[] strArray50 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet51 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder53 = builder45.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet51);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder55 = builder53.numberOfReplicas((int) (byte) -1);
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet57 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.action.ActionRequest actionRequest59 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest60 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest59);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest61 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple62 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest60, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest61);
        boolean boolean63 = bulkShardRequest61.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder65 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int66 = builder65.numberOfShards();
        java.lang.String[] strArray70 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet71 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet71, strArray70);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder73 = builder65.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet71);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple74 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest61, strSet71);
        org.elasticsearch.common.collect.Tuple<java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>, java.lang.Iterable<java.lang.String>> indexShardStateSetTuple75 = new org.elasticsearch.common.collect.Tuple<java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>, java.lang.Iterable<java.lang.String>>(indexShardStateSet57, (java.lang.Iterable<java.lang.String>) strSet71);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder76 = builder53.putActiveAllocationIds((int) (byte) 10, (java.util.Set<java.lang.String>) strSet71);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Cloneable> indexMetaDataDiffTuple77 = org.elasticsearch.common.collect.Tuple.tuple(indexMetaDataDiff43, (java.lang.Cloneable) strSet71);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder78 = builder20.putActiveAllocationIds(0, (java.util.Set<java.lang.String>) strSet71);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder80 = builder20.numberOfShards((int) (short) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder82 = builder80.numberOfShards((int) 'a');
        org.elasticsearch.common.settings.Settings.Builder builder83 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder84 = builder82.settings(builder83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 1L + "'", long26 == 1L);
        org.junit.Assert.assertNotNull(indexMetaData28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap30);
        org.junit.Assert.assertNull(discoveryNodeFilters31);
        org.junit.Assert.assertNull(version33);
        org.junit.Assert.assertNotNull(indexMetaData34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(version36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNull(strSet40);
        org.junit.Assert.assertNull(mappingMetaData42);
        org.junit.Assert.assertNotNull(indexMetaDataDiff43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(indexShardStateSet57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(builder65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(builder73);
        org.junit.Assert.assertNotNull(builder76);
        org.junit.Assert.assertNotNull(indexMetaDataDiffTuple77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder82);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.requireFilters();
        java.util.Set<java.lang.String> strSet8 = null; // flaky: indexMetaData0.activeAllocationIds((int) (short) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.Version version10 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters12 = indexMetaData0.requireFilters();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData0.writeTo(streamOutput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(version5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNull(strSet8);
        org.junit.Assert.assertNotNull(version10);
        org.junit.Assert.assertNull(discoveryNodeFilters12);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.auto_expand_replicas", throwable2, "index.blocks.metadata");
        java.lang.Class<?> wildcardClass5 = shardFailure4.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData2 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData2);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap4 = indexMetaData2.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet5 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData2, indexShardStateSet5);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters7 = indexMetaData2.includeFilters();
        org.elasticsearch.common.settings.Settings settings8 = indexMetaData2.getSettings();
        org.elasticsearch.common.settings.Settings settings9 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings8);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, (org.elasticsearch.action.ActionRequest) bulkShardRequest22, false, throwable25, writeResult26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.tasks.TaskId taskId29 = null;
        bulkShardRequest22.setParentTask(taskId29);
        org.elasticsearch.index.shard.ShardId shardId31 = bulkShardRequest22.shardId();
        bulkShardRequest22.seqNo((long) 0);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest22, false, throwable35, writeResult36);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = bulkShardRequest22.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException38, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "update", (java.lang.Throwable) actionRequestValidationException38, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "_na_", (java.lang.Throwable) actionRequestValidationException38, "index.shadow_replicas");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent, java.io.Serializable> toXContentTuple45 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.ToXContent) settings9, (java.io.Serializable) actionRequestValidationException38);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure47 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException38, "current version [97] is different than the one provided [97]");
        java.lang.Throwable throwable48 = shardFailure47.cause;
        org.junit.Assert.assertNotNull(indexMetaData2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap4);
        org.junit.Assert.assertNotNull(indexShardStateSet5);
        org.junit.Assert.assertNull(discoveryNodeFilters7);
        org.junit.Assert.assertNotNull(settings8);
        org.junit.Assert.assertNotNull(settings9);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(actionRequestValidationException38);
        org.junit.Assert.assertNotNull(toXContentTuple45);
        org.junit.Assert.assertNotNull(throwable48);
        org.junit.Assert.assertEquals(throwable48.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable48.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable48.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        java.lang.String str2 = builder1.index();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.primaryTerm(97, (long) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 97");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, true, throwable15, writeResult16);
        org.elasticsearch.index.shard.ShardId shardId18 = bulkShardRequest7.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue19 = bulkShardRequest7.timeout();
        long long20 = bulkShardRequest7.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = bulkShardRequest7.indicesOptions();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult32 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult33 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, false, throwable31, writeResult32);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        org.elasticsearch.action.ActionRequest actionRequest36 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest36);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest37, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.action.update.UpdateHelper.Result result41 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest43);
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result41, (org.elasticsearch.action.ActionRequest) bulkShardRequest43, false, throwable46, writeResult47);
        org.elasticsearch.action.update.UpdateHelper.Result result49 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        org.elasticsearch.action.update.UpdateHelper.Result result53 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest56 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest55);
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result53, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable58, writeResult59);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest52, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult64 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult65 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result49, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, true, throwable63, writeResult64);
        org.elasticsearch.index.shard.ShardId shardId66 = bulkShardRequest55.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue67 = bulkShardRequest55.timeout();
        org.elasticsearch.tasks.TaskId taskId68 = bulkShardRequest55.getParentTask();
        bulkShardRequest43.setParentTask(taskId68);
        bulkShardRequest38.setParentTask(taskId68);
        org.elasticsearch.tasks.TaskId taskId71 = bulkShardRequest38.getParentTask();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel72 = bulkShardRequest38.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest73 = bulkShardRequest7.consistencyLevel(writeConsistencyLevel72);
        bulkShardRequest73.primaryTerm((long) 'a');
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertNull(shardId66);
        org.junit.Assert.assertNotNull(timeValue67);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertNotNull(taskId71);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel72 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel72.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest73);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.creationDate((long) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder5.version((long) 1);
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.putAlias(aliasMetaData10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [1] is different than the one provided [0]", throwable2, "");
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting19, "", throwable21, "");
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable27, writeResult28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure23, (org.elasticsearch.transport.TransportMessage) bulkShardRequest25);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = bulkShardRequest25.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str35 = bulkShardRequest34.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest34);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = bulkShardRequest39.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple45 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest42);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder49 = builder47.numberOfReplicas((int) '4');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder51 = builder47.numberOfShards(10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder53 = builder47.numberOfShards((int) (short) 100);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.cluster.metadata.IndexMetaData.Builder> bulkItemRequestTupleTuple54 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.cluster.metadata.IndexMetaData.Builder>(bulkItemRequestTuple45, builder47);
        org.elasticsearch.common.settings.Settings.Builder builder55 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder56 = builder47.settings(builder55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(bulkShardRequest42);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(builder51);
        org.junit.Assert.assertNotNull(builder53);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.VersionType versionType1 = org.elasticsearch.index.VersionType.fromString("delete");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No version type match [delete]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        long long19 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        java.lang.String str21 = indexMetaData0.getIndexUUID();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData0.getAliases();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_na_" + "'", str21, "_na_");
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        int int9 = builder8.numberOfShards();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder8.putMapping("", "index.version.upgraded");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        boolean boolean11 = bulkShardRequest9.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int14 = builder13.numberOfShards();
        java.lang.String[] strArray18 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder13.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest9, strSet19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder2.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet19);
        int int24 = builder23.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder23.numberOfShards(0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = builder23.creationDate((long) '4');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder28.removeAllAliases();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData30 = builder28.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: must specify positive number of shards for index [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.registerPrototype("index.version.upgraded_string", custom1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads(10L);
        boolean boolean26 = versionType12.isVersionConflictForReads(100L, (long) 'a');
        boolean boolean28 = versionType12.validateVersionForWrites((long) (short) 10);
        long long31 = versionType12.updateVersion(1L, (long) '4');
        long long34 = versionType12.updateVersion(0L, (long) 35);
        org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.lang.String> versionTypeEnumTuple36 = new org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.lang.String>((java.lang.Enum<org.elasticsearch.index.VersionType>) versionType12, "indices:data/write/bulk[s]");
        byte byte37 = versionType12.getValue();
        org.elasticsearch.index.VersionType versionType38 = versionType12.versionTypeForReplicationAndRecovery();
        byte byte39 = versionType12.getValue();
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 52L + "'", long31 == 52L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 35L + "'", long34 == 35L);
        org.junit.Assert.assertTrue("'" + byte37 + "' != '" + (byte) 3 + "'", byte37 == (byte) 3);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertTrue("'" + byte39 + "' != '" + (byte) 3 + "'", byte39 == (byte) 3);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        long long30 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters31 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(discoveryNodeFilters31);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.tasks.TaskId taskId2 = null;
        java.util.Map<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strMap4 = org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes;
        org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes = strMap4;
        org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes = strMap4;
        org.elasticsearch.common.collect.Tuple<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom>> strComparableTuple7 = new org.elasticsearch.common.collect.Tuple<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom>>((java.lang.Comparable<java.lang.String>) "hi!", strMap4);
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet8 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.action.ActionRequest actionRequest10 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        boolean boolean14 = bulkShardRequest12.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int17 = builder16.numberOfShards();
        java.lang.String[] strArray21 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder16.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest12, strSet22);
        org.elasticsearch.common.collect.Tuple<java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>, java.lang.Iterable<java.lang.String>> indexShardStateSetTuple26 = new org.elasticsearch.common.collect.Tuple<java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>, java.lang.Iterable<java.lang.String>>(indexShardStateSet8, (java.lang.Iterable<java.lang.String>) strSet22);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable35, writeResult36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        org.elasticsearch.index.VersionType versionType39 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean43 = versionType39.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest29, versionType39);
        boolean boolean48 = versionType39.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        org.elasticsearch.common.collect.Tuple<java.util.AbstractCollection<java.lang.String>, org.elasticsearch.common.io.stream.Writeable> strCollectionTuple49 = new org.elasticsearch.common.collect.Tuple<java.util.AbstractCollection<java.lang.String>, org.elasticsearch.common.io.stream.Writeable>((java.util.AbstractCollection<java.lang.String>) strSet22, (org.elasticsearch.common.io.stream.Writeable) versionType39);
        org.elasticsearch.common.collect.Tuple<java.util.Map<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom>, java.util.Set<java.lang.String>> strMapTuple50 = org.elasticsearch.common.collect.Tuple.tuple(strMap4, (java.util.Set<java.lang.String>) strSet22);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting51 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting53 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting55 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting57 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting59 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result61 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest63 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest64 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest63);
        org.elasticsearch.action.update.UpdateHelper.Result result65 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest67 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest68 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest67);
        java.lang.Throwable throwable70 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult71 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult72 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result65, (org.elasticsearch.action.ActionRequest) bulkShardRequest67, false, throwable70, writeResult71);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple73 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest64, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest67);
        org.elasticsearch.tasks.TaskId taskId74 = null;
        bulkShardRequest67.setParentTask(taskId74);
        org.elasticsearch.index.shard.ShardId shardId76 = bulkShardRequest67.shardId();
        bulkShardRequest67.seqNo((long) 0);
        java.lang.Throwable throwable80 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult81 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult82 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result61, (org.elasticsearch.action.ActionRequest) bulkShardRequest67, false, throwable80, writeResult81);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException83 = bulkShardRequest67.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure85 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting59, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException83, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure87 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting57, "update", (java.lang.Throwable) actionRequestValidationException83, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure89 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting55, "_na_", (java.lang.Throwable) actionRequestValidationException83, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure91 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting53, "_na_", (java.lang.Throwable) actionRequestValidationException83, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure93 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting51, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException83, "update");
        org.elasticsearch.common.collect.Tuple<java.util.AbstractCollection<java.lang.String>, org.elasticsearch.action.ActionRequestValidationException> strCollectionTuple94 = org.elasticsearch.common.collect.Tuple.tuple((java.util.AbstractCollection<java.lang.String>) strSet22, actionRequestValidationException83);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.tasks.TaskId, org.elasticsearch.action.ActionRequestValidationException> taskIdTuple95 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.tasks.TaskId, org.elasticsearch.action.ActionRequestValidationException>(taskId2, actionRequestValidationException83);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure97 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [97] is different than the one provided [1]", (java.lang.Throwable) actionRequestValidationException83, "current version [100] is different than the one provided [1]");
// flaky:         org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(indexShardStateSet8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMapTuple50);
        org.junit.Assert.assertNull(shardId76);
        org.junit.Assert.assertNotNull(actionRequestValidationException83);
        org.junit.Assert.assertNotNull(strCollectionTuple94);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting0 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_SHARED_FS_ALLOW_RECOVERY_ON_ANY_NODE_SETTING;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        int int6 = builder3.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder9.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder10.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int16 = builder15.numberOfShards();
        java.lang.String[] strArray20 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder15.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder10.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple25 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData7, (java.lang.Iterable<java.lang.String>) strSet21);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap26 = indexMetaData7.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData7);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData7);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData7);
        org.elasticsearch.common.settings.Settings settings30 = indexMetaData7.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder3.settings(settings30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent> toXContentToBytesTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.action.support.ToXContentToBytes) booleanSetting0, (org.elasticsearch.common.xcontent.ToXContent) settings30);
        org.elasticsearch.common.settings.Settings settings33 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings30);
        org.elasticsearch.common.settings.Settings settings34 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings30);
        boolean boolean35 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings30);
        boolean boolean36 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings30);
        org.elasticsearch.transport.TransportService transportService37 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService38 = null;
        org.elasticsearch.indices.IndicesService indicesService39 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool40 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction41 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction42 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper43 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters44 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction46 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings30, transportService37, clusterService38, indicesService39, threadPool40, shardStateAction41, mappingUpdatedAction42, updateHelper43, actionFilters44, indexNameExpressionResolver45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanSetting0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple25);
        org.junit.Assert.assertNotNull(strImmutableOpenMap26);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertNotNull(settings34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable23, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.tasks.TaskId taskId27 = null;
        bulkShardRequest20.setParentTask(taskId27);
        org.elasticsearch.index.shard.ShardId shardId29 = bulkShardRequest20.shardId();
        bulkShardRequest20.seqNo((long) 0);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable33, writeResult34);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = bulkShardRequest20.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException36, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "update", (java.lang.Throwable) actionRequestValidationException36, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "_na_", (java.lang.Throwable) actionRequestValidationException36, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "_na_", (java.lang.Throwable) actionRequestValidationException36, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException36, "current version [2] is higher than the one provided [-1]");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException36, "index.version.upgraded_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [2] is higher than the one provided [-1]", (java.lang.Throwable) actionRequestValidationException36, "");
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        bulkShardRequest5.remoteAddress(transportAddress7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable10, writeResult11);
        org.elasticsearch.action.ActionRequest actionRequest15 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest15);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest17);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable28, writeResult29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.action.ActionRequest actionRequest33 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest33);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest34, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest39 = bulkItemRequestTuple38.v2();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = bulkShardRequestReplicationRequest39.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = bulkShardRequest5.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest41);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable16, writeResult17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest8.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue20 = bulkShardRequest8.timeout();
        long long21 = bulkShardRequest8.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result25 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable35, writeResult36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        org.elasticsearch.tasks.TaskId taskId39 = null;
        bulkShardRequest32.setParentTask(taskId39);
        org.elasticsearch.index.shard.ShardId shardId41 = bulkShardRequest32.shardId();
        bulkShardRequest32.seqNo((long) 0);
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult46 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult47 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable45, writeResult46);
        long long48 = bulkShardRequest32.seqNo();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result25, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, writeResult49);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, writeResult51);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest53 = new org.elasticsearch.action.bulk.BulkItemRequest(97, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        java.lang.String str54 = bulkShardRequest32.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple55 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest56 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        int int57 = bulkItemRequest56.id();
        int int58 = bulkItemRequest56.id();
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        bulkShardRequest7.remoteAddress(transportAddress9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable12, writeResult13);
        org.elasticsearch.action.update.UpdateResponse updateResponse15 = updateResult14.noopResult;
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest16 = updateResult14.request();
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = bulkShardRequest20.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.action.ActionRequest actionRequest28 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest28);
        org.elasticsearch.action.ActionRequest actionRequest32 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest32);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest34);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest34);
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = null;
        bulkShardRequest34.remoteAddress(transportAddress38);
        org.elasticsearch.action.update.UpdateHelper.Result result40 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue42 = bulkShardRequest41.timeout();
        java.lang.String str43 = bulkShardRequest41.index();
        org.elasticsearch.common.unit.TimeValue timeValue44 = bulkShardRequest41.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting46 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting48 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result50 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest52 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest53 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest52);
        org.elasticsearch.action.update.UpdateHelper.Result result54 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest56 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest57 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest56);
        java.lang.Throwable throwable59 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult60 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult61 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result54, (org.elasticsearch.action.ActionRequest) bulkShardRequest56, false, throwable59, writeResult60);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple62 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest53, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest56);
        org.elasticsearch.tasks.TaskId taskId63 = null;
        bulkShardRequest56.setParentTask(taskId63);
        org.elasticsearch.index.shard.ShardId shardId65 = bulkShardRequest56.shardId();
        bulkShardRequest56.seqNo((long) 0);
        java.lang.Throwable throwable69 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult70 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult71 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result50, (org.elasticsearch.action.ActionRequest) bulkShardRequest56, false, throwable69, writeResult70);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException72 = bulkShardRequest56.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure74 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting48, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException72, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure76 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting46, "update", (java.lang.Throwable) actionRequestValidationException72, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult77 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult78 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result40, (org.elasticsearch.action.ActionRequest) bulkShardRequest41, false, (java.lang.Throwable) actionRequestValidationException72, writeResult77);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException> transportRequestTuple79 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException>((org.elasticsearch.transport.TransportRequest) bulkShardRequest34, (java.lang.RuntimeException) actionRequestValidationException72);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure81 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "", (java.lang.Throwable) actionRequestValidationException72, "index.shadow_replicas");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult82 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult83 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, (java.lang.Throwable) actionRequestValidationException72, writeResult82);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult84 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult85 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest16, false, (java.lang.Throwable) actionRequestValidationException72, writeResult84);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure87 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [97] is different than the one provided [1]", (java.lang.Throwable) actionRequestValidationException72, "delete");
        java.lang.String str88 = shardFailure87.reason;
        org.junit.Assert.assertNull(updateResponse15);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest16);
        org.junit.Assert.assertNotNull(bulkShardRequest23);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNull(shardId65);
        org.junit.Assert.assertNotNull(actionRequestValidationException72);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "current version [97] is different than the one provided [1]" + "'", str88, "current version [97] is different than the one provided [1]");
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = bulkShardRequest4.setShardId(shardId7);
        org.elasticsearch.common.io.stream.StreamInput streamInput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest8.readFrom(streamInput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest8);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.update.UpdateHelper.Result result11 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result11, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, throwable16, writeResult17);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.action.ActionRequest actionRequest21 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest21);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "", throwable29, "");
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable35, writeResult36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure31, (org.elasticsearch.transport.TransportMessage) bulkShardRequest33);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = bulkShardRequest33.index("index.version.created");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest40);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 3, (org.elasticsearch.action.ActionRequest) bulkShardRequest40);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput43 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest40.writeTo(streamOutput43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest40);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder3 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder6.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder7.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int13 = builder12.numberOfShards();
        java.lang.String[] strArray17 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder12.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet18);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder7.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet18);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple22 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData4, (java.lang.Iterable<java.lang.String>) strSet18);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap23 = indexMetaData4.getAliases();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData25 = indexMetaData4.mapping("index.version.created");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters26 = indexMetaData4.requireFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap27 = indexMetaData4.getAliases();
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.ActionRequest actionRequest29 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting33 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting35 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting37 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting39 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result41 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest43);
        org.elasticsearch.action.update.UpdateHelper.Result result45 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest47);
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result45, (org.elasticsearch.action.ActionRequest) bulkShardRequest47, false, throwable50, writeResult51);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple53 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest44, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest47);
        org.elasticsearch.tasks.TaskId taskId54 = null;
        bulkShardRequest47.setParentTask(taskId54);
        org.elasticsearch.index.shard.ShardId shardId56 = bulkShardRequest47.shardId();
        bulkShardRequest47.seqNo((long) 0);
        java.lang.Throwable throwable60 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult61 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult62 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result41, (org.elasticsearch.action.ActionRequest) bulkShardRequest47, false, throwable60, writeResult61);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException63 = bulkShardRequest47.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure65 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting39, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException63, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting37, "update", (java.lang.Throwable) actionRequestValidationException63, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure69 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting35, "_na_", (java.lang.Throwable) actionRequestValidationException63, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure71 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting33, "_na_", (java.lang.Throwable) actionRequestValidationException63, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure73 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting31, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException63, "update");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult74 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult75 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, actionRequest29, true, (java.lang.Throwable) actionRequestValidationException63, writeResult74);
        org.elasticsearch.common.xcontent.ToXContent.Params params76 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params> exceptionTuple77 = new org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params>((java.lang.Exception) actionRequestValidationException63, params76);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>, org.elasticsearch.common.xcontent.ToXContent.Params> strImmutableOpenMapTuple78 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>, org.elasticsearch.common.xcontent.ToXContent.Params>(strImmutableOpenMap27, params76);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder79 = indexMetaData0.toXContent(xContentBuilder3, params76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple22);
        org.junit.Assert.assertNotNull(strImmutableOpenMap23);
        org.junit.Assert.assertNull(mappingMetaData25);
        org.junit.Assert.assertNull(discoveryNodeFilters26);
        org.junit.Assert.assertNotNull(strImmutableOpenMap27);
        org.junit.Assert.assertNull(shardId56);
        org.junit.Assert.assertNotNull(actionRequestValidationException63);
        org.junit.Assert.assertNotNull(params76);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.Version version8 = indexMetaData6.getCreationVersion();
        long long9 = indexMetaData6.getCreationDate();
        long long10 = indexMetaData6.getCreationDate();
        java.util.Set<java.lang.String> strSet12 = null; // flaky: indexMetaData6.activeAllocationIds((int) (byte) 3);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData14 = indexMetaData6.mapping("hi!");
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff15 = indexMetaData0.diff(indexMetaData6);
        int int16 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData17);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap19 = indexMetaData17.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet20 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData17, indexShardStateSet20);
        boolean boolean23 = indexMetaData17.isSameUUID("index.auto_expand_replicas");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap24 = indexMetaData17.getMappings();
        org.elasticsearch.index.Index index25 = indexMetaData17.getMergeSourceIndex();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff26 = indexMetaData0.diff(indexMetaData17);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData28 = indexMetaData0.mapping("index.");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(version5);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(strSet12);
        org.junit.Assert.assertNull(mappingMetaData14);
        org.junit.Assert.assertNotNull(indexMetaDataDiff15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap19);
        org.junit.Assert.assertNotNull(indexShardStateSet20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strImmutableOpenMap24);
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(indexMetaDataDiff26);
        org.junit.Assert.assertNull(mappingMetaData28);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.update.UpdateHelper.Result result10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result10, (org.elasticsearch.action.ActionRequest) bulkShardRequest12, false, throwable15, writeResult16);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.ActionRequest actionRequest20 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest20);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput26 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest6.writeTo(streamOutput26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getCreationVersion();
        org.elasticsearch.index.Index index8 = indexMetaData1.getMergeSourceIndex();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        int int11 = indexMetaData1.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.common.settings.Settings.Builder builder13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder12.settings(builder13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNull(index8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue4 = bulkShardRequest3.timeout();
        java.lang.String str5 = bulkShardRequest3.index();
        org.elasticsearch.index.shard.ShardId shardId6 = bulkShardRequest3.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult9);
        org.elasticsearch.action.ActionRequest actionRequest11 = updateResult10.actionRequest;
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(actionRequest11);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = bulkShardRequest20.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable36, writeResult37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, true, throwable41, writeResult42);
        org.elasticsearch.index.shard.ShardId shardId44 = bulkShardRequest33.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue45 = bulkShardRequest33.timeout();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = bulkShardRequest33.setShardId(shardId46);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest47);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = bulkItemRequest2.index();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest23);
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(bulkShardRequest47);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder9.numberOfReplicas((int) (byte) -1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder9.index("index.data_path");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData18 = builder9.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: must specify numberOfShards for index [index.data_path]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.requireFilters();
        org.elasticsearch.common.settings.Settings settings7 = indexMetaData0.getSettings();
        boolean boolean8 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.action.update.UpdateHelper.Result result13 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result13, (org.elasticsearch.action.ActionRequest) bulkShardRequest15, false, throwable18, writeResult19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest12, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.common.settings.Setting<java.lang.Integer> intSetting23 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_NUMBER_OF_REPLICAS_SETTING;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent> streamableTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest15, (org.elasticsearch.common.xcontent.ToXContent) intSetting23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.settings.Settings, org.elasticsearch.action.support.ToXContentToBytes> settingsTuple25 = org.elasticsearch.common.collect.Tuple.tuple(settings7, (org.elasticsearch.action.support.ToXContentToBytes) intSetting23);
        boolean boolean26 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings7);
        org.elasticsearch.transport.TransportService transportService27 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService28 = null;
        org.elasticsearch.indices.IndicesService indicesService29 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool30 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction31 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction32 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper33 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters34 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction36 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings7, transportService27, clusterService28, indicesService29, threadPool30, shardStateAction31, mappingUpdatedAction32, updateHelper33, actionFilters34, indexNameExpressionResolver35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(version5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(settings7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intSetting23);
        org.junit.Assert.assertNotNull(settingsTuple25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings8 = indexMetaData1.getSettings();
        java.lang.String str9 = indexMetaData1.getIndexUUID();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap11 = indexMetaData1.getMappings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.Version version13 = indexMetaData1.getUpgradedVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(settings8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_na_" + "'", str9, "_na_");
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNotNull(strImmutableOpenMap11);
        org.junit.Assert.assertNotNull(version13);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        boolean boolean3 = versionType0.isVersionConflictForReads((long) 10, (long) (byte) -1);
        byte byte4 = versionType0.getValue();
        org.elasticsearch.index.VersionType versionType5 = versionType0.versionTypeForReplicationAndRecovery();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            versionType0.writeTo(streamOutput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + byte4 + "' != '" + (byte) 2 + "'", byte4 == (byte) 2);
        org.junit.Assert.assertNotNull(versionType5);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable2, "");
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure4, (org.elasticsearch.transport.TransportMessage) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = bulkShardRequest6.index("index.version.created");
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest6.setShardId(shardId14);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable27, writeResult28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, true, throwable32, writeResult33);
        org.elasticsearch.index.shard.ShardId shardId35 = bulkShardRequest24.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue36 = bulkShardRequest24.timeout();
        org.elasticsearch.tasks.TaskId taskId37 = bulkShardRequest24.getParentTask();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, writeResult38);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.update.UpdateHelper.Result result41 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest43);
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result41, (org.elasticsearch.action.ActionRequest) bulkShardRequest43, false, throwable46, writeResult47);
        org.elasticsearch.action.update.UpdateHelper.Result result49 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        org.elasticsearch.action.update.UpdateHelper.Result result53 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest56 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest55);
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result53, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable58, writeResult59);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest52, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult64 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult65 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result49, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, true, throwable63, writeResult64);
        org.elasticsearch.index.shard.ShardId shardId66 = bulkShardRequest55.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue67 = bulkShardRequest55.timeout();
        org.elasticsearch.tasks.TaskId taskId68 = bulkShardRequest55.getParentTask();
        bulkShardRequest43.setParentTask(taskId68);
        bulkShardRequest24.setParentTask(taskId68);
        bulkShardRequest6.setParentTask(taskId68);
        long long72 = bulkShardRequest6.primaryTerm();
        org.junit.Assert.assertNotNull(bulkShardRequest13);
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(taskId37);
        org.junit.Assert.assertNull(shardId66);
        org.junit.Assert.assertNotNull(timeValue67);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(97, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = null;
        java.lang.Throwable throwable7 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting5, "", throwable7, "");
        org.elasticsearch.action.update.UpdateHelper.Result result10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result10, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable13, writeResult14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure9, (org.elasticsearch.transport.TransportMessage) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = bulkShardRequest11.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = bulkShardRequest11.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        bulkShardRequest11.primaryTerm((long) (byte) 2);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = bulkItemRequestTuple24.v1();
        int int26 = bulkItemRequest25.id();
        org.junit.Assert.assertNotNull(bulkShardRequest18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(bulkItemRequest25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 97 + "'", int26 == 97);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable2, "");
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure4, (org.elasticsearch.transport.TransportMessage) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = bulkShardRequest6.index("index.version.created");
        long long14 = bulkShardRequest6.seqNo();
        long long15 = bulkShardRequest6.primaryTerm();
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = bulkShardRequest6.indicesOptions();
        org.junit.Assert.assertNotNull(bulkShardRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions16);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters1 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = indexMetaData0.mappingOrDefault("index.auto_expand_replicas");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.creationDate((long) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = builder4.build();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder4.numberOfReplicas(0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder4.putMapping(mappingMetaData10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNull(discoveryNodeFilters1);
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData2 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData2);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap4 = indexMetaData2.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData2.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData2);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff7 = indexMetaData0.diff(indexMetaData2);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData2.requireFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(indexMetaData2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap4);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData6.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet9 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData6, indexShardStateSet9);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData6.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        org.elasticsearch.action.update.UpdateHelper.Result result15 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result15, (org.elasticsearch.action.ActionRequest) bulkShardRequest17, false, throwable20, writeResult21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest17);
        org.elasticsearch.index.VersionType versionType24 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean28 = versionType24.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest14, versionType24);
        boolean boolean33 = versionType24.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean34 = indexMetaData6.equals((java.lang.Object) boolean33);
        org.apache.lucene.util.Version version35 = indexMetaData6.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff36 = indexMetaData0.diff(indexMetaData6);
        // The following exception was thrown during execution in test generation
        try {
            long long38 = indexMetaData6.primaryTerm((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(version5);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertNotNull(indexShardStateSet9);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(version35);
        org.junit.Assert.assertNotNull(indexMetaDataDiff36);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure8 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", throwable6, "");
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure8, (org.elasticsearch.transport.TransportMessage) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = bulkShardRequest10.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = bulkShardRequest10.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting29 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        org.elasticsearch.action.update.UpdateHelper.Result result37 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        java.lang.Throwable throwable42 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult43 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult44 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result37, (org.elasticsearch.action.ActionRequest) bulkShardRequest39, false, throwable42, writeResult43);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple45 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest36, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest39);
        org.elasticsearch.tasks.TaskId taskId46 = null;
        bulkShardRequest39.setParentTask(taskId46);
        org.elasticsearch.index.shard.ShardId shardId48 = bulkShardRequest39.shardId();
        bulkShardRequest39.seqNo((long) 0);
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult53 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult54 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest39, false, throwable52, writeResult53);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException55 = bulkShardRequest39.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting31, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException55, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure59 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting29, "update", (java.lang.Throwable) actionRequestValidationException55, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure61 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "_na_", (java.lang.Throwable) actionRequestValidationException55, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure63 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "_na_", (java.lang.Throwable) actionRequestValidationException55, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure65 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "index.version.minimum_compatible", (java.lang.Throwable) actionRequestValidationException55, "index.uuid");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting21, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException55, "hi!");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult68 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult69 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, true, (java.lang.Throwable) actionRequestValidationException55, writeResult68);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure71 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.version.created_string", (java.lang.Throwable) actionRequestValidationException55, "current version [100] is higher than the one provided [-1]");
        org.junit.Assert.assertNotNull(bulkShardRequest17);
        org.junit.Assert.assertNull(transportAddress18);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(actionRequestValidationException55);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        long long19 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData21);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap23 = indexMetaData21.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet24 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData21, indexShardStateSet24);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters26 = indexMetaData21.includeFilters();
        org.elasticsearch.common.settings.Settings settings27 = indexMetaData21.getSettings();
        boolean boolean28 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings27);
        boolean boolean29 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder20.settings(settings27);
        org.elasticsearch.common.settings.Settings settings31 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings27);
        org.elasticsearch.transport.TransportService transportService32 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService33 = null;
        org.elasticsearch.indices.IndicesService indicesService34 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool35 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction36 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction37 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper38 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters39 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction41 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings31, transportService32, clusterService33, indicesService34, threadPool35, shardStateAction36, mappingUpdatedAction37, updateHelper38, actionFilters39, indexNameExpressionResolver40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap23);
        org.junit.Assert.assertNotNull(indexShardStateSet24);
        org.junit.Assert.assertNull(discoveryNodeFilters26);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(settings31);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters29 = indexMetaData0.getInitialRecoveryFilters();
        boolean boolean31 = indexMetaData0.isSameUUID("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int36 = builder35.numberOfShards();
        java.lang.String[] strArray40 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder35.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet41);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData45 = builder35.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder48 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int49 = builder48.numberOfShards();
        java.lang.String[] strArray53 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet54 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet54, strArray53);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder56 = builder48.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet54);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder57 = builder35.putActiveAllocationIds((int) (byte) 3, (java.util.Set<java.lang.String>) strSet54);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder58 = builder32.putActiveAllocationIds((int) ' ', (java.util.Set<java.lang.String>) strSet54);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder60 = builder32.numberOfShards(52);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder62 = builder32.removeAlias("current version [100] is higher than the one provided [-1]");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData63 = builder32.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: primaryTerms length is [1] but should be equal to number of shards [52]");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNull(mappingMetaData45);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder58);
        org.junit.Assert.assertNotNull(builder60);
        org.junit.Assert.assertNotNull(builder62);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData1.getInitialRecoveryFilters();
        boolean boolean10 = indexMetaData1.isSameUUID("");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData1.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.Version version13 = indexMetaData1.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings14 = indexMetaData1.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData1.writeTo(streamOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(version13);
        org.junit.Assert.assertNotNull(settings14);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder9.numberOfReplicas((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder9.primaryTerm(97, (long) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: you must set the number of shards before setting/reading primary terms");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData11 = builder1.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder14.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder15.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest20 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest20);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        boolean boolean24 = bulkShardRequest22.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int27 = builder26.numberOfShards();
        java.lang.String[] strArray31 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = builder26.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet32);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest22, strSet32);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = builder15.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet32);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder37 = builder1.putActiveAllocationIds((int) (byte) 0, (java.util.Set<java.lang.String>) strSet32);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData38 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData39 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData39);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap41 = indexMetaData39.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters42 = indexMetaData39.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff43 = indexMetaData38.diff(indexMetaData39);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters44 = indexMetaData39.requireFilters();
        org.elasticsearch.Version version45 = indexMetaData39.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData46 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData46);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap48 = indexMetaData46.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet49 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple50 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData46, indexShardStateSet49);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff51 = indexMetaData39.diff(indexMetaData46);
        boolean boolean53 = indexMetaData39.isSameUUID("index.uuid");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap54 = indexMetaData39.getMappings();
        org.elasticsearch.action.ActionRequest actionRequest56 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest57 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest56);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest58 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple59 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest57, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest58);
        boolean boolean60 = bulkShardRequest58.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder62 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int63 = builder62.numberOfShards();
        java.lang.String[] strArray67 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet68 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet68, strArray67);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder70 = builder62.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple71 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest58, strSet68);
        org.elasticsearch.cluster.block.ClusterBlock clusterBlock72 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_WRITE_BLOCK;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting73 = null;
        java.lang.Throwable throwable75 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure77 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting73, "index.shared_filesystem", throwable75, "index.shared_filesystem");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.block.ClusterBlock, org.elasticsearch.index.shard.IndexShard.ShardFailure> clusterBlockTuple78 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.block.ClusterBlock, org.elasticsearch.index.shard.IndexShard.ShardFailure>(clusterBlock72, shardFailure77);
        org.elasticsearch.common.collect.Tuple<java.util.LinkedHashSet<java.lang.String>, org.elasticsearch.cluster.block.ClusterBlock> strSetTuple79 = new org.elasticsearch.common.collect.Tuple<java.util.LinkedHashSet<java.lang.String>, org.elasticsearch.cluster.block.ClusterBlock>(strSet68, clusterBlock72);
        java.lang.String[] strArray92 = new java.lang.String[] { "index.blocks.write", "index.creation_date_string", "current version [10] is higher than the one provided [98]", "current version [97] is different than the one provided [1]", "index.version.upgraded", "index.creation_date_string", "index.version.minimum_compatible", "", "delete", "index.shadow_replicas", "index.shadow_replicas", "index.version.minimum_compatible" };
        java.util.ArrayList<java.lang.String> strList93 = new java.util.ArrayList<java.lang.String>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList93, strArray92);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData95 = null;
        org.elasticsearch.common.collect.Tuple<java.util.AbstractCollection<java.lang.String>, org.elasticsearch.cluster.metadata.IndexMetaData> strCollectionTuple96 = new org.elasticsearch.common.collect.Tuple<java.util.AbstractCollection<java.lang.String>, org.elasticsearch.cluster.metadata.IndexMetaData>((java.util.AbstractCollection<java.lang.String>) strList93, indexMetaData95);
        org.elasticsearch.common.collect.Tuple<java.util.LinkedHashSet<java.lang.String>, java.util.ArrayList<java.lang.String>> strSetTuple97 = new org.elasticsearch.common.collect.Tuple<java.util.LinkedHashSet<java.lang.String>, java.util.ArrayList<java.lang.String>>(strSet68, strList93);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent, java.util.AbstractList<java.lang.String>> toXContentTuple98 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent, java.util.AbstractList<java.lang.String>>((org.elasticsearch.common.xcontent.ToXContent) indexMetaData39, (java.util.AbstractList<java.lang.String>) strList93);
        org.elasticsearch.common.collect.Tuple<java.util.Set<java.lang.String>, java.util.RandomAccess> strSetTuple99 = org.elasticsearch.common.collect.Tuple.tuple((java.util.Set<java.lang.String>) strSet32, (java.util.RandomAccess) strList93);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(mappingMetaData11);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(indexMetaData38);
        org.junit.Assert.assertNotNull(indexMetaData39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap41);
        org.junit.Assert.assertNull(discoveryNodeFilters42);
        org.junit.Assert.assertNotNull(indexMetaDataDiff43);
        org.junit.Assert.assertNull(discoveryNodeFilters44);
        org.junit.Assert.assertNotNull(version45);
        org.junit.Assert.assertNotNull(indexMetaData46);
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap48);
        org.junit.Assert.assertNotNull(indexShardStateSet49);
        org.junit.Assert.assertNotNull(indexMetaDataDiff51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strImmutableOpenMap54);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(builder62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertNotNull(clusterBlock72);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(strSetTuple99);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.index.Index index29 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters30 = indexMetaData0.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap31 = indexMetaData0.getCustoms();
        org.elasticsearch.common.io.stream.StreamInput streamInput32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData33 = indexMetaData0.readFrom(streamInput32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(index29);
        org.junit.Assert.assertNull(discoveryNodeFilters30);
        org.junit.Assert.assertNotNull(strImmutableOpenMap31);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap1 = indexMetaData0.getCustoms();
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple7 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.update.UpdateHelper.Result result12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result12, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, throwable17, writeResult18);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.action.ActionRequest actionRequest22 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest22);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, org.elasticsearch.action.bulk.BulkItemRequest> indexMetaDataFromXContentBuilderTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, org.elasticsearch.action.bulk.BulkItemRequest>((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, bulkItemRequest8);
        org.elasticsearch.action.ActionRequest actionRequest29 = bulkItemRequest8.request();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(strImmutableOpenMap1);
        org.junit.Assert.assertNotNull(actionRequest29);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.number_of_shards");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.creationDate((long) ' ');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.version((long) 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder3.primaryTerm((int) (byte) 3, (long) 32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: you must set the number of shards before setting/reading primary terms");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue9 = bulkShardRequest8.timeout();
        java.lang.String str10 = bulkShardRequest8.index();
        org.elasticsearch.common.unit.TimeValue timeValue11 = bulkShardRequest8.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = bulkShardRequest5.timeout(timeValue11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.index.shard.ShardId shardId14 = bulkShardRequest12.shardId();
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(bulkShardRequest12);
        org.junit.Assert.assertNull(shardId14);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        org.elasticsearch.action.ActionRequest actionRequest1 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest1);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest3);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = bulkItemRequestTuple4.v1();
// flaky:         org.junit.Assert.assertNotNull(bulkItemRequest5);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.Version version6 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.io.stream.StreamInput streamInput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData9 = indexMetaData0.readFrom(streamInput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData14);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap16 = indexMetaData14.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet17 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData14, indexShardStateSet17);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData14.includeFilters();
        org.elasticsearch.common.settings.Settings settings20 = indexMetaData14.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder9.settings(settings20);
        int int22 = builder9.numberOfReplicas();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder9.primaryTerm((int) 'a', (long) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 97");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap16);
        org.junit.Assert.assertNotNull(indexShardStateSet17);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        java.util.Set<java.lang.String> strSet22 = null; // flaky: indexMetaData0.activeAllocationIds((int) (short) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder25.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = builder26.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int32 = builder31.numberOfShards();
        java.lang.String[] strArray36 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = builder31.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet37);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder26.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple41 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData23, (java.lang.Iterable<java.lang.String>) strSet37);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap42 = indexMetaData23.getAliases();
        int int43 = indexMetaData23.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters44 = indexMetaData23.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap45 = indexMetaData23.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters46 = indexMetaData23.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData23);
        org.elasticsearch.common.settings.Settings settings48 = indexMetaData23.getSettings();
        org.elasticsearch.index.Index index49 = indexMetaData23.getMergeSourceIndex();
        long long50 = indexMetaData23.getCreationDate();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff51 = indexMetaData0.diff(indexMetaData23);
        int int52 = indexMetaData23.getNumberOfReplicas();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple41);
        org.junit.Assert.assertNotNull(strImmutableOpenMap42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters44);
        org.junit.Assert.assertNotNull(strImmutableOpenMap45);
        org.junit.Assert.assertNull(discoveryNodeFilters46);
        org.junit.Assert.assertNotNull(settings48);
        org.junit.Assert.assertNull(index49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaDataDiff51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.Version version6 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap7 = indexMetaData0.getCustoms();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(strImmutableOpenMap7);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state4 = indexMetaData0.getState();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + state4 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state4.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.tasks.TaskId taskId16 = null;
        bulkShardRequest9.setParentTask(taskId16);
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, throwable19, writeResult20);
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = bulkShardRequest9.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, throwable25, writeResult26);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        bulkShardRequest30.primaryTerm((long) (-1));
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.action.IndicesRequest> streamableTuple35 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest9, (org.elasticsearch.action.IndicesRequest) bulkShardRequest30);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, writeResult36);
        boolean boolean38 = updateResult37.success();
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertNotNull(streamableTuple35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData4 = indexMetaData0.mapping("index.version.created");
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.common.io.stream.StreamInput streamInput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff7 = indexMetaData0.readDiffFrom(streamInput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(mappingMetaData4);
        org.junit.Assert.assertNull(version5);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.index.VersionType versionType13 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean17 = versionType13.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest3, versionType13);
        boolean boolean22 = versionType13.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean24 = versionType13.validateVersionForReads((long) (byte) 100);
        long long27 = versionType13.updateVersion((long) (byte) 0, (long) (byte) -1);
        org.elasticsearch.index.VersionType versionType28 = versionType13.versionTypeForReplicationAndRecovery();
        boolean boolean30 = versionType13.validateVersionForReads(10L);
        boolean boolean34 = versionType13.isVersionConflictForWrites((long) (byte) 3, (long) '4', false);
        boolean boolean38 = versionType13.isVersionConflictForWrites(52L, (long) 35, true);
        boolean boolean42 = versionType13.isVersionConflictForWrites(52L, (long) 32, true);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.VersionType versionType43 = org.elasticsearch.index.VersionType.fromString("index.priority", versionType13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No version type match [index.priority]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        java.util.Map<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strMap1 = org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes;
        org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes = strMap1;
        org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes = strMap1;
        org.elasticsearch.common.collect.Tuple<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom>> strComparableTuple4 = new org.elasticsearch.common.collect.Tuple<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom>>((java.lang.Comparable<java.lang.String>) "hi!", strMap1);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData5 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder7.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder8.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int14 = builder13.numberOfShards();
        java.lang.String[] strArray18 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder13.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder8.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple23 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData5, (java.lang.Iterable<java.lang.String>) strSet19);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap24 = indexMetaData5.getAliases();
        int int25 = indexMetaData5.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters26 = indexMetaData5.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap27 = indexMetaData5.getAliases();
        org.elasticsearch.common.collect.Tuple<java.util.Map<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom>, org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>> strMapTuple28 = new org.elasticsearch.common.collect.Tuple<java.util.Map<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom>, org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>>(strMap1, strImmutableOpenMap27);
        org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes = strMap1;
        org.elasticsearch.cluster.metadata.IndexMetaData.customPrototypes = strMap1;
        java.lang.Cloneable cloneable31 = null;
        org.elasticsearch.common.collect.Tuple<java.util.Map<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom>, java.lang.Cloneable> strMapTuple32 = new org.elasticsearch.common.collect.Tuple<java.util.Map<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom>, java.lang.Cloneable>(strMap1, cloneable31);
// flaky:         org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(indexMetaData5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple23);
        org.junit.Assert.assertNotNull(strImmutableOpenMap24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters26);
        org.junit.Assert.assertNotNull(strImmutableOpenMap27);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable13, writeResult14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.tasks.TaskId taskId17 = null;
        bulkShardRequest10.setParentTask(taskId17);
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, true, throwable20, writeResult21);
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = bulkShardRequest10.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting30 = null;
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting30, "", throwable32, "");
        org.elasticsearch.action.update.UpdateHelper.Result result35 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result35, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, false, throwable38, writeResult39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure34, (org.elasticsearch.transport.TransportMessage) bulkShardRequest36);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = bulkShardRequest36.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = bulkShardRequest36.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting47 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result49 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        org.elasticsearch.action.update.UpdateHelper.Result result53 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest56 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest55);
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result53, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable58, writeResult59);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest52, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        org.elasticsearch.tasks.TaskId taskId62 = null;
        bulkShardRequest55.setParentTask(taskId62);
        org.elasticsearch.index.shard.ShardId shardId64 = bulkShardRequest55.shardId();
        bulkShardRequest55.seqNo((long) 0);
        java.lang.Throwable throwable68 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult69 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult70 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result49, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable68, writeResult69);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException71 = bulkShardRequest55.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure73 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting47, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException71, "index.blocks.write");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult74 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult75 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, false, (java.lang.Throwable) actionRequestValidationException71, writeResult74);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure77 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "indices:data/write/bulk[s]", (java.lang.Throwable) actionRequestValidationException71, "hi!");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult78 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult79 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, (java.lang.Throwable) actionRequestValidationException71, writeResult78);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure81 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [0] is different than the one provided [100]", (java.lang.Throwable) actionRequestValidationException71, "current version [100] is higher than the one provided [-1]");
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNotNull(bulkShardRequest43);
        org.junit.Assert.assertNull(transportAddress44);
        org.junit.Assert.assertNull(shardId64);
        org.junit.Assert.assertNotNull(actionRequestValidationException71);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.version((long) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder2.removeAlias("state-");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder6.index("current version [10] is higher than the one provided [98]");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder6.removeAllAliases();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        boolean boolean7 = bulkShardRequest5.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int10 = builder9.numberOfShards();
        java.lang.String[] strArray14 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder9.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest5, strSet15);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = bulkShardRequest5.setShardId(shardId19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = bulkItemRequest22.index();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(bulkShardRequest20);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.removeAlias("current version [97] is different than the one provided [35]");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.version((long) (short) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state8 = org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE;
        byte byte9 = state8.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder5.state(state8);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder1.state(state8);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom13 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder1.putCustom("", custom13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder1.removeAlias("current version [10] is higher than the one provided [98]");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder16.numberOfShards((int) (byte) 1);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + state8 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE + "'", state8.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE));
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 1 + "'", byte9 == (byte) 1);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue19 = bulkShardRequest18.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = bulkShardRequest15.timeout(timeValue19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, writeResult22);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, false, throwable33, writeResult34);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest30);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, true, throwable38, writeResult39);
        org.elasticsearch.index.shard.ShardId shardId41 = bulkShardRequest30.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue42 = bulkShardRequest30.timeout();
        org.elasticsearch.tasks.TaskId taskId43 = bulkShardRequest30.getParentTask();
        bulkShardRequest20.setParentTask(taskId43);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest46 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.index.shard.ShardId shardId47 = bulkShardRequest20.shardId();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest0, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = bulkItemRequestTuple48.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(bulkShardRequest20);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNull(shardId47);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = bulkShardRequest20.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData27 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData27);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap29 = indexMetaData27.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters30 = indexMetaData27.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData27);
        org.apache.lucene.util.Version version32 = indexMetaData27.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData33 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData33);
        org.elasticsearch.Version version35 = indexMetaData33.getCreationVersion();
        long long36 = indexMetaData33.getCreationDate();
        long long37 = indexMetaData33.getCreationDate();
        java.util.Set<java.lang.String> strSet39 = null; // flaky: indexMetaData33.activeAllocationIds((int) (byte) 3);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData41 = indexMetaData33.mapping("hi!");
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff42 = indexMetaData27.diff(indexMetaData33);
        boolean boolean43 = bulkItemRequestTuple26.equals((java.lang.Object) indexMetaData33);
        long long44 = indexMetaData33.getCreationDate();
        org.elasticsearch.index.Index index45 = indexMetaData33.getMergeSourceIndex();
        org.elasticsearch.common.io.stream.StreamInput streamInput46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData47 = indexMetaData33.readFrom(streamInput46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest23);
        org.junit.Assert.assertNotNull(indexMetaData27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap29);
        org.junit.Assert.assertNull(discoveryNodeFilters30);
        org.junit.Assert.assertNull(version32);
        org.junit.Assert.assertNotNull(indexMetaData33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNull(strSet39);
        org.junit.Assert.assertNull(mappingMetaData41);
        org.junit.Assert.assertNotNull(indexMetaDataDiff42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNull(index45);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.version((long) (byte) 100);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.Version version6 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int10 = builder9.numberOfShards();
        java.lang.String[] strArray14 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder9.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet15);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state18 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder17.state(state18);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder17.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData22);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap24 = indexMetaData22.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet25 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData22, indexShardStateSet25);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters27 = indexMetaData22.includeFilters();
        org.elasticsearch.common.settings.Settings settings28 = indexMetaData22.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder17.settings(settings28);
        boolean boolean30 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder7.settings(settings28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder31.numberOfShards((int) (byte) 10);
        int int34 = builder31.numberOfReplicas();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap24);
        org.junit.Assert.assertNotNull(indexShardStateSet25);
        org.junit.Assert.assertNull(discoveryNodeFilters27);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData11 = builder1.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int15 = builder14.numberOfShards();
        java.lang.String[] strArray19 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder14.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder1.putActiveAllocationIds((int) (byte) 3, (java.util.Set<java.lang.String>) strSet20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder23.index("hi!");
        java.lang.String str26 = builder23.index();
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(mappingMetaData11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateResponse updateResponse1 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult2 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, updateResponse1);
        org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestActionRequest3 = updateResult2.request();
        boolean boolean4 = updateResult2.failure();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult5 = updateResult2.writeResult;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult6 = updateResult2.writeResult;
        boolean boolean7 = updateResult2.failure();
        org.junit.Assert.assertNull(bulkShardRequestActionRequest3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(writeResult5);
        org.junit.Assert.assertNull(writeResult6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str4 = bulkShardRequest3.index();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult5 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult6 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult5);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult7 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult8 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult7);
        bulkShardRequest3.setParentTask("indices:data/write/bulk[s]", (long) ' ');
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        bulkShardRequest3.remoteAddress(transportAddress12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 2, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result19 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable28, writeResult29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result19, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, true, throwable33, writeResult34);
        org.elasticsearch.index.shard.ShardId shardId36 = bulkShardRequest25.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.common.unit.TimeValue timeValue38 = bulkShardRequest25.timeout();
        bulkShardRequest25.primaryTerm((long) '#');
        long long41 = bulkShardRequest25.seqNo();
        org.elasticsearch.tasks.TaskId taskId42 = bulkShardRequest25.getParentTask();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.tasks.Task task43 = bulkShardRequest3.createTask((long) 97, "current version [100] is higher than the one provided [-1]", "active_allocations", taskId42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(taskId42);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.ActionRequest actionRequest16 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest16);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.ActionRequest actionRequest22 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest22);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue28 = bulkShardRequest27.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = bulkShardRequest24.timeout(timeValue28);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = bulkShardRequest10.timeout(timeValue28);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult31 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult32 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, writeResult31);
        java.lang.String str33 = bulkShardRequest30.index();
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(bulkShardRequest29);
        org.junit.Assert.assertNotNull(bulkShardRequest30);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple9 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.ActionRequest actionRequest12 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest12);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue18 = bulkShardRequest17.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = bulkShardRequest14.timeout(timeValue18);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, writeResult21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, false, throwable32, writeResult33);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, true, throwable37, writeResult38);
        org.elasticsearch.index.shard.ShardId shardId40 = bulkShardRequest29.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue41 = bulkShardRequest29.timeout();
        org.elasticsearch.tasks.TaskId taskId42 = bulkShardRequest29.getParentTask();
        bulkShardRequest19.setParentTask(taskId42);
        bulkShardRequest19.primaryTerm((long) 10);
        java.lang.String str46 = bulkShardRequest19.index();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest0, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = bulkShardRequest19.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(bulkShardRequest19);
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        java.lang.String str23 = builder22.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom25 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder22.putCustom("index.version.created_string", custom25);
        int int27 = builder22.numberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.update.UpdateHelper.Result result10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result10, (org.elasticsearch.action.ActionRequest) bulkShardRequest12, false, throwable15, writeResult16);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.ActionRequest actionRequest20 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest20);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "", throwable28, "");
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable34, writeResult35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure30, (org.elasticsearch.transport.TransportMessage) bulkShardRequest32);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = bulkShardRequest32.index("index.version.created");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest39);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = bulkItemRequestTuple40.v1();
        org.junit.Assert.assertNotNull(bulkShardRequest39);
        org.junit.Assert.assertNotNull(bulkItemRequest41);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        int int2 = builder1.numberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAlias("index.number_of_replicas");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.putMapping(mappingMetaData5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = null;
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting15, "", throwable17, "");
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, false, throwable23, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure19, (org.elasticsearch.transport.TransportMessage) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = bulkShardRequest21.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = bulkShardRequest21.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        bulkShardRequest21.primaryTerm((long) (byte) 2);
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = null;
        bulkShardRequest21.remoteAddress(transportAddress34);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        bulkShardRequest21.remoteAddress(transportAddress37);
        bulkShardRequest21.primaryTerm((long) (short) -1);
        org.junit.Assert.assertNotNull(bulkShardRequest28);
        org.junit.Assert.assertNull(transportAddress29);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting3 = null;
        java.lang.Throwable throwable5 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting3, "", throwable5, "");
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure7, (org.elasticsearch.transport.TransportMessage) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest9.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = bulkShardRequest9.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult20);
        bulkShardRequest9.primaryTerm((long) 52);
        org.junit.Assert.assertNotNull(bulkShardRequest16);
        org.junit.Assert.assertNull(transportAddress17);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue9 = bulkShardRequest8.timeout();
        java.lang.String str10 = bulkShardRequest8.index();
        org.elasticsearch.common.unit.TimeValue timeValue11 = bulkShardRequest8.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = bulkShardRequest5.timeout(timeValue11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(35, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest16 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest16);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        java.lang.String str21 = bulkShardRequest18.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        java.lang.Object obj23 = null;
        boolean boolean24 = bulkItemRequestTuple22.equals(obj23);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(bulkShardRequest12);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest9 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.reflect.AnnotatedElement annotatedElement17 = null;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkShardRequest, java.lang.reflect.AnnotatedElement> bulkShardRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkShardRequest, java.lang.reflect.AnnotatedElement>(bulkShardRequest11, annotatedElement17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest11.shardId();
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, false, throwable32, writeResult33);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        org.elasticsearch.tasks.TaskId taskId36 = null;
        bulkShardRequest29.setParentTask(taskId36);
        org.elasticsearch.index.shard.ShardId shardId38 = bulkShardRequest29.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, writeResult39);
        long long41 = bulkShardRequest29.primaryTerm();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest43);
        org.elasticsearch.action.update.UpdateHelper.Result result45 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest47);
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result45, (org.elasticsearch.action.ActionRequest) bulkShardRequest47, false, throwable50, writeResult51);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple53 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest44, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest47);
        org.elasticsearch.action.ActionRequest actionRequest55 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest56 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest55);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest57 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple58 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest56, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest57);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple59 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest44, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest57);
        org.elasticsearch.action.update.UpdateHelper.Result result60 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest62 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest63 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest62);
        java.lang.Throwable throwable65 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult66 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult67 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result60, (org.elasticsearch.action.ActionRequest) bulkShardRequest62, false, throwable65, writeResult66);
        org.elasticsearch.action.update.UpdateHelper.Result result68 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest70 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest71 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest70);
        org.elasticsearch.action.update.UpdateHelper.Result result72 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest74 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest75 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest74);
        java.lang.Throwable throwable77 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult78 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult79 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result72, (org.elasticsearch.action.ActionRequest) bulkShardRequest74, false, throwable77, writeResult78);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple80 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest71, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest74);
        java.lang.Throwable throwable82 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult83 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult84 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result68, (org.elasticsearch.action.ActionRequest) bulkShardRequest74, true, throwable82, writeResult83);
        org.elasticsearch.index.shard.ShardId shardId85 = bulkShardRequest74.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue86 = bulkShardRequest74.timeout();
        org.elasticsearch.tasks.TaskId taskId87 = bulkShardRequest74.getParentTask();
        bulkShardRequest62.setParentTask(taskId87);
        bulkShardRequest57.setParentTask(taskId87);
        org.elasticsearch.tasks.TaskId taskId90 = bulkShardRequest57.getParentTask();
        bulkShardRequest29.setParentTask(taskId90);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.tasks.Task task92 = bulkShardRequest11.createTask((long) (byte) 1, "index.version.minimum_compatible", "current version [10] is higher than the one provided [98]", taskId90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNull(shardId38);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNull(shardId85);
        org.junit.Assert.assertNotNull(timeValue86);
        org.junit.Assert.assertNotNull(taskId87);
        org.junit.Assert.assertNotNull(taskId90);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 0);
        boolean boolean25 = versionType12.validateVersionForReads((-1L));
        boolean boolean28 = versionType12.isVersionConflictForReads((long) (-1), 97L);
        boolean boolean30 = versionType12.validateVersionForReads((long) (byte) 100);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters1 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state3 = indexMetaData0.getState();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNull(discoveryNodeFilters1);
        org.junit.Assert.assertTrue("'" + state3 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state3.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple9 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.update.UpdateHelper.Result result12 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result13 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result13, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, throwable16, writeResult17);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result12, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, writeResult19);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = bulkShardRequest14.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        bulkShardRequest22.primaryTerm((long) (-1));
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        int int27 = bulkItemRequest26.id();
        org.junit.Assert.assertNotNull(bulkShardRequest22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 97 + "'", int27 == 97);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData7);
        org.elasticsearch.Version version9 = indexMetaData7.getCreationVersion();
        long long10 = indexMetaData7.getCreationDate();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData12 = indexMetaData7.mappingOrDefault("index.");
        long long13 = indexMetaData7.getCreationDate();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff14 = indexMetaData0.diff(indexMetaData7);
        org.elasticsearch.common.settings.Settings settings15 = indexMetaData0.getSettings();
        org.elasticsearch.transport.TransportService transportService16 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService17 = null;
        org.elasticsearch.indices.IndicesService indicesService18 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool19 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction20 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction21 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper22 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters23 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction25 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings15, transportService16, clusterService17, indicesService18, threadPool19, shardStateAction20, mappingUpdatedAction21, updateHelper22, actionFilters23, indexNameExpressionResolver24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(version9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(mappingMetaData12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaDataDiff14);
        org.junit.Assert.assertNotNull(settings15);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure8 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", throwable6, "");
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure8, (org.elasticsearch.transport.TransportMessage) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = bulkShardRequest10.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        org.elasticsearch.action.ActionRequest actionRequest21 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest21);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = bulkShardRequest23.consistencyLevel();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting33 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result35 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting37 = null;
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure41 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting37, "", throwable39, "");
        org.elasticsearch.action.update.UpdateHelper.Result result42 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult46 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult47 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result42, (org.elasticsearch.action.ActionRequest) bulkShardRequest43, false, throwable45, writeResult46);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure41, (org.elasticsearch.transport.TransportMessage) bulkShardRequest43);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest50 = bulkShardRequest43.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress51 = bulkShardRequest43.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest43);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting54 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result56 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest58 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest59 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest58);
        org.elasticsearch.action.update.UpdateHelper.Result result60 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest62 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest63 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest62);
        java.lang.Throwable throwable65 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult66 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult67 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result60, (org.elasticsearch.action.ActionRequest) bulkShardRequest62, false, throwable65, writeResult66);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple68 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest59, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest62);
        org.elasticsearch.tasks.TaskId taskId69 = null;
        bulkShardRequest62.setParentTask(taskId69);
        org.elasticsearch.index.shard.ShardId shardId71 = bulkShardRequest62.shardId();
        bulkShardRequest62.seqNo((long) 0);
        java.lang.Throwable throwable75 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult76 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult77 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result56, (org.elasticsearch.action.ActionRequest) bulkShardRequest62, false, throwable75, writeResult76);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException78 = bulkShardRequest62.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure80 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting54, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException78, "index.blocks.write");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult81 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult82 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result35, (org.elasticsearch.action.ActionRequest) bulkShardRequest43, false, (java.lang.Throwable) actionRequestValidationException78, writeResult81);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure84 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting33, "indices:data/write/bulk[s]", (java.lang.Throwable) actionRequestValidationException78, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure86 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting31, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException78, "index.shadow_replicas");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult87 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult88 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, true, (java.lang.Throwable) actionRequestValidationException78, writeResult87);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData89 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder90 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData89);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap91 = indexMetaData89.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet92 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple93 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData89, indexShardStateSet92);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters94 = indexMetaData89.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder95 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData89);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters96 = indexMetaData89.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap97 = indexMetaData89.getActiveAllocationIds();
        org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>>> exceptionTuple98 = new org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>>>((java.lang.Exception) actionRequestValidationException78, strSetImmutableOpenIntMap97);
        org.junit.Assert.assertNotNull(bulkShardRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest50);
        org.junit.Assert.assertNull(transportAddress51);
        org.junit.Assert.assertNull(shardId71);
        org.junit.Assert.assertNotNull(actionRequestValidationException78);
        org.junit.Assert.assertNotNull(indexMetaData89);
        org.junit.Assert.assertNotNull(builder90);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap91);
        org.junit.Assert.assertNotNull(indexShardStateSet92);
        org.junit.Assert.assertNull(discoveryNodeFilters94);
        org.junit.Assert.assertNull(discoveryNodeFilters96);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap97);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure8 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", throwable6, "");
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure8, (org.elasticsearch.transport.TransportMessage) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = bulkShardRequest10.index("index.version.created");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "", throwable28, "");
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable34, writeResult35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure30, (org.elasticsearch.transport.TransportMessage) bulkShardRequest32);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = bulkShardRequest32.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = bulkShardRequest32.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting43 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result45 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest47);
        org.elasticsearch.action.update.UpdateHelper.Result result49 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult55 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult56 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result49, (org.elasticsearch.action.ActionRequest) bulkShardRequest51, false, throwable54, writeResult55);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple57 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest48, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest51);
        org.elasticsearch.tasks.TaskId taskId58 = null;
        bulkShardRequest51.setParentTask(taskId58);
        org.elasticsearch.index.shard.ShardId shardId60 = bulkShardRequest51.shardId();
        bulkShardRequest51.seqNo((long) 0);
        java.lang.Throwable throwable64 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult65 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult66 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result45, (org.elasticsearch.action.ActionRequest) bulkShardRequest51, false, throwable64, writeResult65);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException67 = bulkShardRequest51.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure69 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting43, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException67, "index.blocks.write");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult70 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult71 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, (java.lang.Throwable) actionRequestValidationException67, writeResult70);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure73 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "state-", (java.lang.Throwable) actionRequestValidationException67, "primary_terms");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure75 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "current version [0] is different than the one provided [100]", (java.lang.Throwable) actionRequestValidationException67, "");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult76 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult77 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, true, (java.lang.Throwable) actionRequestValidationException67, writeResult76);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure79 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.creation_date_string", (java.lang.Throwable) actionRequestValidationException67, "index.creation_date_string");
        org.junit.Assert.assertNotNull(bulkShardRequest17);
        org.junit.Assert.assertNotNull(bulkShardRequest39);
        org.junit.Assert.assertNull(transportAddress40);
        org.junit.Assert.assertNull(shardId60);
        org.junit.Assert.assertNotNull(actionRequestValidationException67);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.ActionRequest actionRequest14 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest12, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue20 = bulkShardRequest19.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = bulkShardRequest16.timeout(timeValue20);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, writeResult23);
        org.elasticsearch.action.update.UpdateHelper.Result result25 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest27);
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, false, throwable34, writeResult35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        java.lang.Throwable throwable39 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult40 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult41 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result25, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, true, throwable39, writeResult40);
        org.elasticsearch.index.shard.ShardId shardId42 = bulkShardRequest31.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue43 = bulkShardRequest31.timeout();
        org.elasticsearch.tasks.TaskId taskId44 = bulkShardRequest31.getParentTask();
        bulkShardRequest21.setParentTask(taskId44);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest46 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, writeResult47);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest49 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.update.UpdateHelper.Result result52 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest54 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest54);
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result52, (org.elasticsearch.action.ActionRequest) bulkShardRequest54, false, throwable57, writeResult58);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest60 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest54);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest61 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest54);
        bulkShardRequest54.setParentTask("index.version.upgraded", (long) ' ');
        org.elasticsearch.tasks.TaskId taskId65 = bulkShardRequest54.getParentTask();
        org.elasticsearch.tasks.TaskId taskId66 = bulkShardRequest54.getParentTask();
        bulkShardRequest21.setParentTask(taskId66);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest69 = bulkShardRequest21.index("index.");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel70 = bulkShardRequest69.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue71 = bulkShardRequest69.timeout();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest72 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 3, (org.elasticsearch.action.ActionRequest) bulkShardRequest69);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(bulkShardRequest21);
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertNotNull(timeValue43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(taskId65);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(bulkShardRequest69);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel70 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel70.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue71);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.index.Index index9 = indexMetaData1.getMergeSourceIndex();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNull(index9);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 0);
        boolean boolean25 = versionType12.validateVersionForReads((-1L));
        boolean boolean28 = versionType12.isVersionConflictForReads((long) (-1), 97L);
        org.elasticsearch.index.VersionType versionType29 = versionType12.versionTypeForReplicationAndRecovery();
        boolean boolean31 = versionType29.validateVersionForReads((long) (byte) 100);
        boolean boolean33 = versionType29.validateVersionForReads((long) 97);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.removeAlias("current version [97] is different than the one provided [35]");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.removeAlias("index.version.minimum_compatible");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.putMapping(mappingMetaData6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData11 = builder1.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int15 = builder14.numberOfShards();
        java.lang.String[] strArray19 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder14.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder1.putActiveAllocationIds((int) (byte) 3, (java.util.Set<java.lang.String>) strSet20);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData25 = builder1.mapping("current version [2] is higher than the one provided [-1]");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = builder1.numberOfReplicas(0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(mappingMetaData11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNull(mappingMetaData25);
        org.junit.Assert.assertNotNull(builder27);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest9 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.String str15 = bulkShardRequest11.index();
        bulkShardRequest11.setParentTask("index.auto_expand_replicas", 0L);
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = bulkShardRequest11.indicesOptions();
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(indicesOptions19);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("_na_");
        int int2 = builder1.numberOfReplicas();
        java.lang.String str3 = builder1.index();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_na_" + "'", str3, "_na_");
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.tasks.TaskId taskId15 = null;
        bulkShardRequest8.setParentTask(taskId15);
        org.elasticsearch.index.shard.ShardId shardId17 = bulkShardRequest8.shardId();
        bulkShardRequest8.seqNo((long) 0);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable21, writeResult22);
        long long24 = bulkShardRequest8.seqNo();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult25);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult27);
        org.elasticsearch.common.unit.TimeValue timeValue29 = bulkShardRequest8.timeout();
        boolean boolean30 = bulkShardRequest8.getShouldPersistResult();
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.registerPrototype("current version [52] is different than the one provided [1]", custom1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = bulkShardRequest5.setShardId(shardId8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = bulkShardRequest5.setShardId(shardId10);
        bulkShardRequest11.setParentTask("index.uuid", (long) 97);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting29 = null;
        org.elasticsearch.action.ActionRequest actionRequest32 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest32);
        org.elasticsearch.action.ActionRequest actionRequest36 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest36);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest37, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = null;
        bulkShardRequest38.remoteAddress(transportAddress42);
        org.elasticsearch.action.update.UpdateHelper.Result result44 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest45 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue46 = bulkShardRequest45.timeout();
        java.lang.String str47 = bulkShardRequest45.index();
        org.elasticsearch.common.unit.TimeValue timeValue48 = bulkShardRequest45.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting50 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting52 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result54 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest56 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest57 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest56);
        org.elasticsearch.action.update.UpdateHelper.Result result58 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest60 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest61 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult64 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult65 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result58, (org.elasticsearch.action.ActionRequest) bulkShardRequest60, false, throwable63, writeResult64);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple66 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest57, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.tasks.TaskId taskId67 = null;
        bulkShardRequest60.setParentTask(taskId67);
        org.elasticsearch.index.shard.ShardId shardId69 = bulkShardRequest60.shardId();
        bulkShardRequest60.seqNo((long) 0);
        java.lang.Throwable throwable73 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult74 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult75 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result54, (org.elasticsearch.action.ActionRequest) bulkShardRequest60, false, throwable73, writeResult74);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException76 = bulkShardRequest60.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure78 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting52, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException76, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure80 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting50, "update", (java.lang.Throwable) actionRequestValidationException76, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult81 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult82 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result44, (org.elasticsearch.action.ActionRequest) bulkShardRequest45, false, (java.lang.Throwable) actionRequestValidationException76, writeResult81);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException> transportRequestTuple83 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException>((org.elasticsearch.transport.TransportRequest) bulkShardRequest38, (java.lang.RuntimeException) actionRequestValidationException76);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure85 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting29, "", (java.lang.Throwable) actionRequestValidationException76, "index.shadow_replicas");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult86 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult87 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, true, (java.lang.Throwable) actionRequestValidationException76, writeResult86);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure89 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "index.blocks.write", (java.lang.Throwable) actionRequestValidationException76, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure91 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "index.data_path", (java.lang.Throwable) actionRequestValidationException76, "index.version.upgraded");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult92 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult93 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, (java.lang.Throwable) actionRequestValidationException76, writeResult92);
        org.elasticsearch.action.ActionRequest actionRequest94 = updateResult93.actionRequest;
        org.junit.Assert.assertNotNull(bulkShardRequest9);
        org.junit.Assert.assertNotNull(bulkShardRequest11);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNull(shardId69);
        org.junit.Assert.assertNotNull(actionRequestValidationException76);
        org.junit.Assert.assertNotNull(actionRequest94);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable2, "");
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure4, (org.elasticsearch.transport.TransportMessage) bulkShardRequest6);
        org.elasticsearch.action.ActionRequest actionRequest14 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue20 = bulkShardRequest19.timeout();
        java.lang.String str21 = bulkShardRequest19.index();
        org.elasticsearch.common.unit.TimeValue timeValue22 = bulkShardRequest19.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = bulkShardRequest16.timeout(timeValue22);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = bulkShardRequest6.timeout(timeValue22);
        org.elasticsearch.common.unit.TimeValue timeValue25 = bulkShardRequest24.timeout();
        org.elasticsearch.common.io.stream.StreamInput streamInput26 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest24.readFrom(streamInput26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(bulkShardRequest23);
        org.junit.Assert.assertNotNull(bulkShardRequest24);
        org.junit.Assert.assertNotNull(timeValue25);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = null;
        bulkShardRequest5.remoteAddress(transportAddress7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable10, writeResult11);
        org.elasticsearch.action.ActionRequest actionRequest15 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest15);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest17);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult29 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult30 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, false, throwable28, writeResult29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.action.ActionRequest actionRequest33 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest33);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest34, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest39 = bulkItemRequestTuple38.v2();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = bulkShardRequestReplicationRequest39.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = bulkShardRequest5.consistencyLevel(writeConsistencyLevel40);
        bulkShardRequest41.primaryTerm((long) (short) -1);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult44 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult45 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest41, writeResult44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = bulkShardRequest41.getDescription();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest41);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.version((long) (short) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.removeAlias("");
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet7 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.action.ActionRequest actionRequest9 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        boolean boolean13 = bulkShardRequest11.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int16 = builder15.numberOfShards();
        java.lang.String[] strArray20 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder15.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest11, strSet21);
        org.elasticsearch.common.collect.Tuple<java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>, java.lang.Iterable<java.lang.String>> indexShardStateSetTuple25 = new org.elasticsearch.common.collect.Tuple<java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>, java.lang.Iterable<java.lang.String>>(indexShardStateSet7, (java.lang.Iterable<java.lang.String>) strSet21);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "index.uuid", throwable28, "hi!");
        java.lang.Class<?> wildcardClass31 = shardFailure30.getClass();
        org.elasticsearch.common.collect.Tuple<java.util.Collection<java.lang.String>, java.lang.reflect.Type> strCollectionTuple32 = new org.elasticsearch.common.collect.Tuple<java.util.Collection<java.lang.String>, java.lang.reflect.Type>((java.util.Collection<java.lang.String>) strSet21, (java.lang.reflect.Type) wildcardClass31);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder1.putActiveAllocationIds(0, (java.util.Set<java.lang.String>) strSet21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom35 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = builder1.putCustom("delete", custom35);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder36.creationDate((long) 0);
        long long39 = builder36.version();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData40 = builder36.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: must specify numberOfShards for index [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(indexShardStateSet7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 100L + "'", long39 == 100L);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting0 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_SHARED_FS_ALLOW_RECOVERY_ON_ANY_NODE_SETTING;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        int int6 = builder3.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder9.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder10.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int16 = builder15.numberOfShards();
        java.lang.String[] strArray20 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder15.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder10.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple25 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData7, (java.lang.Iterable<java.lang.String>) strSet21);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap26 = indexMetaData7.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData7);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData7);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData7);
        org.elasticsearch.common.settings.Settings settings30 = indexMetaData7.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder3.settings(settings30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent> toXContentToBytesTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.action.support.ToXContentToBytes) booleanSetting0, (org.elasticsearch.common.xcontent.ToXContent) settings30);
        org.elasticsearch.common.settings.Settings settings33 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings30);
        org.elasticsearch.common.settings.Settings settings34 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings30);
        org.elasticsearch.transport.TransportService transportService35 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService36 = null;
        org.elasticsearch.indices.IndicesService indicesService37 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool38 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction39 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction40 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper41 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters42 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction44 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings34, transportService35, clusterService36, indicesService37, threadPool38, shardStateAction39, mappingUpdatedAction40, updateHelper41, actionFilters42, indexNameExpressionResolver43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(booleanSetting0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple25);
        org.junit.Assert.assertNotNull(strImmutableOpenMap26);
        org.junit.Assert.assertNotNull(settings30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertNotNull(settings34);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, false, throwable22, writeResult23);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        bulkShardRequest19.setParentTask("index.version.upgraded", (long) ' ');
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        java.util.LinkedHashSet<java.lang.String> strSet31 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest34, false, throwable36, writeResult37);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest34, writeResult39);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = bulkShardRequest34.setShardId(shardId41);
        org.elasticsearch.common.collect.Tuple<java.util.LinkedHashSet<java.lang.String>, org.elasticsearch.action.IndicesRequest> strSetTuple43 = new org.elasticsearch.common.collect.Tuple<java.util.LinkedHashSet<java.lang.String>, org.elasticsearch.action.IndicesRequest>(strSet31, (org.elasticsearch.action.IndicesRequest) bulkShardRequest42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = bulkItemRequestTuple44.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest42);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.State state1 = org.elasticsearch.cluster.metadata.IndexMetaData.State.fromString("index.creation_date_string");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No state match for [index.creation_date_string]");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting3 = null;
        java.lang.Throwable throwable5 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting3, "", throwable5, "");
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure7, (org.elasticsearch.transport.TransportMessage) bulkShardRequest9);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = bulkShardRequest9.remoteAddress();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting17 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable36, writeResult37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        org.elasticsearch.tasks.TaskId taskId40 = null;
        bulkShardRequest33.setParentTask(taskId40);
        org.elasticsearch.index.shard.ShardId shardId42 = bulkShardRequest33.shardId();
        bulkShardRequest33.seqNo((long) 0);
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable46, writeResult47);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException49 = bulkShardRequest33.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure51 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException49, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "update", (java.lang.Throwable) actionRequestValidationException49, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting21, "_na_", (java.lang.Throwable) actionRequestValidationException49, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting19, "_na_", (java.lang.Throwable) actionRequestValidationException49, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure59 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting17, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException49, "current version [2] is higher than the one provided [-1]");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult60 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult61 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, (java.lang.Throwable) actionRequestValidationException49, writeResult60);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure63 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException49, "current version [100] is different than the one provided [1]");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting64 = shardFailure63.routing;
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertNotNull(actionRequestValidationException49);
        org.junit.Assert.assertNull(shardRouting64);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        long long19 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData21);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap23 = indexMetaData21.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet24 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData21, indexShardStateSet24);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters26 = indexMetaData21.includeFilters();
        org.elasticsearch.common.settings.Settings settings27 = indexMetaData21.getSettings();
        boolean boolean28 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings27);
        boolean boolean29 = org.elasticsearch.cluster.metadata.IndexMetaData.isOnSharedFilesystem(settings27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder20.settings(settings27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder30.primaryTerm(0, 0L);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap23);
        org.junit.Assert.assertNotNull(indexShardStateSet24);
        org.junit.Assert.assertNull(discoveryNodeFilters26);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder33);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 100);
        long long26 = versionType12.updateVersion((long) (byte) 0, (long) (byte) -1);
        org.elasticsearch.index.VersionType versionType27 = versionType12.versionTypeForReplicationAndRecovery();
        org.elasticsearch.index.VersionType versionType28 = versionType12.versionTypeForReplicationAndRecovery();
        boolean boolean32 = versionType12.isVersionConflictForWrites(1L, 97L, false);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        java.lang.String str12 = builder11.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder11.version(0L);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData16 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder18.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder19.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int25 = builder24.numberOfShards();
        java.lang.String[] strArray29 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder24.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet30);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder19.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple34 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData16, (java.lang.Iterable<java.lang.String>) strSet30);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder14.putActiveAllocationIds(35, (java.util.Set<java.lang.String>) strSet30);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = builder35.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData37 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData37);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap39 = indexMetaData37.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData37);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData41 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData42 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData42);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap44 = indexMetaData42.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters45 = indexMetaData42.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff46 = indexMetaData41.diff(indexMetaData42);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters47 = indexMetaData42.requireFilters();
        org.elasticsearch.Version version48 = indexMetaData42.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings49 = indexMetaData42.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder50 = builder40.settings(settings49);
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting51 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_SHARED_FS_ALLOW_RECOVERY_ON_ANY_NODE_SETTING;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder53 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = builder53.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder56 = builder54.numberOfReplicas((int) '#');
        int int57 = builder54.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData58 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder60 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder61 = builder60.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder63 = builder61.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder66 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int67 = builder66.numberOfShards();
        java.lang.String[] strArray71 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet72 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet72, strArray71);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder74 = builder66.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet72);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder75 = builder61.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet72);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple76 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData58, (java.lang.Iterable<java.lang.String>) strSet72);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap77 = indexMetaData58.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder78 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData58);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder79 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData58);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder80 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData58);
        org.elasticsearch.common.settings.Settings settings81 = indexMetaData58.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder82 = builder54.settings(settings81);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent> toXContentToBytesTuple83 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.action.support.ToXContentToBytes) booleanSetting51, (org.elasticsearch.common.xcontent.ToXContent) settings81);
        org.elasticsearch.common.settings.Settings settings84 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings81);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder85 = builder40.settings(settings81);
        boolean boolean86 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings81);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder87 = builder35.settings(settings81);
        org.elasticsearch.common.settings.Settings settings88 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings81);
        boolean boolean89 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings88);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "index.blocks.write" + "'", str12, "index.blocks.write");
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(indexMetaData16);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(builder36);
        org.junit.Assert.assertNotNull(indexMetaData37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(indexMetaData41);
        org.junit.Assert.assertNotNull(indexMetaData42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap44);
        org.junit.Assert.assertNull(discoveryNodeFilters45);
        org.junit.Assert.assertNotNull(indexMetaDataDiff46);
        org.junit.Assert.assertNull(discoveryNodeFilters47);
        org.junit.Assert.assertNotNull(version48);
        org.junit.Assert.assertNotNull(settings49);
        org.junit.Assert.assertNotNull(builder50);
        org.junit.Assert.assertNotNull(booleanSetting51);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(builder56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData58);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertNotNull(builder63);
        org.junit.Assert.assertNotNull(builder66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertNotNull(builder75);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple76);
        org.junit.Assert.assertNotNull(strImmutableOpenMap77);
        org.junit.Assert.assertNotNull(settings81);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(settings84);
        org.junit.Assert.assertNotNull(builder85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(builder87);
        org.junit.Assert.assertNotNull(settings88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        java.lang.String str4 = versionType0.explainConflictForWrites((long) (short) -1, (long) (short) 0, true);
        java.lang.String str8 = versionType0.explainConflictForWrites(97L, (long) (short) 100, false);
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "current version [-1] is higher than the one provided [0]" + "'", str4, "current version [-1] is higher than the one provided [0]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "current version [97] is higher than the one provided [100]" + "'", str8, "current version [97] is higher than the one provided [100]");
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable17, writeResult18);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult20);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest8.writeTo(streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        org.elasticsearch.action.ActionRequest actionRequest1 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest1);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest3);
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.ActionRequest actionRequest13 = null; // flaky: bulkItemRequest2.request();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, false, throwable22, writeResult23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable35, writeResult36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest40);
        org.elasticsearch.action.update.UpdateHelper.Result result42 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest44 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest44);
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult48 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult49 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result42, (org.elasticsearch.action.ActionRequest) bulkShardRequest44, false, throwable47, writeResult48);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple50 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest41, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest44);
        org.elasticsearch.tasks.TaskId taskId51 = null;
        bulkShardRequest44.setParentTask(taskId51);
        boolean boolean53 = bulkItemRequestTuple38.equals((java.lang.Object) taskId51);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest54 = bulkItemRequestTuple38.v1();
        boolean boolean55 = bulkItemRequestTuple26.equals((java.lang.Object) bulkItemRequest54);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput56 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest54.writeTo(streamOutput56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(actionRequest13);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(bulkItemRequest54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.update.UpdateHelper.Result result11 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result11, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, throwable16, writeResult17);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.action.ActionRequest actionRequest21 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest21);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest22, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest23);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "", throwable29, "");
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable35, writeResult36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure31, (org.elasticsearch.transport.TransportMessage) bulkShardRequest33);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = bulkShardRequest33.index("index.version.created");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest40);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest40, writeResult42);
        boolean boolean44 = updateResult43.retry;
        org.junit.Assert.assertNotNull(bulkShardRequest40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData8.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet11 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData8, indexShardStateSet11);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData1.diff(indexMetaData8);
        org.elasticsearch.common.settings.Settings settings14 = indexMetaData8.getSettings();
        org.elasticsearch.common.settings.Settings settings15 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings14);
        org.elasticsearch.common.settings.Settings settings16 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings15);
        org.elasticsearch.transport.TransportService transportService17 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService18 = null;
        org.elasticsearch.indices.IndicesService indicesService19 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool20 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction21 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction22 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper23 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters24 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction26 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings15, transportService17, clusterService18, indicesService19, threadPool20, shardStateAction21, mappingUpdatedAction22, updateHelper23, actionFilters24, indexNameExpressionResolver25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNotNull(indexShardStateSet11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNotNull(settings14);
        org.junit.Assert.assertNotNull(settings15);
        org.junit.Assert.assertNotNull(settings16);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest9 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue15 = bulkShardRequest14.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest11.timeout(timeValue15);
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = bulkShardRequest16.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest(3, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.ActionRequest actionRequest23 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest23);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest24, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.action.ActionRequest actionRequest29 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest29);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple33 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue35 = bulkShardRequest34.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = bulkShardRequest31.timeout(timeValue35);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        java.lang.String str38 = bulkShardRequest36.index();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(32, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(bulkShardRequest16);
        org.junit.Assert.assertNull(transportAddress17);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(bulkShardRequest36);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = null;
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting7, "", throwable9, "");
        org.elasticsearch.action.update.UpdateHelper.Result result12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result12, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, throwable15, writeResult16);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure11, (org.elasticsearch.transport.TransportMessage) bulkShardRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = bulkShardRequest13.index("hi!");
        bulkShardRequest13.primaryTerm(100L);
        org.elasticsearch.index.shard.ShardId shardId23 = bulkShardRequest13.shardId();
        boolean boolean24 = bulkShardRequest13.getShouldPersistResult();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting28 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting30 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        org.elasticsearch.action.update.UpdateHelper.Result result36 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result36, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, false, throwable41, writeResult42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest35, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.tasks.TaskId taskId45 = null;
        bulkShardRequest38.setParentTask(taskId45);
        org.elasticsearch.index.shard.ShardId shardId47 = bulkShardRequest38.shardId();
        bulkShardRequest38.seqNo((long) 0);
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult52 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult53 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, false, throwable51, writeResult52);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException54 = bulkShardRequest38.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting30, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException54, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting28, "update", (java.lang.Throwable) actionRequestValidationException54, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException54, "index.version.minimum_compatible");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult61 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult62 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest13, false, (java.lang.Throwable) actionRequestValidationException54, writeResult61);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure64 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException54, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure66 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException54, "index.number_of_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure68 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.number_of_replicas", (java.lang.Throwable) actionRequestValidationException54, "active_allocations");
        org.junit.Assert.assertNotNull(bulkShardRequest20);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNotNull(actionRequestValidationException54);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.creationDate((long) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder5.removeAlias("index.version.minimum_compatible");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder5.removeAllAliases();
        org.elasticsearch.cluster.metadata.AliasMetaData.Builder builder11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder10.putAlias(builder11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder10);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        org.elasticsearch.index.VersionType versionType22 = versionType12.versionTypeForReplicationAndRecovery();
        org.elasticsearch.index.VersionType versionType23 = versionType22.versionTypeForReplicationAndRecovery();
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(versionType23);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("primary_terms");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = builder1.mapping("index.priority");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder1.primaryTerm((int) (byte) 100, (long) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: you must set the number of shards before setting/reading primary terms");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(mappingMetaData3);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        boolean boolean6 = indexMetaData0.isSameUUID("index.auto_expand_replicas");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap7 = indexMetaData0.getMappings();
        org.elasticsearch.index.Index index8 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.common.xcontent.XContentParser xContentParser9 = null;
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = indexMetaData0.fromXContent(xContentParser9, parseFieldMatcher10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strImmutableOpenMap7);
        org.junit.Assert.assertNull(index8);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting3 = null;
        java.lang.Throwable throwable5 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting3, "", throwable5, "");
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure7, (org.elasticsearch.transport.TransportMessage) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest9.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.ActionRequest actionRequest20 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest20);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.action.ActionRequest actionRequest28 = bulkItemRequest27.request();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput29 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest27.writeTo(streamOutput29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest16);
        org.junit.Assert.assertNotNull(actionRequest28);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple6 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        int int8 = bulkItemRequest7.id();
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest16, false, throwable19, writeResult20);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest16, false, throwable25, writeResult26);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest28 = updateResult27.request();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, bulkShardRequestReplicationRequest28);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest28);
        long long31 = bulkShardRequestReplicationRequest28.seqNo();
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest28);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        org.elasticsearch.action.ActionRequest actionRequest1 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest1);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest3);
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = bulkItemRequestTuple12.v1();
        org.elasticsearch.action.ActionRequest actionRequest14 = null; // flaky: bulkItemRequest13.request();
// flaky:         org.junit.Assert.assertNotNull(bulkItemRequest13);
        org.junit.Assert.assertNull(actionRequest14);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getCreationVersion();
        org.elasticsearch.index.Index index8 = indexMetaData1.getMergeSourceIndex();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder10.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state13 = org.elasticsearch.cluster.metadata.IndexMetaData.State.fromId((byte) 1);
        byte byte14 = state13.id();
        byte byte15 = state13.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder10.state(state13);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNull(index8);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + state13 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE + "'", state13.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE));
        org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) 1 + "'", byte14 == (byte) 1);
        org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) 1 + "'", byte15 == (byte) 1);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters21 = indexMetaData0.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters23 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        // The following exception was thrown during execution in test generation
        try {
            long long26 = indexMetaData0.primaryTerm(32);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertNull(discoveryNodeFilters23);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.tasks.TaskId taskId14 = null;
        bulkShardRequest7.setParentTask(taskId14);
        org.elasticsearch.index.shard.ShardId shardId16 = bulkShardRequest7.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, writeResult17);
        long long19 = bulkShardRequest7.primaryTerm();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest0, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.tasks.TaskId taskId21 = bulkShardRequest7.getParentTask();
        bulkShardRequest7.setParentTask("index.shared_filesystem.recover_on_any_node", (long) (byte) -1);
        boolean boolean25 = bulkShardRequest7.getShouldPersistResult();
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNull(taskId21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable16, writeResult17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest8.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue20 = bulkShardRequest8.timeout();
        long long21 = bulkShardRequest8.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = bulkShardRequest8.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 3, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "", throwable28, "");
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable34, writeResult35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure30, (org.elasticsearch.transport.TransportMessage) bulkShardRequest32);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = bulkShardRequest32.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str42 = bulkShardRequest41.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest40, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest41);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest46);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = bulkShardRequest46.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest49);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple51 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest40, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest49);
        org.elasticsearch.action.ActionRequest actionRequest54 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest54);
        org.elasticsearch.action.ActionRequest actionRequest58 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest59 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest58);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest60 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest59, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest62 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple63 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest55, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.common.transport.TransportAddress transportAddress64 = null;
        bulkShardRequest60.remoteAddress(transportAddress64);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest66 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.action.IndicesRequest> bulkItemRequestTupleTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.action.IndicesRequest>(bulkItemRequestTuple51, (org.elasticsearch.action.IndicesRequest) bulkShardRequest60);
        org.elasticsearch.common.transport.TransportAddress transportAddress68 = null;
        bulkShardRequest60.remoteAddress(transportAddress68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple70 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest24, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData71 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder72 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData71);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap73 = indexMetaData71.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet74 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple75 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData71, indexShardStateSet74);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters76 = indexMetaData71.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder77 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData71);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters78 = indexMetaData71.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder79 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData71);
        boolean boolean80 = bulkItemRequestTuple70.equals((java.lang.Object) indexMetaData71);
        java.util.Set<java.lang.String> strSet82 = null; // flaky: indexMetaData71.activeAllocationIds((-1));
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters83 = indexMetaData71.getInitialRecoveryFilters();
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNotNull(bulkShardRequest39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(bulkShardRequest49);
        org.junit.Assert.assertNotNull(indexMetaData71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap73);
        org.junit.Assert.assertNotNull(indexShardStateSet74);
        org.junit.Assert.assertNull(discoveryNodeFilters76);
        org.junit.Assert.assertNull(discoveryNodeFilters78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(strSet82);
        org.junit.Assert.assertNull(discoveryNodeFilters83);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput29 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData0.writeTo(streamOutput29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData8.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet11 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData8, indexShardStateSet11);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData1.diff(indexMetaData8);
        org.elasticsearch.common.settings.Settings settings14 = indexMetaData8.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData17 = indexMetaData8.mapping("index.blocks.read");
        long long18 = indexMetaData8.getVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData8);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData8);
        int int21 = builder20.numberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNotNull(indexShardStateSet11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNotNull(settings14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNull(mappingMetaData17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData5 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData5);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap7 = indexMetaData5.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData5.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff9 = indexMetaData4.diff(indexMetaData5);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters10 = indexMetaData5.requireFilters();
        org.elasticsearch.Version version11 = indexMetaData5.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings12 = indexMetaData5.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder3.settings(settings12);
        org.elasticsearch.common.settings.Setting<java.lang.Boolean> booleanSetting14 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_SHARED_FS_ALLOW_RECOVERY_ON_ANY_NODE_SETTING;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder16.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder17.numberOfReplicas((int) '#');
        int int20 = builder17.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder23.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder24.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int30 = builder29.numberOfShards();
        java.lang.String[] strArray34 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder37 = builder29.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet35);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder24.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple39 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData21, (java.lang.Iterable<java.lang.String>) strSet35);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap40 = indexMetaData21.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData21);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData21);
        org.elasticsearch.common.settings.Settings settings44 = indexMetaData21.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = builder17.settings(settings44);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent> toXContentToBytesTuple46 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.support.ToXContentToBytes, org.elasticsearch.common.xcontent.ToXContent>((org.elasticsearch.action.support.ToXContentToBytes) booleanSetting14, (org.elasticsearch.common.xcontent.ToXContent) settings44);
        org.elasticsearch.common.settings.Settings settings47 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings44);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder48 = builder3.settings(settings44);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData49 = builder48.build();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder51 = builder48.version((long) (short) 100);
        org.elasticsearch.common.settings.Settings.Builder builder52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder53 = builder51.settings(builder52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(indexMetaData5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertNotNull(indexMetaDataDiff9);
        org.junit.Assert.assertNull(discoveryNodeFilters10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(booleanSetting14);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(builder37);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple39);
        org.junit.Assert.assertNotNull(strImmutableOpenMap40);
        org.junit.Assert.assertNotNull(settings44);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(settings47);
        org.junit.Assert.assertNotNull(builder48);
        org.junit.Assert.assertNotNull(indexMetaData49);
        org.junit.Assert.assertNotNull(builder51);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable27, writeResult28);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.tasks.TaskId taskId31 = null;
        bulkShardRequest24.setParentTask(taskId31);
        org.elasticsearch.index.shard.ShardId shardId33 = bulkShardRequest24.shardId();
        bulkShardRequest24.seqNo((long) 0);
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable37, writeResult38);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException40 = bulkShardRequest24.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException40, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "update", (java.lang.Throwable) actionRequestValidationException40, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "_na_", (java.lang.Throwable) actionRequestValidationException40, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "_na_", (java.lang.Throwable) actionRequestValidationException40, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "index.version.minimum_compatible", (java.lang.Throwable) actionRequestValidationException40, "index.uuid");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException40, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "indices:data/write/bulk[s]", (java.lang.Throwable) actionRequestValidationException40, "state-");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.creation_date_string", (java.lang.Throwable) actionRequestValidationException40, "index.version.minimum_compatible");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException40, "current version [32] is different than the one provided [2]");
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertNotNull(actionRequestValidationException40);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.common.settings.Settings settings7 = indexMetaData1.getSettings();
        org.elasticsearch.common.settings.Settings settings8 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings7);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(settings7);
        org.junit.Assert.assertNotNull(settings8);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        int int7 = bulkItemRequest6.id();
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.action.update.UpdateHelper.Result result13 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result13, (org.elasticsearch.action.ActionRequest) bulkShardRequest15, false, throwable18, writeResult19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest12, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest15, false, throwable24, writeResult25);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest27 = updateResult26.request();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, bulkShardRequestReplicationRequest27);
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.ActionRequest actionRequest31 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest31);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = null;
        bulkShardRequest33.remoteAddress(transportAddress35);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, false, throwable38, writeResult39);
        org.elasticsearch.action.ActionRequest actionRequest43 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest43);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest45 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple46 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest44, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest45);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest45);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest49);
        org.elasticsearch.action.update.UpdateHelper.Result result51 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest53 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest54 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest53);
        java.lang.Throwable throwable56 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult57 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult58 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result51, (org.elasticsearch.action.ActionRequest) bulkShardRequest53, false, throwable56, writeResult57);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple59 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest50, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest53);
        org.elasticsearch.action.ActionRequest actionRequest61 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest62 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest61);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest63 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple64 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest62, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest63);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple65 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest50, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest63);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple66 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest47, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest63);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest67 = bulkItemRequestTuple66.v2();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = bulkShardRequestReplicationRequest67.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest69 = bulkShardRequest33.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple70 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest69);
        org.elasticsearch.common.io.stream.StreamInput streamInput71 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest69.readFrom(streamInput71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest27);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest67);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest69);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue14 = bulkShardRequest13.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest10.timeout(timeValue14);
        long long16 = bulkShardRequest10.primaryTerm();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result19 = null;
        org.elasticsearch.action.ActionRequest actionRequest23 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest23);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest24, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.action.ActionRequest actionRequest29 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest29);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple33 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue35 = bulkShardRequest34.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = bulkShardRequest31.timeout(timeValue35);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result19, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, writeResult38);
        org.elasticsearch.action.update.UpdateHelper.Result result40 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest42);
        org.elasticsearch.action.update.UpdateHelper.Result result44 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest46);
        java.lang.Throwable throwable49 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult50 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult51 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result44, (org.elasticsearch.action.ActionRequest) bulkShardRequest46, false, throwable49, writeResult50);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple52 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest43, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest46);
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult55 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult56 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result40, (org.elasticsearch.action.ActionRequest) bulkShardRequest46, true, throwable54, writeResult55);
        org.elasticsearch.index.shard.ShardId shardId57 = bulkShardRequest46.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue58 = bulkShardRequest46.timeout();
        org.elasticsearch.tasks.TaskId taskId59 = bulkShardRequest46.getParentTask();
        bulkShardRequest36.setParentTask(taskId59);
        bulkShardRequest36.primaryTerm((long) 10);
        java.lang.String str63 = bulkShardRequest36.index();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest64 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple65 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest36);
        org.elasticsearch.common.unit.TimeValue timeValue66 = bulkShardRequest36.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest67 = bulkShardRequest10.timeout(timeValue66);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(bulkShardRequest36);
        org.junit.Assert.assertNull(shardId57);
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(timeValue66);
        org.junit.Assert.assertNotNull(bulkShardRequest67);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = bulkShardRequest2.consistencyLevel(writeConsistencyLevel4);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = null;
        org.elasticsearch.action.ActionRequest actionRequest10 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest10);
        org.elasticsearch.action.ActionRequest actionRequest14 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple19 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        bulkShardRequest16.remoteAddress(transportAddress20);
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue24 = bulkShardRequest23.timeout();
        java.lang.String str25 = bulkShardRequest23.index();
        org.elasticsearch.common.unit.TimeValue timeValue26 = bulkShardRequest23.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting28 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting30 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        org.elasticsearch.action.update.UpdateHelper.Result result36 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result36, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, false, throwable41, writeResult42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest35, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.tasks.TaskId taskId45 = null;
        bulkShardRequest38.setParentTask(taskId45);
        org.elasticsearch.index.shard.ShardId shardId47 = bulkShardRequest38.shardId();
        bulkShardRequest38.seqNo((long) 0);
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult52 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult53 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, false, throwable51, writeResult52);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException54 = bulkShardRequest38.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting30, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException54, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting28, "update", (java.lang.Throwable) actionRequestValidationException54, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, false, (java.lang.Throwable) actionRequestValidationException54, writeResult59);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException> transportRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException>((org.elasticsearch.transport.TransportRequest) bulkShardRequest16, (java.lang.RuntimeException) actionRequestValidationException54);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure63 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting7, "", (java.lang.Throwable) actionRequestValidationException54, "index.shadow_replicas");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult64 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult65 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest2, false, (java.lang.Throwable) actionRequestValidationException54, writeResult64);
        org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestActionRequest66 = updateResult65.request();
        java.lang.Throwable throwable67 = updateResult65.error;
        org.junit.Assert.assertNotNull(bulkShardRequest5);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNotNull(actionRequestValidationException54);
        org.junit.Assert.assertNotNull(bulkShardRequestActionRequest66);
        org.junit.Assert.assertNotNull(throwable67);
        org.junit.Assert.assertEquals(throwable67.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable67.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable67.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.removeAlias("current version [97] is different than the one provided [35]");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int7 = builder6.numberOfShards();
        java.lang.String[] strArray11 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder6.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet12);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData16 = builder6.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder19.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder20.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest25 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest25);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        boolean boolean29 = bulkShardRequest27.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int32 = builder31.numberOfShards();
        java.lang.String[] strArray36 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = builder31.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest27, strSet37);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = builder20.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet37);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = builder6.putActiveAllocationIds((int) (byte) 0, (java.util.Set<java.lang.String>) strSet37);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder3.putActiveAllocationIds(0, (java.util.Set<java.lang.String>) strSet37);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder46 = builder43.putMapping("index.auto_expand_replicas", "");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNull(mappingMetaData16);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest0 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue1 = bulkShardRequest0.timeout();
        java.lang.String str2 = bulkShardRequest0.index();
        org.elasticsearch.common.unit.TimeValue timeValue3 = bulkShardRequest0.timeout();
        org.elasticsearch.index.shard.ShardId shardId4 = bulkShardRequest0.shardId();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", throwable12, "");
        org.elasticsearch.action.update.UpdateHelper.Result result15 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result15, (org.elasticsearch.action.ActionRequest) bulkShardRequest16, false, throwable18, writeResult19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure14, (org.elasticsearch.transport.TransportMessage) bulkShardRequest16);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = bulkShardRequest16.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = bulkShardRequest16.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.index.shard.ShardId shardId27 = bulkShardRequest16.shardId();
        org.elasticsearch.tasks.TaskId taskId28 = bulkShardRequest16.getParentTask();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.tasks.Task task29 = bulkShardRequest0.createTask((long) (byte) 1, "index.version.created", "index.number_of_shards", taskId28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(timeValue3);
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertNotNull(bulkShardRequest23);
        org.junit.Assert.assertNull(transportAddress24);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(taskId28);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 100);
        long long26 = versionType12.updateVersion((long) (byte) 0, (long) (byte) -1);
        org.elasticsearch.index.VersionType versionType27 = versionType12.versionTypeForReplicationAndRecovery();
        boolean boolean29 = versionType12.validateVersionForReads(10L);
        boolean boolean32 = versionType12.isVersionConflictForReads(0L, 0L);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        boolean boolean11 = bulkShardRequest9.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int14 = builder13.numberOfShards();
        java.lang.String[] strArray18 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder13.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest9, strSet19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder2.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet19);
        int int24 = builder23.numberOfShards();
        java.lang.String str25 = builder23.index();
        org.elasticsearch.action.ActionRequest actionRequest28 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest28);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest30);
        boolean boolean32 = bulkShardRequest30.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int35 = builder34.numberOfShards();
        java.lang.String[] strArray39 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = builder34.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest30, strSet40);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder44 = builder23.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet40);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder46 = builder23.removeAlias("current version [0] is different than the one provided [100]");
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData48 = builder23.mapping("");
        long long49 = builder23.version();
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder44);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertNull(mappingMetaData48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 1L + "'", long49 == 1L);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getCreationVersion();
        org.elasticsearch.index.Index index8 = indexMetaData1.getMergeSourceIndex();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.apache.lucene.util.Version version11 = indexMetaData1.getMinimumCompatibleVersion();
        org.elasticsearch.common.xcontent.XContentParser xContentParser12 = null;
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = indexMetaData1.fromXContent(xContentParser12, parseFieldMatcher13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNull(index8);
        org.junit.Assert.assertNull(version11);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.index.shard.ShardId shardId7 = bulkShardRequest3.shardId();
        long long8 = bulkShardRequest3.primaryTerm();
        bulkShardRequest3.primaryTerm((long) 0);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple7 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.ActionRequest actionRequest10 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue16 = bulkShardRequest15.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = bulkShardRequest12.timeout(timeValue16);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest17, writeResult19);
        boolean boolean21 = updateResult20.failure();
        java.lang.Throwable throwable22 = updateResult20.error;
        org.elasticsearch.action.update.UpdateResponse updateResponse23 = updateResult20.noopResult;
        boolean boolean24 = updateResult20.success();
        org.elasticsearch.action.update.UpdateResponse updateResponse25 = updateResult20.noopResult;
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(bulkShardRequest17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(throwable22);
        org.junit.Assert.assertNull(updateResponse23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(updateResponse25);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(97, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting5 = null;
        java.lang.Throwable throwable7 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting5, "", throwable7, "");
        org.elasticsearch.action.update.UpdateHelper.Result result10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result10, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable13, writeResult14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure9, (org.elasticsearch.transport.TransportMessage) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = bulkShardRequest11.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = bulkShardRequest11.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        bulkShardRequest11.primaryTerm((long) (byte) 2);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = bulkItemRequestTuple24.v1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = bulkItemRequestTuple24.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest18);
        org.junit.Assert.assertNull(transportAddress19);
        org.junit.Assert.assertNotNull(bulkItemRequest25);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.tasks.TaskId taskId15 = null;
        bulkShardRequest8.setParentTask(taskId15);
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable18, writeResult19);
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = bulkShardRequest8.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest((int) ' ', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = bulkItemRequest23.index();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions21);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.State state1 = org.elasticsearch.cluster.metadata.IndexMetaData.State.fromString("current version [97] is different than the one provided [97]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No state match for [current version [97] is different than the one provided [97]]");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.requireFilters();
        java.util.Set<java.lang.String> strSet8 = null; // flaky: indexMetaData0.activeAllocationIds((int) (short) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap10 = indexMetaData0.getCustoms();
        org.elasticsearch.common.settings.Settings settings11 = indexMetaData0.getSettings();
        org.elasticsearch.transport.TransportService transportService12 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService13 = null;
        org.elasticsearch.indices.IndicesService indicesService14 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool15 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction16 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction17 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper18 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters19 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction21 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings11, transportService12, clusterService13, indicesService14, threadPool15, shardStateAction16, mappingUpdatedAction17, updateHelper18, actionFilters19, indexNameExpressionResolver20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(version5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNull(strSet8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap10);
        org.junit.Assert.assertNotNull(settings11);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap5 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.includeFilters();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap7 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.index.Index index8 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.index.Index index9 = indexMetaData0.getMergeSourceIndex();
        int int10 = indexMetaData0.getNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(strImmutableOpenMap5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap7);
        org.junit.Assert.assertNull(index8);
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 100);
        org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.lang.String> versionTypeEnumTuple25 = new org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.lang.String>((java.lang.Enum<org.elasticsearch.index.VersionType>) versionType12, "indices:data/write/bulk[s]");
        byte byte26 = versionType12.getValue();
        boolean boolean30 = versionType12.isVersionConflictForWrites((long) (short) 10, 0L, false);
        boolean boolean32 = versionType12.validateVersionForReads((long) (short) 1);
        org.elasticsearch.index.VersionType versionType33 = versionType12.versionTypeForReplicationAndRecovery();
        boolean boolean35 = versionType12.validateVersionForReads((-1L));
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + byte26 + "' != '" + (byte) 3 + "'", byte26 == (byte) 3);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable16, writeResult17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest8.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.common.unit.TimeValue timeValue21 = bulkShardRequest8.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = bulkShardRequest8.index("");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = bulkShardRequest8.setShardId(shardId24);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, writeResult26);
        boolean boolean28 = bulkShardRequest25.getShouldPersistResult();
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(bulkShardRequest23);
        org.junit.Assert.assertNotNull(bulkShardRequest25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.update.UpdateHelper.Result result10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result10, (org.elasticsearch.action.ActionRequest) bulkShardRequest12, false, throwable15, writeResult16);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest12);
        org.elasticsearch.action.ActionRequest actionRequest20 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest20);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest21, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.action.update.UpdateHelper.Result result25 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest27);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = bulkShardRequest27.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult31 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult32 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result25, (org.elasticsearch.action.ActionRequest) bulkShardRequest27, writeResult31);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple33 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = bulkShardRequest35.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue38 = bulkShardRequest37.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = bulkShardRequest35.timeout(timeValue38);
        org.elasticsearch.common.unit.TimeValue timeValue40 = bulkShardRequest39.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = bulkShardRequest27.timeout(timeValue40);
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = bulkShardRequest27.remoteAddress();
        org.junit.Assert.assertNotNull(bulkShardRequest30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(bulkShardRequest39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(bulkShardRequest41);
        org.junit.Assert.assertNull(transportAddress42);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, writeResult13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = bulkShardRequest6.remoteAddress();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, writeResult16);
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        bulkShardRequest6.remoteAddress(transportAddress18);
        bulkShardRequest6.seqNo((long) (byte) -1);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.ActionRequest actionRequest29 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest29);
        org.elasticsearch.action.ActionRequest actionRequest33 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest33);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest34, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = null;
        bulkShardRequest35.remoteAddress(transportAddress39);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting42 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting44 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting46 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting48 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting50 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result52 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest54 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest54);
        org.elasticsearch.action.update.UpdateHelper.Result result56 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest58 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest59 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest58);
        java.lang.Throwable throwable61 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult62 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult63 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result56, (org.elasticsearch.action.ActionRequest) bulkShardRequest58, false, throwable61, writeResult62);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple64 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest55, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest58);
        org.elasticsearch.tasks.TaskId taskId65 = null;
        bulkShardRequest58.setParentTask(taskId65);
        org.elasticsearch.index.shard.ShardId shardId67 = bulkShardRequest58.shardId();
        bulkShardRequest58.seqNo((long) 0);
        java.lang.Throwable throwable71 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult72 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult73 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result52, (org.elasticsearch.action.ActionRequest) bulkShardRequest58, false, throwable71, writeResult72);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException74 = bulkShardRequest58.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure76 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting50, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException74, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure78 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting48, "update", (java.lang.Throwable) actionRequestValidationException74, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure80 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting46, "_na_", (java.lang.Throwable) actionRequestValidationException74, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure82 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting44, "_na_", (java.lang.Throwable) actionRequestValidationException74, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure84 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting42, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException74, "");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult85 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult86 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, (java.lang.Throwable) actionRequestValidationException74, writeResult85);
        java.lang.Throwable throwable87 = updateResult86.error;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure89 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "delete", throwable87, "index.number_of_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure91 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "index.version.created", throwable87, "index.shadow_replicas");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult92 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult93 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, true, throwable87, writeResult92);
        org.elasticsearch.tasks.TaskId taskId94 = bulkShardRequest6.getParentTask();
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertNull(shardId67);
        org.junit.Assert.assertNotNull(actionRequestValidationException74);
        org.junit.Assert.assertNotNull(throwable87);
        org.junit.Assert.assertEquals(throwable87.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable87.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable87.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
        org.junit.Assert.assertNotNull(taskId94);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable4, "");
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure6, (org.elasticsearch.transport.TransportMessage) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.action.ActionRequest actionRequest19 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest19);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.ActionRequest actionRequest26 = bulkItemRequest25.request();
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, false, throwable33, writeResult34);
        org.elasticsearch.action.update.UpdateHelper.Result result36 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        org.elasticsearch.action.update.UpdateHelper.Result result40 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest42);
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult46 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult47 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result40, (org.elasticsearch.action.ActionRequest) bulkShardRequest42, false, throwable45, writeResult46);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest39, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest42);
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result36, (org.elasticsearch.action.ActionRequest) bulkShardRequest42, true, throwable50, writeResult51);
        org.elasticsearch.index.shard.ShardId shardId53 = bulkShardRequest42.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue54 = bulkShardRequest42.timeout();
        org.elasticsearch.tasks.TaskId taskId55 = bulkShardRequest42.getParentTask();
        bulkShardRequest30.setParentTask(taskId55);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting58 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result60 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest62 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest63 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest62);
        org.elasticsearch.action.update.UpdateHelper.Result result64 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest66 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest67 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest66);
        java.lang.Throwable throwable69 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult70 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult71 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result64, (org.elasticsearch.action.ActionRequest) bulkShardRequest66, false, throwable69, writeResult70);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple72 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest63, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest66);
        org.elasticsearch.tasks.TaskId taskId73 = null;
        bulkShardRequest66.setParentTask(taskId73);
        org.elasticsearch.index.shard.ShardId shardId75 = bulkShardRequest66.shardId();
        bulkShardRequest66.seqNo((long) 0);
        java.lang.Throwable throwable79 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult80 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult81 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result60, (org.elasticsearch.action.ActionRequest) bulkShardRequest66, false, throwable79, writeResult80);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException82 = bulkShardRequest66.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure84 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting58, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException82, "index.blocks.write");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult85 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult86 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, false, (java.lang.Throwable) actionRequestValidationException82, writeResult85);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple87 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest30);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = bulkShardRequest30.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertNotNull(actionRequest26);
        org.junit.Assert.assertNull(shardId53);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(taskId55);
        org.junit.Assert.assertNull(shardId75);
        org.junit.Assert.assertNotNull(actionRequestValidationException82);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.common.io.stream.StreamInput streamInput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff9 = indexMetaData0.readDiffFrom(streamInput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        long long4 = indexMetaData0.getCreationDate();
        java.util.Set<java.lang.String> strSet6 = null; // flaky: indexMetaData0.activeAllocationIds((int) (byte) 3);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData7);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap9 = indexMetaData7.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet10 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData7, indexShardStateSet10);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters12 = indexMetaData7.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData0.diff(indexMetaData7);
        org.elasticsearch.Version version14 = indexMetaData0.getCreationVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters15 = indexMetaData0.requireFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap16 = indexMetaData0.getAliases();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap9);
        org.junit.Assert.assertNotNull(indexShardStateSet10);
        org.junit.Assert.assertNull(discoveryNodeFilters12);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNotNull(version14);
        org.junit.Assert.assertNull(discoveryNodeFilters15);
        org.junit.Assert.assertNotNull(strImmutableOpenMap16);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads(10L);
        boolean boolean26 = versionType12.isVersionConflictForReads(100L, (long) 'a');
        boolean boolean28 = versionType12.validateVersionForWrites((long) (short) 10);
        long long31 = versionType12.updateVersion(1L, (long) '4');
        long long34 = versionType12.updateVersion(0L, (long) 35);
        org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.lang.String> versionTypeEnumTuple36 = new org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.lang.String>((java.lang.Enum<org.elasticsearch.index.VersionType>) versionType12, "indices:data/write/bulk[s]");
        byte byte37 = versionType12.getValue();
        org.elasticsearch.index.VersionType versionType38 = versionType12.versionTypeForReplicationAndRecovery();
        boolean boolean41 = versionType12.isVersionConflictForReads((long) 3, (long) 100);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 52L + "'", long31 == 52L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 35L + "'", long34 == 35L);
        org.junit.Assert.assertTrue("'" + byte37 + "' != '" + (byte) 3 + "'", byte37 == (byte) 3);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getCreationVersion();
        org.elasticsearch.index.Index index8 = indexMetaData1.getMergeSourceIndex();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.numberOfShards((int) (byte) 100);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNull(index8);
        org.junit.Assert.assertNotNull(builder11);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters21 = indexMetaData0.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters23 = indexMetaData0.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertNull(discoveryNodeFilters23);
        org.junit.Assert.assertNotNull(builder25);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        org.elasticsearch.common.settings.Settings settings4 = indexMetaData0.getSettings();
        org.elasticsearch.Version version5 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable23, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.tasks.TaskId taskId27 = null;
        bulkShardRequest20.setParentTask(taskId27);
        org.elasticsearch.index.shard.ShardId shardId29 = bulkShardRequest20.shardId();
        bulkShardRequest20.seqNo((long) 0);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable33, writeResult34);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = bulkShardRequest20.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException36, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "update", (java.lang.Throwable) actionRequestValidationException36, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "_na_", (java.lang.Throwable) actionRequestValidationException36, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "primary_terms", (java.lang.Throwable) actionRequestValidationException36, "hi!");
        org.elasticsearch.cluster.block.ClusterBlock clusterBlock45 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_WRITE_BLOCK;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting46 = null;
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting46, "index.shared_filesystem", throwable48, "index.shared_filesystem");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.block.ClusterBlock, org.elasticsearch.index.shard.IndexShard.ShardFailure> clusterBlockTuple51 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.block.ClusterBlock, org.elasticsearch.index.shard.IndexShard.ShardFailure>(clusterBlock45, shardFailure50);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData52 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder53 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData52);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData54 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder55 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData54);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap56 = indexMetaData54.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters57 = indexMetaData54.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder58 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData54);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff59 = indexMetaData52.diff(indexMetaData54);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder61 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int62 = builder61.numberOfShards();
        java.lang.String[] strArray66 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet67 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet67, strArray66);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder69 = builder61.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet67);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData71 = builder61.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder74 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int75 = builder74.numberOfShards();
        java.lang.String[] strArray79 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder82 = builder74.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet80);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder83 = builder61.putActiveAllocationIds((int) (byte) 3, (java.util.Set<java.lang.String>) strSet80);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData>, java.util.Set<java.lang.String>> indexMetaDataDiffTuple84 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData>, java.util.Set<java.lang.String>>(indexMetaDataDiff59, (java.util.Set<java.lang.String>) strSet80);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData85 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder86 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData85);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap87 = indexMetaData85.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet88 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple89 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData85, indexShardStateSet88);
        org.elasticsearch.common.collect.Tuple<java.util.AbstractCollection<java.lang.String>, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> strCollectionTuple90 = new org.elasticsearch.common.collect.Tuple<java.util.AbstractCollection<java.lang.String>, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>((java.util.AbstractCollection<java.lang.String>) strSet80, indexShardStateSet88);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.block.ClusterBlock, java.util.HashSet<java.lang.String>> clusterBlockTuple91 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.block.ClusterBlock, java.util.HashSet<java.lang.String>>(clusterBlock45, (java.util.HashSet<java.lang.String>) strSet80);
        org.elasticsearch.common.collect.Tuple<java.lang.Throwable, java.util.Collection<java.lang.String>> throwableTuple92 = new org.elasticsearch.common.collect.Tuple<java.lang.Throwable, java.util.Collection<java.lang.String>>((java.lang.Throwable) actionRequestValidationException36, (java.util.Collection<java.lang.String>) strSet80);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.Version, java.lang.Cloneable> versionTuple93 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.Version, java.lang.Cloneable>(version5, (java.lang.Cloneable) strSet80);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(settings4);
        org.junit.Assert.assertNotNull(version5);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(clusterBlock45);
        org.junit.Assert.assertNotNull(indexMetaData52);
        org.junit.Assert.assertNotNull(builder53);
        org.junit.Assert.assertNotNull(indexMetaData54);
        org.junit.Assert.assertNotNull(builder55);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap56);
        org.junit.Assert.assertNull(discoveryNodeFilters57);
        org.junit.Assert.assertNotNull(indexMetaDataDiff59);
        org.junit.Assert.assertNotNull(builder61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(builder69);
        org.junit.Assert.assertNull(mappingMetaData71);
        org.junit.Assert.assertNotNull(builder74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(builder82);
        org.junit.Assert.assertNotNull(builder83);
        org.junit.Assert.assertNotNull(indexMetaData85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap87);
        org.junit.Assert.assertNotNull(indexShardStateSet88);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.tasks.TaskId taskId18 = null;
        bulkShardRequest11.setParentTask(taskId18);
        org.elasticsearch.index.shard.ShardId shardId20 = bulkShardRequest11.shardId();
        bulkShardRequest11.seqNo((long) 0);
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable24, writeResult25);
        org.elasticsearch.action.ActionRequest actionRequest27 = updateResult26.actionRequest;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, actionRequest27, writeResult28);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult30 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult31 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, actionRequest27, writeResult30);
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result35 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest37);
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult41 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult42 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result35, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, false, throwable40, writeResult41);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest37);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult44 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult45 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, writeResult44);
        org.elasticsearch.common.transport.TransportAddress transportAddress46 = bulkShardRequest37.remoteAddress();
        org.elasticsearch.common.unit.TimeValue timeValue47 = bulkShardRequest37.timeout();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException48 = bulkShardRequest37.validate();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, actionRequest27, false, (java.lang.Throwable) actionRequestValidationException48, writeResult49);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = null;
        org.elasticsearch.common.collect.Tuple<java.lang.Object, org.elasticsearch.action.bulk.BulkShardRequest> objTuple52 = new org.elasticsearch.common.collect.Tuple<java.lang.Object, org.elasticsearch.action.bulk.BulkShardRequest>((java.lang.Object) actionRequestValidationException48, bulkShardRequest51);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [97] is different than the one provided [97]", (java.lang.Throwable) actionRequestValidationException48, "");
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(actionRequest27);
        org.junit.Assert.assertNull(transportAddress46);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(actionRequestValidationException48);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        org.elasticsearch.action.update.UpdateHelper.Result result13 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        java.lang.Throwable throwable18 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult19 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult20 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result13, (org.elasticsearch.action.ActionRequest) bulkShardRequest15, false, throwable18, writeResult19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest12, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.ActionRequest actionRequest23 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest23);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest24, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest12, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest25);
        bulkShardRequest25.setParentTask("index.version.created", (long) (byte) 1);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25, writeResult33);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3);
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.tasks.TaskId taskId14 = null;
        bulkShardRequest7.setParentTask(taskId14);
        org.elasticsearch.index.shard.ShardId shardId16 = bulkShardRequest7.shardId();
        bulkShardRequest7.seqNo((long) 0);
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = bulkShardRequest7.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, writeResult21);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(indicesOptions19);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable16, writeResult17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest8.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue20 = bulkShardRequest8.timeout();
        org.elasticsearch.tasks.TaskId taskId21 = bulkShardRequest8.getParentTask();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, writeResult22);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.ActionRequest actionRequest25 = bulkItemRequest24.request();
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable35, writeResult36);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest29, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        org.elasticsearch.tasks.TaskId taskId39 = null;
        bulkShardRequest32.setParentTask(taskId39);
        java.lang.Throwable throwable42 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult43 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult44 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, true, throwable42, writeResult43);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple45 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest24, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        org.elasticsearch.action.update.UpdateHelper.Result result46 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result47 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest48 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str49 = bulkShardRequest48.index();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult50 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult51 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result47, (org.elasticsearch.action.ActionRequest) bulkShardRequest48, writeResult50);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult52 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult53 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result46, (org.elasticsearch.action.ActionRequest) bulkShardRequest48, writeResult52);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple54 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest24, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest48);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(actionRequest25);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("index.");
        int int8 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters9 = indexMetaData0.includeFilters();
        int int10 = indexMetaData0.getNumberOfReplicas();
        long long11 = indexMetaData0.getVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData12 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData13 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData13);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap15 = indexMetaData13.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters16 = indexMetaData13.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff17 = indexMetaData12.diff(indexMetaData13);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters18 = indexMetaData13.requireFilters();
        org.elasticsearch.Version version19 = indexMetaData13.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings20 = indexMetaData13.getSettings();
        org.elasticsearch.index.Index index21 = indexMetaData13.getMergeSourceIndex();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap22 = indexMetaData13.getActiveAllocationIds();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff23 = indexMetaData0.diff(indexMetaData13);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData25 = indexMetaData13.mappingOrDefault("update");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNotNull(indexMetaData12);
        org.junit.Assert.assertNotNull(indexMetaData13);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap15);
        org.junit.Assert.assertNull(discoveryNodeFilters16);
        org.junit.Assert.assertNotNull(indexMetaDataDiff17);
        org.junit.Assert.assertNull(discoveryNodeFilters18);
        org.junit.Assert.assertNotNull(version19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNull(index21);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap22);
        org.junit.Assert.assertNotNull(indexMetaDataDiff23);
        org.junit.Assert.assertNull(mappingMetaData25);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        int int2 = builder1.numberOfReplicas();
        java.lang.String str3 = builder1.index();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder1.primaryTerm((int) (byte) 2, (long) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: you must set the number of shards before setting/reading primary terms");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.registerPrototype("current version [97] is different than the one provided [35]", custom1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = bulkShardRequest7.setShardId(shardId10);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = bulkShardRequest7.setShardId(shardId12);
        bulkShardRequest13.setParentTask("index.uuid", (long) 97);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = bulkShardRequest13.index("index.number_of_shards");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, writeResult20);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = bulkShardRequest18.index("current version [97] is different than the one provided [35]");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "", throwable27, "");
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest31, false, throwable33, writeResult34);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure29, (org.elasticsearch.transport.TransportMessage) bulkShardRequest31);
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = bulkShardRequest31.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions38 = bulkShardRequest31.indicesOptions();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException39 = bulkShardRequest31.validate();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult40 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult41 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, (java.lang.Throwable) actionRequestValidationException39, writeResult40);
        org.elasticsearch.action.update.UpdateHelper.Result result42 = updateResult41.result;
        org.junit.Assert.assertNotNull(bulkShardRequest11);
        org.junit.Assert.assertNotNull(bulkShardRequest13);
        org.junit.Assert.assertNotNull(bulkShardRequest18);
        org.junit.Assert.assertNotNull(bulkShardRequest23);
        org.junit.Assert.assertNull(transportAddress37);
        org.junit.Assert.assertNotNull(indicesOptions38);
        org.junit.Assert.assertNotNull(actionRequestValidationException39);
        org.junit.Assert.assertNull(result42);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder22.numberOfReplicas((int) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder24.removeAlias("current version [1] is different than the one provided [0]");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(builder26);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData2 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData2);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap4 = indexMetaData2.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData2.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData2);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff7 = indexMetaData0.diff(indexMetaData2);
        long long8 = indexMetaData2.getVersion();
        long long9 = indexMetaData2.getVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(indexMetaData2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap4);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, throwable17, writeResult18);
        org.elasticsearch.index.shard.ShardId shardId20 = bulkShardRequest9.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue21 = bulkShardRequest9.timeout();
        org.elasticsearch.tasks.TaskId taskId22 = bulkShardRequest9.getParentTask();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult23);
        org.elasticsearch.action.ActionRequest actionRequest25 = updateResult24.actionRequest;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting29 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting33 = null;
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure37 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting33, "", throwable35, "");
        org.elasticsearch.action.update.UpdateHelper.Result result38 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result38, (org.elasticsearch.action.ActionRequest) bulkShardRequest39, false, throwable41, writeResult42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure37, (org.elasticsearch.transport.TransportMessage) bulkShardRequest39);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = bulkShardRequest39.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = bulkShardRequest39.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting50 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result52 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest54 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest54);
        org.elasticsearch.action.update.UpdateHelper.Result result56 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest58 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest59 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest58);
        java.lang.Throwable throwable61 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult62 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult63 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result56, (org.elasticsearch.action.ActionRequest) bulkShardRequest58, false, throwable61, writeResult62);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple64 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest55, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest58);
        org.elasticsearch.tasks.TaskId taskId65 = null;
        bulkShardRequest58.setParentTask(taskId65);
        org.elasticsearch.index.shard.ShardId shardId67 = bulkShardRequest58.shardId();
        bulkShardRequest58.seqNo((long) 0);
        java.lang.Throwable throwable71 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult72 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult73 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result52, (org.elasticsearch.action.ActionRequest) bulkShardRequest58, false, throwable71, writeResult72);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException74 = bulkShardRequest58.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure76 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting50, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException74, "index.blocks.write");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult77 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult78 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest39, false, (java.lang.Throwable) actionRequestValidationException74, writeResult77);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure80 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting29, "index.version.upgraded_string", (java.lang.Throwable) actionRequestValidationException74, "update");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure82 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException74, "indices:data/write/bulk[s]");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult83 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult84 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, actionRequest25, false, (java.lang.Throwable) actionRequestValidationException74, writeResult83);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest85 = new org.elasticsearch.action.bulk.BulkItemRequest(97, actionRequest25);
        org.elasticsearch.common.io.stream.StreamInput streamInput86 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest85.readFrom(streamInput86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(actionRequest25);
        org.junit.Assert.assertNotNull(bulkShardRequest46);
        org.junit.Assert.assertNull(transportAddress47);
        org.junit.Assert.assertNull(shardId67);
        org.junit.Assert.assertNotNull(actionRequestValidationException74);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.VersionType versionType1 = org.elasticsearch.index.VersionType.fromString("index.data_path");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No version type match [index.data_path]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable4, "");
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure6, (org.elasticsearch.transport.TransportMessage) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.action.ActionRequest actionRequest19 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest19);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        bulkShardRequest21.primaryTerm(100L);
        org.junit.Assert.assertNotNull(bulkShardRequest15);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting1, "", throwable3, "");
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure5, (org.elasticsearch.transport.TransportMessage) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = bulkShardRequest7.index("hi!");
        bulkShardRequest7.primaryTerm(100L);
        org.elasticsearch.index.shard.ShardId shardId17 = bulkShardRequest7.shardId();
        boolean boolean18 = bulkShardRequest7.getShouldPersistResult();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(35, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        int int20 = bulkItemRequest19.id();
        org.junit.Assert.assertNotNull(bulkShardRequest14);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 35 + "'", int20 == 35);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.creationDate((long) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder5.removeAlias("index.version.minimum_compatible");
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder5.putAlias(aliasMetaData10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.index.VersionType versionType18 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean22 = versionType18.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest8, versionType18);
        boolean boolean27 = versionType18.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean28 = indexMetaData0.equals((java.lang.Object) boolean27);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters29 = indexMetaData0.getInitialRecoveryFilters();
        boolean boolean31 = indexMetaData0.isSameUUID("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        java.lang.String str33 = indexMetaData0.getIndexUUID();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder35 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params36 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder37 = indexMetaData0.toXContent(xContentBuilder35, params36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_na_" + "'", str33, "_na_");
        org.junit.Assert.assertNotNull(params36);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.ActionRequest actionRequest17 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        bulkShardRequest19.remoteAddress(transportAddress23);
        org.elasticsearch.action.update.UpdateHelper.Result result25 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue27 = bulkShardRequest26.timeout();
        java.lang.String str28 = bulkShardRequest26.index();
        org.elasticsearch.common.unit.TimeValue timeValue29 = bulkShardRequest26.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting33 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result35 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest37);
        org.elasticsearch.action.update.UpdateHelper.Result result39 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest41);
        java.lang.Throwable throwable44 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult45 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult46 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result39, (org.elasticsearch.action.ActionRequest) bulkShardRequest41, false, throwable44, writeResult45);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple47 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest38, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest41);
        org.elasticsearch.tasks.TaskId taskId48 = null;
        bulkShardRequest41.setParentTask(taskId48);
        org.elasticsearch.index.shard.ShardId shardId50 = bulkShardRequest41.shardId();
        bulkShardRequest41.seqNo((long) 0);
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult55 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult56 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result35, (org.elasticsearch.action.ActionRequest) bulkShardRequest41, false, throwable54, writeResult55);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException57 = bulkShardRequest41.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure59 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting33, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException57, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure61 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting31, "update", (java.lang.Throwable) actionRequestValidationException57, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult62 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult63 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result25, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, false, (java.lang.Throwable) actionRequestValidationException57, writeResult62);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException> transportRequestTuple64 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.transport.TransportRequest, java.lang.RuntimeException>((org.elasticsearch.transport.TransportRequest) bulkShardRequest19, (java.lang.RuntimeException) actionRequestValidationException57);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure66 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "", (java.lang.Throwable) actionRequestValidationException57, "index.shadow_replicas");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult67 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult68 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, true, (java.lang.Throwable) actionRequestValidationException57, writeResult67);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult69 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult70 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, writeResult69);
        bulkShardRequest5.setParentTask("current version [97] is different than the one provided [97]", 10L);
        bulkShardRequest5.setParentTask("current version [32] is different than the one provided [2]", (long) (short) -1);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(actionRequestValidationException57);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple9 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        bulkShardRequest8.remoteAddress(transportAddress12);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest((int) ' ', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest15 = null;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, bulkShardRequestReplicationRequest15);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result19 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str21 = bulkShardRequest20.index();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result19, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, writeResult22);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, writeResult24);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, writeResult26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        int int29 = bulkItemRequest14.id();
        org.elasticsearch.action.update.UpdateHelper.Result result30 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = bulkShardRequest33.consistencyLevel(writeConsistencyLevel35);
        long long37 = bulkShardRequest33.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result30, (org.elasticsearch.action.ActionRequest) bulkShardRequest33, writeResult39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest33);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertNotNull(bulkShardRequest36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        java.lang.Throwable throwable6 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure8 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", throwable6, "");
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure8, (org.elasticsearch.transport.TransportMessage) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = bulkShardRequest10.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str20 = bulkShardRequest19.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = bulkItemRequestTuple21.v1();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult32 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult33 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, false, throwable31, writeResult32);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        org.elasticsearch.action.ActionRequest actionRequest36 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest36);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest37, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        int int41 = bulkItemRequest25.id();
        org.elasticsearch.action.update.UpdateHelper.Result result42 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest44 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest44);
        org.elasticsearch.action.update.UpdateHelper.Result result46 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest48 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest49 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest48);
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult52 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult53 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result46, (org.elasticsearch.action.ActionRequest) bulkShardRequest48, false, throwable51, writeResult52);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple54 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest45, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest48);
        java.lang.Throwable throwable56 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult57 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult58 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result42, (org.elasticsearch.action.ActionRequest) bulkShardRequest48, true, throwable56, writeResult57);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest59 = updateResult58.request();
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest60 = updateResult58.request();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, bulkShardRequestReplicationRequest60);
        boolean boolean62 = bulkItemRequestTuple21.equals((java.lang.Object) bulkItemRequestTuple61);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest63 = bulkItemRequestTuple21.v1();
        int int64 = bulkItemRequest63.id();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting67 = null;
        java.lang.Throwable throwable69 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure71 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting67, "", throwable69, "");
        org.elasticsearch.action.update.UpdateHelper.Result result72 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest73 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable75 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult76 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult77 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result72, (org.elasticsearch.action.ActionRequest) bulkShardRequest73, false, throwable75, writeResult76);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple78 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure71, (org.elasticsearch.transport.TransportMessage) bulkShardRequest73);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest80 = bulkShardRequest73.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest81 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest80);
        org.elasticsearch.action.ActionRequest actionRequest84 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest85 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest84);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest86 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple87 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest85, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest86);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest88 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest86);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple89 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest81, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest86);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest90 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest86);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple91 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest63, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest86);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult92 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult93 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest86, writeResult92);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest94 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest86);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult95 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult96 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest86, writeResult95);
        org.junit.Assert.assertNotNull(bulkShardRequest17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(bulkItemRequest22);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest59);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(bulkItemRequest63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 35 + "'", int64 == 35);
        org.junit.Assert.assertNotNull(bulkShardRequest80);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData5 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData5);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap7 = indexMetaData5.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData5.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff9 = indexMetaData4.diff(indexMetaData5);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters10 = indexMetaData5.requireFilters();
        org.elasticsearch.Version version11 = indexMetaData5.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings12 = indexMetaData5.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder3.settings(settings12);
        org.elasticsearch.common.settings.Settings settings14 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings12);
        org.elasticsearch.transport.TransportService transportService15 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService16 = null;
        org.elasticsearch.indices.IndicesService indicesService17 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool18 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction19 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction20 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper21 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters22 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction24 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings14, transportService15, clusterService16, indicesService17, threadPool18, shardStateAction19, mappingUpdatedAction20, updateHelper21, actionFilters22, indexNameExpressionResolver23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(indexMetaData5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertNotNull(indexMetaDataDiff9);
        org.junit.Assert.assertNull(discoveryNodeFilters10);
        org.junit.Assert.assertNotNull(version11);
        org.junit.Assert.assertNotNull(settings12);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(settings14);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.tasks.TaskId taskId13 = null;
        bulkShardRequest6.setParentTask(taskId13);
        org.elasticsearch.index.shard.ShardId shardId15 = bulkShardRequest6.shardId();
        bulkShardRequest6.seqNo((long) 0);
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable19, writeResult20);
        org.elasticsearch.action.ActionRequest actionRequest22 = updateResult21.actionRequest;
        org.elasticsearch.action.ActionRequest actionRequest23 = updateResult21.actionRequest;
        boolean boolean24 = actionRequest23.getShouldPersistResult();
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(actionRequest22);
        org.junit.Assert.assertNotNull(actionRequest23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters2 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData3);
        org.elasticsearch.Version version5 = indexMetaData3.getCreationVersion();
        long long6 = indexMetaData3.getCreationDate();
        long long7 = indexMetaData3.getCreationDate();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData3.getActiveAllocationIds();
        boolean boolean9 = indexMetaData0.equals((java.lang.Object) indexMetaData3);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData0.getInitialRecoveryFilters();
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap12 = indexMetaData0.getActiveAllocationIds();
        int int13 = indexMetaData0.getTotalNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNull(discoveryNodeFilters2);
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(version5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        bulkShardRequest9.remoteAddress(transportAddress13);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) ' ', (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, writeResult16);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData21);
        org.elasticsearch.Version version23 = indexMetaData21.getCreationVersion();
        long long24 = indexMetaData21.getCreationDate();
        int int25 = indexMetaData21.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state26 = indexMetaData21.getState();
        byte byte27 = state26.id();
        byte byte28 = state26.id();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest34, false, throwable37, writeResult38);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest31, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest34);
        org.elasticsearch.action.ActionRequest actionRequest42 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest42);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest44 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple45 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest43, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest44);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple46 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest31, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest44);
        org.elasticsearch.action.update.UpdateHelper.Result result47 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest49);
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult53 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult54 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result47, (org.elasticsearch.action.ActionRequest) bulkShardRequest49, false, throwable52, writeResult53);
        org.elasticsearch.action.update.UpdateHelper.Result result55 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest57 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest58 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest57);
        org.elasticsearch.action.update.UpdateHelper.Result result59 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest61 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest62 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest61);
        java.lang.Throwable throwable64 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult65 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult66 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result59, (org.elasticsearch.action.ActionRequest) bulkShardRequest61, false, throwable64, writeResult65);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest58, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest61);
        java.lang.Throwable throwable69 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult70 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult71 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result55, (org.elasticsearch.action.ActionRequest) bulkShardRequest61, true, throwable69, writeResult70);
        org.elasticsearch.index.shard.ShardId shardId72 = bulkShardRequest61.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue73 = bulkShardRequest61.timeout();
        org.elasticsearch.tasks.TaskId taskId74 = bulkShardRequest61.getParentTask();
        bulkShardRequest49.setParentTask(taskId74);
        bulkShardRequest44.setParentTask(taskId74);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData77 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder78 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData77);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData79 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder80 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData79);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap81 = indexMetaData79.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters82 = indexMetaData79.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder83 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData79);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff84 = indexMetaData77.diff(indexMetaData79);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.tasks.TaskId, org.elasticsearch.cluster.metadata.IndexMetaData> taskIdTuple85 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.tasks.TaskId, org.elasticsearch.cluster.metadata.IndexMetaData>(taskId74, indexMetaData77);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData.State, org.elasticsearch.tasks.TaskId> stateTuple86 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData.State, org.elasticsearch.tasks.TaskId>(state26, taskId74);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.tasks.Task task87 = bulkShardRequest9.createTask((long) (byte) 1, "index.shared_filesystem", "", taskId74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(version23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + state26 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state26.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + byte27 + "' != '" + (byte) 0 + "'", byte27 == (byte) 0);
        org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) 0 + "'", byte28 == (byte) 0);
        org.junit.Assert.assertNull(shardId72);
        org.junit.Assert.assertNotNull(timeValue73);
        org.junit.Assert.assertNotNull(taskId74);
        org.junit.Assert.assertNotNull(indexMetaData77);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(indexMetaData79);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap81);
        org.junit.Assert.assertNull(discoveryNodeFilters82);
        org.junit.Assert.assertNotNull(indexMetaDataDiff84);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters21 = indexMetaData0.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap22 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters23 = indexMetaData0.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.settings.Settings settings25 = indexMetaData0.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.index.Index index27 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.common.xcontent.XContentParser xContentParser28 = null;
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData30 = indexMetaData0.fromXContent(xContentParser28, parseFieldMatcher29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters21);
        org.junit.Assert.assertNotNull(strImmutableOpenMap22);
        org.junit.Assert.assertNull(discoveryNodeFilters23);
        org.junit.Assert.assertNotNull(settings25);
        org.junit.Assert.assertNull(index27);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.common.settings.Setting<org.elasticsearch.common.settings.Settings> settingsSetting13 = org.elasticsearch.cluster.metadata.IndexMetaData.INDEX_ROUTING_EXCLUDE_GROUP_SETTING;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.action.support.ToXContentToBytes> bulkItemRequestTupleTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.action.support.ToXContentToBytes>(bulkItemRequestTuple12, (org.elasticsearch.action.support.ToXContentToBytes) settingsSetting13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.read");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData17 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData17);
        java.lang.String str19 = builder18.index();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int22 = builder21.numberOfShards();
        java.lang.String[] strArray26 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder21.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet27);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state30 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder29.state(state30);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder29.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData34 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData34);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap36 = indexMetaData34.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet37 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData34, indexShardStateSet37);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters39 = indexMetaData34.includeFilters();
        org.elasticsearch.common.settings.Settings settings40 = indexMetaData34.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = builder29.settings(settings40);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = builder18.settings(settings40);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder16.settings(settings40);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom45 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder46 = builder16.putCustom("index.version.minimum_compatible", custom45);
        boolean boolean47 = bulkItemRequestTuple12.equals((java.lang.Object) builder16);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = bulkItemRequestTuple12.v1();
        org.junit.Assert.assertNotNull(settingsSetting13);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(indexMetaData17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(indexMetaData34);
        org.junit.Assert.assertNotNull(builder35);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap36);
        org.junit.Assert.assertNotNull(indexShardStateSet37);
        org.junit.Assert.assertNull(discoveryNodeFilters39);
        org.junit.Assert.assertNotNull(settings40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(bulkItemRequest48);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData20 = builder19.build();
        int int21 = builder19.numberOfReplicas();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder19.putMapping("current version [10] is higher than the one provided [98]", "current version [1] is different than the one provided [32]");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(indexMetaData20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.version((long) (short) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.removeAlias("");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.Version version8 = indexMetaData6.getCreationVersion();
        long long9 = indexMetaData6.getCreationDate();
        int int10 = indexMetaData6.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state11 = indexMetaData6.getState();
        byte byte12 = state11.id();
        byte byte13 = state11.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = builder1.state(state11);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder1.numberOfReplicas((int) '4');
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + state11 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state11.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 0 + "'", byte12 == (byte) 0);
        org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 0 + "'", byte13 == (byte) 0);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertNotNull(builder16);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.Version version6 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.apache.lucene.util.Version version8 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.Version version9 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.common.io.stream.StreamInput streamInput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData11 = indexMetaData0.readFrom(streamInput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNull(version8);
        org.junit.Assert.assertNotNull(version9);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting1, "", throwable3, "");
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure5, (org.elasticsearch.transport.TransportMessage) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = bulkShardRequest7.index("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = bulkShardRequest14.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        bulkShardRequest14.remoteAddress(transportAddress16);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = bulkShardRequest14.index("current version [2] is higher than the one provided [-1]");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, false, throwable33, writeResult34);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest30);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, true, throwable38, writeResult39);
        org.elasticsearch.index.shard.ShardId shardId41 = bulkShardRequest30.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue42 = bulkShardRequest30.timeout();
        org.elasticsearch.tasks.TaskId taskId43 = bulkShardRequest30.getParentTask();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting45 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting47 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting49 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result51 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest53 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest54 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest53);
        org.elasticsearch.action.update.UpdateHelper.Result result55 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest57 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest58 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest57);
        java.lang.Throwable throwable60 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult61 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult62 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result55, (org.elasticsearch.action.ActionRequest) bulkShardRequest57, false, throwable60, writeResult61);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple63 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest54, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest57);
        org.elasticsearch.tasks.TaskId taskId64 = null;
        bulkShardRequest57.setParentTask(taskId64);
        org.elasticsearch.index.shard.ShardId shardId66 = bulkShardRequest57.shardId();
        bulkShardRequest57.seqNo((long) 0);
        java.lang.Throwable throwable70 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult71 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult72 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result51, (org.elasticsearch.action.ActionRequest) bulkShardRequest57, false, throwable70, writeResult71);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException73 = bulkShardRequest57.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure75 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting49, "index.number_of_shards", (java.lang.Throwable) actionRequestValidationException73, "update");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure77 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting47, "index.uuid", (java.lang.Throwable) actionRequestValidationException73, "index.blocks.metadata");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure79 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting45, "delete", (java.lang.Throwable) actionRequestValidationException73, "");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult80 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult81 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest30, false, (java.lang.Throwable) actionRequestValidationException73, writeResult80);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure83 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting21, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException73, "index.version.upgraded_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult84 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult85 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, true, (java.lang.Throwable) actionRequestValidationException73, writeResult84);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest87 = bulkShardRequest14.timeout("index.");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [BulkShardRequest.timeout] with value [index.] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest14);
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertNotNull(bulkShardRequest19);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNull(shardId66);
        org.junit.Assert.assertNotNull(actionRequestValidationException73);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.ActionRequest actionRequest14 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = bulkItemRequestTuple18.v1();
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest20 = bulkItemRequestTuple18.v2();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest20, writeResult21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = updateResult22.result;
        org.junit.Assert.assertNotNull(bulkItemRequest19);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest20);
        org.junit.Assert.assertNull(result23);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable21, writeResult22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.tasks.TaskId taskId25 = null;
        bulkShardRequest18.setParentTask(taskId25);
        boolean boolean27 = bulkItemRequestTuple12.equals((java.lang.Object) taskId25);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting28 = null;
        java.lang.Throwable throwable30 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting28, "hi!", throwable30, "hi!");
        boolean boolean33 = bulkItemRequestTuple12.equals((java.lang.Object) throwable30);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest34 = bulkItemRequestTuple12.v2();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = new org.elasticsearch.action.bulk.BulkItemRequest((int) ' ', (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest34);
        int int36 = bulkItemRequest35.id();
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 32 + "'", int36 == 32);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("index.");
        int int8 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters9 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData10);
        org.elasticsearch.Version version12 = indexMetaData10.getCreationVersion();
        long long13 = indexMetaData10.getCreationDate();
        int int14 = indexMetaData10.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData10);
        boolean boolean16 = indexMetaData0.equals((java.lang.Object) indexMetaData10);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData18 = indexMetaData0.mappingOrDefault("index.creation_date_string");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int21 = builder20.numberOfShards();
        java.lang.String[] strArray25 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = builder20.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet26);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData30 = builder20.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int34 = builder33.numberOfShards();
        java.lang.String[] strArray38 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = builder33.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet39);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = builder20.putActiveAllocationIds((int) (byte) 3, (java.util.Set<java.lang.String>) strSet39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>, java.util.Collection<java.lang.String>> indexMetaDataDiffableTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>, java.util.Collection<java.lang.String>>((org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.util.Collection<java.lang.String>) strSet39);
        org.elasticsearch.common.io.stream.StreamInput streamInput44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData45 = indexMetaData0.readFrom(streamInput44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters9);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(mappingMetaData18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(mappingMetaData30);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder6.version((long) (short) -1);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData10 = builder6.mapping("index.shared_filesystem");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder6.putMapping("index.blocks.write", "index.priority");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(mappingMetaData10);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        org.elasticsearch.action.ActionRequest actionRequest1 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest1);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest3);
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.ActionRequest actionRequest13 = null; // flaky: bulkItemRequest2.request();
        org.elasticsearch.action.ActionRequest actionRequest14 = null; // flaky: bulkItemRequest2.request();
        org.junit.Assert.assertNull(actionRequest13);
        org.junit.Assert.assertNull(actionRequest14);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple9 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.ActionRequest actionRequest12 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest12);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue18 = bulkShardRequest17.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = bulkShardRequest14.timeout(timeValue18);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, writeResult21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, false, throwable32, writeResult33);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, true, throwable37, writeResult38);
        org.elasticsearch.index.shard.ShardId shardId40 = bulkShardRequest29.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue41 = bulkShardRequest29.timeout();
        org.elasticsearch.tasks.TaskId taskId42 = bulkShardRequest29.getParentTask();
        bulkShardRequest19.setParentTask(taskId42);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.ActionRequest actionRequest46 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest46);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest48 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple49 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest47, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest48);
        org.elasticsearch.common.transport.TransportAddress transportAddress50 = null;
        bulkShardRequest48.remoteAddress(transportAddress50);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = bulkShardRequest48.consistencyLevel();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest53 = bulkShardRequest19.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest54 = new org.elasticsearch.action.bulk.BulkItemRequest(97, (org.elasticsearch.action.ActionRequest) bulkShardRequest53);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting55 = null;
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure59 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting55, "", throwable57, "");
        org.elasticsearch.action.update.UpdateHelper.Result result60 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest61 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult64 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult65 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result60, (org.elasticsearch.action.ActionRequest) bulkShardRequest61, false, throwable63, writeResult64);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple66 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure59, (org.elasticsearch.transport.TransportMessage) bulkShardRequest61);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest68 = bulkShardRequest61.index("index.version.created");
        long long69 = bulkShardRequest61.seqNo();
        long long70 = bulkShardRequest61.primaryTerm();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple71 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest54, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest61);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str72 = bulkItemRequestTuple71.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(bulkShardRequest19);
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(bulkShardRequest53);
        org.junit.Assert.assertNotNull(bulkShardRequest68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable4, "");
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure6, (org.elasticsearch.transport.TransportMessage) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = bulkShardRequest8.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "", throwable20, "");
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable26, writeResult27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure22, (org.elasticsearch.transport.TransportMessage) bulkShardRequest24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        org.elasticsearch.action.update.UpdateHelper.Result result35 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest37);
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult41 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult42 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result35, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, false, throwable40, writeResult41);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest34, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest37);
        org.elasticsearch.tasks.TaskId taskId44 = null;
        bulkShardRequest37.setParentTask(taskId44);
        org.elasticsearch.index.shard.ShardId shardId46 = bulkShardRequest37.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, writeResult47);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple49 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest37);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 3, (org.elasticsearch.action.ActionRequest) bulkShardRequest37);
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNull(shardId46);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("index.");
        int int8 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.Version version9 = indexMetaData0.getCreationVersion();
        long long10 = indexMetaData0.getCreationDate();
        org.elasticsearch.common.settings.Settings settings11 = indexMetaData0.getSettings();
        boolean boolean12 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings11);
        boolean boolean13 = org.elasticsearch.cluster.metadata.IndexMetaData.isIndexUsingShadowReplicas(settings11);
        org.elasticsearch.transport.TransportService transportService14 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService15 = null;
        org.elasticsearch.indices.IndicesService indicesService16 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool17 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction18 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction19 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper20 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters21 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction23 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings11, transportService14, clusterService15, indicesService16, threadPool17, shardStateAction18, mappingUpdatedAction19, updateHelper20, actionFilters21, indexNameExpressionResolver22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(version9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(settings11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        java.lang.Comparable<java.lang.String> strComparable0 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder3.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int10 = builder9.numberOfShards();
        java.lang.String[] strArray14 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder9.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet15);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder4.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple19 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData1, (java.lang.Iterable<java.lang.String>) strSet15);
        long long20 = indexMetaData1.getCreationDate();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.common.collect.Tuple<java.lang.Comparable<java.lang.String>, org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>> strComparableTuple22 = new org.elasticsearch.common.collect.Tuple<java.lang.Comparable<java.lang.String>, org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>>(strComparable0, (org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData1);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "", throwable14, "");
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable20, writeResult21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure16, (org.elasticsearch.transport.TransportMessage) bulkShardRequest18);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = bulkShardRequest18.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = bulkShardRequest18.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting29 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        org.elasticsearch.action.update.UpdateHelper.Result result35 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest37);
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult41 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult42 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result35, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, false, throwable40, writeResult41);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest34, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest37);
        org.elasticsearch.tasks.TaskId taskId44 = null;
        bulkShardRequest37.setParentTask(taskId44);
        org.elasticsearch.index.shard.ShardId shardId46 = bulkShardRequest37.shardId();
        bulkShardRequest37.seqNo((long) 0);
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, false, throwable50, writeResult51);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException53 = bulkShardRequest37.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting29, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException53, "index.blocks.write");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult56 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult57 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result10, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, (java.lang.Throwable) actionRequestValidationException53, writeResult56);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure59 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "state-", (java.lang.Throwable) actionRequestValidationException53, "primary_terms");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure61 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException53, "index.");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure63 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "current version [0] is different than the one provided [100]", (java.lang.Throwable) actionRequestValidationException53, "index.shared_filesystem");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure65 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.shared_filesystem.recover_on_any_node", (java.lang.Throwable) actionRequestValidationException53, "current version [97] is different than the one provided [35]");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [97] is different than the one provided [1]", (java.lang.Throwable) actionRequestValidationException53, "current version [10] is higher than the one provided [97]");
        org.junit.Assert.assertNotNull(bulkShardRequest25);
        org.junit.Assert.assertNull(transportAddress26);
        org.junit.Assert.assertNull(shardId46);
        org.junit.Assert.assertNotNull(actionRequestValidationException53);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) 'a', (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable17, writeResult18);
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = bulkShardRequest8.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(35, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest21.writeTo(streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(transportAddress20);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("current version [10] is higher or equal to the one provided [1]");
        org.junit.Assert.assertNotNull(builder1);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.tasks.TaskId taskId15 = null;
        bulkShardRequest8.setParentTask(taskId15);
        org.elasticsearch.index.shard.ShardId shardId17 = bulkShardRequest8.shardId();
        bulkShardRequest8.seqNo((long) 0);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable21, writeResult22);
        org.elasticsearch.action.ActionRequest actionRequest24 = updateResult23.actionRequest;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, actionRequest24, writeResult25);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, actionRequest24, writeResult27);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = updateResult28.request();
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(actionRequest24);
        org.junit.Assert.assertNotNull(bulkShardRequest29);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        java.lang.String str2 = builder1.index();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData4);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap6 = indexMetaData4.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet7 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData4, indexShardStateSet7);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters9 = indexMetaData4.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData4);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder10.version((long) (short) -1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder15.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder16.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int22 = builder21.numberOfShards();
        java.lang.String[] strArray26 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder21.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder16.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder10.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder1.putActiveAllocationIds(1, (java.util.Set<java.lang.String>) strSet27);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap6);
        org.junit.Assert.assertNotNull(indexShardStateSet7);
        org.junit.Assert.assertNull(discoveryNodeFilters9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData8.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet11 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData8, indexShardStateSet11);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData1.diff(indexMetaData8);
        boolean boolean15 = indexMetaData1.isSameUUID("index.uuid");
        // The following exception was thrown during execution in test generation
        try {
            long long17 = indexMetaData1.primaryTerm(1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNotNull(indexShardStateSet11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple9 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.ActionRequest actionRequest12 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest12);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue18 = bulkShardRequest17.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = bulkShardRequest14.timeout(timeValue18);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, writeResult21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, false, throwable32, writeResult33);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, true, throwable37, writeResult38);
        org.elasticsearch.index.shard.ShardId shardId40 = bulkShardRequest29.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue41 = bulkShardRequest29.timeout();
        org.elasticsearch.tasks.TaskId taskId42 = bulkShardRequest29.getParentTask();
        bulkShardRequest19.setParentTask(taskId42);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, false, throwable46, writeResult47);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = updateResult48.writeResult;
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(bulkShardRequest19);
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNull(writeResult49);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.Version version21 = indexMetaData0.getCreationVersion();
        long long22 = indexMetaData0.getVersion();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData24 = indexMetaData0.mapping("index.auto_expand_replicas");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.index.Index index26 = indexMetaData0.getMergeSourceIndex();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder27.numberOfReplicas((int) (short) -1);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNull(mappingMetaData24);
        org.junit.Assert.assertNull(index26);
        org.junit.Assert.assertNotNull(builder29);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        org.elasticsearch.action.ActionRequest actionRequest3 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest3);
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest4, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        bulkShardRequest9.remoteAddress(transportAddress13);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.ActionRequest actionRequest17 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest17);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        boolean boolean21 = bulkShardRequest19.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int24 = builder23.numberOfShards();
        java.lang.String[] strArray28 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder23.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest19, strSet29);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = bulkShardRequest19.setShardId(shardId33);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest34);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        org.elasticsearch.action.update.UpdateHelper.Result result40 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue42 = bulkShardRequest41.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions43 = bulkShardRequest41.indicesOptions();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult44 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult45 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result40, (org.elasticsearch.action.ActionRequest) bulkShardRequest41, writeResult44);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue47 = bulkShardRequest46.timeout();
        org.elasticsearch.action.update.UpdateHelper.Result result49 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        org.elasticsearch.action.update.UpdateHelper.Result result53 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest56 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest55);
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result53, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable58, writeResult59);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest52, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        java.lang.Throwable throwable63 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult64 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult65 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result49, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, true, throwable63, writeResult64);
        org.elasticsearch.index.shard.ShardId shardId66 = bulkShardRequest55.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest67 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest55);
        org.elasticsearch.common.unit.TimeValue timeValue68 = bulkShardRequest55.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest69 = bulkShardRequest46.timeout(timeValue68);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest70 = bulkShardRequest41.timeout(timeValue68);
        org.elasticsearch.index.shard.ShardId shardId71 = bulkShardRequest70.shardId();
        org.elasticsearch.tasks.TaskId taskId72 = bulkShardRequest70.getParentTask();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.tasks.Task task73 = bulkShardRequest34.createTask((long) 10, "index.version.created_string", "index.priority", taskId72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(bulkShardRequest34);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(indicesOptions43);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNull(shardId66);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(bulkShardRequest69);
        org.junit.Assert.assertNotNull(bulkShardRequest70);
        org.junit.Assert.assertNull(shardId71);
        org.junit.Assert.assertNotNull(taskId72);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.common.settings.Settings settings6 = indexMetaData0.getSettings();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder7 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params8 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.action.ActionRequest actionRequest19 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest19);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue25 = bulkShardRequest24.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = bulkShardRequest21.timeout(timeValue25);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, writeResult28);
        boolean boolean30 = updateResult29.failure();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult> paramsTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult>(params8, updateResult29);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder32 = settings6.toXContent(xContentBuilder7, params8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(settings6);
        org.junit.Assert.assertNotNull(params8);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(bulkShardRequest26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 0);
        boolean boolean25 = versionType12.validateVersionForReads((-1L));
        boolean boolean28 = versionType12.isVersionConflictForReads((long) (-1), 97L);
        org.elasticsearch.index.VersionType versionType29 = versionType12.versionTypeForReplicationAndRecovery();
        boolean boolean31 = versionType29.validateVersionForReads((long) (byte) 100);
        org.elasticsearch.index.VersionType versionType32 = versionType29.versionTypeForReplicationAndRecovery();
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(versionType32);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.creationDate((long) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder5.version((long) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = builder9.build();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData12 = indexMetaData10.mapping("index.shadow_replicas");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder13 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params14 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.action.update.UpdateHelper.Result result15 = null;
        org.elasticsearch.action.ActionRequest actionRequest19 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest19);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest20, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.action.ActionRequest actionRequest25 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest25);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest27 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest27);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue31 = bulkShardRequest30.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = bulkShardRequest27.timeout(timeValue31);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest32);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result15, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, writeResult34);
        boolean boolean36 = updateResult35.failure();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult> paramsTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult>(params14, updateResult35);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder38 = indexMetaData10.toXContent(xContentBuilder13, params14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNull(mappingMetaData12);
        org.junit.Assert.assertNotNull(params14);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(bulkShardRequest32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.tasks.TaskId taskId15 = null;
        bulkShardRequest8.setParentTask(taskId15);
        org.elasticsearch.index.shard.ShardId shardId17 = bulkShardRequest8.shardId();
        bulkShardRequest8.seqNo((long) 0);
        org.elasticsearch.action.support.IndicesOptions indicesOptions20 = bulkShardRequest8.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = bulkShardRequest8.setShardId(shardId22);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting28 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting30 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        org.elasticsearch.action.update.UpdateHelper.Result result36 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result36, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, false, throwable41, writeResult42);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest35, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest38);
        org.elasticsearch.tasks.TaskId taskId45 = null;
        bulkShardRequest38.setParentTask(taskId45);
        org.elasticsearch.index.shard.ShardId shardId47 = bulkShardRequest38.shardId();
        bulkShardRequest38.seqNo((long) 0);
        java.lang.Throwable throwable51 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult52 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult53 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest38, false, throwable51, writeResult52);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException54 = bulkShardRequest38.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting30, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException54, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting28, "update", (java.lang.Throwable) actionRequestValidationException54, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException54, "index.version.minimum_compatible");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult61 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult62 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest23, false, (java.lang.Throwable) actionRequestValidationException54, writeResult61);
        org.elasticsearch.action.ActionRequest actionRequest63 = updateResult62.actionRequest;
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(indicesOptions20);
        org.junit.Assert.assertNotNull(bulkShardRequest23);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNotNull(actionRequestValidationException54);
        org.junit.Assert.assertNotNull(actionRequest63);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads(10L);
        boolean boolean26 = versionType12.isVersionConflictForReads(100L, (long) 'a');
        boolean boolean28 = versionType12.validateVersionForWrites((long) (short) 10);
        long long31 = versionType12.updateVersion(1L, (long) '4');
        boolean boolean33 = versionType12.validateVersionForReads((long) (short) 0);
        boolean boolean37 = versionType12.isVersionConflictForWrites((long) (byte) -1, (long) '#', false);
        boolean boolean39 = versionType12.validateVersionForReads((long) (byte) 1);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 52L + "'", long31 == 52L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int8 = builder7.numberOfShards();
        java.lang.String[] strArray12 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder7.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder2.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder16.creationDate((long) (byte) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder18.numberOfReplicas((int) (short) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder20.removeAlias("index.priority");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData24 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder27 = builder26.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder27.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int33 = builder32.numberOfShards();
        java.lang.String[] strArray37 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder32.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet38);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = builder27.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet38);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple42 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData24, (java.lang.Iterable<java.lang.String>) strSet38);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder20.putActiveAllocationIds((-1), (java.util.Set<java.lang.String>) strSet38);
        org.elasticsearch.common.settings.Settings settings44 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder45 = builder20.settings(settings44);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom47 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder48 = builder20.putCustom("index.blocks.write", custom47);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(indexMetaData24);
        org.junit.Assert.assertNotNull(builder27);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(builder45);
        org.junit.Assert.assertNotNull(builder48);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(97, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.tasks.TaskId taskId4 = bulkShardRequest2.getParentTask();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.junit.Assert.assertNotNull(taskId4);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str6 = bulkShardRequest5.index();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult7 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult8 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, writeResult7);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, writeResult9);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, writeResult11);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest13 = updateResult12.request();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest13);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest13, writeResult15);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest13);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData11 = builder1.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int15 = builder14.numberOfShards();
        java.lang.String[] strArray19 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder14.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder1.putActiveAllocationIds((int) (byte) 3, (java.util.Set<java.lang.String>) strSet20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder23.index("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData26 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder28.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder29.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int35 = builder34.numberOfShards();
        java.lang.String[] strArray39 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = builder34.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet40);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder43 = builder29.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet40);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple44 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData26, (java.lang.Iterable<java.lang.String>) strSet40);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap45 = indexMetaData26.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state46 = indexMetaData26.getState();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = builder25.state(state46);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData48 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder49 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData48);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap50 = indexMetaData48.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet51 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple52 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData48, indexShardStateSet51);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters53 = indexMetaData48.includeFilters();
        org.elasticsearch.common.settings.Settings settings54 = indexMetaData48.getSettings();
        org.elasticsearch.common.settings.Settings settings55 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings54);
        org.elasticsearch.common.settings.Settings settings56 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings55);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder57 = builder25.settings(settings55);
        org.elasticsearch.transport.TransportService transportService58 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService59 = null;
        org.elasticsearch.indices.IndicesService indicesService60 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool61 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction62 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction63 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper64 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters65 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction67 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings55, transportService58, clusterService59, indicesService60, threadPool61, shardStateAction62, mappingUpdatedAction63, updateHelper64, actionFilters65, indexNameExpressionResolver66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(mappingMetaData11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertNotNull(indexMetaData26);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertNotNull(builder43);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple44);
        org.junit.Assert.assertNotNull(strImmutableOpenMap45);
        org.junit.Assert.assertTrue("'" + state46 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state46.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertNotNull(builder47);
        org.junit.Assert.assertNotNull(indexMetaData48);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap50);
        org.junit.Assert.assertNotNull(indexShardStateSet51);
        org.junit.Assert.assertNull(discoveryNodeFilters53);
        org.junit.Assert.assertNotNull(settings54);
        org.junit.Assert.assertNotNull(settings55);
        org.junit.Assert.assertNotNull(settings56);
        org.junit.Assert.assertNotNull(builder57);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("_na_");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.creationDate((long) (-1));
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.putMapping(mappingMetaData6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("state-");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int4 = builder3.numberOfShards();
        java.lang.String[] strArray8 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder3.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet9);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state12 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder11.state(state12);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder11.removeAlias("hi!");
        long long16 = builder11.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.State state17 = org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE;
        byte byte18 = state17.id();
        byte byte19 = state17.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder11.state(state17);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData21 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData21);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap23 = indexMetaData21.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet24 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData21, indexShardStateSet24);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters26 = indexMetaData21.includeFilters();
        org.elasticsearch.common.settings.Settings settings27 = indexMetaData21.getSettings();
        org.elasticsearch.common.settings.Settings settings28 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder11.settings(settings28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder1.settings(settings28);
        java.lang.String str31 = builder1.index();
        org.elasticsearch.cluster.metadata.AliasMetaData.Builder builder32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder1.putAlias(builder32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + state17 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE + "'", state17.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE));
        org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) 1 + "'", byte18 == (byte) 1);
        org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 1 + "'", byte19 == (byte) 1);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(indexMetaData21);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap23);
        org.junit.Assert.assertNotNull(indexShardStateSet24);
        org.junit.Assert.assertNull(discoveryNodeFilters26);
        org.junit.Assert.assertNotNull(settings27);
        org.junit.Assert.assertNotNull(settings28);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "state-" + "'", str31, "state-");
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue2 = bulkShardRequest1.timeout();
        java.lang.String str3 = bulkShardRequest1.index();
        org.elasticsearch.common.unit.TimeValue timeValue4 = bulkShardRequest1.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result10 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest12 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest12);
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest16, false, throwable19, writeResult20);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple22 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.tasks.TaskId taskId23 = null;
        bulkShardRequest16.setParentTask(taskId23);
        org.elasticsearch.index.shard.ShardId shardId25 = bulkShardRequest16.shardId();
        bulkShardRequest16.seqNo((long) 0);
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult30 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult31 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result10, (org.elasticsearch.action.ActionRequest) bulkShardRequest16, false, throwable29, writeResult30);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = bulkShardRequest16.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException32, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "update", (java.lang.Throwable) actionRequestValidationException32, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult37 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult38 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest1, false, (java.lang.Throwable) actionRequestValidationException32, writeResult37);
        org.elasticsearch.action.ActionRequest actionRequest41 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest41);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple44 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest42, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest43);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest43);
        org.elasticsearch.action.ActionRequest actionRequest47 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest47);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple50 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest48, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest49);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple51 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest45, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest49);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest52 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue53 = bulkShardRequest52.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest54 = bulkShardRequest49.timeout(timeValue53);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = bulkShardRequest1.timeout(timeValue53);
        boolean boolean56 = bulkShardRequest1.getShouldPersistResult();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(timeValue53);
        org.junit.Assert.assertNotNull(bulkShardRequest54);
        org.junit.Assert.assertNotNull(bulkShardRequest55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.ActionRequest actionRequest6 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple9 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.ActionRequest actionRequest12 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest13 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest12);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest13, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest10, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue18 = bulkShardRequest17.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = bulkShardRequest14.timeout(timeValue18);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, writeResult21);
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest25 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest26 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest25);
        org.elasticsearch.action.update.UpdateHelper.Result result27 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest29 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest29);
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult33 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult34 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result27, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, false, throwable32, writeResult33);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest26, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest29);
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest29, true, throwable37, writeResult38);
        org.elasticsearch.index.shard.ShardId shardId40 = bulkShardRequest29.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue41 = bulkShardRequest29.timeout();
        org.elasticsearch.tasks.TaskId taskId42 = bulkShardRequest29.getParentTask();
        bulkShardRequest19.setParentTask(taskId42);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        java.lang.Throwable throwable46 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult47 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult48 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, false, throwable46, writeResult47);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest50 = bulkShardRequest19.timeout("index.shared_filesystem");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse [index.shared_filesystem]");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(bulkShardRequest19);
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(taskId42);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting3 = null;
        java.lang.Throwable throwable5 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting3, "", throwable5, "");
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure7, (org.elasticsearch.transport.TransportMessage) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest9.index("hi!");
        bulkShardRequest9.primaryTerm(100L);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest9.shardId();
        boolean boolean20 = bulkShardRequest9.getShouldPersistResult();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting22 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting24 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest30);
        org.elasticsearch.action.update.UpdateHelper.Result result32 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest35 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        java.lang.Throwable throwable37 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult38 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult39 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result32, (org.elasticsearch.action.ActionRequest) bulkShardRequest34, false, throwable37, writeResult38);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest31, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest34);
        org.elasticsearch.tasks.TaskId taskId41 = null;
        bulkShardRequest34.setParentTask(taskId41);
        org.elasticsearch.index.shard.ShardId shardId43 = bulkShardRequest34.shardId();
        bulkShardRequest34.seqNo((long) 0);
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult48 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult49 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest34, false, throwable47, writeResult48);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException50 = bulkShardRequest34.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException50, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting24, "update", (java.lang.Throwable) actionRequestValidationException50, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting22, "index.shared_filesystem", (java.lang.Throwable) actionRequestValidationException50, "index.version.minimum_compatible");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult57 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult58 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, (java.lang.Throwable) actionRequestValidationException50, writeResult57);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException50, "");
        java.lang.Throwable throwable61 = shardFailure60.cause;
        org.junit.Assert.assertNotNull(bulkShardRequest16);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNotNull(actionRequestValidationException50);
        org.junit.Assert.assertNotNull(throwable61);
        org.junit.Assert.assertEquals(throwable61.getLocalizedMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable61.getMessage(), "Validation Failed: 1: index is missing;");
        org.junit.Assert.assertEquals(throwable61.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;");
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest10 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable12 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult13 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult14 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable12, writeResult13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.tasks.TaskId taskId16 = null;
        bulkShardRequest9.setParentTask(taskId16);
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult21 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, throwable19, writeResult20);
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = bulkShardRequest9.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, true, throwable25, writeResult26);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable38, writeResult39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.tasks.TaskId taskId42 = null;
        bulkShardRequest35.setParentTask(taskId42);
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult46 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult47 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, true, throwable45, writeResult46);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest28, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest49 = bulkItemRequestTuple48.v2();
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest50 = bulkItemRequestTuple48.v2();
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest49);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest50);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.Version version6 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap8 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData10 = indexMetaData0.mapping("index.");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap11 = indexMetaData0.getMappings();
        org.elasticsearch.common.settings.Settings settings12 = indexMetaData0.getSettings();
        org.elasticsearch.common.io.stream.StreamInput streamInput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = indexMetaData0.readFrom(streamInput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strImmutableOpenMap8);
        org.junit.Assert.assertNull(mappingMetaData10);
        org.junit.Assert.assertNotNull(strImmutableOpenMap11);
        org.junit.Assert.assertNotNull(settings12);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.uuid");
        long long2 = builder1.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.version((long) (byte) 10);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1L + "'", long2 == 1L);
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        boolean boolean3 = versionType0.isVersionConflictForReads((long) 10, (long) (byte) -1);
        byte byte4 = versionType0.getValue();
        org.elasticsearch.index.VersionType versionType5 = versionType0.versionTypeForReplicationAndRecovery();
        byte byte6 = versionType0.getValue();
        org.elasticsearch.index.VersionType versionType7 = versionType0.versionTypeForReplicationAndRecovery();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            versionType7.writeTo(streamOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + byte4 + "' != '" + (byte) 2 + "'", byte4 == (byte) 2);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 2 + "'", byte6 == (byte) 2);
        org.junit.Assert.assertNotNull(versionType7);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean3 = versionType0.isVersionConflictForReads((long) (short) 1, (-1L));
        boolean boolean5 = versionType0.validateVersionForWrites(1L);
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str5 = bulkShardRequest4.index();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult6 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult7 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, writeResult6);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult8 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult9 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, writeResult8);
        bulkShardRequest4.setParentTask("indices:data/write/bulk[s]", (long) ' ');
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        bulkShardRequest4.remoteAddress(transportAddress13);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 2, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, writeResult16);
        org.elasticsearch.action.ActionRequest actionRequest18 = updateResult17.actionRequest;
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(actionRequest18);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.State state1 = org.elasticsearch.cluster.metadata.IndexMetaData.State.fromString("index.version.minimum_compatible");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No state match for [index.version.minimum_compatible]");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getCreationVersion();
        org.elasticsearch.index.Index index8 = indexMetaData1.getMergeSourceIndex();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData10 = indexMetaData1.mapping("index.version.upgraded_string");
        long long11 = indexMetaData1.getVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNull(index8);
        org.junit.Assert.assertNull(mappingMetaData10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder6.version((long) (short) -1);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData10 = builder6.mapping("index.shared_filesystem");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder6.removeAlias("index.number_of_replicas");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder12.putMapping("current version [97] is different than the one provided [1]", "current version [1] is different than the one provided [0]");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNull(mappingMetaData10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        int int5 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData0.writeTo(streamOutput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData2 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData2);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap4 = indexMetaData2.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData2.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData2);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff7 = indexMetaData0.diff(indexMetaData2);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state8 = indexMetaData0.getState();
        boolean boolean10 = indexMetaData0.isSameUUID("primary_terms");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(indexMetaData2);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap4);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(indexMetaDataDiff7);
        org.junit.Assert.assertTrue("'" + state8 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state8.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.settings.Settings settings23 = indexMetaData0.getSettings();
        long long24 = indexMetaData0.getVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters25 = indexMetaData0.requireFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertNotNull(settings23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertNull(discoveryNodeFilters25);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = bulkShardRequest2.consistencyLevel(writeConsistencyLevel4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData7 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData7);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap9 = indexMetaData7.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet10 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData7, indexShardStateSet10);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters12 = indexMetaData7.includeFilters();
        org.elasticsearch.Version version13 = indexMetaData7.getUpgradedVersion();
        org.elasticsearch.action.ActionRequest actionRequest15 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest15);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest17);
        boolean boolean19 = bulkShardRequest17.getShouldPersistResult();
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult30 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult31 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, false, throwable29, writeResult30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, true, throwable34, writeResult35);
        org.elasticsearch.index.shard.ShardId shardId37 = bulkShardRequest26.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue38 = bulkShardRequest26.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = bulkShardRequest17.timeout(timeValue38);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>, org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest>> indexMetaDataDiffableTuple40 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData7, (org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest39);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest42 = bulkItemRequestTuple41.v1();
        org.junit.Assert.assertNotNull(bulkShardRequest5);
        org.junit.Assert.assertNotNull(indexMetaData7);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap9);
        org.junit.Assert.assertNotNull(indexShardStateSet10);
        org.junit.Assert.assertNull(discoveryNodeFilters12);
        org.junit.Assert.assertNotNull(version13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(bulkShardRequest39);
        org.junit.Assert.assertNotNull(indexMetaDataDiffableTuple40);
        org.junit.Assert.assertNotNull(bulkItemRequest42);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.Version version21 = indexMetaData0.getCreationVersion();
        long long22 = indexMetaData0.getVersion();
        org.elasticsearch.Version version23 = indexMetaData0.getCreationVersion();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData0.writeTo(streamOutput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
        org.junit.Assert.assertNotNull(version23);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters1 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = indexMetaData0.mappingOrDefault("index.auto_expand_replicas");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap4 = indexMetaData0.getCustoms();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        int int6 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        java.lang.String str8 = indexMetaData0.getIndexUUID();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNull(discoveryNodeFilters1);
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(strImmutableOpenMap4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_na_" + "'", str8, "_na_");
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest18, false, throwable21, writeResult22);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple24 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.tasks.TaskId taskId25 = null;
        bulkShardRequest18.setParentTask(taskId25);
        boolean boolean27 = bulkItemRequestTuple12.equals((java.lang.Object) taskId25);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting28 = null;
        java.lang.Throwable throwable30 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting28, "hi!", throwable30, "hi!");
        boolean boolean33 = bulkItemRequestTuple12.equals((java.lang.Object) throwable30);
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest34 = bulkItemRequestTuple12.v2();
        bulkShardRequestReplicationRequest34.setParentTask("index.number_of_shards", 52L);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequestReplicationRequest34);
        org.elasticsearch.common.io.stream.StreamInput streamInput39 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest38.readFrom(streamInput39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest34);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters5 = indexMetaData0.includeFilters();
        org.elasticsearch.Version version6 = indexMetaData0.getUpgradedVersion();
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        boolean boolean12 = bulkShardRequest10.getShouldPersistResult();
        org.elasticsearch.action.update.UpdateHelper.Result result13 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, false, throwable22, writeResult23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result13, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, true, throwable27, writeResult28);
        org.elasticsearch.index.shard.ShardId shardId30 = bulkShardRequest19.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue31 = bulkShardRequest19.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = bulkShardRequest10.timeout(timeValue31);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>, org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest>> indexMetaDataDiffableTuple33 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (org.elasticsearch.action.ActionRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder36 = builder34.numberOfShards((int) (byte) 10);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(discoveryNodeFilters5);
        org.junit.Assert.assertNotNull(version6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(bulkShardRequest32);
        org.junit.Assert.assertNotNull(indexMetaDataDiffableTuple33);
        org.junit.Assert.assertNotNull(builder36);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable16, writeResult17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest8.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue20 = bulkShardRequest8.timeout();
        long long21 = bulkShardRequest8.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = bulkShardRequest8.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 3, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "", throwable28, "");
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable34, writeResult35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure30, (org.elasticsearch.transport.TransportMessage) bulkShardRequest32);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = bulkShardRequest32.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str42 = bulkShardRequest41.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest40, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest41);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest46);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = bulkShardRequest46.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest49);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple51 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest40, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest49);
        org.elasticsearch.action.ActionRequest actionRequest54 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest54);
        org.elasticsearch.action.ActionRequest actionRequest58 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest59 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest58);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest60 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest59, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest62 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple63 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest55, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.common.transport.TransportAddress transportAddress64 = null;
        bulkShardRequest60.remoteAddress(transportAddress64);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest66 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.action.IndicesRequest> bulkItemRequestTupleTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.action.IndicesRequest>(bulkItemRequestTuple51, (org.elasticsearch.action.IndicesRequest) bulkShardRequest60);
        org.elasticsearch.common.transport.TransportAddress transportAddress68 = null;
        bulkShardRequest60.remoteAddress(transportAddress68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple70 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest24, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData71 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder72 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData71);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap73 = indexMetaData71.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet74 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple75 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData71, indexShardStateSet74);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters76 = indexMetaData71.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder77 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData71);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters78 = indexMetaData71.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder79 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData71);
        boolean boolean80 = bulkItemRequestTuple70.equals((java.lang.Object) indexMetaData71);
        org.elasticsearch.common.settings.Settings settings81 = indexMetaData71.getSettings();
        org.elasticsearch.transport.TransportService transportService82 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService83 = null;
        org.elasticsearch.indices.IndicesService indicesService84 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool85 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction86 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction87 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper88 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters89 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction91 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings81, transportService82, clusterService83, indicesService84, threadPool85, shardStateAction86, mappingUpdatedAction87, updateHelper88, actionFilters89, indexNameExpressionResolver90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNotNull(bulkShardRequest39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(bulkShardRequest49);
        org.junit.Assert.assertNotNull(indexMetaData71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap73);
        org.junit.Assert.assertNotNull(indexShardStateSet74);
        org.junit.Assert.assertNull(discoveryNodeFilters76);
        org.junit.Assert.assertNull(discoveryNodeFilters78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(settings81);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.registerPrototype("current version [10] is higher or equal to the one provided [1]", custom1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("_na_");
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        boolean boolean9 = bulkShardRequest7.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int12 = builder11.numberOfShards();
        java.lang.String[] strArray16 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder11.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet17);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest7, strSet17);
        org.elasticsearch.common.collect.Tuple<java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>, java.lang.Iterable<java.lang.String>> indexShardStateSetTuple21 = new org.elasticsearch.common.collect.Tuple<java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>, java.lang.Iterable<java.lang.String>>(indexShardStateSet3, (java.lang.Iterable<java.lang.String>) strSet17);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder1.putActiveAllocationIds((int) '#', (java.util.Set<java.lang.String>) strSet17);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = builder1.putMapping("current version [1] is different than the one provided [32]", "index.");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(builder19);
        org.junit.Assert.assertNotNull(builder22);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData14 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData14);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap16 = indexMetaData14.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet17 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData14, indexShardStateSet17);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters19 = indexMetaData14.includeFilters();
        org.elasticsearch.common.settings.Settings settings20 = indexMetaData14.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder21 = builder9.settings(settings20);
        int int22 = builder9.numberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder24.version((long) (short) 100);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state27 = org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE;
        byte byte28 = state27.id();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder29 = builder24.state(state27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder9.state(state27);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder9.index("index.blocks.metadata");
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertNotNull(indexMetaData14);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap16);
        org.junit.Assert.assertNotNull(indexShardStateSet17);
        org.junit.Assert.assertNull(discoveryNodeFilters19);
        org.junit.Assert.assertNotNull(settings20);
        org.junit.Assert.assertNotNull(builder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertTrue("'" + state27 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE + "'", state27.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.CLOSE));
        org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) 1 + "'", byte28 == (byte) 1);
        org.junit.Assert.assertNotNull(builder29);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertNotNull(builder32);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest3 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable5 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult6 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult7 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, false, throwable5, writeResult6);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult8 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult9 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, writeResult8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest3, true, throwable11, writeResult12);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = updateResult13.writeResult;
        java.lang.Throwable throwable15 = updateResult13.error;
        org.elasticsearch.action.update.UpdateHelper.Result result16 = updateResult13.result;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = updateResult13.writeResult;
        org.junit.Assert.assertNull(writeResult14);
        org.junit.Assert.assertNull(throwable15);
        org.junit.Assert.assertNull(result16);
        org.junit.Assert.assertNull(writeResult17);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("index.");
        int int8 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.Version version9 = indexMetaData0.getCreationVersion();
        long long10 = indexMetaData0.getCreationDate();
        org.elasticsearch.common.settings.Settings settings11 = indexMetaData0.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        long long13 = indexMetaData0.getVersion();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder14 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData15 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder17.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder18.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int24 = builder23.numberOfShards();
        java.lang.String[] strArray28 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = builder23.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet29);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder32 = builder18.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet29);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple33 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData15, (java.lang.Iterable<java.lang.String>) strSet29);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap34 = indexMetaData15.getAliases();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData36 = indexMetaData15.mapping("index.version.created");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters37 = indexMetaData15.requireFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap38 = indexMetaData15.getAliases();
        org.elasticsearch.action.update.UpdateHelper.Result result39 = null;
        org.elasticsearch.action.ActionRequest actionRequest40 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting42 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting44 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting46 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting48 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting50 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result52 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest54 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest54);
        org.elasticsearch.action.update.UpdateHelper.Result result56 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest58 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest59 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest58);
        java.lang.Throwable throwable61 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult62 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult63 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result56, (org.elasticsearch.action.ActionRequest) bulkShardRequest58, false, throwable61, writeResult62);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple64 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest55, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest58);
        org.elasticsearch.tasks.TaskId taskId65 = null;
        bulkShardRequest58.setParentTask(taskId65);
        org.elasticsearch.index.shard.ShardId shardId67 = bulkShardRequest58.shardId();
        bulkShardRequest58.seqNo((long) 0);
        java.lang.Throwable throwable71 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult72 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult73 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result52, (org.elasticsearch.action.ActionRequest) bulkShardRequest58, false, throwable71, writeResult72);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException74 = bulkShardRequest58.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure76 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting50, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException74, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure78 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting48, "update", (java.lang.Throwable) actionRequestValidationException74, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure80 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting46, "_na_", (java.lang.Throwable) actionRequestValidationException74, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure82 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting44, "_na_", (java.lang.Throwable) actionRequestValidationException74, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure84 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting42, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException74, "update");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult85 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult86 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result39, actionRequest40, true, (java.lang.Throwable) actionRequestValidationException74, writeResult85);
        org.elasticsearch.common.xcontent.ToXContent.Params params87 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params> exceptionTuple88 = new org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params>((java.lang.Exception) actionRequestValidationException74, params87);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>, org.elasticsearch.common.xcontent.ToXContent.Params> strImmutableOpenMapTuple89 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData>, org.elasticsearch.common.xcontent.ToXContent.Params>(strImmutableOpenMap38, params87);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder90 = indexMetaData0.toXContent(xContentBuilder14, params87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(version9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(settings11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(indexMetaData15);
        org.junit.Assert.assertNotNull(builder18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(builder32);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple33);
        org.junit.Assert.assertNotNull(strImmutableOpenMap34);
        org.junit.Assert.assertNull(mappingMetaData36);
        org.junit.Assert.assertNull(discoveryNodeFilters37);
        org.junit.Assert.assertNotNull(strImmutableOpenMap38);
        org.junit.Assert.assertNull(shardId67);
        org.junit.Assert.assertNotNull(actionRequestValidationException74);
        org.junit.Assert.assertNotNull(params87);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("index.");
        int int8 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters9 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder10.version(1L);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom14 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder12.putCustom("active_allocations", custom14);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder18 = builder12.putMapping("current version [0] is different than the one provided [100]", "current version [97] is different than the one provided [97]");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters9);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertNotNull(builder15);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        boolean boolean6 = bulkShardRequest4.getShouldPersistResult();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = bulkShardRequest4.setShardId(shardId7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = bulkShardRequest4.index("index.priority");
        boolean boolean12 = bulkShardRequest4.getShouldPersistResult();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(bulkShardRequest8);
        org.junit.Assert.assertNotNull(bulkShardRequest11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData0.includeFilters();
        org.elasticsearch.common.settings.Settings settings5 = indexMetaData0.getSettings();
        org.elasticsearch.transport.TransportService transportService6 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService7 = null;
        org.elasticsearch.indices.IndicesService indicesService8 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool9 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction10 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction11 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper12 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters13 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction15 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings5, transportService6, clusterService7, indicesService8, threadPool9, shardStateAction10, mappingUpdatedAction11, updateHelper12, actionFilters13, indexNameExpressionResolver14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(settings5);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        java.util.Set<java.lang.String> strSet22 = null; // flaky: indexMetaData0.activeAllocationIds((int) (short) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder25.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = builder26.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int32 = builder31.numberOfShards();
        java.lang.String[] strArray36 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder39 = builder31.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet37);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder26.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple41 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData23, (java.lang.Iterable<java.lang.String>) strSet37);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap42 = indexMetaData23.getAliases();
        int int43 = indexMetaData23.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters44 = indexMetaData23.excludeFilters();
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap45 = indexMetaData23.getAliases();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters46 = indexMetaData23.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder47 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData23);
        org.elasticsearch.common.settings.Settings settings48 = indexMetaData23.getSettings();
        org.elasticsearch.index.Index index49 = indexMetaData23.getMergeSourceIndex();
        long long50 = indexMetaData23.getCreationDate();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff51 = indexMetaData0.diff(indexMetaData23);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder52 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData53 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder54 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData53);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap55 = indexMetaData53.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet56 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple57 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData53, indexShardStateSet56);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters58 = indexMetaData53.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest60 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest61 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        org.elasticsearch.action.update.UpdateHelper.Result result62 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest64 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest65 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest64);
        java.lang.Throwable throwable67 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult68 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult69 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result62, (org.elasticsearch.action.ActionRequest) bulkShardRequest64, false, throwable67, writeResult68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple70 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest61, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest64);
        org.elasticsearch.index.VersionType versionType71 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean75 = versionType71.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple76 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest61, versionType71);
        boolean boolean80 = versionType71.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean81 = indexMetaData53.equals((java.lang.Object) boolean80);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters82 = indexMetaData53.getInitialRecoveryFilters();
        java.lang.String str83 = indexMetaData53.getIndexUUID();
        java.util.Set<java.lang.String> strSet85 = null; // flaky: indexMetaData53.activeAllocationIds((int) (byte) -1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder86 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData53);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff87 = indexMetaData0.diff(indexMetaData53);
        org.elasticsearch.common.io.stream.StreamInput streamInput88 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData89 = indexMetaData0.readFrom(streamInput88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertNull(strSet22);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(builder39);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple41);
        org.junit.Assert.assertNotNull(strImmutableOpenMap42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters44);
        org.junit.Assert.assertNotNull(strImmutableOpenMap45);
        org.junit.Assert.assertNull(discoveryNodeFilters46);
        org.junit.Assert.assertNotNull(settings48);
        org.junit.Assert.assertNull(index49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(indexMetaDataDiff51);
        org.junit.Assert.assertNotNull(indexMetaData53);
        org.junit.Assert.assertNotNull(builder54);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap55);
        org.junit.Assert.assertNotNull(indexShardStateSet56);
        org.junit.Assert.assertNull(discoveryNodeFilters58);
        org.junit.Assert.assertNotNull(versionType71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "_na_" + "'", str83, "_na_");
        org.junit.Assert.assertNull(strSet85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(indexMetaDataDiff87);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest1 = null;
        java.lang.Throwable throwable3 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult4 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult5 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, actionRequest1, false, throwable3, writeResult4);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult6 = updateResult5.writeResult;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult7 = updateResult5.writeResult;
        boolean boolean8 = updateResult5.retry;
        org.junit.Assert.assertNull(writeResult6);
        org.junit.Assert.assertNull(writeResult7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData8.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet11 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData8, indexShardStateSet11);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData1.diff(indexMetaData8);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData15 = indexMetaData8.mapping("index.version.created_string");
        org.apache.lucene.util.Version version16 = indexMetaData8.getMinimumCompatibleVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNotNull(indexShardStateSet11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertNull(mappingMetaData15);
        org.junit.Assert.assertNull(version16);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.numberOfShards(1);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData5 = builder4.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: must specify numberOfReplicas for index [hi!]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable23, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.tasks.TaskId taskId27 = null;
        bulkShardRequest20.setParentTask(taskId27);
        org.elasticsearch.index.shard.ShardId shardId29 = bulkShardRequest20.shardId();
        bulkShardRequest20.seqNo((long) 0);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable33, writeResult34);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = bulkShardRequest20.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException36, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "update", (java.lang.Throwable) actionRequestValidationException36, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "_na_", (java.lang.Throwable) actionRequestValidationException36, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "primary_terms", (java.lang.Throwable) actionRequestValidationException36, "delete");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException36, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete", (java.lang.Throwable) actionRequestValidationException36, "index.auto_expand_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException36, "active_allocations");
        java.lang.String str51 = shardFailure50.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting52 = shardFailure50.routing;
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNull(shardRouting52);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters1 = indexMetaData0.requireFilters();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result16 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        java.lang.Throwable throwable25 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult26 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult27 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, (org.elasticsearch.action.ActionRequest) bulkShardRequest22, false, throwable25, writeResult26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest22);
        org.elasticsearch.tasks.TaskId taskId29 = null;
        bulkShardRequest22.setParentTask(taskId29);
        org.elasticsearch.index.shard.ShardId shardId31 = bulkShardRequest22.shardId();
        bulkShardRequest22.seqNo((long) 0);
        java.lang.Throwable throwable35 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult36 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult37 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result16, (org.elasticsearch.action.ActionRequest) bulkShardRequest22, false, throwable35, writeResult36);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = bulkShardRequest22.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException38, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure42 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "update", (java.lang.Throwable) actionRequestValidationException38, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "_na_", (java.lang.Throwable) actionRequestValidationException38, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "_na_", (java.lang.Throwable) actionRequestValidationException38, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException38, "update");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, actionRequest4, true, (java.lang.Throwable) actionRequestValidationException38, writeResult49);
        org.elasticsearch.common.xcontent.ToXContent.Params params51 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params> exceptionTuple52 = new org.elasticsearch.common.collect.Tuple<java.lang.Exception, org.elasticsearch.common.xcontent.ToXContent.Params>((java.lang.Exception) actionRequestValidationException38, params51);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, java.lang.CharSequence> paramsTuple54 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, java.lang.CharSequence>(params51, (java.lang.CharSequence) "primary_terms");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder55 = indexMetaData0.toXContent(xContentBuilder2, params51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNull(discoveryNodeFilters1);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(actionRequestValidationException38);
        org.junit.Assert.assertNotNull(params51);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(0, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = bulkShardRequest4.indicesOptions();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest4, writeResult9);
        org.elasticsearch.common.io.stream.StreamInput streamInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest4.readFrom(streamInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions8);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        java.util.Set<java.lang.String> strSet10 = null; // flaky: indexMetaData1.activeAllocationIds((int) (short) 1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData1.getInitialRecoveryFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNull(strSet10);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest8);
        java.lang.Throwable throwable16 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, throwable16, writeResult17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest8.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue20 = bulkShardRequest8.timeout();
        long long21 = bulkShardRequest8.seqNo();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = bulkShardRequest8.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 3, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "", throwable28, "");
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, false, throwable34, writeResult35);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure30, (org.elasticsearch.transport.TransportMessage) bulkShardRequest32);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest39 = bulkShardRequest32.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest40 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest39);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest41 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str42 = bulkShardRequest41.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest40, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest41);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest46);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = bulkShardRequest46.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest49);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple51 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest40, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest49);
        org.elasticsearch.action.ActionRequest actionRequest54 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest55 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest54);
        org.elasticsearch.action.ActionRequest actionRequest58 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest59 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest58);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest60 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest59, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest62 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple63 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest55, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.common.transport.TransportAddress transportAddress64 = null;
        bulkShardRequest60.remoteAddress(transportAddress64);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest66 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.action.IndicesRequest> bulkItemRequestTupleTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>, org.elasticsearch.action.IndicesRequest>(bulkItemRequestTuple51, (org.elasticsearch.action.IndicesRequest) bulkShardRequest60);
        org.elasticsearch.common.transport.TransportAddress transportAddress68 = null;
        bulkShardRequest60.remoteAddress(transportAddress68);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple70 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest24, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest60);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData71 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder72 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData71);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap73 = indexMetaData71.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet74 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple75 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData71, indexShardStateSet74);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters76 = indexMetaData71.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder77 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData71);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters78 = indexMetaData71.excludeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder79 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData71);
        boolean boolean80 = bulkItemRequestTuple70.equals((java.lang.Object) indexMetaData71);
        org.elasticsearch.common.settings.Settings settings81 = indexMetaData71.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder82 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData71);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput83 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData71.writeTo(streamOutput83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNotNull(bulkShardRequest39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(bulkShardRequest49);
        org.junit.Assert.assertNotNull(indexMetaData71);
        org.junit.Assert.assertNotNull(builder72);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap73);
        org.junit.Assert.assertNotNull(indexShardStateSet74);
        org.junit.Assert.assertNull(discoveryNodeFilters76);
        org.junit.Assert.assertNull(discoveryNodeFilters78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(settings81);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.registerPrototype("current version [1] is different than the one provided [0]", custom1);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        boolean boolean6 = bulkShardRequest4.getShouldPersistResult();
        bulkShardRequest4.primaryTerm(100L);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(3, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int8 = builder7.numberOfShards();
        java.lang.String[] strArray12 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder7.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder2.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet13);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData18 = builder2.mapping("index.blocks.metadata");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder2.numberOfReplicas((int) (byte) 3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.version.created");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = builder22.numberOfShards(100);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData25 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData25);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap27 = indexMetaData25.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet28 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData25, indexShardStateSet28);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters30 = indexMetaData25.includeFilters();
        org.elasticsearch.common.settings.Settings settings31 = indexMetaData25.getSettings();
        org.elasticsearch.common.settings.Settings settings32 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings31);
        org.elasticsearch.common.settings.Settings settings33 = org.elasticsearch.cluster.metadata.IndexMetaData.addHumanReadableSettings(settings32);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = builder22.settings(settings33);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder35 = builder20.settings(settings33);
        org.elasticsearch.transport.TransportService transportService36 = null;
        org.elasticsearch.cluster.service.ClusterService clusterService37 = null;
        org.elasticsearch.indices.IndicesService indicesService38 = null;
        org.elasticsearch.threadpool.ThreadPool threadPool39 = null;
        org.elasticsearch.cluster.action.shard.ShardStateAction shardStateAction40 = null;
        org.elasticsearch.cluster.action.index.MappingUpdatedAction mappingUpdatedAction41 = null;
        org.elasticsearch.action.update.UpdateHelper updateHelper42 = null;
        org.elasticsearch.action.support.ActionFilters actionFilters43 = null;
        org.elasticsearch.cluster.metadata.IndexNameExpressionResolver indexNameExpressionResolver44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.TransportShardBulkAction transportShardBulkAction45 = new org.elasticsearch.action.bulk.TransportShardBulkAction(settings33, transportService36, clusterService37, indicesService38, threadPool39, shardStateAction40, mappingUpdatedAction41, updateHelper42, actionFilters43, indexNameExpressionResolver44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNull(mappingMetaData18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(indexMetaData25);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap27);
        org.junit.Assert.assertNotNull(indexShardStateSet28);
        org.junit.Assert.assertNull(discoveryNodeFilters30);
        org.junit.Assert.assertNotNull(settings31);
        org.junit.Assert.assertNotNull(settings32);
        org.junit.Assert.assertNotNull(settings33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder35);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads(10L);
        boolean boolean26 = versionType12.isVersionConflictForReads(100L, (long) 'a');
        boolean boolean28 = versionType12.validateVersionForWrites((long) (short) 10);
        long long31 = versionType12.updateVersion(1L, (long) '4');
        boolean boolean34 = versionType12.isVersionConflictForReads((long) (short) 100, (long) (short) -1);
        byte byte35 = versionType12.getValue();
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 52L + "'", long31 == 52L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + byte35 + "' != '" + (byte) 3 + "'", byte35 == (byte) 3);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state10 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder9.state(state10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder9.removeAlias("hi!");
        long long14 = builder9.version();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder9.numberOfReplicas((int) (byte) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder9.removeAllAliases();
        org.elasticsearch.common.settings.Settings.Builder builder18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder19 = builder17.settings(builder18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.Version version5 = indexMetaData0.getCreationVersion();
        org.elasticsearch.action.update.UpdateHelper.Result result6 = null;
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        bulkShardRequest10.remoteAddress(transportAddress12);
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult16 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult17 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result6, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable15, writeResult16);
        org.elasticsearch.action.update.UpdateResponse updateResponse18 = updateResult17.noopResult;
        org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest> bulkShardRequestReplicationRequest19 = updateResult17.request();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult20 = updateResult17.writeResult;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.Version, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult> versionTuple21 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.Version, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult>(version5, updateResult17);
        org.elasticsearch.action.ActionRequest actionRequest22 = updateResult17.actionRequest;
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(version5);
        org.junit.Assert.assertNull(updateResponse18);
        org.junit.Assert.assertNotNull(bulkShardRequestReplicationRequest19);
        org.junit.Assert.assertNull(writeResult20);
        org.junit.Assert.assertNotNull(actionRequest22);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        java.lang.String str3 = versionType0.explainConflictForReads((long) 97, 35L);
        boolean boolean7 = versionType0.isVersionConflictForWrites((long) (short) -1, 97L, true);
        org.elasticsearch.index.VersionType versionType8 = org.elasticsearch.index.VersionType.INTERNAL;
        byte byte9 = versionType8.getValue();
        org.elasticsearch.index.VersionType versionType10 = versionType8.versionTypeForReplicationAndRecovery();
        org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, org.elasticsearch.index.VersionType> versionTypeEnumTuple11 = new org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, org.elasticsearch.index.VersionType>((java.lang.Enum<org.elasticsearch.index.VersionType>) versionType0, versionType10);
        org.elasticsearch.index.VersionType versionType12 = versionType0.versionTypeForReplicationAndRecovery();
        boolean boolean15 = versionType0.isVersionConflictForReads((long) (byte) -1, 98L);
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "current version [97] is different than the one provided [35]" + "'", str3, "current version [97] is different than the one provided [35]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 0 + "'", byte9 == (byte) 0);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue8 = bulkShardRequest7.timeout();
        java.lang.String str9 = bulkShardRequest7.index();
        org.elasticsearch.common.unit.TimeValue timeValue10 = bulkShardRequest7.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = bulkShardRequest4.timeout(timeValue10);
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        bulkShardRequest11.remoteAddress(transportAddress12);
        org.elasticsearch.action.update.UpdateHelper.Result result15 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest17 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest18 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest17);
        org.elasticsearch.action.update.UpdateHelper.Result result19 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest21 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest22 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        java.lang.Throwable throwable24 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult25 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult26 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result19, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, false, throwable24, writeResult25);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest18, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest21);
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult30 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult31 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result15, (org.elasticsearch.action.ActionRequest) bulkShardRequest21, true, throwable29, writeResult30);
        org.elasticsearch.index.shard.ShardId shardId32 = bulkShardRequest21.shardId();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest21);
        org.elasticsearch.common.unit.TimeValue timeValue34 = bulkShardRequest21.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = bulkShardRequest21.index("");
        bulkShardRequest36.seqNo(100L);
        org.elasticsearch.common.unit.TimeValue timeValue39 = bulkShardRequest36.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = bulkShardRequest11.timeout(timeValue39);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(bulkShardRequest11);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(bulkShardRequest36);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(bulkShardRequest40);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest4);
        bulkShardRequest4.primaryTerm((long) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = bulkShardRequest4.timeout("current version [35] is higher than the one provided [2]");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [BulkShardRequest.timeout] with value [current version [35] is higher than the one provided [2]] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("current version [10] is higher or equal to the one provided [1]");
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.common.io.stream.StreamInput streamInput3 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest2.readFrom(streamInput3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData21 = indexMetaData0.mapping("index.version.created");
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters22 = indexMetaData0.requireFilters();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder23 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params24 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.action.update.UpdateHelper.Result result25 = null;
        org.elasticsearch.action.ActionRequest actionRequest29 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest30 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest29);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest30, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest31);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.action.ActionRequest actionRequest35 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest35);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest36, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest37);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple39 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest37);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue41 = bulkShardRequest40.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = bulkShardRequest37.timeout(timeValue41);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest42);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult44 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult45 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result25, (org.elasticsearch.action.ActionRequest) bulkShardRequest42, writeResult44);
        boolean boolean46 = updateResult45.failure();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult> paramsTuple47 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult>(params24, updateResult45);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder48 = indexMetaData0.toXContent(xContentBuilder23, params24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertNull(mappingMetaData21);
        org.junit.Assert.assertNull(discoveryNodeFilters22);
        org.junit.Assert.assertNotNull(params24);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(bulkShardRequest42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.VersionType versionType1 = org.elasticsearch.index.VersionType.fromString("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No version type match []");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getCreationVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = builder8.numberOfShards((int) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder8.removeAlias("current version [35] is different than the one provided [35]");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(builder10);
        org.junit.Assert.assertNotNull(builder12);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        org.elasticsearch.index.VersionType versionType0 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        boolean boolean3 = versionType0.isVersionConflictForReads((long) 10, (long) (byte) -1);
        byte byte4 = versionType0.getValue();
        org.elasticsearch.index.VersionType versionType5 = versionType0.versionTypeForReplicationAndRecovery();
        java.lang.String str9 = versionType0.explainConflictForWrites((long) (short) -1, (long) '4', false);
        org.junit.Assert.assertNotNull(versionType0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + byte4 + "' != '" + (byte) 2 + "'", byte4 == (byte) 2);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "current version [-1] is higher than the one provided [52]" + "'", str9, "current version [-1] is higher than the one provided [52]");
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.requireFilters();
        java.util.Set<java.lang.String> strSet8 = null; // flaky: indexMetaData0.activeAllocationIds((int) (short) 10);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            indexMetaData0.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(version5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNull(strSet8);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters1 = indexMetaData0.requireFilters();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData3 = indexMetaData0.mappingOrDefault("index.auto_expand_replicas");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.creationDate((long) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder4.creationDate((long) (short) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData9 = builder4.build();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder10 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData9);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData9);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData9);
        java.lang.String str13 = indexMetaData9.getIndexUUID();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNull(discoveryNodeFilters1);
        org.junit.Assert.assertNull(mappingMetaData3);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertNotNull(indexMetaData9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_na_" + "'", str13, "_na_");
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.version.upgraded_string");
        int int2 = builder1.numberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData4 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData4);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap6 = indexMetaData4.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters7 = indexMetaData4.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff8 = indexMetaData3.diff(indexMetaData4);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters9 = indexMetaData4.requireFilters();
        org.elasticsearch.common.settings.Settings settings10 = indexMetaData4.getSettings();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = builder1.settings(settings10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = builder1.removeAlias("index.shadow_replicas");
        org.elasticsearch.cluster.metadata.AliasMetaData aliasMetaData14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = builder1.putAlias(aliasMetaData14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(indexMetaData4);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap6);
        org.junit.Assert.assertNull(discoveryNodeFilters7);
        org.junit.Assert.assertNotNull(indexMetaDataDiff8);
        org.junit.Assert.assertNull(discoveryNodeFilters9);
        org.junit.Assert.assertNotNull(settings10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(builder13);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.AliasMetaData> strImmutableOpenMap19 = indexMetaData0.getAliases();
        int int20 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.Version version21 = indexMetaData0.getCreationVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData22 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData23 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder24 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData23);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap25 = indexMetaData23.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters26 = indexMetaData23.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff27 = indexMetaData22.diff(indexMetaData23);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters28 = indexMetaData23.requireFilters();
        org.elasticsearch.Version version29 = indexMetaData23.getUpgradedVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData30 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData30);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap32 = indexMetaData30.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet33 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData30, indexShardStateSet33);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff35 = indexMetaData23.diff(indexMetaData30);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff36 = indexMetaData0.diff(indexMetaData23);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap37 = indexMetaData23.getActiveAllocationIds();
        java.lang.String str38 = indexMetaData23.getIndexUUID();
        org.elasticsearch.Version version39 = indexMetaData23.getCreationVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strImmutableOpenMap19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(version21);
        org.junit.Assert.assertNotNull(indexMetaData22);
        org.junit.Assert.assertNotNull(indexMetaData23);
        org.junit.Assert.assertNotNull(builder24);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap25);
        org.junit.Assert.assertNull(discoveryNodeFilters26);
        org.junit.Assert.assertNotNull(indexMetaDataDiff27);
        org.junit.Assert.assertNull(discoveryNodeFilters28);
        org.junit.Assert.assertNotNull(version29);
        org.junit.Assert.assertNotNull(indexMetaData30);
        org.junit.Assert.assertNotNull(builder31);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap32);
        org.junit.Assert.assertNotNull(indexShardStateSet33);
        org.junit.Assert.assertNotNull(indexMetaDataDiff35);
        org.junit.Assert.assertNotNull(indexMetaDataDiff36);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "_na_" + "'", str38, "_na_");
        org.junit.Assert.assertNotNull(version39);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "index.shared_filesystem");
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.ActionRequest actionRequest5 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest5);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple8 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest6, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest7);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.ActionRequest actionRequest11 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest11);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest13 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest12, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple15 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest13);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = bulkShardRequest13.setShardId(shardId17);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest19 = new org.elasticsearch.action.bulk.BulkItemRequest(97, (org.elasticsearch.action.ActionRequest) bulkShardRequest18);
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest22 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest23 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest22);
        org.elasticsearch.action.update.UpdateHelper.Result result24 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult30 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult31 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result24, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, false, throwable29, writeResult30);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple32 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest23, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult35 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult36 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, (org.elasticsearch.action.ActionRequest) bulkShardRequest26, true, throwable34, writeResult35);
        org.elasticsearch.index.shard.ShardId shardId37 = bulkShardRequest26.shardId();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple38 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.action.update.UpdateHelper.Result result39 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result40 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest42);
        org.elasticsearch.action.update.UpdateHelper.Result result44 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest46 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest47 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest46);
        java.lang.Throwable throwable49 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult50 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult51 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result44, (org.elasticsearch.action.ActionRequest) bulkShardRequest46, false, throwable49, writeResult50);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple52 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest43, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest46);
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult55 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult56 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result40, (org.elasticsearch.action.ActionRequest) bulkShardRequest46, true, throwable54, writeResult55);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult57 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult58 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result39, (org.elasticsearch.action.ActionRequest) bulkShardRequest46, writeResult57);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple59 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest19, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest46);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult60 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult61 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest46, writeResult60);
        org.junit.Assert.assertNotNull(bulkShardRequest18);
        org.junit.Assert.assertNull(shardId37);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        java.util.Set<java.lang.String> strSet20 = indexMetaData0.activeAllocationIds(0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap21 = indexMetaData0.getMappings();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters22 = indexMetaData0.getInitialRecoveryFilters();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strImmutableOpenMap21);
        org.junit.Assert.assertNull(discoveryNodeFilters22);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getCreationVersion();
        org.elasticsearch.common.settings.Settings settings8 = indexMetaData1.getSettings();
        org.elasticsearch.index.Index index9 = indexMetaData1.getMergeSourceIndex();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder10 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params11 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = indexMetaData1.toXContent(xContentBuilder10, params11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(settings8);
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertNotNull(params11);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder1 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params2 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.ActionRequest actionRequest7 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest7);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest9);
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue19 = bulkShardRequest18.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = bulkShardRequest15.timeout(timeValue19);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult22 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult23 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, writeResult22);
        boolean boolean24 = updateResult23.failure();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult> paramsTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult>(params2, updateResult23);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder26 = indexMetaData0.toXContent(xContentBuilder1, params2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(params2);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(bulkShardRequest20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.getInitialRecoveryFilters();
        java.util.Set<java.lang.String> strSet8 = null; // flaky: indexMetaData0.activeAllocationIds((int) (byte) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.State state9 = indexMetaData0.getState();
        // The following exception was thrown during execution in test generation
        try {
            long long11 = indexMetaData0.primaryTerm(1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNull(strSet8);
        org.junit.Assert.assertTrue("'" + state9 + "' != '" + org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN + "'", state9.equals(org.elasticsearch.cluster.metadata.IndexMetaData.State.OPEN));
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.blocks.write");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.creationDate((long) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.version((long) '#');
        int int6 = builder3.numberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom8 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder3.putCustom("index.creation_date_string", custom8);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = builder3.primaryTerm(97, (long) 52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: you must set the number of shards before setting/reading primary terms");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(builder9);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = bulkShardRequest2.consistencyLevel(writeConsistencyLevel4);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult6 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult7 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest2, writeResult6);
        boolean boolean8 = updateResult7.retry;
        boolean boolean9 = updateResult7.retry;
        java.lang.Throwable throwable10 = updateResult7.error;
        org.junit.Assert.assertNotNull(bulkShardRequest5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(throwable10);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = bulkShardRequest2.consistencyLevel(writeConsistencyLevel4);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 0, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.tasks.TaskId taskId7 = bulkShardRequest2.getParentTask();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkShardRequest2.writeTo(streamOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest5);
        org.junit.Assert.assertNotNull(taskId7);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable4, "");
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure6, (org.elasticsearch.transport.TransportMessage) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = bulkShardRequest8.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting19 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting29 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest33 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest34 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest33);
        org.elasticsearch.action.update.UpdateHelper.Result result35 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest37 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest37);
        java.lang.Throwable throwable40 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult41 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult42 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result35, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, false, throwable40, writeResult41);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest34, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest37);
        org.elasticsearch.tasks.TaskId taskId44 = null;
        bulkShardRequest37.setParentTask(taskId44);
        org.elasticsearch.index.shard.ShardId shardId46 = bulkShardRequest37.shardId();
        bulkShardRequest37.seqNo((long) 0);
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult51 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult52 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest37, false, throwable50, writeResult51);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException53 = bulkShardRequest37.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting29, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException53, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "update", (java.lang.Throwable) actionRequestValidationException53, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure59 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "_na_", (java.lang.Throwable) actionRequestValidationException53, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure61 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "_na_", (java.lang.Throwable) actionRequestValidationException53, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure63 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting21, "index.version.minimum_compatible", (java.lang.Throwable) actionRequestValidationException53, "index.uuid");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure65 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting19, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException53, "hi!");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult66 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult67 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, true, (java.lang.Throwable) actionRequestValidationException53, writeResult66);
        org.elasticsearch.common.transport.TransportAddress transportAddress68 = bulkShardRequest8.remoteAddress();
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNull(shardId46);
        org.junit.Assert.assertNotNull(actionRequestValidationException53);
        org.junit.Assert.assertNull(transportAddress68);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("index.");
        int int8 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.Version version9 = indexMetaData0.getCreationVersion();
        long long10 = indexMetaData0.getCreationDate();
        org.elasticsearch.common.settings.Settings settings11 = indexMetaData0.getSettings();
        long long12 = indexMetaData0.getVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder13 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(version9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(settings11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, throwable10, writeResult11);
        org.elasticsearch.action.update.UpdateHelper.Result result13 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, false, throwable22, writeResult23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result13, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, true, throwable27, writeResult28);
        org.elasticsearch.index.shard.ShardId shardId30 = bulkShardRequest19.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue31 = bulkShardRequest19.timeout();
        org.elasticsearch.tasks.TaskId taskId32 = bulkShardRequest19.getParentTask();
        bulkShardRequest7.setParentTask(taskId32);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting35 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting37 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting39 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting41 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result43 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest45 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest46 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest45);
        org.elasticsearch.action.update.UpdateHelper.Result result47 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest50 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest49);
        java.lang.Throwable throwable52 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult53 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult54 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result47, (org.elasticsearch.action.ActionRequest) bulkShardRequest49, false, throwable52, writeResult53);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple55 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest46, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest49);
        org.elasticsearch.tasks.TaskId taskId56 = null;
        bulkShardRequest49.setParentTask(taskId56);
        org.elasticsearch.index.shard.ShardId shardId58 = bulkShardRequest49.shardId();
        bulkShardRequest49.seqNo((long) 0);
        java.lang.Throwable throwable62 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult63 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult64 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result43, (org.elasticsearch.action.ActionRequest) bulkShardRequest49, false, throwable62, writeResult63);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException65 = bulkShardRequest49.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure67 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting41, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException65, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure69 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting39, "update", (java.lang.Throwable) actionRequestValidationException65, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure71 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting37, "_na_", (java.lang.Throwable) actionRequestValidationException65, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure73 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting35, "primary_terms", (java.lang.Throwable) actionRequestValidationException65, "hi!");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult74 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult75 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest7, false, (java.lang.Throwable) actionRequestValidationException65, writeResult74);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure77 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.data_path", (java.lang.Throwable) actionRequestValidationException65, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure79 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.creation_date_string", (java.lang.Throwable) actionRequestValidationException65, "index.version.upgraded_string");
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNull(shardId58);
        org.junit.Assert.assertNotNull(actionRequestValidationException65);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure6 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable4, "");
        org.elasticsearch.action.update.UpdateHelper.Result result7 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest8 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult11 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult12 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result7, (org.elasticsearch.action.ActionRequest) bulkShardRequest8, false, throwable10, writeResult11);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure6, (org.elasticsearch.transport.TransportMessage) bulkShardRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = bulkShardRequest8.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = bulkShardRequest8.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest8);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "", throwable20, "");
        org.elasticsearch.action.update.UpdateHelper.Result result23 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult27 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult28 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result23, (org.elasticsearch.action.ActionRequest) bulkShardRequest24, false, throwable26, writeResult27);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure22, (org.elasticsearch.transport.TransportMessage) bulkShardRequest24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple30 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest24);
        org.elasticsearch.action.update.UpdateHelper.Result result31 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest32 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str33 = bulkShardRequest32.index();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result31, (org.elasticsearch.action.ActionRequest) bulkShardRequest32, writeResult34);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple36 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest32);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = bulkShardRequest32.setShardId(shardId37);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        org.junit.Assert.assertNotNull(bulkShardRequest15);
        org.junit.Assert.assertNull(transportAddress16);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(bulkShardRequest38);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.update.UpdateHelper.Result result12 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest14 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest14);
        java.lang.Throwable throwable17 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult18 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult19 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result12, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, throwable17, writeResult18);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest11, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest14);
        org.elasticsearch.tasks.TaskId taskId21 = null;
        bulkShardRequest14.setParentTask(taskId21);
        org.elasticsearch.index.shard.ShardId shardId23 = bulkShardRequest14.shardId();
        bulkShardRequest14.seqNo((long) 0);
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult28 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult29 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest14, false, throwable27, writeResult28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = bulkShardRequest14.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure32 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException30, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "update", (java.lang.Throwable) actionRequestValidationException30, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure36 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.priority", (java.lang.Throwable) actionRequestValidationException30, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException30, "current version [1] is different than the one provided [0]");
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData7 = indexMetaData0.mapping("index.");
        int int8 = indexMetaData0.getNumberOfShards();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters9 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData10 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder11 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData10);
        org.elasticsearch.Version version12 = indexMetaData10.getCreationVersion();
        long long13 = indexMetaData10.getCreationDate();
        int int14 = indexMetaData10.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData10);
        boolean boolean16 = indexMetaData0.equals((java.lang.Object) indexMetaData10);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData18 = indexMetaData0.mappingOrDefault("index.creation_date_string");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int21 = builder20.numberOfShards();
        java.lang.String[] strArray25 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = builder20.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet26);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData30 = builder20.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int34 = builder33.numberOfShards();
        java.lang.String[] strArray38 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder41 = builder33.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet39);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder42 = builder20.putActiveAllocationIds((int) (byte) 3, (java.util.Set<java.lang.String>) strSet39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>, java.util.Collection<java.lang.String>> indexMetaDataDiffableTuple43 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>, java.util.Collection<java.lang.String>>((org.elasticsearch.cluster.Diffable<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.util.Collection<java.lang.String>) strSet39);
        int int44 = indexMetaData0.getTotalNumberOfShards();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNull(mappingMetaData7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(discoveryNodeFilters9);
        org.junit.Assert.assertNotNull(indexMetaData10);
        org.junit.Assert.assertNotNull(builder11);
        org.junit.Assert.assertNotNull(version12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(builder15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(mappingMetaData18);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNull(mappingMetaData30);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(builder41);
        org.junit.Assert.assertNotNull(builder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder2.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.numberOfReplicas((int) '#');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int9 = builder8.numberOfShards();
        java.lang.String[] strArray13 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder16 = builder8.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder17 = builder3.putActiveAllocationIds((int) (short) 0, (java.util.Set<java.lang.String>) strSet14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>, java.lang.Iterable<java.lang.String>> indexMetaDataFromXContentBuilderTuple18 = org.elasticsearch.common.collect.Tuple.tuple((org.elasticsearch.common.xcontent.FromXContentBuilder<org.elasticsearch.cluster.metadata.IndexMetaData>) indexMetaData0, (java.lang.Iterable<java.lang.String>) strSet14);
        long long19 = indexMetaData0.getCreationDate();
        boolean boolean21 = indexMetaData0.isSameUUID("active_allocations");
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent, java.lang.String> toXContentTuple23 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent, java.lang.String>((org.elasticsearch.common.xcontent.ToXContent) indexMetaData0, "index.shadow_replicas");
        org.elasticsearch.common.xcontent.XContentParser xContentParser24 = null;
        org.elasticsearch.common.ParseFieldMatcher parseFieldMatcher25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData26 = indexMetaData0.fromXContent(xContentParser24, parseFieldMatcher25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(builder16);
        org.junit.Assert.assertNotNull(builder17);
        org.junit.Assert.assertNotNull(indexMetaDataFromXContentBuilderTuple18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        org.elasticsearch.action.ActionRequest actionRequest2 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest2);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest4 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple5 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest4);
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.ActionRequest actionRequest14 = null; // flaky: bulkItemRequest3.request();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable23, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple27 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest28 = new org.elasticsearch.action.bulk.BulkItemRequest(52, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest30 = bulkShardRequest20.timeout("");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [BulkShardRequest.timeout] with value [] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(actionRequest14);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue6 = bulkShardRequest5.timeout();
        java.lang.String str7 = bulkShardRequest5.index();
        org.elasticsearch.common.unit.TimeValue timeValue8 = bulkShardRequest5.timeout();
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result14 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable23, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.tasks.TaskId taskId27 = null;
        bulkShardRequest20.setParentTask(taskId27);
        org.elasticsearch.index.shard.ShardId shardId29 = bulkShardRequest20.shardId();
        bulkShardRequest20.seqNo((long) 0);
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult34 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult35 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result14, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, false, throwable33, writeResult34);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = bulkShardRequest20.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure38 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException36, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure40 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "update", (java.lang.Throwable) actionRequestValidationException36, "index.version.created_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult41 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult42 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, (java.lang.Throwable) actionRequestValidationException36, writeResult41);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure44 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException36, "index.blocks.write");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.blocks.read", (java.lang.Throwable) actionRequestValidationException36, "index.");
        java.lang.String str47 = shardFailure46.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting48 = shardFailure46.routing;
        java.lang.String str49 = shardFailure46.reason;
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "index.blocks.read" + "'", str47, "index.blocks.read");
        org.junit.Assert.assertNull(shardRouting48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "index.blocks.read" + "'", str49, "index.blocks.read");
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.action.ActionRequest actionRequest13 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest14 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest13);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest14, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest15);
        org.elasticsearch.action.update.UpdateHelper.Result result18 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest20 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest21 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest20);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = bulkShardRequest20.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result18, (org.elasticsearch.action.ActionRequest) bulkShardRequest20, writeResult24);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple26 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest20);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData27 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData27);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap29 = indexMetaData27.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters30 = indexMetaData27.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder31 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData27);
        org.apache.lucene.util.Version version32 = indexMetaData27.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData33 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData33);
        org.elasticsearch.Version version35 = indexMetaData33.getCreationVersion();
        long long36 = indexMetaData33.getCreationDate();
        long long37 = indexMetaData33.getCreationDate();
        java.util.Set<java.lang.String> strSet39 = null; // flaky: indexMetaData33.activeAllocationIds((int) (byte) 3);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData41 = indexMetaData33.mapping("hi!");
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff42 = indexMetaData27.diff(indexMetaData33);
        boolean boolean43 = bulkItemRequestTuple26.equals((java.lang.Object) indexMetaData33);
        long long44 = indexMetaData33.getCreationDate();
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData46 = indexMetaData33.mappingOrDefault("index.shared_filesystem");
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.MappingMetaData> strImmutableOpenMap47 = indexMetaData33.getMappings();
        int int48 = indexMetaData33.getNumberOfReplicas();
        org.junit.Assert.assertNotNull(bulkShardRequest23);
        org.junit.Assert.assertNotNull(indexMetaData27);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap29);
        org.junit.Assert.assertNull(discoveryNodeFilters30);
        org.junit.Assert.assertNull(version32);
        org.junit.Assert.assertNotNull(indexMetaData33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(version35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNull(strSet39);
        org.junit.Assert.assertNull(mappingMetaData41);
        org.junit.Assert.assertNotNull(indexMetaDataDiff42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNull(mappingMetaData46);
        org.junit.Assert.assertNotNull(strImmutableOpenMap47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        org.elasticsearch.index.VersionType versionType1 = org.elasticsearch.index.VersionType.EXTERNAL_GTE;
        boolean boolean4 = versionType1.isVersionConflictForReads((long) 10, (long) (byte) -1);
        boolean boolean7 = versionType1.isVersionConflictForReads((long) 1, (long) 0);
        java.lang.String str11 = versionType1.explainConflictForWrites((long) (byte) 10, 98L, false);
        org.elasticsearch.index.VersionType versionType12 = versionType1.versionTypeForReplicationAndRecovery();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.VersionType versionType13 = org.elasticsearch.index.VersionType.fromString("index.version.created", versionType1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No version type match [index.version.created]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(versionType1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "current version [10] is higher than the one provided [98]" + "'", str11, "current version [10] is higher than the one provided [98]");
        org.junit.Assert.assertNotNull(versionType12);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result1 = null;
        org.elasticsearch.action.ActionRequest actionRequest4 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest5 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest4);
        org.elasticsearch.action.ActionRequest actionRequest8 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest9 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest8);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest9, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple13 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest5, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        bulkShardRequest10.remoteAddress(transportAddress14);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest((int) ' ', (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult17 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult18 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, writeResult17);
        org.elasticsearch.action.update.UpdateHelper.Result result20 = null;
        org.elasticsearch.action.ActionRequest actionRequest21 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting23 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting25 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting27 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result29 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest31 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest32 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest31);
        org.elasticsearch.action.update.UpdateHelper.Result result33 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest35 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest35);
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result33, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable38, writeResult39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest32, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest35);
        org.elasticsearch.tasks.TaskId taskId42 = null;
        bulkShardRequest35.setParentTask(taskId42);
        org.elasticsearch.index.shard.ShardId shardId44 = bulkShardRequest35.shardId();
        bulkShardRequest35.seqNo((long) 0);
        java.lang.Throwable throwable48 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult49 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult50 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result29, (org.elasticsearch.action.ActionRequest) bulkShardRequest35, false, throwable48, writeResult49);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException51 = bulkShardRequest35.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure53 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting27, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException51, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure55 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting25, "update", (java.lang.Throwable) actionRequestValidationException51, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure57 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting23, "index.priority", (java.lang.Throwable) actionRequestValidationException51, "index.uuid");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult58 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult59 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result20, actionRequest21, false, (java.lang.Throwable) actionRequestValidationException51, writeResult58);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult60 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult61 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, true, (java.lang.Throwable) actionRequestValidationException51, writeResult60);
        bulkShardRequest10.setParentTask("index.shadow_replicas", (long) (short) 10);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest66 = bulkShardRequest10.index("current version [-1] is higher than the one provided [52]");
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(actionRequestValidationException51);
        org.junit.Assert.assertNotNull(bulkShardRequest66);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.blocks.read_only");
        int int2 = builder1.numberOfReplicas();
        // The following exception was thrown during execution in test generation
        try {
            long long4 = builder1.primaryTerm(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: you must set the number of shards before setting/reading primary terms");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.number_of_shards");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.numberOfReplicas((int) (byte) 0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder1.removeAlias("index.blocks.write");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.index("current version [-1] is higher than the one provided [0]");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = builder7.build();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: must specify numberOfShards for index [current version [-1] is higher than the one provided [0]]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting18 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest24 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest25 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest24);
        org.elasticsearch.action.update.UpdateHelper.Result result26 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest28);
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult32 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult33 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result26, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, false, throwable31, writeResult32);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple34 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest25, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        org.elasticsearch.tasks.TaskId taskId35 = null;
        bulkShardRequest28.setParentTask(taskId35);
        org.elasticsearch.index.shard.ShardId shardId37 = bulkShardRequest28.shardId();
        bulkShardRequest28.seqNo((long) 0);
        java.lang.Throwable throwable41 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult42 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult43 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest28, false, throwable41, writeResult42);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException44 = bulkShardRequest28.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure46 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException44, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure48 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting18, "update", (java.lang.Throwable) actionRequestValidationException44, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure50 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting16, "_na_", (java.lang.Throwable) actionRequestValidationException44, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure52 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting14, "_na_", (java.lang.Throwable) actionRequestValidationException44, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure54 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting12, "index.shadow_replicas", (java.lang.Throwable) actionRequestValidationException44, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure56 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting10, "index.blocks.write", (java.lang.Throwable) actionRequestValidationException44, "primary_terms");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure58 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "state-", (java.lang.Throwable) actionRequestValidationException44, "index.creation_date_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "index.blocks.write", (java.lang.Throwable) actionRequestValidationException44, "index.priority");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure62 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "index.", (java.lang.Throwable) actionRequestValidationException44, "index.version.upgraded_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure64 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "current version [1] is different than the one provided [32]", (java.lang.Throwable) actionRequestValidationException44, "index.");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure66 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "current version [100] is higher than the one provided [-1]", (java.lang.Throwable) actionRequestValidationException44, "state-");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting67 = shardFailure66.routing;
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(actionRequestValidationException44);
        org.junit.Assert.assertNull(shardRouting67);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData1 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData1);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap3 = indexMetaData1.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters4 = indexMetaData1.includeFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff5 = indexMetaData0.diff(indexMetaData1);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData1.requireFilters();
        org.elasticsearch.Version version7 = indexMetaData1.getCreationVersion();
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData8 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData8);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap10 = indexMetaData8.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet11 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData8, indexShardStateSet11);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters13 = indexMetaData8.includeFilters();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest15 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest16 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest15);
        org.elasticsearch.action.update.UpdateHelper.Result result17 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest19 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest20 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest19);
        java.lang.Throwable throwable22 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult23 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult24 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result17, (org.elasticsearch.action.ActionRequest) bulkShardRequest19, false, throwable22, writeResult23);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple25 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest16, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest19);
        org.elasticsearch.index.VersionType versionType26 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean30 = versionType26.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple31 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest16, versionType26);
        boolean boolean35 = versionType26.isVersionConflictForWrites((long) 0, (long) (short) 0, false);
        boolean boolean36 = indexMetaData8.equals((java.lang.Object) boolean35);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters37 = indexMetaData8.getInitialRecoveryFilters();
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff38 = indexMetaData1.diff(indexMetaData8);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Writeable, java.lang.CharSequence> writeableTuple40 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Writeable, java.lang.CharSequence>((org.elasticsearch.common.io.stream.Writeable) indexMetaData1, (java.lang.CharSequence) "index.version.upgraded_string");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder41 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params42 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.action.update.UpdateHelper.Result result43 = null;
        org.elasticsearch.action.ActionRequest actionRequest47 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest47);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest49 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple50 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest48, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest49);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest51 = new org.elasticsearch.action.bulk.BulkItemRequest(100, (org.elasticsearch.action.ActionRequest) bulkShardRequest49);
        org.elasticsearch.action.ActionRequest actionRequest53 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest54 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest53);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple56 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest54, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple57 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest51, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest58 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.unit.TimeValue timeValue59 = bulkShardRequest58.timeout();
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest60 = bulkShardRequest55.timeout(timeValue59);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest61 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest60);
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult62 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult63 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result43, (org.elasticsearch.action.ActionRequest) bulkShardRequest60, writeResult62);
        boolean boolean64 = updateResult63.failure();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult> paramsTuple65 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.xcontent.ToXContent.Params, org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult>(params42, updateResult63);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder66 = indexMetaData1.toXContent(xContentBuilder41, params42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(indexMetaData1);
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap3);
        org.junit.Assert.assertNull(discoveryNodeFilters4);
        org.junit.Assert.assertNotNull(indexMetaDataDiff5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNotNull(version7);
        org.junit.Assert.assertNotNull(indexMetaData8);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap10);
        org.junit.Assert.assertNotNull(indexShardStateSet11);
        org.junit.Assert.assertNull(discoveryNodeFilters13);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(discoveryNodeFilters37);
        org.junit.Assert.assertNotNull(indexMetaDataDiff38);
        org.junit.Assert.assertNotNull(params42);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertNotNull(bulkShardRequest60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads(10L);
        boolean boolean26 = versionType12.isVersionConflictForReads(100L, (long) 'a');
        boolean boolean28 = versionType12.validateVersionForWrites((long) (short) 10);
        long long31 = versionType12.updateVersion(1L, (long) '4');
        long long34 = versionType12.updateVersion(0L, (long) 35);
        long long37 = versionType12.updateVersion((long) ' ', (long) (short) 10);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 52L + "'", long31 == 52L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 35L + "'", long34 == 35L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 10L + "'", long37 == 10L);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters3 = indexMetaData0.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.apache.lucene.util.Version version5 = indexMetaData0.getMinimumCompatibleVersion();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters6 = indexMetaData0.requireFilters();
        java.util.Set<java.lang.String> strSet8 = null; // flaky: indexMetaData0.activeAllocationIds((int) (short) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenMap<java.lang.String, org.elasticsearch.cluster.metadata.IndexMetaData.Custom> strImmutableOpenMap10 = indexMetaData0.getCustoms();
        java.lang.String str11 = indexMetaData0.getIndexUUID();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData14 = builder12.mapping("current version [10] is different than the one provided [32]");
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNull(discoveryNodeFilters3);
        org.junit.Assert.assertNull(version5);
        org.junit.Assert.assertNull(discoveryNodeFilters6);
        org.junit.Assert.assertNull(strSet8);
        org.junit.Assert.assertNotNull(strImmutableOpenMap10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_na_" + "'", str11, "_na_");
        org.junit.Assert.assertNull(mappingMetaData14);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest4 = new org.elasticsearch.action.bulk.BulkItemRequest((-1), (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.common.io.stream.StreamInput streamInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            bulkItemRequest4.readFrom(streamInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable13, writeResult14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.tasks.TaskId taskId17 = null;
        bulkShardRequest10.setParentTask(taskId17);
        org.elasticsearch.index.shard.ShardId shardId19 = bulkShardRequest10.shardId();
        bulkShardRequest10.seqNo((long) 0);
        java.lang.Throwable throwable23 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult24 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult25 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable23, writeResult24);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = bulkShardRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure28 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException26, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure30 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.number_of_shards", (java.lang.Throwable) actionRequestValidationException26, "current version [97] is different than the one provided [97]");
        java.lang.String str31 = shardFailure30.reason;
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "index.number_of_shards" + "'", str31, "index.number_of_shards");
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest1 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest2 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest1);
        org.elasticsearch.action.update.UpdateHelper.Result result3 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest5 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest6 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest5);
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult9 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult10 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result3, (org.elasticsearch.action.ActionRequest) bulkShardRequest5, false, throwable8, writeResult9);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple11 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest2, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest5);
        org.elasticsearch.index.VersionType versionType12 = org.elasticsearch.index.VersionType.FORCE;
        boolean boolean16 = versionType12.isVersionConflictForWrites((long) (short) 10, (long) (short) 100, true);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType> streamableTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, org.elasticsearch.index.VersionType>((org.elasticsearch.common.io.stream.Streamable) bulkItemRequest2, versionType12);
        boolean boolean21 = versionType12.isVersionConflictForWrites(10L, (long) (byte) 0, false);
        boolean boolean23 = versionType12.validateVersionForReads((long) (byte) 0);
        boolean boolean25 = versionType12.validateVersionForReads((-1L));
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting28 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting30 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting32 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting34 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result36 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest38 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest38);
        org.elasticsearch.action.update.UpdateHelper.Result result40 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest42 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest43 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest42);
        java.lang.Throwable throwable45 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult46 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult47 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result40, (org.elasticsearch.action.ActionRequest) bulkShardRequest42, false, throwable45, writeResult46);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple48 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest39, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest42);
        org.elasticsearch.tasks.TaskId taskId49 = null;
        bulkShardRequest42.setParentTask(taskId49);
        org.elasticsearch.index.shard.ShardId shardId51 = bulkShardRequest42.shardId();
        bulkShardRequest42.seqNo((long) 0);
        java.lang.Throwable throwable55 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult56 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult57 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result36, (org.elasticsearch.action.ActionRequest) bulkShardRequest42, false, throwable55, writeResult56);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException58 = bulkShardRequest42.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure60 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting34, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException58, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure62 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting32, "update", (java.lang.Throwable) actionRequestValidationException58, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure64 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting30, "_na_", (java.lang.Throwable) actionRequestValidationException58, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure66 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting28, "_na_", (java.lang.Throwable) actionRequestValidationException58, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure68 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "index.version.minimum_compatible", (java.lang.Throwable) actionRequestValidationException58, "index.uuid");
        org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.io.Serializable> versionTypeEnumTuple69 = new org.elasticsearch.common.collect.Tuple<java.lang.Enum<org.elasticsearch.index.VersionType>, java.io.Serializable>((java.lang.Enum<org.elasticsearch.index.VersionType>) versionType12, (java.io.Serializable) actionRequestValidationException58);
        long long72 = versionType12.updateVersion(2L, (long) (short) 1);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(shardId51);
        org.junit.Assert.assertNotNull(actionRequestValidationException58);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.version((long) 10);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder4.numberOfShards((int) (short) 10);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result5 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest7 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest8 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest7);
        org.elasticsearch.action.update.UpdateHelper.Result result9 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest11 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest12 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest11);
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult15 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult16 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result9, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, false, throwable14, writeResult15);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest8, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest11);
        org.elasticsearch.tasks.TaskId taskId18 = null;
        bulkShardRequest11.setParentTask(taskId18);
        org.elasticsearch.index.shard.ShardId shardId20 = bulkShardRequest11.shardId();
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result5, (org.elasticsearch.action.ActionRequest) bulkShardRequest11, writeResult21);
        org.elasticsearch.action.update.UpdateResponse updateResponse23 = updateResult22.noopResult;
        boolean boolean24 = updateResult22.success();
        org.elasticsearch.action.ActionRequest actionRequest25 = updateResult22.actionRequest;
        org.elasticsearch.action.ActionRequest actionRequest26 = updateResult22.actionRequest;
        actionRequest26.setParentTask("current version [97] is different than the one provided [35]", (long) (short) 1);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting31 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting33 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting35 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting37 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting39 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting41 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting43 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result45 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest47 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest48 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest47);
        org.elasticsearch.action.update.UpdateHelper.Result result49 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult55 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult56 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result49, (org.elasticsearch.action.ActionRequest) bulkShardRequest51, false, throwable54, writeResult55);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple57 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest48, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest51);
        org.elasticsearch.tasks.TaskId taskId58 = null;
        bulkShardRequest51.setParentTask(taskId58);
        org.elasticsearch.index.shard.ShardId shardId60 = bulkShardRequest51.shardId();
        bulkShardRequest51.seqNo((long) 0);
        java.lang.Throwable throwable64 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult65 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult66 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result45, (org.elasticsearch.action.ActionRequest) bulkShardRequest51, false, throwable64, writeResult65);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException67 = bulkShardRequest51.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure69 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting43, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException67, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure71 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting41, "update", (java.lang.Throwable) actionRequestValidationException67, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure73 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting39, "_na_", (java.lang.Throwable) actionRequestValidationException67, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure75 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting37, "_na_", (java.lang.Throwable) actionRequestValidationException67, "index.version.upgraded");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure77 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting35, "index.version.minimum_compatible", (java.lang.Throwable) actionRequestValidationException67, "index.uuid");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure79 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting33, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException67, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure81 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting31, "indices:data/write/bulk[s]", (java.lang.Throwable) actionRequestValidationException67, "state-");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult82 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult83 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, actionRequest26, false, (java.lang.Throwable) actionRequestValidationException67, writeResult82);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure85 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "current version [35] is higher than the one provided [2]", (java.lang.Throwable) actionRequestValidationException67, "index.blocks.write");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure87 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "index.", (java.lang.Throwable) actionRequestValidationException67, "current version [0] is different than the one provided [100]");
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNull(updateResponse23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(actionRequest25);
        org.junit.Assert.assertNotNull(actionRequest26);
        org.junit.Assert.assertNull(shardId60);
        org.junit.Assert.assertNotNull(actionRequestValidationException67);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int2 = builder1.numberOfShards();
        java.lang.String[] strArray6 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = builder1.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet7);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData11 = builder1.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder14 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int15 = builder14.numberOfShards();
        java.lang.String[] strArray19 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder22 = builder14.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder23 = builder1.putActiveAllocationIds((int) (byte) 3, (java.util.Set<java.lang.String>) strSet20);
        org.elasticsearch.cluster.metadata.IndexMetaData.Custom custom25 = null;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder26 = builder23.putCustom("update", custom25);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder28 = builder26.removeAlias("delete");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder30 = builder26.creationDate(0L);
        int int31 = builder30.numberOfShards();
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(builder9);
        org.junit.Assert.assertNull(mappingMetaData11);
        org.junit.Assert.assertNotNull(builder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(builder22);
        org.junit.Assert.assertNotNull(builder23);
        org.junit.Assert.assertNotNull(builder26);
        org.junit.Assert.assertNotNull(builder28);
        org.junit.Assert.assertNotNull(builder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("index.number_of_shards");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder3 = builder1.creationDate((long) ' ');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = builder3.version((long) 'a');
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.removeAlias("primary_terms");
        org.junit.Assert.assertNotNull(builder3);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        long long6 = indexMetaData0.getVersion();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("update");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData3 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData3);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData5 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData5);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap7 = indexMetaData5.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters8 = indexMetaData5.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder9 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData5);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff10 = indexMetaData3.diff(indexMetaData5);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int13 = builder12.numberOfShards();
        java.lang.String[] strArray17 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder20 = builder12.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet18);
        org.elasticsearch.cluster.metadata.MappingMetaData mappingMetaData22 = builder12.mapping("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder25 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int26 = builder25.numberOfShards();
        java.lang.String[] strArray30 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder33 = builder25.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet31);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder34 = builder12.putActiveAllocationIds((int) (byte) 3, (java.util.Set<java.lang.String>) strSet31);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData>, java.util.Set<java.lang.String>> indexMetaDataDiffTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData>, java.util.Set<java.lang.String>>(indexMetaDataDiff10, (java.util.Set<java.lang.String>) strSet31);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder37 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder38 = builder37.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder40 = builder38.numberOfReplicas((int) '#');
        org.elasticsearch.action.ActionRequest actionRequest43 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest44 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest43);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest45 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple46 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest44, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest45);
        boolean boolean47 = bulkShardRequest45.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder49 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int50 = builder49.numberOfShards();
        java.lang.String[] strArray54 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet55 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet55, strArray54);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder57 = builder49.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet55);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple58 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest45, strSet55);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder59 = builder38.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet55);
        int int60 = builder59.numberOfShards();
        java.lang.String str61 = builder59.index();
        org.elasticsearch.action.ActionRequest actionRequest64 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest65 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest64);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest66 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple67 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest65, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest66);
        boolean boolean68 = bulkShardRequest66.getShouldPersistResult();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder70 = org.elasticsearch.cluster.metadata.IndexMetaData.builder("index.blocks.write");
        int int71 = builder70.numberOfShards();
        java.lang.String[] strArray75 = new java.lang.String[] { "index.blocks.read", "index.blocks.read" };
        java.util.LinkedHashSet<java.lang.String> strSet76 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet76, strArray75);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder78 = builder70.putActiveAllocationIds((int) (byte) -1, (java.util.Set<java.lang.String>) strSet76);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>> streamableTuple79 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.common.io.stream.Streamable, java.util.LinkedHashSet<java.lang.String>>((org.elasticsearch.common.io.stream.Streamable) bulkShardRequest66, strSet76);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder80 = builder59.putActiveAllocationIds((int) (short) 10, (java.util.Set<java.lang.String>) strSet76);
        org.elasticsearch.common.collect.Tuple<java.util.LinkedHashSet<java.lang.String>, java.lang.Cloneable> strSetTuple81 = new org.elasticsearch.common.collect.Tuple<java.util.LinkedHashSet<java.lang.String>, java.lang.Cloneable>(strSet31, (java.lang.Cloneable) strSet76);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder82 = builder1.putActiveAllocationIds((int) (byte) 100, (java.util.Set<java.lang.String>) strSet76);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder85 = builder1.putMapping("current version [2] is higher than the one provided [-1]", "current version [0] is different than the one provided [100]");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to derive xcontent");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indexMetaData3);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(indexMetaData5);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap7);
        org.junit.Assert.assertNull(discoveryNodeFilters8);
        org.junit.Assert.assertNotNull(indexMetaDataDiff10);
        org.junit.Assert.assertNotNull(builder12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(builder20);
        org.junit.Assert.assertNull(mappingMetaData22);
        org.junit.Assert.assertNotNull(builder25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(builder33);
        org.junit.Assert.assertNotNull(builder34);
        org.junit.Assert.assertNotNull(builder38);
        org.junit.Assert.assertNotNull(builder40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(builder49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(builder57);
        org.junit.Assert.assertNotNull(builder59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(builder70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(builder78);
        org.junit.Assert.assertNotNull(builder80);
        org.junit.Assert.assertNotNull(builder82);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        org.elasticsearch.action.update.UpdateHelper.Result result0 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest2 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest3 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest2);
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        java.lang.Throwable throwable9 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult10 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult11 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest6, false, throwable9, writeResult10);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple12 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest6);
        org.elasticsearch.action.ActionRequest actionRequest14 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest15 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest14);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple17 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest15, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple18 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest3, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest16);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result22 = null;
        org.elasticsearch.action.ActionRequest actionRequest26 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest26);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest28 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple29 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest28);
        org.elasticsearch.action.ActionRequest actionRequest32 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest33 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest32);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest34 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple35 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest33, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest34);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest36 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple37 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest27, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest34);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest38 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest39 = new org.elasticsearch.action.bulk.BulkItemRequest(10, (org.elasticsearch.action.ActionRequest) bulkShardRequest34);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting41 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting43 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting45 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting47 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result49 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        org.elasticsearch.action.update.UpdateHelper.Result result53 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest56 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest55);
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result53, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable58, writeResult59);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest52, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        org.elasticsearch.tasks.TaskId taskId62 = null;
        bulkShardRequest55.setParentTask(taskId62);
        org.elasticsearch.index.shard.ShardId shardId64 = bulkShardRequest55.shardId();
        bulkShardRequest55.seqNo((long) 0);
        java.lang.Throwable throwable68 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult69 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult70 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result49, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable68, writeResult69);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException71 = bulkShardRequest55.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure73 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting47, "index.auto_expand_replicas", (java.lang.Throwable) actionRequestValidationException71, "active_allocations");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure75 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting45, "update", (java.lang.Throwable) actionRequestValidationException71, "index.version.created_string");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure77 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting43, "_na_", (java.lang.Throwable) actionRequestValidationException71, "index.shadow_replicas");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure79 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting41, "index.blocks.metadata", (java.lang.Throwable) actionRequestValidationException71, "index.priority");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult80 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult81 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result22, (org.elasticsearch.action.ActionRequest) bulkShardRequest34, true, (java.lang.Throwable) actionRequestValidationException71, writeResult80);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure83 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting20, "current version [97] is different than the one provided [35]", (java.lang.Throwable) actionRequestValidationException71, "index.creation_date_string");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult84 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult85 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result0, (org.elasticsearch.action.ActionRequest) bulkShardRequest16, false, (java.lang.Throwable) actionRequestValidationException71, writeResult84);
        bulkShardRequest16.primaryTerm((long) (short) 1);
        org.junit.Assert.assertNull(shardId64);
        org.junit.Assert.assertNotNull(actionRequestValidationException71);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.Version version2 = indexMetaData0.getCreationVersion();
        long long3 = indexMetaData0.getCreationDate();
        int int4 = indexMetaData0.getTotalNumberOfShards();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = builder5.index("index.version.upgraded_string");
        int int8 = builder7.numberOfReplicas();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(version2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(builder5);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting3 = null;
        java.lang.Throwable throwable5 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting3, "", throwable5, "");
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest9 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult12 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult13 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest9, false, throwable11, writeResult12);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple14 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure7, (org.elasticsearch.transport.TransportMessage) bulkShardRequest9);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest16 = bulkShardRequest9.index("hi!");
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest17 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest16);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest18 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.String str19 = bulkShardRequest18.index();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple20 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest18);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest23 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest26 = bulkShardRequest23.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest27 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple28 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest17, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest26);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest29 = new org.elasticsearch.action.bulk.BulkItemRequest((int) ' ', (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        long long30 = bulkShardRequest26.primaryTerm();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest31 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 10, (org.elasticsearch.action.ActionRequest) bulkShardRequest26);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest37 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        org.elasticsearch.action.update.UpdateHelper.Result result38 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest40 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest41 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest40);
        java.lang.Throwable throwable43 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult44 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult45 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result38, (org.elasticsearch.action.ActionRequest) bulkShardRequest40, false, throwable43, writeResult44);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple46 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest37, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest40);
        org.elasticsearch.action.ActionRequest actionRequest48 = null;
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest49 = null; // flaky: new org.elasticsearch.action.bulk.BulkItemRequest(0, actionRequest48);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest50 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple51 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest49, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest50);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple52 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest37, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest50);
        org.elasticsearch.action.update.UpdateHelper.Result result53 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest56 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest55);
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result53, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable58, writeResult59);
        org.elasticsearch.action.update.UpdateHelper.Result result61 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest63 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest64 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest63);
        org.elasticsearch.action.update.UpdateHelper.Result result65 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest67 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest68 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest67);
        java.lang.Throwable throwable70 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult71 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult72 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result65, (org.elasticsearch.action.ActionRequest) bulkShardRequest67, false, throwable70, writeResult71);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple73 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest64, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest67);
        java.lang.Throwable throwable75 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult76 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult77 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result61, (org.elasticsearch.action.ActionRequest) bulkShardRequest67, true, throwable75, writeResult76);
        org.elasticsearch.index.shard.ShardId shardId78 = bulkShardRequest67.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue79 = bulkShardRequest67.timeout();
        org.elasticsearch.tasks.TaskId taskId80 = bulkShardRequest67.getParentTask();
        bulkShardRequest55.setParentTask(taskId80);
        bulkShardRequest50.setParentTask(taskId80);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData83 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder84 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData83);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData85 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder86 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData85);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap87 = indexMetaData85.getActiveAllocationIds();
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters88 = indexMetaData85.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder89 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData85);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff90 = indexMetaData83.diff(indexMetaData85);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.tasks.TaskId, org.elasticsearch.cluster.metadata.IndexMetaData> taskIdTuple91 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.tasks.TaskId, org.elasticsearch.cluster.metadata.IndexMetaData>(taskId80, indexMetaData83);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.tasks.Task task92 = bulkShardRequest26.createTask(52L, "_na_", "current version [1] is different than the one provided [0]", taskId80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(bulkShardRequest16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(bulkShardRequest26);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNull(shardId78);
        org.junit.Assert.assertNotNull(timeValue79);
        org.junit.Assert.assertNotNull(taskId80);
        org.junit.Assert.assertNotNull(indexMetaData83);
        org.junit.Assert.assertNotNull(builder84);
        org.junit.Assert.assertNotNull(indexMetaData85);
        org.junit.Assert.assertNotNull(builder86);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap87);
        org.junit.Assert.assertNull(discoveryNodeFilters88);
        org.junit.Assert.assertNotNull(indexMetaDataDiff90);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        org.elasticsearch.action.update.UpdateHelper.Result result2 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result4 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest6 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest7 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest6);
        org.elasticsearch.action.update.UpdateHelper.Result result8 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest10 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest11 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult14 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult15 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result8, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, throwable13, writeResult14);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple16 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest7, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest10);
        org.elasticsearch.tasks.TaskId taskId17 = null;
        bulkShardRequest10.setParentTask(taskId17);
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult21 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult22 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result4, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, true, throwable20, writeResult21);
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = bulkShardRequest10.indicesOptions();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest24 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (byte) 1, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting26 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result28 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting30 = null;
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure34 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting30, "", throwable32, "");
        org.elasticsearch.action.update.UpdateHelper.Result result35 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest36 = new org.elasticsearch.action.bulk.BulkShardRequest();
        java.lang.Throwable throwable38 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult39 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult40 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result35, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, false, throwable38, writeResult39);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage> shardFailureTuple41 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.index.shard.IndexShard.ShardFailure, org.elasticsearch.transport.TransportMessage>(shardFailure34, (org.elasticsearch.transport.TransportMessage) bulkShardRequest36);
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest43 = bulkShardRequest36.index("index.version.created");
        org.elasticsearch.common.transport.TransportAddress transportAddress44 = bulkShardRequest36.remoteAddress();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest45 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) -1, (org.elasticsearch.action.ActionRequest) bulkShardRequest36);
        org.elasticsearch.cluster.routing.ShardRouting shardRouting47 = null;
        org.elasticsearch.action.update.UpdateHelper.Result result49 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest51 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest52 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest51);
        org.elasticsearch.action.update.UpdateHelper.Result result53 = null;
        org.elasticsearch.action.bulk.BulkShardRequest bulkShardRequest55 = new org.elasticsearch.action.bulk.BulkShardRequest();
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest56 = new org.elasticsearch.action.bulk.BulkItemRequest(1, (org.elasticsearch.action.ActionRequest) bulkShardRequest55);
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult59 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult60 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result53, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable58, writeResult59);
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>> bulkItemRequestTuple61 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.action.bulk.BulkItemRequest, org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>>(bulkItemRequest52, (org.elasticsearch.action.support.replication.ReplicationRequest<org.elasticsearch.action.bulk.BulkShardRequest>) bulkShardRequest55);
        org.elasticsearch.tasks.TaskId taskId62 = null;
        bulkShardRequest55.setParentTask(taskId62);
        org.elasticsearch.index.shard.ShardId shardId64 = bulkShardRequest55.shardId();
        bulkShardRequest55.seqNo((long) 0);
        java.lang.Throwable throwable68 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult69 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult70 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result49, (org.elasticsearch.action.ActionRequest) bulkShardRequest55, false, throwable68, writeResult69);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException71 = bulkShardRequest55.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure73 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting47, "index.version.upgraded", (java.lang.Throwable) actionRequestValidationException71, "index.blocks.write");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult74 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult75 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result28, (org.elasticsearch.action.ActionRequest) bulkShardRequest36, false, (java.lang.Throwable) actionRequestValidationException71, writeResult74);
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure77 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting26, "indices:data/write/bulk[s]", (java.lang.Throwable) actionRequestValidationException71, "hi!");
        org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult writeResult78 = null;
        org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult updateResult79 = new org.elasticsearch.action.bulk.TransportShardBulkAction.UpdateResult(result2, (org.elasticsearch.action.ActionRequest) bulkShardRequest10, false, (java.lang.Throwable) actionRequestValidationException71, writeResult78);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest80 = new org.elasticsearch.action.bulk.BulkItemRequest((int) '#', (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        org.elasticsearch.action.bulk.BulkItemRequest bulkItemRequest81 = new org.elasticsearch.action.bulk.BulkItemRequest((int) (short) 100, (org.elasticsearch.action.ActionRequest) bulkShardRequest10);
        bulkShardRequest10.seqNo(32L);
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNotNull(bulkShardRequest43);
        org.junit.Assert.assertNull(transportAddress44);
        org.junit.Assert.assertNull(shardId64);
        org.junit.Assert.assertNotNull(actionRequestValidationException71);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder("hi!");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder2 = builder1.removeAllAliases();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder4 = builder2.version((long) 1);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder6 = builder2.removeAlias("state-");
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder8 = builder6.index("current version [10] is higher than the one provided [98]");
        // The following exception was thrown during execution in test generation
        try {
            long long10 = builder6.primaryTerm((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: you must set the number of shards before setting/reading primary terms");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(builder2);
        org.junit.Assert.assertNotNull(builder4);
        org.junit.Assert.assertNotNull(builder6);
        org.junit.Assert.assertNotNull(builder8);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData0 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder1 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData0);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap2 = indexMetaData0.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet3 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple4 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData0, indexShardStateSet3);
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder5 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        org.elasticsearch.cluster.metadata.IndexMetaData indexMetaData6 = org.elasticsearch.cluster.metadata.IndexMetaData.PROTO;
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder7 = org.elasticsearch.cluster.metadata.IndexMetaData.builder(indexMetaData6);
        org.elasticsearch.common.collect.ImmutableOpenIntMap<java.util.Set<java.lang.String>> strSetImmutableOpenIntMap8 = indexMetaData6.getActiveAllocationIds();
        java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState> indexShardStateSet9 = org.elasticsearch.index.shard.IndexShard.writeAllowedStatesForPrimary;
        org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>> indexMetaDataTuple10 = new org.elasticsearch.common.collect.Tuple<org.elasticsearch.cluster.metadata.IndexMetaData, java.util.EnumSet<org.elasticsearch.index.shard.IndexShardState>>(indexMetaData6, indexShardStateSet9);
        org.elasticsearch.cluster.node.DiscoveryNodeFilters discoveryNodeFilters11 = indexMetaData6.includeFilters();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder12 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData6);
        org.elasticsearch.cluster.Diff<org.elasticsearch.cluster.metadata.IndexMetaData> indexMetaDataDiff13 = indexMetaData0.diff(indexMetaData6);
        int int14 = indexMetaData0.getNumberOfReplicas();
        org.elasticsearch.cluster.metadata.IndexMetaData.Builder builder15 = new org.elasticsearch.cluster.metadata.IndexMetaData.Builder(indexMetaData0);
        int int16 = builder15.numberOfReplicas();
        org.junit.Assert.assertNotNull(indexMetaData0);
        org.junit.Assert.assertNotNull(builder1);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap2);
        org.junit.Assert.assertNotNull(indexShardStateSet3);
        org.junit.Assert.assertNotNull(indexMetaData6);
        org.junit.Assert.assertNotNull(builder7);
        org.junit.Assert.assertNotNull(strSetImmutableOpenIntMap8);
        org.junit.Assert.assertNotNull(indexShardStateSet9);
        org.junit.Assert.assertNull(discoveryNodeFilters11);
        org.junit.Assert.assertNotNull(indexMetaDataDiff13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }
}
